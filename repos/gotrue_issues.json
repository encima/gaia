{
    "issues": [
        {
            "id": "MDU6SXNzdWU2NTkxMjk1NjQ=",
            "number": 1,
            "title": "add GET route for /verify",
            "body": "so that people can verify directly with gotrue from their confirmation email\r\n\r\ncan use the POST doc as a spec but note that it does **not** need to support password reset since this needs to first to the user app for the end-user to choose a new password, and also passwords should not be passed a query params\r\n\r\n![image](https://user-images.githubusercontent.com/458736/87777510-3205aa80-c85c-11ea-9bea-99f0ac509598.png)\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-07-17T10:37:31Z",
            "closedAt": "2020-07-17T12:47:22Z",
            "url": "https://github.com/supabase/gotrue/issues/1",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDY4ODQ0MzQ0MQ==",
                    "body": ":tada: This issue has been resolved in version 1.0.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.0.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2020-09-07T17:14:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/1#issuecomment-688443441"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU2NjYwNzk3NTE=",
            "number": 2,
            "title": "add a /login endpoint",
            "body": "it should wrap the `/token?grant_type=password` functionality\r\n\r\nthis is just to provide a simplified endpoint to the user",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-07-27T08:06:07Z",
            "closedAt": "2020-11-16T06:46:28Z",
            "url": "https://github.com/supabase/gotrue/issues/2",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNzc3MzE5Ng==",
                    "body": "seems this is not needed for now\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-16T06:46:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/2#issuecomment-727773196"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU2Njc1OTY2ODg=",
            "number": 3,
            "title": "/token should also return current user",
            "body": "so that `login()` method on supabase-js doesn't have to make a double fetch on login to get the user",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-07-29T06:48:08Z",
            "closedAt": "2020-07-29T07:15:13Z",
            "url": "https://github.com/supabase/gotrue/issues/3",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDY2NTQ4MTAxNw==",
                    "body": "completed here: 1898ad86c48d23b244ea2dfe8cba477c28724608\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-07-29T07:15:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/3#issuecomment-665481017"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU2Njc1OTcyODE=",
            "number": 4,
            "title": "/signup should return an access_token and user data if auto_confirm is true",
            "body": "",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-07-29T06:49:19Z",
            "closedAt": "2020-07-29T08:09:35Z",
            "url": "https://github.com/supabase/gotrue/issues/4",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDY2NTUwNzk0MA==",
                    "body": "done on 6c61ee54f27837ced8ab82f14d6bd0390b4147c3",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-07-29T08:09:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/4#issuecomment-665507940"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU2ODUyMzgwMzU=",
            "number": 5,
            "title": "Are the server responses format documented? (email address is already used, password too short, etc).",
            "body": "# Question\r\n\r\n## Additional context\r\n\r\nFrom https://github.com/supabase/supabase/issues/143\r\n\r\nAre the server responses format documented ? If they are I couldn't find them otherwise they should definitely be added to the doc at some point. It would make it easier to display accurate errors to the user (e.g. this mail address is already used, password too short, etc).\r\n\r\nEdit: To be clear I did find some documentation here but I'm interested in the format of errors which are not in the readme.\r\n\r\n",
            "author": {
                "login": "kiwicopple"
            },
            "state": "CLOSED",
            "createdAt": "2020-08-25T07:13:48Z",
            "closedAt": "2020-11-13T10:37:58Z",
            "url": "https://github.com/supabase/gotrue/issues/5",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNjI2MzYzNA==",
                    "body": "Errors format described as\r\n{code: <int>, msg: <string>}\r\nAs I understand your question properly - in project there no centralized place where all errors are placed. In my opinion if someone implement issue #20 , so it will replace documentation from README to more attractive way",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-12T18:39:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/5#issuecomment-726263634"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNjY4OTQ3Mw==",
                    "body": "Thanks @icecream78 - agreed that once there is a swagger we can autogen the docs into our website: https://supabase.io/docs/gotrue/server/about\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-11-13T10:37:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/5#issuecomment-726689473"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MDUzODg1ODE=",
            "number": 11,
            "title": "chore: Set last_sign_in on access_token generation",
            "body": "`last_sign_in` exists in the auth schema (`auth.users.last_sign_in`) but is not set anywhere in gotrue\r\n\r\nthere is an opportunity to update this value each time an access_token is generated by gotrue\r\n\r\nit will then be shown on the supabase dashboard since it's already hooked up to read this value from the DB\r\n\r\n<img width=\"714\" alt=\"image\" src=\"https://user-images.githubusercontent.com/458736/93745091-8561f380-fc25-11ea-91c6-d9e80908a24c.png\">\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-09-21T08:17:54Z",
            "closedAt": "2020-11-07T05:16:40Z",
            "url": "https://github.com/supabase/gotrue/issues/11",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDY5NTk3NDk2OQ==",
                    "body": "this actually looks like a bug since the value _should_ be being set [here](https://github.com/supabase/gotrue/blob/67dfa6254becd677d544c5fd0fea8e6fa4126bf6/api/token.go#L215)",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-09-21T08:26:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/11#issuecomment-695974969"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcwMTM1NzQyNg==",
                    "body": "can i do this one?",
                    "author": {
                        "login": "carantunes"
                    },
                    "createdAt": "2020-09-30T12:27:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/11#issuecomment-701357426"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcwMTQ4OTY4MQ==",
                    "body": "sure thing @carantunes ! If you need any help you can leave a comment here and we'll take a look \ud83d\udc4d ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-09-30T16:08:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/11#issuecomment-701489681"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MDg2OTU1ODk=",
            "number": 14,
            "title": "Multi-factor authentication",
            "body": "**I'm submitting a ...**\r\n- feature request\r\n\r\n**Summary**\r\nMFA would be a very nice addition to the `auth` module.\r\n\r\nHere are two standards that I think should be supported:\r\n- [ ] [HOTP](https://tools.ietf.org/html/rfc4226) and [TOTP](https://tools.ietf.org/html/rfc6238) (e.g Google Authenticator, FreeOTP)\r\n- [ ] [FIDO U2F](https://fidoalliance.org/specs/fido-u2f-v1.2-ps-20170411/fido-u2f-README-v1.2-ps-20170411.txt) (e.g YubiKey, Google Titan Key)\r\n",
            "author": {
                "login": "malobre"
            },
            "state": "CLOSED",
            "createdAt": "2020-08-17T16:10:19Z",
            "closedAt": "2023-01-20T08:42:02Z",
            "url": "https://github.com/supabase/gotrue/issues/14",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDY3ODAyMzAwOA==",
                    "body": "Tracking this with the Netlify team - we will see if we can add this and merge it into their server.\r\n\r\nWe're in the process of catching up our UI to GoTrue's full API potential, so this will likely be a task for next month's release.",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-08-21T03:52:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-678023008"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDY5ODc1ODcwOQ==",
                    "body": "I'm moving this to our GoTrue fork - let's see if we can do this during Hacktoberfest \ud83d\udea2 ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-09-25T06:57:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-698758709"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3OTczMTg1Mw==",
                    "body": "any ETA? :D",
                    "author": {
                        "login": "icecoconut"
                    },
                    "createdAt": "2021-07-14T09:13:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-879731853"
                },
                {
                    "id": "IC_kwDOEKipmc410BHW",
                    "body": "Any plans to support WebAuthm?",
                    "author": {
                        "login": "minecraftchest1"
                    },
                    "createdAt": "2021-08-20T16:58:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-902828502"
                },
                {
                    "id": "IC_kwDOEKipmc4_1x2u",
                    "body": "Hello ! I'm using Supabase since some months and I love it !\r\n\r\nI'm dealing with crypto and exchanges API on my website, so naturally some of my users asked for a 2FA and by searching how to do it I found this issue, so I'm here to confirmed the need of a 2FA for supabase sign in \u2705\r\n\r\nI thought about doing my own TOTP system but it cannot be secure enough since Supabase will always give the accessToken with a proper email and a password given to it.\r\nIf there is a leak of password for one of my user, a guy can always use `supabase.signIn` directly into the console of my website and have the acessToken, so a custom TOTP asking process will always be not secure enough, it needs to be implemented by supabase directly to be 100% secure.\r\n\r\nThat's all, thank you for the great work \ud83d\udc4b",
                    "author": {
                        "login": "Bryanoxx"
                    },
                    "createdAt": "2022-03-17T16:37:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1071062446"
                },
                {
                    "id": "IC_kwDOEKipmc5D9IV1",
                    "body": "I love supabase too, the only reason i`m not using it for my current project is because the lack of MFA. Any ETA? ",
                    "author": {
                        "login": "marcoshw"
                    },
                    "createdAt": "2022-05-27T23:18:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1140098421"
                },
                {
                    "id": "IC_kwDOEKipmc5EIxEj",
                    "body": "We're working on it! Out of curiosity, which aspect of MFA are you hoping to integrate(e.g. TOTP authenticator, SMS, email)?\r\n\r\nCan't say much but there'll be updates on the feature before our next launch so keep your eyes peeled for then... \ud83d\udc40 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-01T05:59:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1143148835"
                },
                {
                    "id": "IC_kwDOEKipmc5EJaI0",
                    "body": "I hope for TOTP authenticator, because that more independent so that more secure and doesn't need to waiting message to be received.",
                    "author": {
                        "login": "Deliana90"
                    },
                    "createdAt": "2022-06-01T08:51:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1143317044"
                },
                {
                    "id": "IC_kwDOEKipmc5F5dN9",
                    "body": "Just came here from the blog post and wanted to voice my support specifically for TOTP and especially WebAuthn.\r\n\r\nA long term stretch of being able to fire off a push notification would be awesome too, but I don't think it's as easy or reasonable to implement.\r\n\r\nOkta has a pretty nice breakdown of the various MFA security options available today: https://help.okta.com/en-us/Content/Topics/Security/mfa/about-mfa.htm",
                    "author": {
                        "login": "RichiCoder1"
                    },
                    "createdAt": "2022-07-01T20:25:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1172689789"
                },
                {
                    "id": "IC_kwDOEKipmc5F57A5",
                    "body": "@RichiCoder1 We've noted your feedback -- the table  in the link you've provided gives quite a nice comparison so thanks for that!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-02T01:55:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1172811833"
                },
                {
                    "id": "IC_kwDOEKipmc5F9z9S",
                    "body": "When your users use a Social Provider (e.g. Login with Google) to access your services via Supabase, shouldn't MFA work (on the Social Provider side), if the Social Provider supports it? E.g. when we talk about Google as Social Provider, you'd enable MFA in the Cloud Console (https://cloud.google.com/identity-platform/docs/web/mfa)",
                    "author": {
                        "login": "steffenstolze"
                    },
                    "createdAt": "2022-07-04T13:36:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1173831506"
                },
                {
                    "id": "IC_kwDOEKipmc5F-jjr",
                    "body": "Hey @steffenstolze  yup you are right, if you have MFA enabled on the Social Provider and you are logging in with your social provider then you will have to use MFA.\r\n\r\nHowever, this wouldn't cover all cases(e.g. email/password) which may be needed for compliance purposes or  general security reasons",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-04T17:32:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1174026475"
                },
                {
                    "id": "IC_kwDOEKipmc5F-kqj",
                    "body": "@J0 Absolutely! A complete solution that covers all use cases would be the best, of course \ud83d\udc4c\ud83c\udffb",
                    "author": {
                        "login": "steffenstolze"
                    },
                    "createdAt": "2022-07-04T17:40:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1174031011"
                },
                {
                    "id": "IC_kwDOEKipmc5HXUkh",
                    "body": "Is the 2FA feature ready yet? I am building a system that needs 2FA and was wondering if the GoTrue API has this feature or should I use something else like ORY/Kratos?",
                    "author": {
                        "login": "edardev"
                    },
                    "createdAt": "2022-07-27T19:51:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1197295905"
                },
                {
                    "id": "IC_kwDOEKipmc5J32OK",
                    "body": "Hey everyone, @J0 is working on this feature in gotrue and you guys can check out the `gotrue/mfa_v1` branch for the implementation details. We have also opened up an [early-sign up list](https://airtable.com/shrjcc9zi0RduHLIx) if you are using Supabase and looking to try out MFA in a project. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:16:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1239376778"
                },
                {
                    "id": "IC_kwDOEKipmc5TVO4v",
                    "body": "Hey team,\r\n\r\nGoing to close this issue since TOTP MFA has landed in prod. If anyone has issues please feel free to reach out. \r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-20T08:42:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1398074927"
                },
                {
                    "id": "IC_kwDOEKipmc5TVPMK",
                    "body": "For Webauthn MFA and Passkey support please follow #92 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-20T08:43:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1398076170"
                },
                {
                    "id": "IC_kwDOEKipmc5boASb",
                    "body": "Since initial feature request mentioned U2F, just a question, is it going to be implemented?",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-05-06T20:02:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1537213595"
                },
                {
                    "id": "IC_kwDOEKipmc5byA63",
                    "body": "hi @tomekit, it's on the roadmap but we don't have a timeline for this yet as we are prioritising other features such as webhooks / anonymous logins over U2F right now",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-09T10:03:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/14#issuecomment-1539837623"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MDg4NDQ0NjQ=",
            "number": 15,
            "title": "chore: revert `?` to `#` in /callback response",
            "body": "",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-09-25T10:56:49Z",
            "closedAt": "2020-09-29T06:21:21Z",
            "url": "https://github.com/supabase/gotrue/issues/15",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU3MjE5MzAzMjU=",
            "number": 17,
            "title": "magic link support",
            "body": "we can use the existing recovery flow as a base but something with better DX would be nice",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-10-15T02:56:09Z",
            "closedAt": "2020-10-30T10:01:44Z",
            "url": "https://github.com/supabase/gotrue/issues/17",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcwODg2NTY3MQ==",
                    "body": "will depend on changes to the recovery flow #18 ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-10-15T03:04:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-708865671"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNDkyNTQ4Mw==",
                    "body": "![image](https://user-images.githubusercontent.com/458736/96960560-47fac980-1535-11eb-82f0-db0fab79faee.png)\r\n\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-10-23T05:40:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-714925483"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNDkzMjg3Mg==",
                    "body": "![image](https://user-images.githubusercontent.com/458736/96961817-04ee2580-1538-11eb-9aab-71878886d0b1.png)\r\n![image](https://user-images.githubusercontent.com/458736/96961828-0ae40680-1538-11eb-8d26-b7f0bfe8e7c0.png)\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-10-23T06:00:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-714932872"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNjQ4MjI3Ng==",
                    "body": "finishing the spec for this\r\n\r\n**assumptions**:\r\n- we add some method to gotrue-js sendMagicLink(email)\r\n\r\n**outstanding questions**:\r\n- what should happen if the user does not yet exist?\r\n   - error message\r\n   - create the user and then send them a magic link afterwards\r\n   - add this as an option sendMagicLink(email, { createUserIfNotExists : true })\r\n\r\n- do we need a new email template for magic links, or should we have people use the `recovery` email template? (My thinking here is that we can implement this without changing gotrue API too much)\r\n   - one thing that Thor pointed out is that some people may want to have both magic link and password recovery email templates (although the way they work is pretty much the same)\r\n\r\npreference @kiwicopple @thorwebdev ? ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-10-26T11:17:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-716482276"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNjUxMzk4OQ==",
                    "body": "> what should happen if the user does not yet exist?\r\n\r\nAs a developer you'd expect the user to be created, if they don't exists already. Throwing an error doesn't make sense, and neither does a `createUserIfNotExists`, since I can't think of a situation where you *don't* want to create a user? (Magic links are a form of sign up)\r\n\r\n> one thing that Thor pointed out is that some people may want to have both magic link and password recovery email templates (although the way they work is pretty much the same)\r\n\r\nI agree here, it would be more similar to a sign up email. Can we use the signup email template, and only trigger it if a new user is created?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-10-26T12:26:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-716513989"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNjUxODE1Mg==",
                    "body": "> Can we use the signup email template, and only trigger it if a new user is created?\r\n\r\nBut what email do we then send when the user already exists and just wants to log in? I do think this needs to be a separate route and a separate template, and ideally would be merged back into netlify's gotrue as I think it's a useful feature. Wdyt?",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2020-10-26T12:35:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-716518152"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNjkyMzcwMQ==",
                    "body": "> what email do we then send when the user already exists and just wants to log in? \r\n\r\nTrue. So the route would have to :\r\n\r\n- check if the user exists\r\n  - if not exists\r\n    - create user\r\n    - send an email with login link\r\n  - if exists\r\n    - send an email with login link\r\n\r\nThe login link email and the password recovery email will be quite different so I think you're right about requiring a GoTrue modification.\r\n\r\nAnother question - if someone has logged in with email and password, should we also allow them to trigger a \"Magic link\" email, then login without their password?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-10-27T01:47:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-716923701"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNjkyODQyMA==",
                    "body": "> Another question - if someone has logged in with email and password, should we also allow them to trigger a \"Magic link\" email, then login without their password?\n\nI'd say yes, we can assume a user's email to be a secure channel, seeing that reset password uses the same channel. ",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2020-10-27T02:00:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-716928420"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxOTQ2MDAwOA==",
                    "body": ":tada: This issue has been resolved in version 1.3.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.3.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2020-10-30T10:02:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/17#issuecomment-719460008"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MjE5MzE3MDc=",
            "number": 18,
            "title": "improve recovery flow",
            "body": "currently recovery emails contain a link like:\r\n\r\n`<user-app>/?recovery_token=XXXXXXXX`\r\n\r\nwhich can then be used to do a:\r\n\r\n![image](https://user-images.githubusercontent.com/458736/96071737-51e95080-0ed5-11eb-9f24-993c37d55a85.png)\r\n\r\nbut we can skip this step by embedding the verify link directly into the email\r\n\r\nthis may require a change in gotrue to allow making a `/verify` over GET",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-10-15T02:59:55Z",
            "closedAt": "2020-10-26T04:47:05Z",
            "url": "https://github.com/supabase/gotrue/issues/18",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcxNjMwMDcwNg==",
                    "body": ":tada: This issue has been resolved in version 1.2.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.2.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2020-10-26T04:47:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/18#issuecomment-716300706"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MzA2MjEzNDQ=",
            "number": 20,
            "title": "Generate swagger spec from source",
            "body": "https://medium.com/@pedram.esmaeeli/generate-swagger-specification-from-go-source-code-648615f7b9d9",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-10-27T16:41:23Z",
            "closedAt": "2022-05-17T04:05:59Z",
            "url": "https://github.com/supabase/gotrue/issues/20",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNzI0NjA3Nw==",
                    "body": "I started doing this task by using go-swagger and this is not so easy how it was seamed. But I`ve done some work and have a question. @awalias @kiwicopple Do I need include description of /admin/* , /saml/* , /instances/* to result ? Because in README that groups aren't been covered",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-14T18:20:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/20#issuecomment-727246077"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNzQyOTg3Mg==",
                    "body": "> Do I need include description of /admin/* , /saml/* , /instances/* to result ? Because in README that groups aren't been covered\r\n\r\nIdeally it will autogen everything - is there some manual work to enable the routes?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-11-15T04:01:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/20#issuecomment-727429872"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNzUyNDcxNg==",
                    "body": "Every route need to be described manually and then spec will be generated according to it",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-15T06:46:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/20#issuecomment-727524716"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNzU2NDc0OA==",
                    "body": "I see, perhaps we start with a very small set of routes and then expand it if it seems like it's the right long-term solution? ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-11-15T12:48:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/20#issuecomment-727564748"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNzU2OTUxNw==",
                    "body": "Yeah, I agree. Initial set of routes will be the same as in REAMDE. I think that it's enough to start",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-15T13:26:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/20#issuecomment-727569517"
                },
                {
                    "id": "IC_kwDOEKipmc5DQcww",
                    "body": "Hey! \r\n\r\nThanks for looking into the issue! Unfortunately, the Swagger spec has been de-prioritized for the moment as we don't quite have the bandwidth to maintain it. I'm going to close this for now but feel free to re-open if you have any questions or concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-17T04:05:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/20#issuecomment-1128385584"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MzQxODM1NDg=",
            "number": 24,
            "title": "magic link: improve responses",
            "body": "magic link currently returns sign in responses when user doesn't exist (access_token, or confirmation_sent_at etc.)\r\n\r\nand returns nothing when user exists and magic link is sent, recover endpoint returns and empty json body `{}` so should standardize ",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-02T05:07:34Z",
            "closedAt": "2020-11-13T04:48:44Z",
            "url": "https://github.com/supabase/gotrue/issues/24",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyMzQ4MTA3Nw==",
                    "body": "@awalias as far as i understand you want just standardise answers and add to magic link response empty json answer?",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-07T18:51:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/24#issuecomment-723481077"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyMzU5MDQyNw==",
                    "body": "if successful the response should just be `{}`\r\n\r\nif [MaxFrequency is broken](https://github.com/supabase/gotrue/blob/f82003ca7fec0ba23e1f4ab4fa4325b007063b05/api/mail.go#L61) then we should probably return an error with 429 response code\r\n\r\nthe problem is we need to suppress the json response from the SignUp method [here](https://github.com/supabase/gotrue/blob/f82003ca7fec0ba23e1f4ab4fa4325b007063b05/api/magic_link.go#L60) and [here](https://github.com/supabase/gotrue/blob/f82003ca7fec0ba23e1f4ab4fa4325b007063b05/api/magic_link.go#L53)",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-08T15:10:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/24#issuecomment-723590427"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNTU2ODc3OQ==",
                    "body": "@awalias in cases when SignUp method respond with some error - do we need show same error which reterned from that method? \r\nI have one option for dealing with response from SignUp method. Just implement struct, that fits Response interface and handle response.\r\nFor example:\r\nResponse stub code\r\n\r\n```go\r\ntype responseStub struct {\r\n}\r\n\r\nfunc (rw *responseStub) Header() http.Header {\r\n\treturn nil\r\n}\r\n\r\nfunc (rw *responseStub) Write(data []byte) (int, error) {\r\n\treturn 0, nil\r\n}\r\n\r\nfunc (rw *responseStub) WriteHeader(statusCode int) {\r\n}\r\n```\r\nMagic link code\r\n```go\r\n...\r\nif config.Mailer.Autoconfirm {\r\n\t// signups are autoconfirmed, send magic link after signup\r\n\tif err := a.Signup(fakeResponse, r); err != nil {\r\n\t\t// TODO: handle error\r\n\t\tw.Write(nil)\r\n\t}\r\n\tnewBodyContent := `{\"email\":\"` + params.Email + `\"}`\r\n\tr.Body = ioutil.NopCloser(strings.NewReader(newBodyContent))\r\n\tr.ContentLength = int64(len(newBodyContent))\r\n\treturn a.MagicLink(fakeResponse, r)\r\n}\r\n// otherwise confirmation email already contains 'magic link'\r\nif err := a.Signup(w, r); err != nil {\r\n\t// TODO: handle error\r\n\tw.Write(nil)\r\n}\r\n\r\nreturn sendJSON(w, http.StatusOK, make(map[string]string))\r\n....\r\n```\r\nI'm not sure that this solution is \"good\". What do you think about that?",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-11T17:53:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/24#issuecomment-725568779"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNTg2ODE0Nw==",
                    "body": "I think it's ok, If you want to make a PR I can test it out today \ud83d\udc4d ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-12T06:27:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/24#issuecomment-725868147"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNTg4MDIyNQ==",
                    "body": "OK, I''ll try to do it today  =)",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-12T06:56:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/24#issuecomment-725880225"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNjUwNTk4MQ==",
                    "body": "nice one @icecream78 !!\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-13T04:48:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/24#issuecomment-726505981"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MzQxODQ1Nzk=",
            "number": 25,
            "title": "verify endpoint improve error responses",
            "body": "verify token endpoint currently returns User not found if the token has expired, should instead return token expired error\r\n\r\nor if not going to be called via API, then can also redirect to something like `<SITE_URL>#error_description=token_expired`",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-02T05:09:52Z",
            "closedAt": "2020-11-16T06:44:36Z",
            "url": "https://github.com/supabase/gotrue/issues/25",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyMTI3ODEzMQ==",
                    "body": "Hi. \r\nI looked through the source code of verify function and haven`t found any checks for confirmed token expiration. Do you need this type of check? Only thing that I`ve found, when no confirmation_token found in db and returned \"User not found\" error.\r\nEnglish is not my native language, so if it something was written not correct don`t blame me=)",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-03T17:40:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/25#issuecomment-721278131"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyMTY3MjYzNQ==",
                    "body": "you're correct @icecream78 , the only way to expire a confirmation token right now is to replace it with a more recent one",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-04T11:17:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/25#issuecomment-721672635"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3MzYxODYxMTk=",
            "number": 28,
            "title": "reduce MaxFrequency for magic links",
            "body": "the default is currently 15 mins, we should reduce the default and also make sure the error is returned to the user if it is tripped and a new token is not generated first (since it invalidates the previous token)",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-04T15:02:36Z",
            "closedAt": "2020-11-16T06:45:54Z",
            "url": "https://github.com/supabase/gotrue/issues/28",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU3Mzc0OTA2Njg=",
            "number": 30,
            "title": "App needs to know that Password Recovery happening",
            "body": "the password recovery flow logs the user in and redirects the user to <SITE_URL>#access_token..etc.\r\n\r\nneed to add a query param either inside gotrue server, to let the user's app know that it's a password recovery\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-06T06:02:15Z",
            "closedAt": "2020-11-10T15:28:16Z",
            "url": "https://github.com/supabase/gotrue/issues/30",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyMzQ4MjE0Nw==",
                    "body": "@awalias I suggest just pass to redirected query parameter type. That parameter is coming as required field in verify method. It will be cleaner way, I suppose. \r\nWhat do you think about that?",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-07T19:01:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/30#issuecomment-723482147"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyMzU5MTIxMg==",
                    "body": "so we should make the response like:\r\n\r\n<SITE_URL>#access_token.....&type=recovery\r\n\r\nor \r\n\r\n<SITE_URL>#access_token.....&type=signup\r\n\r\n?\r\n\r\nI think this is a good idea \ud83d\udc4d ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-08T15:15:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/30#issuecomment-723591212"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyMzc5Nzk5MQ==",
                    "body": "I planned cover both cases.\r\n1-st response <SITE_URL>#access_token.....&type=recovery cover task description.\r\n2-nd response <SITE_URL>#access_token.....&type=signup is side affect. User's app can handle or ignore it",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-09T06:44:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/30#issuecomment-723797991"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NDE2MDA3Mzk=",
            "number": 32,
            "title": "Github Action to build for ARM/graviton",
            "body": "https://medium.com/@nabil.servais/using-github-actions-to-test-your-go-code-on-arm64-ce581e646cb\r\n\r\nhttps://medium.com/swlh/using-github-actions-to-build-arm-based-docker-images-413a8d498ee\r\n\r\nhttps://github.community/t/does-github-actions-support-multiple-os-architectures/16526",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-12T13:28:04Z",
            "closedAt": "2020-12-13T05:15:31Z",
            "url": "https://github.com/supabase/gotrue/issues/32",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc0MDQ4MDgzMA==",
                    "body": "if we could make and publish a generic action for this it would get *lots* of love from the community",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-12-08T08:54:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/32#issuecomment-740480830"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc0NDQ1NzMyNg==",
                    "body": ":tada: This issue has been resolved in version 1.4.2 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.4.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2020-12-14T13:57:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/32#issuecomment-744457326"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NDIyNDkwMzc=",
            "number": 35,
            "title": "Magic link redirect adds &type=recovery",
            "body": "we should try and change this to `type=magiclink` in this case\r\n\r\nnot easy without making schema changes to add `magic_link_sent_at` but maybe we need to add this",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-13T08:09:46Z",
            "closedAt": "2020-11-23T04:21:50Z",
            "url": "https://github.com/supabase/gotrue/issues/35",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyNjc0ODcxNQ==",
                    "body": "For this purposes we need to add few fields:\r\n- for saving magiclink token\r\n- for time, when it sended to user",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-13T12:54:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/35#issuecomment-726748715"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NDIyODkyNzc=",
            "number": 36,
            "title": "Add twitter as a provider",
            "body": "",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-13T09:10:51Z",
            "closedAt": "2021-05-18T01:58:24Z",
            "url": "https://github.com/supabase/gotrue/issues/36",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc4NzY2NzIyNA==",
                    "body": "I can create a PR for this, if it is of interest",
                    "author": {
                        "login": "Eduardogbg"
                    },
                    "createdAt": "2021-03-01T05:58:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-787667224"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5NDk5NTc0OA==",
                    "body": "would be amazing @Eduardogbg !\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-10T07:06:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-794995748"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5Njc4NzU2MQ==",
                    "body": "I started work on this but found that twitter doesn't use oauth 2.0 for accessing the user's email address:\r\n\r\n![image](https://user-images.githubusercontent.com/458736/110804321-089e0100-82bb-11eb-8f2b-a7e832a71c2f.png)\r\nfrom [here](https://developer.twitter.com/en/docs/authentication/overview)\r\n\r\nthe flow is therefore different to what we use for the other providers: https://developer.twitter.com/en/docs/authentication/oauth-1-0a/obtaining-user-access-tokens\r\n\r\nso I'm not sure how relevant our existing methods like \r\n\r\n```go\r\np.Exchange(oauth2.NoContext, code)\r\n```\r\n\r\nare in this approach\r\n\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-11T14:44:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-796787561"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5NzA1NjUzOQ==",
                    "body": "Cool, I'll look into it!",
                    "author": {
                        "login": "Eduardogbg"
                    },
                    "createdAt": "2021-03-11T21:20:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-797056539"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5OTAwOTkzMg==",
                    "body": "@awalias it seems like the OAuth 2 protocol is fundamentally different from the OAuth 1.0 and as so I don't think we'll be able to reuse much from the OAuth providers code. If I can create an external dependency on a OAuth 1.0 library it would be easier, but I also understand if that's not preferred.\r\n\r\nAlso, I'm afraid some of the interfaces named OAuth could be confusing, as they wouldn't be satisfied for the OAuth 1.0 providers. That can be solved either by refactoring them to more generic ones (but I'm not sure that's either possible or good idea) or by renaming them to be OAuth 2 specific.",
                    "author": {
                        "login": "Eduardogbg"
                    },
                    "createdAt": "2021-03-15T00:17:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-799009932"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5OTAyOTI0Mw==",
                    "body": "> If I can create an external dependency on a OAuth 1.0 library it would be easier\r\n\r\nI'm happy to proceed on the basis of ease of implementation, we can optimize later if needed\r\n\r\n> I'm afraid some of the interfaces named OAuth could be confusing\r\n\r\nperhaps we can use `TwitterOAuth` or `OAuth1_0a` for anything twitter specific. And can always refactor if we require other OAuth 1.0 providers ?",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-15T01:26:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-799029243"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxNzE3MTY4OQ==",
                    "body": "Would love to have Twitter as an option for auth. Looks like the NextAuth folks had to go with OAuth 1.0A https://github.com/nextauthjs/next-auth/blob/main/src/providers/twitter.js",
                    "author": {
                        "login": "dbredvick"
                    },
                    "createdAt": "2021-04-10T17:04:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-817171689"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzNTMwMTQ3OQ==",
                    "body": "might be useful: https://github.com/markbates/goth/blob/19c3059c9ed44995940c8222a8eda10f6b604e01/examples/main.go#L75",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-08T11:12:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-835301479"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MDUzNTA0MQ==",
                    "body": "some initial work here: https://github.com/supabase/gotrue/pull/96",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-13T12:53:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-840535041"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTYwODM0Nw==",
                    "body": "previous PR superseded by https://github.com/supabase/gotrue/pull/95",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-15T06:17:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-841608347"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0Mjc2NDk5MA==",
                    "body": "fixed by #98 \r\n\r\nwill be available in supabase dashboard for new projects this evening\r\n\r\nfor existing projects it will be shipped tomorrow",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-18T01:58:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/36#issuecomment-842764990"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NDIzMzI1OTc=",
            "number": 37,
            "title": "Apple Login as an OAuth Provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWhen I go to `auth/settings` I see External Oauth Providers for Google, Github, Gitlab, and Bitbucket. My understanding is that for an ios app, you must also provide Apple as an oauth provider. Is this something you intend to support in Supabase?\r\n\r\n## Describe the solution you'd like\r\n\r\nI would like to have Apple supported as an external Oauth Provider\r\n\r\n## Describe alternatives you've considered\r\n\r\nFrom what I understand, apple's store guidelines require that if you allow another oauth provider you must support apple oauth. If I am building an app powered by supabase I would like to offer google oauth, but I want to make sure this is supported.\r\n\r\n## Additional context\r\n\r\n\r\n",
            "author": {
                "login": "infomofo"
            },
            "state": "CLOSED",
            "createdAt": "2020-10-08T19:32:58Z",
            "closedAt": "2021-05-19T05:05:42Z",
            "url": "https://github.com/supabase/gotrue/issues/37",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcwNTkxNTg3Ng==",
                    "body": "Thanks for creating this @infomofo - this will involve and update to [GoTrue](https://github.com/supabase/gotrue).\r\n\r\nI've labelled this as a Hacktoberfest task - let's see if anyone in the community wants to try solving it this month.",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2020-10-09T01:34:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-705915876"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzMDM1Mjk5Mg==",
                    "body": "Hi, any word on when this might be implemented. Can't use Supabase auth for iOS apps as Apple requires developers to add the \"Sign In With Apple\" option. Thanks @kiwicopple. Would do it myself but I am completely unfamiliar with GoTrue. ",
                    "author": {
                        "login": "He1nr1chK"
                    },
                    "createdAt": "2021-04-30T20:09:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-830352992"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzMTYyNTg2OA==",
                    "body": "Hey @Seanmclem, thanks for bumping this issue.  We know this is an important task - we are even [hiring people](https://twitter.com/supabase_io/status/1389078045449854978) to help with it. Our team is stretched extremely thin right now. \r\n\r\nAs a small note, the community functions a lot better when it's collaborative rather than accusatory. I understand if you have no time to contribute so a good way to help is to push other developers here who have the time/skills to help solve it. That way, everyone wins. If you know a good Go developer who can solve this - please let them know that we will send them swag if they can submit a PR.",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-05-04T00:55:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-831625868"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzNTMwNjk4OQ==",
                    "body": "looks like this is what we want: \r\n\r\nhttps://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens\r\nhttps://medium.com/identity-beyond-borders/how-to-configure-sign-in-with-apple-77c61e336003\r\n\r\nedit: \r\n\r\nseems that:\r\n\r\n\"client_id: The application identifier for your app.\" i.e. <TEAM-ID>.<APP-ID>\r\n\r\n\"client_secret: A secret generated as a JSON Web Token that uses the secret key generated by the WWDR portal.\" use the [private key to issue this JWT](https://medium.com/identity-beyond-borders/how-to-configure-sign-in-with-apple-77c61e336003)\r\n\r\ncan both be obtained here: https://developer.apple.com/account/resources/identifiers/list/serviceId",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-08T11:22:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-835306989"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzNTQ1MjA4NQ==",
                    "body": "Hi @awalias, looks good. I also found this repo that has already implemented sign in with apple written in GO: https://github.com/Timothylock/go-signin-with-apple",
                    "author": {
                        "login": "He1nr1chK"
                    },
                    "createdAt": "2021-05-08T18:04:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-835452085"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjA3MjA2MA==",
                    "body": "Hi @kiwicopple @awalias, any update on this? I see that Twitter was just added as a OAuth provider. Can't use any third party providers on iOS if we don't provide sign in with Apple as an option",
                    "author": {
                        "login": "He1nr1chK"
                    },
                    "createdAt": "2021-05-17T07:15:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-842072060"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjQwNzEzNw==",
                    "body": "Hey @He1nr1chK, we'll be working on this next! Stay tuned! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-05-17T15:14:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-842407137"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjUzMjExMg==",
                    "body": "Might difficult to use in an App without the ability to use with Expo Auth Session or something similar. Any idea if that will work? ",
                    "author": {
                        "login": "Seanmclem"
                    },
                    "createdAt": "2021-05-17T18:16:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-842532112"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MzAyMjU1NQ==",
                    "body": "Hey @Seanmclem, I'm not too familiar with Expo Auth Session but I'll do up a v1 and we can see how to improve it from there! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-05-18T09:44:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-843022555"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MzA4MTAwMQ==",
                    "body": "> Hey @Seanmclem, I'm not too familiar with Expo Auth Session but I'll do up a v1 and we can see how to improve it from there! \n\nThanks. I guess I was just saying without a functional app implementation for supabase-auth, the Apple sign in would be less useful. ",
                    "author": {
                        "login": "Seanmclem"
                    },
                    "createdAt": "2021-05-18T11:14:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-843081001"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MzQ4NzU0OQ==",
                    "body": "Hi @kangmingtay, thanks for all the great work. I just saw your PR for apple authentication. The problem that I think @Seanmclem is referring to is the fact that there is no practical way for us to use the implemented apple auth provider (or any third party provider for that matter) in React Native (or Flutter I assume). The issue, as touched on in [this](https://github.com/supabase/gotrue-js/issues/406) thread, is that the redirects do nothing when calling `supabase.auth.signIn()`. The call just returns null for both session and user. From what I have gathered, the crux of the problem lies in RN (or Expo in my case) not having a way of handling the redirect as it is currently implemented. The solution suggested in the above mentioned thread is to expose a function for all third party providers to sign in by passing an access_token to the Supabase `signIn()` method and then getting the user's data back. This is the way that Firebase handles the sign in for Expo. What are your thoughts on this?",
                    "author": {
                        "login": "He1nr1chK"
                    },
                    "createdAt": "2021-05-18T19:35:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-843487549"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0Mzc0OTA0Nw==",
                    "body": "If I understand the linked thread correctly then we should be able to call [/callback](https://github.com/supabase/gotrue#get-callback) directly with the relevant `access_token` etc.\r\n\r\nwe also added the ability to redirect to deep mobile links using \"Additional Redirect URLs\", I believe it's being used on flutter already: https://github.com/supabase/supabase-dart/issues/20\r\n\r\nclosing this now as I don't think there's any additional backend work required?",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-19T05:05:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-843749047"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0NDA5NzY4Mw==",
                    "body": "@awalias \n> If I understand the linked thread correctly then we should be able to call /callback directly with the relevant access_token etc.\n\nIs there any issue that tracks this? It is a very useful feature for mobile applications where a native Google / Apple sign in  dialog can be shown to the users. Those dialogs already obtain a valid access_token that could be sent to the backend.",
                    "author": {
                        "login": "davidmartos96"
                    },
                    "createdAt": "2021-05-19T13:17:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/37#issuecomment-844097683"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NDQ0MjQwNDI=",
            "number": 38,
            "title": "Set User Domain on Cookies",
            "body": "https://golang.org/src/net/http/cookie.go\r\n\r\n![image](https://user-images.githubusercontent.com/458736/99350257-e1b95a80-28d8-11eb-9a8d-073322e669df.png)\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-17T05:29:23Z",
            "closedAt": "2020-11-17T16:30:02Z",
            "url": "https://github.com/supabase/gotrue/issues/38",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU3NDQ0MzUyODI=",
            "number": 39,
            "title": "Always redirect back to user site for recovery/magic link",
            "body": "# Feature request\r\n\r\nCurrently, if a recovery/magic link is expired, supabase will show a json error which is not a good user experience. Rather we should redirect back to the merchant site with an `error_description` URL param maybe?\r\n\r\n## Additional context\r\n\r\nAdd any other context or screenshots about the feature request here.\r\n![image](https://user-images.githubusercontent.com/5748289/99221969-95a8e000-281c-11eb-9ec6-226d9d040951.png)\r\n\r\n",
            "author": {
                "login": "thorwebdev"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-17T05:54:49Z",
            "closedAt": "2021-03-10T07:40:46Z",
            "url": "https://github.com/supabase/gotrue/issues/39",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDcyODc3ODM4Nw==",
                    "body": "@awalias is this good enough improvement according to UX?",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-17T08:43:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/39#issuecomment-728778387"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMTA0NDI5MQ==",
                    "body": "<del>perhaps we should have `<USER-SITE>#auth_error_code=404&auth_error_message=user%20not%20found` as the query params, just because some webs apps may already use the `error-XXX` query param</del>\r\n\r\nactually as pointed out by thor, gotrue already has a concept of `error_description`\r\n\r\nlets do `<USER-SITE>#error_code=404&error_description=user%20not%20found`\r\n\r\nbut yes agreed that we should redirect back to user site :+1: nice suggestion @thorwebdev ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-20T09:10:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/39#issuecomment-731044291"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5NTAzMDMyNQ==",
                    "body": "closing this but noting that still need to solve for signup: https://github.com/supabase/supabase/issues/504",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-10T07:40:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/39#issuecomment-795030325"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NDczMzc5ODM=",
            "number": 41,
            "title": "Ability to enable/disable users temporarily ",
            "body": "We should add two endpoints accessible by the admin:\r\n\r\nr.With(api.requireAdminCredentials).Post(\"/disable\", api.DisableUser)\r\nr.With(api.requireAdminCredentials).Post(\"/enable\", api.EnableUser)\r\n\r\nwe would need an `is_disabled` column on the users table which is checked before a token is requested, and returns an error \"this user has been disabled by the admin\" if is true",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-20T09:39:49Z",
            "closedAt": "2022-01-19T17:13:47Z",
            "url": "https://github.com/supabase/gotrue/issues/41",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMTMzNjAyNQ==",
                    "body": "@awalias what to do in situations when user already got token and after that admin blocked him? do we need handle this case or it's OK and lets wait while his token expire?",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-20T18:25:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-731336025"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMTY5MTUwMw==",
                    "body": "I don't think it's possible for us to force expire an access token? I think we just have to wait for it to expire \ud83e\udd37\u200d\u2642\ufe0f ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-22T03:24:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-731691503"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMTcyMjM0Ng==",
                    "body": "@awalias maybe better make route like /admin/users/{user_id}/disable and /admin/users/{user_id}/enable and switch method from POST to PATCH? In my opinion, it seems to be more better choice. What do you think?\r\nSorry for such questions but it's better to ask them before task implementing rather then after finishing it",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-22T09:43:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-731722346"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMTg4OTUxOQ==",
                    "body": "I wonder whether we should extend the existing POST /user endpoint with enable/disable functionality:\r\n\r\n<img width=\"866\" alt=\"image\" src=\"https://user-images.githubusercontent.com/458736/99923388-807a0700-2d70-11eb-9247-0db47d9f6b8c.png\">\r\n\r\nand make a new route for [`UserUpdate`](https://github.com/supabase/gotrue/blob/b7b5fdfa7886e72056da55a093f1fe65fa246c02/api/user.go#L51) that is only accessible by Admin Users \r\n\r\nwhat do you think? It will enable admins to change other data about a user (and can add more in the future)",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-23T01:50:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-731889519"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMTg4OTYyMQ==",
                    "body": "but I also like your solution \ud83e\udd14 ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-11-23T01:50:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-731889621"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMjE3MDQ0MA==",
                    "body": "Your approach is more scalable in future than mine. OK, I'll implement admin's analog of UserUpdate method=)",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-23T13:44:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-732170440"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3ODYwODEzNw==",
                    "body": "> I don't think it's possible for us to force expire an access token? I think we just have to wait for it to expire \ud83e\udd37\u200d\u2642\ufe0f\r\n\r\nThis is not necessarily true, and largely depends on how you verify the validity of tokens. Aside from checking the signature, and indeed even _before_ checking the signature, you might want to check the `sub` (or other relevant claim) against a blacklist to see if the token should be disallowed.\r\n\r\nThe tricky bit is of course how you make sure your blacklist is accurate and up to date. It may not be palatable to look it up in the DB on _every_ request, but on the other hand if you don't look it up on every request, there's a good chance you'll have a race condition where a request comes in and makes it all the way before the blacklist is propagated to wherever tokens are checked. To be fair though, depending on _where_ in the flow you're checking the validity of a token you may well end up with a race condition _anyway_.\r\n\r\nThe way I've done this in the past is to have a mechanism for blacklisting tokens based on one or a combination of claims, e.g. for individual users it may be the `sub` claim, for groups of users it may be something else, a custom claim like `grp` or even individual role permissions like `role`. Maybe it's a combination of things, maybe a user should have general access, but lost admin privileges so any token with `sub=1234` and `role='admin'` should be rejected. This blacklist lives at the API gateway, and that's the source of truth. Anything that gets passed the gateway is assumed to be valid (though signatures may still be checked, just not blacklist rules,) and anything behind the gateway only accepts requests coming from the gateway. Any request coming from another source is dropped without further consideration.\r\n\r\nIt's a decent compromise which allows for blocking tokens even if their expiration time is quite far in to the future. Blacklist rules generally don't expire, so care has to be taken to make it performant, and that of course largely depends on how complicated the rules can get. If all you're doing is field comparison it's a pretty fast lookup, but if you start doing fancy stuff like regex checks or multiple field comparisons you have to be real careful to make sure the expensive checks happen as late as possible, and the cheap checks act as circuit breakers first.",
                    "author": {
                        "login": "mstade"
                    },
                    "createdAt": "2021-02-13T12:02:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-778608137"
                },
                {
                    "id": "IC_kwDOEKipmc48mWRk",
                    "body": ":tada: This issue has been resolved in version 2.4.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.4.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-01-19T17:14:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/41#issuecomment-1016685668"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NDgxNjA3NTI=",
            "number": 45,
            "title": "Pass admin roles as env var",
            "body": "We currently [check the JWT for roles `service_role` and `supabase_admin`](https://github.com/supabase/gotrue/blob/edcd69effebfe6e08b5e7e0acda766f207cc4a84/api/auth.go#L32), we should instead read an env var with a list of roles to check and loop through all:\r\n\r\ne.g.\r\n\r\n`ADMIN_ROLES=supabase_admin,service_role,my_special_role`\r\n\r\nthis allows more flexible uses of gotrue outside of supabase",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-22T03:30:43Z",
            "closedAt": "2020-11-23T01:40:06Z",
            "url": "https://github.com/supabase/gotrue/issues/45",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU3NTAzNTc1MTA=",
            "number": 47,
            "title": "Improve `/logout` speed",
            "body": "# Chore\r\n\r\n## Describe the chore\r\n\r\nThe `supabase.auth.logout()` function takes consistently more than 2 seconds to resolve. Is there anything we can do to speed this up? It's a bit awkward for that much delay after hitting the signout button.\r\n\r\n## Additional context\r\nTested here: https://nextjs-subscription-payments-starter.vercel.app/\r\n![image](https://user-images.githubusercontent.com/5748289/100179873-dcc85c80-2f11-11eb-88b3-5ce181a86fda.png)\r\n\r\n",
            "author": {
                "login": "thorwebdev"
            },
            "state": "CLOSED",
            "createdAt": "2020-11-25T03:32:52Z",
            "closedAt": "2022-08-29T04:40:24Z",
            "url": "https://github.com/supabase/gotrue/issues/47",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczMzUwMjkwOQ==",
                    "body": "Somewhy mysql doesn't use index while logout. \r\n![image](https://user-images.githubusercontent.com/20445149/100192273-b2bb6e00-2f02-11eb-835a-9ebe069ecaca.png)\r\nI'll try figure out how to tune perfomance of this query, but I'm not PRO in stuff like this and will take some time=)",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2020-11-25T06:44:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/47#issuecomment-733502909"
                },
                {
                    "id": "IC_kwDOEKipmc5JTLUp",
                    "body": "Should be resolved by [the move to sessions](https://github.com/supabase/gotrue/pull/600/files) and the change in the underlying query to  make use of the sessions model rather than refresh tokens. Going to close for now but feel free to re-open if issue persists.\r\n\r\ncc: @kangmingtay @hf\r\n\r\nRealized after posting that a tag wasn't quite needed(bc there's no follow up action required) -- please ignore",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-29T04:40:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/47#issuecomment-1229763881"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NTY2NTU3Mjk=",
            "number": 49,
            "title": "support for facebook external auth?",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nOur app would like to authenticate users via facebook and then pull a list of friends from that user.\r\n\r\n## Describe the solution you'd like\r\nIdeally supabase can authenticate with facebook for us, and store an auth token in the database that we can use to pull data from facebook in a long running task somewhere on a daily interval.\r\n\r\n## Describe alternatives you've considered\r\nThe alternative is not really feasible using postgrest. There is a good amount of complicated client to server communication that I do not want to write in sql statements. That means the alternative we are using for now rolling our own rest server that talks to a postgres database\r\n\r\n## Additional context\r\n\r\nfacebook is an oauth provider https://en.wikipedia.org/wiki/List_of_OAuth_providers",
            "author": {
                "login": "andykais"
            },
            "state": "CLOSED",
            "createdAt": "2020-12-01T15:25:52Z",
            "closedAt": "2021-01-30T07:22:32Z",
            "url": "https://github.com/supabase/gotrue/issues/49",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDczODQxMjc1MQ==",
                    "body": "Hey @andykais,\r\n\r\nWe use [supabase/gotrue](https://github.com/supabase/gotrue/) for OAuth, which already supports some [external providers](https://github.com/supabase/gotrue/#external-authentication-providers).\r\n\r\nI'll transfer the issue to that repo, so we can track the feature request.",
                    "author": {
                        "login": "steve-chavez"
                    },
                    "createdAt": "2020-12-03T22:53:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/49#issuecomment-738412751"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3MDE2NzM1NA==",
                    "body": "looking at this today, there is some discussion on this on the netlify forums: looks like the backend implementation may not be complete: https://community.netlify.com/t/add-additional-social-logon-providers/20125/16",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-01-30T06:37:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/49#issuecomment-770167354"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3MDE2ODExMQ==",
                    "body": "ok this is working on the backend, I just need to add the relevant bits to the supabase dashboard and we should be good to go!",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-01-30T06:46:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/49#issuecomment-770168111"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3MDE3MTI5Mg==",
                    "body": "ok will be in the next release of the dashboard @andykais \ud83d\udc4d (which will likely be tomorrow or monday)",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-01-30T07:22:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/49#issuecomment-770171292"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NjIwNDA2NTM=",
            "number": 50,
            "title": "Magic Link Sign Up creating 2x Users",
            "body": "![image](https://user-images.githubusercontent.com/458736/101878684-f1bc1580-3bca-11eb-9d7c-98ab86b4ffe3.png)\r\n\r\nreported by @thorwebdev",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-12-11T08:07:26Z",
            "closedAt": "2020-12-14T10:19:32Z",
            "url": "https://github.com/supabase/gotrue/issues/50",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc0NDMzODgyOA==",
                    "body": "this was determined to be a client error, but we should as a unique constraint on the email column so this can never happen",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-12-14T10:19:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/50#issuecomment-744338828"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3Njc3ODU5Njc=",
            "number": 52,
            "title": "Azure AD external auth",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nOur organization is standardized on the Azure stack and as such we are required to use Azure AD for auth.\r\n\r\n## Describe the solution you'd like\r\n\r\nAbility to authenticate via Azure AD over OAuth.\r\n\r\n## Describe alternatives you've considered\r\n\r\nAn alternative is not really feasible using Supabase without some hackery. I suppose we could have some weird callback system through another auth system that works with Azure AD that then creates a user in Supabase but it's going to get messy quickly.\r\n\r\n## Additional context\r\n\r\nAzure AD supports OAuth 2.0 - https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/auth-oauth2\r\n",
            "author": {
                "login": "tehnorm"
            },
            "state": "CLOSED",
            "createdAt": "2020-12-15T16:36:47Z",
            "closedAt": "2021-02-13T10:21:33Z",
            "url": "https://github.com/supabase/gotrue/issues/52",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc0NzEwMjIwNQ==",
                    "body": "thanks for this one @tehnorm will take a look at what's involved",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2020-12-16T23:27:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/52#issuecomment-747102205"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc1NjI0MjQ2Mg==",
                    "body": "Hi @awalias - we have opened a PR for this here: https://github.com/supabase/gotrue/pull/54 Please let us know if needs any additional work.",
                    "author": {
                        "login": "tehnorm"
                    },
                    "createdAt": "2021-01-07T16:59:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/52#issuecomment-756242462"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc1NjI1NDQzMg==",
                    "body": "great @tehnorm checking now thanks for the heads up",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-01-07T17:16:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/52#issuecomment-756254432"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3ODU5NTY4OA==",
                    "body": "Fixed by Levet: https://github.com/supabase/gotrue/issues/52",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-02-13T10:21:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/52#issuecomment-778595688"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NzU0OTY2Njk=",
            "number": 53,
            "title": "How to confim a new email address ? ",
            "body": "# Improve documentation\r\n\r\n## Describe the problem\r\n\r\nWhen I update the email of a user account, I receive a \"Confirm email address change\" with a email_change_token.\r\nWhat should I do with it? Which end point should use to validate the new e-mail?\r\n\r\nThank you",
            "author": {
                "login": "ElouanL"
            },
            "state": "CLOSED",
            "createdAt": "2020-12-28T17:03:19Z",
            "closedAt": "2021-01-23T09:42:06Z",
            "url": "https://github.com/supabase/gotrue/issues/53",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc2NTg5NjU0OA==",
                    "body": "duplicate of https://github.com/supabase/gotrue/issues/60 thanks for requesting @ElouanL it needs some work",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-01-23T09:42:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/53#issuecomment-765896548"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3NzY1NTc5NTY=",
            "number": 57,
            "title": "Ability to use custom domain on Google dialog",
            "body": "![image](https://user-images.githubusercontent.com/458736/103370075-c6d72a00-4ac3-11eb-9758-7ac01a2f9557.png)\r\n\r\nThis may be possible already by setting up some endpoints on user app which forward to callback domains but need to test to verify but the main work would be adding the ability to set the env var `GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI` from the Supabase dashboard",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2020-12-30T17:24:55Z",
            "closedAt": "2021-03-07T03:33:36Z",
            "url": "https://github.com/supabase/gotrue/issues/57",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU3ODA0NzQwMTc=",
            "number": 59,
            "title": "Error messages allows malicious actors to probe if an account with a specific email exists.",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nWhen signing in, GoTrue can return different error messages:\r\n- `No user found with this email`\r\n- `Invalid Password`\r\n\r\nThis allows malicious actors to probe if an account with a specific email exists.\r\nThe same goes for the password recovery feature, where GoTrue can return `User not found`.\r\n\r\n## Expected behavior\r\nWhen signing in, return a unified error message, e.g `Invalid email or password`.\r\nWhen recovering a password, do not tell the user if the email is not associated with an account.\r\n",
            "author": {
                "login": "malobre"
            },
            "state": "CLOSED",
            "createdAt": "2021-01-06T11:10:25Z",
            "closedAt": "2021-03-06T12:14:13Z",
            "url": "https://github.com/supabase/gotrue/issues/59",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5MTkwOTc2NQ==",
                    "body": "@awalias @kiwicopple close the issue pls",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-03-06T10:37:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/59#issuecomment-791909765"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5MTkyNjY0Mg==",
                    "body": "Thanks @icecream78 !",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-03-06T12:14:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/59#issuecomment-791926642"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3ODEyNTQwMDM=",
            "number": 60,
            "title": "Improve email change DX",
            "body": "current email change email is sent to user\r\n\r\n- [ ] add template to supabase dashboard\r\n- [ ] gotrue confirmation url should be a get request to users endpoint with the `email_change_token` as a query param, which is confirmed and returns a new valid login session (hence invalidating older refresh_tokens that may have been opened on the old email) this is current implemented [here](https://github.com/netlify/gotrue/blob/76da595b29fc8a436d8b881bb73f0fe862960c7e/api/user.go#L104)",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-01-07T11:45:30Z",
            "closedAt": "2022-06-28T08:06:38Z",
            "url": "https://github.com/supabase/gotrue/issues/60",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5FpAFt",
                    "body": "Hey team, \r\n\r\nIt's not that important but got here through reading up on a more recent issue. Is this issue still relevant? Seems like we have a deployed template\r\n\r\n<img width=\"974\" alt=\"CleanShot 2022-06-28 at 16 00 35@2x\" src=\"https://user-images.githubusercontent.com/8011761/176126221-1b339633-e9e3-4e83-a3d1-798517378758.png\">\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-28T08:02:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/60#issuecomment-1168376173"
                },
                {
                    "id": "IC_kwDOEKipmc5FpBD2",
                    "body": "Taking the liberty to close but feel free to reopen if there's more to be done w.r.t templating. \r\n\r\nWill follow up with the sub-issues like #67 when a slot frees up. Have replicated the bug but need to discuss the fix \r\n\r\ncc: @kangmingtay @hf",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-28T08:06:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/60#issuecomment-1168380150"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3ODc2NTcxMzc=",
            "number": 61,
            "title": "Add Linkedin as an External Auth Provider",
            "body": "can follow existing code for google/github etc.",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-01-17T08:19:03Z",
            "closedAt": "2022-01-05T09:25:11Z",
            "url": "https://github.com/supabase/gotrue/issues/61",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42i4XV",
                    "body": "Hi @awalias. Do you mean [Google](https://github.com/supabase/gotrue/blob/master/api/provider/google.go) and [GitHub](https://github.com/supabase/gotrue/blob/master/api/provider/github.go)? If yes, I'd like to take that issue. My plan is that following processes on Google and GitHub for LinkedIn. ",
                    "author": {
                        "login": "gozeloglu"
                    },
                    "createdAt": "2021-09-08T10:23:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-915113429"
                },
                {
                    "id": "IC_kwDOEKipmc42kJps",
                    "body": "@gozeloglu I am also wanting this feature. Happy to work with you if you need help.",
                    "author": {
                        "login": "anindha"
                    },
                    "createdAt": "2021-09-08T17:51:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-915446380"
                },
                {
                    "id": "IC_kwDOEKipmc42kd4L",
                    "body": "> @gozeloglu I am also wanting this feature. Happy to work with you if you need help.\r\n\r\nThanks, @anindha. I'll ping if I need help. ",
                    "author": {
                        "login": "gozeloglu"
                    },
                    "createdAt": "2021-09-08T19:59:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-915529227"
                },
                {
                    "id": "IC_kwDOEKipmc425-YV",
                    "body": "@gozeloglu  I also would like that feature, I can have a look during the code review.",
                    "author": {
                        "login": "FlorianBouron"
                    },
                    "createdAt": "2021-09-16T19:06:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-921167381"
                },
                {
                    "id": "IC_kwDOEKipmc42_uNP",
                    "body": "Hi @FlorianBouron. I don't have enough time to look at this issue right now. I am little bit busy nowadays. You or @anindha can take that issue. ",
                    "author": {
                        "login": "gozeloglu"
                    },
                    "createdAt": "2021-09-20T06:51:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-922673999"
                },
                {
                    "id": "IC_kwDOEKipmc44VOYR",
                    "body": "Hi guys, i know nothing of golang but i started the work here : https://github.com/supabase/gotrue/pull/238\r\nIf someone is willing to help, i will love him forever !",
                    "author": {
                        "login": "riderx"
                    },
                    "createdAt": "2021-10-17T10:27:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-945088017"
                },
                {
                    "id": "IC_kwDOEKipmc44mLLS",
                    "body": "> Hi guys, i know nothing of golang but i started the work here : #238\r\n> If someone is willing to help, i will love him forever !\r\n\r\n@riderx I Could also wrap this into #245 if you wanted? Or you could take a look there as I am adding Spotify and Slack with that PR!",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-22T11:15:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-949531346"
                },
                {
                    "id": "IC_kwDOEKipmc44sOYP",
                    "body": "@HarryET not sure wrap all in one will make things go faster, but yes you can do it :)\r\nI would love to help but i have basically 10 hours of golang bihind me, not sure i will be helpfull ahah ",
                    "author": {
                        "login": "riderx"
                    },
                    "createdAt": "2021-10-25T16:54:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-951117327"
                },
                {
                    "id": "IC_kwDOEKipmc45tCiC",
                    "body": "Hey all, just noting that I'd love this feature as well!",
                    "author": {
                        "login": "sbutler-gh"
                    },
                    "createdAt": "2021-11-13T17:52:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-968108162"
                },
                {
                    "id": "IC_kwDOEKipmc45tFrt",
                    "body": "> Hey all, just noting that I'd love this feature as well!\r\n\r\nThere is a PR open however it looks stagnant. Might include LinkedIn in my latest PR if @riderx has \"abandoned\" his implementation?",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-11-13T19:16:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-968121069"
                },
                {
                    "id": "IC_kwDOEKipmc45tj9t",
                    "body": "> > Hey all, just noting that I'd love this feature as well!\r\n> \r\n> There is a PR open however it looks stagnant. Might include LinkedIn in my latest PR if @riderx has \"abandoned\" his implementation?\r\n\r\nAwesome @HarryET!  Would it be possible to do with [Member Auth/three-legged auth](https://docs.microsoft.com/en-us/linkedin/shared/authentication/authorization-code-flow?tabs=HTTPS) flow?  According to [this documentation](https://docs.microsoft.com/en-us/linkedin/shared/authentication/authentication), the Member Auth is required in order to access various resources/capabilities on behalf of the authenticated user.",
                    "author": {
                        "login": "sbutler-gh"
                    },
                    "createdAt": "2021-11-14T08:17:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-968245101"
                },
                {
                    "id": "IC_kwDOEKipmc45twzx",
                    "body": "@HarryET i need help on the PR, i did the max i can do in golang...\r\nif you are good in golang, please use my Pr as base or Fix it if that easy but i can't on my side\r\n\r\n\r\n",
                    "author": {
                        "login": "riderx"
                    },
                    "createdAt": "2021-11-14T14:08:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-968297713"
                },
                {
                    "id": "IC_kwDOEKipmc45tzLp",
                    "body": "@HarryET thanks a lot \u2764\ufe0f",
                    "author": {
                        "login": "riderx"
                    },
                    "createdAt": "2021-11-14T15:03:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-968307433"
                },
                {
                    "id": "IC_kwDOEKipmc45tz08",
                    "body": "> @HarryET thanks a lot <3\n\nNp, included it in my PR now \ud83d\ude00",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-11-14T15:16:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/61#issuecomment-968310076"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU3OTg5NTcyNzU=",
            "number": 62,
            "title": "Login/Magic link email redirection argument/url",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nRight now, when getting a magic link or signup confirmation email, the link always sends the user to the site URL defined in the settings page. While this is great, I would like to be able to direct users to different parts of the app depending on where they are when login in/signing up.\r\n\r\n## Describe the solution you'd like\r\n\r\nI can think of several ways of doing this.\r\n- right now, I could add a `redirect_to` field in the `auth.users` table, set it when I trigger the magic link/signup email and read it on the other side to send the user to the right place. This means 2 db writes per login/signup (one before, one after to clear the field) and seems a bit heavy and brittle (what if there is an error just after the field is cleared? the link in the email will not work anymore)\r\n- add an extra `redirectTo` parameter in the `auth.signUp` (or magic link) call, which would be passed on to the link in the email, and finally back to the page the user lands on (the site URL), so that the app can process this. so my siteURL could look like `example.com/auth/postLogin?redirectTo=<theNextStep>`\r\n\r\n## Describe alternatives you've considered\r\n\r\nSee above, I think the second option is much nicer and easier to manage (at least from my perspective :wink: )\r\n\r\n## Additional context\r\n\r\nAdd any other context or screenshots about the feature request here.\r\n",
            "author": {
                "login": "laurentS"
            },
            "state": "CLOSED",
            "createdAt": "2021-02-01T13:33:55Z",
            "closedAt": "2021-02-12T09:03:29Z",
            "url": "https://github.com/supabase/gotrue/issues/62",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3MTM4NDYxNg==",
                    "body": "hey @laurentS this is a great suggestion, transferring this to the auth server repo to track it there \ud83d\udc4d ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-02-02T05:56:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-771384616"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NDg2MTE0Mw==",
                    "body": "also adding this requirement:\r\n\r\n![image](https://user-images.githubusercontent.com/458736/107176699-0ff79380-6a0b-11eb-86d5-d2d2d6e7271b.png)\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-02-08T04:42:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-774861143"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NDg2NzgxMQ==",
                    "body": "Related on Netlify's GoTrue:\r\n\r\n- https://github.com/netlify/gotrue/issues/262\r\n- https://github.com/netlify/gotrue/issues/112\r\n- https://github.com/netlify/gotrue/issues/154\r\n\r\nPossible fix: https://github.com/netlify/gotrue/pull/149\r\n\r\n> We attempt to be intelligent and use referrer headers to try and redirect the user back to where they came from.\r\n\r\n[source](https://github.com/netlify/gotrue/issues/154#issuecomment-365771931)\r\n\r\nSo it seems that we can add `referrer` to guess the redirect URL\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-02-08T05:04:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-774867811"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NDg3OTE3MQ==",
                    "body": "we just need to test that it works with our slightly altered flow:\r\n\r\nIn netlify emails work like:\r\n1. email sent with: `<SITE_URL>#token`\r\n2. user clicks link, the application detects the token, sends a request to `/verify?token=` to get `access_token`\r\n\r\nIn supabase:\r\n1. email sent with:  `<ref>.supabase.co/verify?=token` (means the dev can skip step 2 above)\r\n2. `/verify` will redirect the user to `<SITE_URL>#access_token`",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-02-08T05:33:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-774879171"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NDkyMDQ5OA==",
                    "body": "I tested and it does indeed get passed all the way through\r\n\r\nlets add the ability to set the referrer header (\"callback_url\") on the signIn() method.\r\n\r\nwe also need to decide whether to blank out referrer if the user doesn't explicitly set it -> since it can result in unpredictable behavior as per https://github.com/supabase/supabase/issues/640 (or we can document this up, as the desired behavior?)",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-02-08T06:59:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-774920498"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NjY1MjU4NA==",
                    "body": "need to an additional query param to the email links referrer, that will inform the `/verify` endpoint where it needs to redirect to after verification",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-02-10T11:46:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-776652584"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NjY2NTkzNw==",
                    "body": "@awalias I think you can do it one of 2 ways:\r\n- either I call `signUp(...., theFullURLToRedirectTo)` and `/verify` redirects to it directly (or to the configured siteURL if no url passed as argument)\r\n- or I call something like `signUp(..., justAStringArgument)` and then `/verify` redirects to the configured site URL with an arg like `?redirectTo=justAStringArgument` and lets my code handle the logic as needed.\r\n\r\nI was initially thinking of the latter, but I can't really think of any strong argument in favour of either.",
                    "author": {
                        "login": "laurentS"
                    },
                    "createdAt": "2021-02-10T12:13:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-776665937"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NjcxNzU3Nw==",
                    "body": "Thanks for this @laurentS - here is what we are thinking, note that this flow is if \"Email Confirmations\" are turned on and I think you've scoped out a flow without the Email Confirmations\r\n\r\n1. Sign up:\r\n\r\n```js\r\nconst { user } = supabase.auth.signUp({\r\n  email: 'user@email.com`\r\n  redirectTo: 'https://some-custom-url.com/after-signup'\r\n})\r\n```\r\nWith the new `redirectTo` param, this function will set the `referrer` header (since that is what GoTrue prefers)\r\n\r\n2. We send an email\r\n\r\nSince we need to preserve the `redirectTo` param, we send a \"Confirm\" email to the user with the verification\r\n\r\n```\r\nFollow this link to confirm your user:\r\n\r\nhttps://user-gotrue.supabase.co/v1/auth/verify?token=1234qwerty&redirect_to=https://some-custom-url.com/after-signup \r\n```\r\n\r\n3. User confirms\r\n\r\nAfter the user confirms their address then the `/verify` endpoint will use the `redirect_to` param in the URL to send the user to the right location\r\n\r\n\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-02-10T13:49:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-776717577"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NjcyNjA0Nw==",
                    "body": "I was thinking of a flow with email confirmation, but you've done a much better job of explaining it than I did. \r\nIt looks great to me, exactly what I'd want for my use case at least :+1: \r\nWould you add a similar flow for magic link emails? This would allow setting up entirely password-free authentication, I think.",
                    "author": {
                        "login": "laurentS"
                    },
                    "createdAt": "2021-02-10T14:03:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-776726047"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3Njc0NjA1Nw==",
                    "body": "@kiwicopple can you expand on whether or not this will also apply to other login methods such as social?",
                    "author": {
                        "login": "mcsdevv"
                    },
                    "createdAt": "2021-02-10T14:29:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-776746057"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3NjgxNDA4NQ==",
                    "body": "Confirmed - we will add this to all functionality (including password resets, magic links, etc)",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-02-10T16:00:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-776814085"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3ODA3MDI1NA==",
                    "body": ":tada: This issue has been resolved in version 1.4.8 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.4.8)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-02-12T09:04:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-778070254"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc4MDExMTA0MQ==",
                    "body": "Glad to see this fix!  Is this currently usable?\r\n\r\nI tried: `signIn({provider: 'github', redirectTo: 'http://localhost:5555/admin'})` with no luck.",
                    "author": {
                        "login": "FractalHQ"
                    },
                    "createdAt": "2021-02-16T20:53:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-780111041"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgyNTYzMTkxNg==",
                    "body": "I am also having problems setting `redirectTo: http://localhost:3000/#/`\r\n\r\nIt strips away the /#/.\r\n\r\n@kiwicopple is this expected?\r\n\r\nEdit: Added an issue: #90",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-04-23T12:43:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-825631916"
                },
                {
                    "id": "IC_kwDOEKipmc4_LPQX",
                    "body": "\r\nI can see that this broadly works for the Site Url but it does not seem to work for the additional redirect urls. I want to have a variable in the redirect, so it is not possible to provide a exact url\r\n\r\nIn other words, I have success with \r\n\r\n`http://xyz.netflify.app/?invitedBy=abc`\r\nbut not with\r\n`http://localhost:3000/?invitedBy=abc`",
                    "author": {
                        "login": "simonh1000"
                    },
                    "createdAt": "2022-03-06T07:25:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/62#issuecomment-1059910679"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MDU0NDE5MjU=",
            "number": 63,
            "title": "Multiple origin whitelist",
            "body": "currently referrers are restricted to the origin (SITE_URL)\r\n\r\nbut mobile requirements mean that we need to be able to whitelist multiple domains via the supabase dashboard",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-02-10T11:47:37Z",
            "closedAt": "2021-03-09T01:46:53Z",
            "url": "https://github.com/supabase/gotrue/issues/63",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5Mjk4NTU5MA==",
                    "body": "@awalias close the issue please",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-03-08T18:45:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/63#issuecomment-792985590"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MDc4NzE3ODU=",
            "number": 65,
            "title": "Return token links",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nAt the moment an invite handled by sending an email. It would be nice to:\r\n\r\n- return the invite link when the `/invite` route is called\r\n- optionally choose to send emails (eg, send by default, parameter to _not_ send)\r\n\r\n## Additional context\r\n\r\n- Requested by monitoro\r\n- https://github.com/supabase/supabase/discussions/715\r\n",
            "author": {
                "login": "kiwicopple"
            },
            "state": "CLOSED",
            "createdAt": "2021-02-14T02:15:14Z",
            "closedAt": "2021-12-16T02:16:47Z",
            "url": "https://github.com/supabase/gotrue/issues/65",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1NjM4ODkzNw==",
                    "body": "updated to include all token types:\r\n\r\ninvite, magiclink, reset password, confirmation etc.",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-06-08T02:26:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/65#issuecomment-856388937"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MDc4ODE5MzU=",
            "number": 66,
            "title": "Docker image not deployed",
            "body": "# Chore\r\n\r\n## Describe the chore\r\n\r\nIn the latest release (https://github.com/supabase/gotrue/actions/runs/560510377) the docker image didn't deploy:\r\n\r\n![image](https://user-images.githubusercontent.com/10214025/107867922-48d7b280-6eba-11eb-8926-807104373051.png)\r\n\r\n\r\nI tried re-running the GitHub action and it skipped the release.\r\n\r\nI then tried on my local machine and I'm getting \r\n\r\n```\r\nstorage/dial.go:71:36: not enough arguments in call to columns.ForStructWithAlias\r\n\thave (interface {}, string, string)\r\n\twant (interface {}, string, string, string)\r\n```\r\n\r\nhttps://github.com/netlify/gotrue/blob/f023c23d846c98fafc8e227608d6059fb02845df/storage/dial.go#L71\r\n\r\nThis is the same as what I saw on the logs for the GitHub action (before they were cleared)",
            "author": {
                "login": "kiwicopple"
            },
            "state": "CLOSED",
            "createdAt": "2021-02-14T03:48:11Z",
            "closedAt": "2021-03-10T07:16:46Z",
            "url": "https://github.com/supabase/gotrue/issues/66",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5NTAwNjMxNw==",
                    "body": "fixed",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-10T07:16:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/66#issuecomment-795006317"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MDc5MzI3ODU=",
            "number": 67,
            "title": "Auth: Update email account will not update the adress to log in",
            "body": "If you update the email adress with supabase.auth.update, it will not replace the old one but create a \"new_email\" element in your auth.user object. \r\n\r\nTherefore, when you try to log in again with the new updated email, it will not work and you'll have to use the old one.\r\n",
            "author": {
                "login": "Etheonor"
            },
            "state": "CLOSED",
            "createdAt": "2021-02-14T10:20:27Z",
            "closedAt": "2022-09-07T13:20:56Z",
            "url": "https://github.com/supabase/gotrue/issues/67",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3ODc1ODQwMg==",
                    "body": "Thanks for the bug report @Etheonor. I'm going to move this over to the GoTrue repo so we can discuss the expected behaviour.\r\n\r\nPossibly related, since this PR occured after our fork was created: https://github.com/netlify/gotrue/pull/243\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-02-14T10:32:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/67#issuecomment-778758402"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc3OTU2NzYwMA==",
                    "body": "OK I did some testing here and can confirm: https://github.com/supabase/gotrue-js/issues/57\r\n\r\nWe need to decide whether to handle this in the client or the server.\r\n\r\nWe could handle it in the client like this: https://github.com/supabase/gotrue-js/pull/58. I'm not sure why Netlify chose this strategy to start with",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-02-16T04:08:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/67#issuecomment-779567600"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc4NjEwMTkwMA==",
                    "body": "Another thing, when we update this new_email element, if you do a supabase.auth.user() right after, you will not have the updated user. You have to logout/login to have the new_mail properly updated. \r\n\r\nThis is far from ideal\r\n\r\nEdit: after further investigation\r\n\r\nIf you do a auth.refreshSession() and log the result, you'll have the updated user/session. But it seems that the info is not transfered to the context. \r\nEven if I use the onAuthStateChange method, when I perform an email update, this will trigger the User_Updated event, but the session will remain the same...",
                    "author": {
                        "login": "Etheonor"
                    },
                    "createdAt": "2021-02-25T18:15:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/67#issuecomment-786101900"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5Mjc3MTYwMg==",
                    "body": "@kiwicopple @awalias I've looked though code that implements user change. That code is responsible for email change too, but I am not sure that it has been worked ever. Logic that handles email change placed in handler that requires auth token and has PUT method, not GET. Plus, default variable MAILER_URLPATHS_EMAIL_CHANGE is / and GOTRUE doesn't have handler for that url at all=) \r\nMy preposition for fixing that problem is next. In verify handler add new one type - email_change and write corresponding logic for handling changed email. \r\nOr it isn't necessary changes? What do you think about that? ",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-03-08T13:55:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/67#issuecomment-792771602"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5NTAwNzI5NQ==",
                    "body": "related: https://github.com/supabase/gotrue/issues/60",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-10T07:17:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/67#issuecomment-795007295"
                },
                {
                    "id": "IC_kwDOEKipmc5J33kJ",
                    "body": "Hey @Etheonor, i think this issue has been resolved already. You can update your email with `supabase.auth.updateUser` which will return a user object with the `new_email` field. You'll have to verify the email change confirmation link that's sent to your email before you can login with the `new_email`.\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:20:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/67#issuecomment-1239382281"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MDkxODM1MjE=",
            "number": 68,
            "title": "Anonymous Sign-in ",
            "body": "# Feature request\r\n\r\nFor letting users anonymously enter into the application, and then if they want to continue, they can upgrade their account.\r\n\r\n## Describe the solution you'd like\r\n\r\nAbility to sign in without any credentials.\r\n\r\n",
            "author": {
                "login": "happy-san"
            },
            "state": "OPEN",
            "createdAt": "2021-02-16T10:27:22Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/68",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5NDk5ODk4Mg==",
                    "body": "btw this is possible today by choosing a random email address and disabling email confirmations\r\n\r\nyou can then later update the email address (this step I believe is currently only [semi-functional](https://github.com/supabase/gotrue/issues/67))",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-10T07:09:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-794998982"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxNzY1Mjk3NQ==",
                    "body": "I think this is only true for apps which use email/password authentication\u2014I'm not sure it's currently possible to convert an \"anonymous\" email/password user to a OAuth provider user upon sign up?",
                    "author": {
                        "login": "samtgarson"
                    },
                    "createdAt": "2021-04-12T09:33:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-817652975"
                },
                {
                    "id": "IC_kwDOEKipmc44RTnL",
                    "body": "We don't care about converting an anonymous user to a logged-in user, but we still want to be able to support anonymous users. So the workaround works for us.\r\n\r\nBut is it possible to somehow still require email confirmations when users create a real account? Would it be possible to have two user groups or something? Or is the best solution to have two different projects?",
                    "author": {
                        "login": "juliuscc"
                    },
                    "createdAt": "2021-10-15T07:21:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-944060875"
                },
                {
                    "id": "IC_kwDOEKipmc44RUSP",
                    "body": "Our specific use case is that we want to offer a cart (with products) to our users. If they are logged in it is synced between devices, and otherwise it's just persistently available locally.\r\n\r\nWe would have to save the cart in our backend for logged-in users and would prefer to do so for non-logged-in users as well. To not make carts publicly available we would like our users to have a JWT token pair (refresh token and short-term token) so that they can securely access their cart, even if they are not logged in.\r\n\r\nThis will save us from having to store the cart in the frontend for non-logged-in users which would be duplicate work for us.",
                    "author": {
                        "login": "juliuscc"
                    },
                    "createdAt": "2021-10-15T07:26:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-944063631"
                },
                {
                    "id": "IC_kwDOEKipmc444OK2",
                    "body": "> btw this is possible today by choosing a random email address and disabling email confirmations\r\n> \r\n> you can then later update the email address (this step I believe is currently only [semi-functional](https://github.com/supabase/gotrue/issues/67))\r\n\r\nHow does that work @awalias ? if I disable email confirmations and then call this method:\r\nawait supabase.auth.signIn({ email })\r\n\r\nwill the user be signed in at that point? ",
                    "author": {
                        "login": "mattWalters0"
                    },
                    "createdAt": "2021-10-28T22:07:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-954262198"
                },
                {
                    "id": "IC_kwDOEKipmc445UAc",
                    "body": "Yes. I have tried this and that is how it works. A good practice is to randomize the email in a way so that it should never be possible to have.\r\n\r\nIn our case we own the domain `panprices.com` so we could randomize an email that looks like this:\r\n`[random-hash]@anon-users.panprices.com`",
                    "author": {
                        "login": "juliuscc"
                    },
                    "createdAt": "2021-10-29T08:22:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-954548252"
                },
                {
                    "id": "IC_kwDOEKipmc446QKt",
                    "body": "I can't get this to work. This is my function:\r\n\r\n```\r\n  const handleLogin = async () => {\r\n    try {\r\n      loading = true\r\n      const { user, session, error } = await supabase.auth.signIn({email})\r\n      debugger\r\n      if (error) throw error\r\n    } catch (error) {\r\n      alert(error.error_description || error.message)\r\n    } finally {\r\n      loading = false\r\n    }\r\n  }\r\n```\r\n\r\nBut user does not get populated.\r\n\r\nI have turned off the 'Enable email confirmations' setting. ",
                    "author": {
                        "login": "mattWalters0"
                    },
                    "createdAt": "2021-10-29T14:33:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-954794669"
                },
                {
                    "id": "IC_kwDOEKipmc446UqZ",
                    "body": "I think I might have used [`supabase.auth.signUp({email, password})`](https://supabase.io/docs/reference/javascript/auth-signup)\r\n\r\nFrom the docs:\r\n> If \"Email Confirmations\" is turned off, both a user and a session will be returned",
                    "author": {
                        "login": "juliuscc"
                    },
                    "createdAt": "2021-10-29T14:58:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-954813081"
                },
                {
                    "id": "IC_kwDOEKipmc447BPs",
                    "body": "Hmm can't seem to get this to work.  If I use sign**Up** without a password I get an error saying \r\n\"Signup requires a valid password\"\r\n\r\nIf I use the sign**In** method then there's no error but user and session are still null....",
                    "author": {
                        "login": "mattWalters0"
                    },
                    "createdAt": "2021-10-29T19:27:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-954995692"
                },
                {
                    "id": "IC_kwDOEKipmc44_HgO",
                    "body": "Does it work if you do a signup with a random password?",
                    "author": {
                        "login": "juliuscc"
                    },
                    "createdAt": "2021-11-01T09:24:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-956069902"
                },
                {
                    "id": "IC_kwDOEKipmc45FRml",
                    "body": "Thanks @juliuscc!  Yes, that does work!  \r\n\r\nI guess I can go with signing the user up with a random email and password and add the UID of the temporary profile to the user_id column for RLS. \r\n\r\nIf they eventually sign up with their real email then I'll update the user_id with the new profiles UID and delete the temporary profile.",
                    "author": {
                        "login": "mattWalters0"
                    },
                    "createdAt": "2021-11-02T14:21:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-957684133"
                },
                {
                    "id": "IC_kwDOEKipmc45GHmv",
                    "body": "It does add quite a bit of complexity though.  @awalias,@kiwicopple any idea when the anonymous authentication feature might get implemented?  Is there a roadmap somewhere?  Thanks!!",
                    "author": {
                        "login": "mattWalters0"
                    },
                    "createdAt": "2021-11-02T16:17:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-957905327"
                },
                {
                    "id": "IC_kwDOEKipmc4-4Avu",
                    "body": "Is this feature being considered?\r\n\r\nIt is often absolutely necessary for mobile apps.",
                    "author": {
                        "login": "stoico"
                    },
                    "createdAt": "2022-03-01T01:07:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1054870510"
                },
                {
                    "id": "IC_kwDOEKipmc5A0FmG",
                    "body": "We 100% need this. It is the only thing that actually prevents me from using Supabase Auth in my mobile apps.\n\nI have to use Firebase just for this feature, and then I always add a userID column with these informations.\n\nOne workaround could be to use Sign In With Apple on iOS because you can create an account literally with one single screen tap, but it still adds an unnecessary step (read : \"wall\") to the app, which can of course reduce user conversion.",
                    "author": {
                        "login": "dpelletier2017"
                    },
                    "createdAt": "2022-04-04T10:42:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1087396230"
                },
                {
                    "id": "IC_kwDOEKipmc5F7Szl",
                    "body": "> I think this is only true for apps which use email/password authentication\u2014I'm not sure it's currently possible to convert an \"anonymous\" email/password user to a OAuth provider user upon sign up?\n\nI have the same issue, I want to offer anonymous login and then when user decide login with a \"real\" login don't lose the data. I found a way to do that for email/password login, but I not figure out how to do with external providers. Someone found a way to do it?",
                    "author": {
                        "login": "leynier"
                    },
                    "createdAt": "2022-07-03T21:04:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1173171429"
                },
                {
                    "id": "IC_kwDOEKipmc5JrSga",
                    "body": "Any update here? This is the only thing that still makes me use Firebase instead of Supabase in certain projects.",
                    "author": {
                        "login": "Schnodderbalken"
                    },
                    "createdAt": "2022-09-03T09:37:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1236084762"
                },
                {
                    "id": "IC_kwDOEKipmc5PK85y",
                    "body": "This is an important feature. I think it's only reason I won't go for supabase now. Sad to find out it's not available.\r\n\r\nAny plans to implement this soon?",
                    "author": {
                        "login": "georgeselkhoury"
                    },
                    "createdAt": "2022-11-27T15:33:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1328270962"
                },
                {
                    "id": "IC_kwDOEKipmc5QubwU",
                    "body": "please take a look at this",
                    "author": {
                        "login": "ChauCM"
                    },
                    "createdAt": "2022-12-16T07:58:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1354349588"
                },
                {
                    "id": "IC_kwDOEKipmc5RBfEA",
                    "body": "This is one of the most liked issues and we're going to be considering it in the next few weeks. Stay tuned!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-20T13:23:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1359343872"
                },
                {
                    "id": "IC_kwDOEKipmc5RD31O",
                    "body": "+1 to this!\r\nAlso for people like me doing the workaround of disabling email confirmations, this option is now found at https://app.supabase.com/project/_/auth/providers under the \"email\" provider (i.e. no longer in auth settings or project settings as has been linked elsewhere).",
                    "author": {
                        "login": "hoqqanen"
                    },
                    "createdAt": "2022-12-20T18:37:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1359969614"
                },
                {
                    "id": "IC_kwDOEKipmc5SeMxZ",
                    "body": "> This is one of the most liked issues and we're going to be considering it in the next few weeks. Stay tuned!\r\n\r\nHey @hf, I'm excited about this feature, When do you think this feature will deliver?",
                    "author": {
                        "login": "HMarzban"
                    },
                    "createdAt": "2023-01-16T08:19:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1383648345"
                },
                {
                    "id": "IC_kwDOEKipmc5TZqKe",
                    "body": "We've started looking into designing this feature. It's a bit larger than what meets the eye, since anonymous accounts are not very useful on their own. We have to also consider identity linking APIs (which would allow you to convert an anonymous account into one connected with a real identity). We're also considering some work connected to #718. \r\n\r\nWe'll have more information soon on the timeline as we're finalizing our planning next week.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-01-21T11:41:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1399235230"
                },
                {
                    "id": "IC_kwDOEKipmc5U180p",
                    "body": "@hf What is the timeframe on getting this implemented. I was thinking of switching my game to using supabase instead of firebase, but without this I will be unable to. Thanks.",
                    "author": {
                        "login": "mtjaffacode"
                    },
                    "createdAt": "2023-02-09T00:33:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1423428905"
                },
                {
                    "id": "IC_kwDOEKipmc5U3w-Y",
                    "body": "Also very interested in this, pretty much looking for a way for non-logged-in users to have limited access to the platform but then handoff their progress/data to their account once they sign in. Work around forces us to disable email confirmations which is not ideal.",
                    "author": {
                        "login": "CptJJ"
                    },
                    "createdAt": "2023-02-09T09:46:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1423904664"
                },
                {
                    "id": "IC_kwDOEKipmc5VFC89",
                    "body": "I want my real users to have to verify their account by confirming their email-address. \r\nThe anon-users, I am not even interested in converting. I just want a session for the guest, while they are there.\r\n\r\nBut, requiring email-verification makes anon-logins hard. So, I thought I'd be clever and created triggers functions to help out:\r\n\r\n```sql\r\nCREATE FUNCTION auth.set_anon_user_email_confirmed_at()\r\nRETURNS TRIGGER AS $$\r\nBEGIN\r\n  IF NEW.email ILIKE '%@anon-users.<domain.com>' THEN\r\n    UPDATE auth.users SET email_confirmed_at = NOW() WHERE id = NEW.id;\r\n  END IF;\r\n  RETURN NEW;\r\nEND;\r\n$$ LANGUAGE plpgsql SECURITY DEFINER;\r\n\r\nCREATE TRIGGER set_anon_user_email_confirmed_at_trigger\r\nBEFORE INSERT ON auth.users\r\nFOR EACH ROW EXECUTE FUNCTION auth.set_anon_user_email_confirmed_at();\r\n\r\nCREATE OR REPLACE FUNCTION public.handle_new_user()\r\nRETURNS TRIGGER AS $$\r\nBEGIN\r\n  IF NEW.email NOT LIKE '%@anon-users.<domain.com>' THEN\r\n    INSERT INTO public.profiles (id, full_name, avatar_url)\r\n    VALUES (NEW.id, NEW.raw_user_meta_data->>'full_name', NEW.raw_user_meta_data->>'avatar_url');\r\n  END IF;\r\n  RETURN NEW;\r\nEND;\r\n$$ LANGUAGE plpgsql SECURITY DEFINER;\r\n```\r\n\r\nWhere `<domain.com>` was a domain I controlled. So, when a user visited I'd create a random email-address, except the domain is @anon-users.domain.com\r\n\r\nI left the trigger for the handle_new_user as it was, as it just points to the `handle_new_user()` function. \r\n\r\nBut, I cannot get this working. It doesn't seem like the email_confirmed_at column is updating, and I cannot see any logs indicating any errors. Granted, I am no supabase or postgres expert, so maybe someone out there can help shed light on this?",
                    "author": {
                        "login": "Spiralis"
                    },
                    "createdAt": "2023-02-13T05:51:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1427386173"
                },
                {
                    "id": "IC_kwDOEKipmc5VFKqL",
                    "body": "I hope this isn't the issue, still pointing it out. On line 4 it's `ILIKE` instead of `LIKE`.",
                    "author": {
                        "login": "happy-san"
                    },
                    "createdAt": "2023-02-13T06:28:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1427417739"
                },
                {
                    "id": "IC_kwDOEKipmc5VNWNi",
                    "body": "Oh. Maybe that's the problem(!)\r\n\r\nUnfortunately, I will not be able to test this until a couple of days, swamped :(. Please let us know if this works out for you @happy-san.",
                    "author": {
                        "login": "Spiralis"
                    },
                    "createdAt": "2023-02-14T11:20:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1429562210"
                },
                {
                    "id": "IC_kwDOEKipmc5VUw01",
                    "body": "> Oh. Maybe that's the problem(!)\r\n> \r\n> Unfortunately, I will not be able to test this until a couple of days, swamped :(. Please let us know if this works out for you @happy-san.\r\n\r\nOh, probably not, ILIKE is a case insensitive LIKE. I copied from an example somewhere, and ended up getting the ILIKE operator, without noticing :/.\r\n\r\n",
                    "author": {
                        "login": "Spiralis"
                    },
                    "createdAt": "2023-02-15T15:00:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1431506229"
                },
                {
                    "id": "IC_kwDOEKipmc5VWkAo",
                    "body": "For anyone else finding this thread when looking to implement anonymous login in Supabase, I think it's important to mention that the current workarounds mentioned above don't actually work in most scenarios. \r\n\r\nEven when turning off the both settings for confirming emails (`Confirm email` and `Secure email change`), it still sends an email to the user when updating their email address. \r\n\r\nAlso, this method doesn't work with oauth providers. \r\n\r\n@kangmingtay, I saw on #903 that you just confirmed that adding anonymous auth is on the roadmap \ud83d\ude4c Is there a rough ETA for this?",
                    "author": {
                        "login": "benrugg"
                    },
                    "createdAt": "2023-02-15T20:21:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1431978024"
                },
                {
                    "id": "IC_kwDOEKipmc5WWRkl",
                    "body": "Glad to see this is on the radar! Sad to see it's not available yet because this is a hard requirement for us to migrate away from firebase (which we really want to do!). @hf Is there a rough timeframe for anonymous signup + linking?",
                    "author": {
                        "login": "evelant"
                    },
                    "createdAt": "2023-02-28T18:40:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1448679717"
                },
                {
                    "id": "IC_kwDOEKipmc5WWSL5",
                    "body": "> Glad to see this is on the radar! Sad to see it's not available yet because this is a hard requirement for us to migrate away from firebase (which we really want to do!). @hf Is there a rough timeframe for anonymous signup + linking?\n\nRough timeline is this summer, but of course disclaimer this can change!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-02-28T18:42:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1448682233"
                },
                {
                    "id": "IC_kwDOEKipmc5a9WC2",
                    "body": "Please make sure this works with magic link logins as well, not just email/password and oauth logins! (for when we upgrade anonymous accounts to full accounts)",
                    "author": {
                        "login": "user72356"
                    },
                    "createdAt": "2023-04-27T16:54:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1526030518"
                },
                {
                    "id": "IC_kwDOEKipmc5bIOwW",
                    "body": "Best workaround I've figured out so far......\r\nIt needs some hacky web/mail server work.....\r\n\r\nUse Email & Password, but DONT disable the requires verification option....\r\nInstead Register the email along the lines of having the app/game whatever generate a GUID and use that as the email GUID@ADOMAINICONTROL.com\r\n\r\nSetup ADOMAINICONTROL's default email handling to take all non-existing email addressed emails and pipe them into a basic script which you'll have to cobble together but will scrape the verification URL out of the email body and consume it via a CURL statement or some such.\r\n\r\nThis way you can still keep it secure but have an pseudo-anonymous registration.\r\n\r\nOf course the lack of a session might be a problem, next step I guess is to see if I can subscribe to the user table and the new record for the new user and pick up on when the account has been 'auto-verified' in this way. and then auto sign-in bringing across any data or anything that needs to come aross to the fully signed in account/session.",
                    "author": {
                        "login": "HepCatJon"
                    },
                    "createdAt": "2023-04-29T22:13:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1528884246"
                },
                {
                    "id": "IC_kwDOEKipmc5eK3CX",
                    "body": "We've tried different Supabase Auth settings, hacky triggers, and the like, but without control over the GoTrue server code, implementing a custom solution will not be robust. Hopefully, this feature will be available soon!",
                    "author": {
                        "login": "bombillazo"
                    },
                    "createdAt": "2023-06-07T05:11:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1579905175"
                },
                {
                    "id": "IC_kwDOEKipmc5fHaeV",
                    "body": "I still neeed this feature",
                    "author": {
                        "login": "philippnutiu"
                    },
                    "createdAt": "2023-06-17T14:53:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1595778965"
                },
                {
                    "id": "IC_kwDOEKipmc5fuGlA",
                    "body": "any updates?",
                    "author": {
                        "login": "okxiaoliang4"
                    },
                    "createdAt": "2023-06-25T08:02:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1605921088"
                },
                {
                    "id": "IC_kwDOEKipmc5grC6b",
                    "body": "Really looking forward to this feature too! \ud83d\ude4f\ud83c\udffc\ud83d\ude4f\ud83c\udffc\ud83d\ude4f\ud83c\udffc",
                    "author": {
                        "login": "jordivalls"
                    },
                    "createdAt": "2023-07-05T14:37:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1621896859"
                },
                {
                    "id": "IC_kwDOEKipmc5g7zUl",
                    "body": "I was really in need of this feature and ended up needing to implement something myself.\r\n\r\nIm working in Nuxt3 and ended up using the nitro's getSession and store this in a guest_id column: https://github.com/unjs/h3/blob/e359f5f378a380fc8fd37b87d6dbbf1fdd0d78f3/src/utils/session.ts#L67\r\n\r\nonce the user logs I update the user_id of all the rows where the guest_id matches the guest_id.\r\n\r\nSadly cant use RLS but it was pretty painless to handle this on the server with the admin key. \r\n\r\nHope this helps anyone needing to go a custom route.",
                    "author": {
                        "login": "CptJJ"
                    },
                    "createdAt": "2023-07-07T22:19:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1626289445"
                },
                {
                    "id": "IC_kwDOEKipmc5hGZCl",
                    "body": "+1",
                    "author": {
                        "login": "aschenkuttel"
                    },
                    "createdAt": "2023-07-10T14:15:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1629065381"
                },
                {
                    "id": "IC_kwDOEKipmc5hRSxG",
                    "body": "@hf thanks for all the hard work. Do you happen to have any updates on the progress of anonymous auth? would love to use supabase for a project im working on but this would be a deal breaker. ",
                    "author": {
                        "login": "Oskilla69"
                    },
                    "createdAt": "2023-07-12T06:27:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1631923270"
                },
                {
                    "id": "IC_kwDOEKipmc5idrFf",
                    "body": "I wish to use anonymous sign-in.",
                    "author": {
                        "login": "kabueye"
                    },
                    "createdAt": "2023-07-26T14:38:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1651945823"
                },
                {
                    "id": "IC_kwDOEKipmc5iduYe",
                    "body": "> I wish to use anonymous sign-in.\r\n\r\nDon't we all \ud83d\ude05",
                    "author": {
                        "login": "benrugg"
                    },
                    "createdAt": "2023-07-26T14:45:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1651959326"
                },
                {
                    "id": "IC_kwDOEKipmc5iufah",
                    "body": "+1 on this :)",
                    "author": {
                        "login": "nebolax"
                    },
                    "createdAt": "2023-07-28T21:31:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1656354465"
                },
                {
                    "id": "IC_kwDOEKipmc5i5ZWj",
                    "body": "+1",
                    "author": {
                        "login": "Som3RandomDude"
                    },
                    "createdAt": "2023-07-31T21:40:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1659213219"
                },
                {
                    "id": "IC_kwDOEKipmc5i9w7j",
                    "body": "+1",
                    "author": {
                        "login": "csbok"
                    },
                    "createdAt": "2023-08-01T13:42:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1660358371"
                },
                {
                    "id": "IC_kwDOEKipmc5jAZAk",
                    "body": "Any updates on it? I'm really hoping that this feature will come on the [supabase launch week 8](https://supabase.com/launch-week)",
                    "author": {
                        "login": "Dosbodoke"
                    },
                    "createdAt": "2023-08-01T20:30:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1661046820"
                },
                {
                    "id": "IC_kwDOEKipmc5kDSXc",
                    "body": "Rest assured that anonymous sign in and email +password MFA are on the near term roadmap. So stay tuned...\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-15T08:24:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1678583260"
                },
                {
                    "id": "IC_kwDOEKipmc5kGWRg",
                    "body": "This feature is blocking us from using RLS on our app so it's pretty high value to us so just throwing in my thanks to you guys for working on it-hoping it comes out soon!\r\n\r\nOur sloppy work around is to create and manage our own user IDs that are mapped to your Supa Auth's user ID when you upgrade to an account. However, with this system, I don't think there's a coherent way for us to write RLS rules keyed on user ID because we're using our own self managed user IDs.",
                    "author": {
                        "login": "caseycrogers"
                    },
                    "createdAt": "2023-08-15T18:17:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1679385696"
                },
                {
                    "id": "IC_kwDOEKipmc5kbKdP",
                    "body": "Sorry but I'm not going to wait longer for this. I abandon the use of Supabase, I will solve the issue of user data storage differently.",
                    "author": {
                        "login": "widersky"
                    },
                    "createdAt": "2023-08-19T05:56:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1684842319"
                },
                {
                    "id": "IC_kwDOEKipmc5kbNIH",
                    "body": "Like me, in the start I used Firebase. Then I changed to supabase because of relational database. Now I thinking again of changing to firebase. Streamloader and anonym users. How do you manage the accees in fire base ",
                    "author": {
                        "login": "Philnue"
                    },
                    "createdAt": "2023-08-19T06:20:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1684853255"
                },
                {
                    "id": "IC_kwDOEKipmc5nMfw4",
                    "body": "I needed to allow user creation without email or phone, so I had to use fake email addresses when calling \u2018auth.createUser\u2019. This is a hack and I\u2019m worried if I do want to add custom email login in the future I will run into problems.\r\n\r\nIs there some interim fix you can release that will lift this restriction, and make this more future proof?",
                    "author": {
                        "login": "pauldemarco"
                    },
                    "createdAt": "2023-09-22T12:25:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1731329080"
                },
                {
                    "id": "IC_kwDOEKipmc5nhm9k",
                    "body": "I have implemented anonymous signin by creating a user on the frontend with a random email (and password from hash) and saving it in localStorage. Afterwards, when user \"logins\" or \"registers\" all stuff they created are transferred to the new user.\r\n\r\nIt is soo complicated and non obvious, I am hoping this issue would be solved so I can use it in other projects as well.",
                    "author": {
                        "login": "huksley"
                    },
                    "createdAt": "2023-09-27T07:36:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1736863588"
                },
                {
                    "id": "IC_kwDOEKipmc5n0Yp_",
                    "body": "Any news regarding anonymous user accounts?",
                    "author": {
                        "login": "LeonS"
                    },
                    "createdAt": "2023-09-30T15:06:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1741785727"
                },
                {
                    "id": "IC_kwDOEKipmc5n0ceD",
                    "body": "Recently discovered nakama servers which may work as an OS alternative as this doesn\u2019t look like it\u2019s gonna happen any time soon. ",
                    "author": {
                        "login": "jonKaio"
                    },
                    "createdAt": "2023-09-30T16:05:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1741801347"
                },
                {
                    "id": "IC_kwDOEKipmc5oWP6F",
                    "body": "@hf back in February the rough timeline for this was hopefully summer, could you give us an update about the plans for anonymous auth support? We'd love to remove the complexity of connecting firebase auth to supabase but we really need anonymous auth support to do that. ",
                    "author": {
                        "login": "evelant"
                    },
                    "createdAt": "2023-10-06T13:13:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1750662789"
                },
                {
                    "id": "IC_kwDOEKipmc5oaX2y",
                    "body": "Summer is over :)\r\nObviously this is a highly-requested feature. Any updates?",
                    "author": {
                        "login": "philipbel"
                    },
                    "createdAt": "2023-10-07T15:53:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1751743922"
                },
                {
                    "id": "IC_kwDOEKipmc5oaX_4",
                    "body": "I\u2019m not sure we need to comment on this every six hours",
                    "author": {
                        "login": "user72356"
                    },
                    "createdAt": "2023-10-07T15:56:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1751744504"
                },
                {
                    "id": "IC_kwDOEKipmc5oafhM",
                    "body": "> I\u2019m not sure we need to comment on this every six hours\r\n\r\nAny updates?",
                    "author": {
                        "login": "ARMATAV"
                    },
                    "createdAt": "2023-10-07T17:21:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1751775308"
                },
                {
                    "id": "IC_kwDOEKipmc5obH6v",
                    "body": "ANY UPDATES?!?!!?",
                    "author": {
                        "login": "HMarzban"
                    },
                    "createdAt": "2023-10-08T06:54:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1751940783"
                },
                {
                    "id": "IC_kwDOEKipmc5obYpp",
                    "body": "Alguna actualizaci\u00f3n?",
                    "author": {
                        "login": "bombillazo"
                    },
                    "createdAt": "2023-10-08T11:58:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1752009321"
                },
                {
                    "id": "IC_kwDOEKipmc5o6kVU",
                    "body": "Damn... I can't believe I actually spent money before knowing this. Welp, can anyone recommend a better alternative than Supabase that can actually do this? Because I'm definitely not going to put in a bunch of random emails.... And I don't want Firebase or AWS...",
                    "author": {
                        "login": "sansavision"
                    },
                    "createdAt": "2023-10-12T18:40:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1760183636"
                },
                {
                    "id": "IC_kwDOEKipmc5o6uig",
                    "body": "@sansavision hey I am using supabase for auth only and planetscale with prisma. It Kinde auth they are bring soon a sdk for flutter ",
                    "author": {
                        "login": "Philnue"
                    },
                    "createdAt": "2023-10-12T19:11:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1760225440"
                },
                {
                    "id": "IC_kwDOEKipmc5o-GiY",
                    "body": "> Damn... I can't believe I actually spent money before knowing this. Welp, can anyone recommend a better alternative than Supabase that can actually do this? Because I'm definitely not going to put in a bunch of random emails.... And I don't want Firebase or AWS...\r\n\r\nMaybe check out NHost?\r\n\r\nPersonally, I am sticking with Realm. \r\n\r\nI would like to use Supabase, but the lack of anonymous logins, sync/caching on the client, and overall somewhat lacking Swift support prevent me from doing so.",
                    "author": {
                        "login": "philipbel"
                    },
                    "createdAt": "2023-10-13T08:20:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1761110168"
                },
                {
                    "id": "IC_kwDOEKipmc5pcDv9",
                    "body": "+1",
                    "author": {
                        "login": "davaakhuumn"
                    },
                    "createdAt": "2023-10-18T16:54:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1768963069"
                },
                {
                    "id": "IC_kwDOEKipmc5ppWGk",
                    "body": "I didn't realize that Appwrite had this [anonymous login](https://appwrite.io/docs/products/auth/anonymous) feature! I might need to reconsider my thoughts.\r\n",
                    "author": {
                        "login": "HMarzban"
                    },
                    "createdAt": "2023-10-20T10:06:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1772446116"
                },
                {
                    "id": "IC_kwDOEKipmc5pqQhC",
                    "body": "> I didn't realize that Appwrite had this [anonymous login](https://appwrite.io/docs/products/auth/anonymous) feature! I might need to reconsider my thoughts.\r\n\r\nI don't think this feature is sufficient to choose Appwrite over Supabase, currently I'm developing two application each one with one of these techs, and I can affirm that the Documentation, DX and consistency of Supabase is waaay better",
                    "author": {
                        "login": "Dosbodoke"
                    },
                    "createdAt": "2023-10-20T12:51:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1772685378"
                },
                {
                    "id": "IC_kwDOEKipmc5pqS4I",
                    "body": "> > I didn't realize that Appwrite had this [anonymous login](https://appwrite.io/docs/products/auth/anonymous) feature! I might need to reconsider my thoughts.\r\n> \r\n> I don't think this feature is sufficient to choose Appwrite over Supabase, currently I'm developing two application each one with one of these techs, and I can affirm that the Documentation, DX and consistency of Supabase is waaay better\r\n\r\nThanks for sharing, the grass always looks greener on the other side and making the wrong tech bet can get costly in the long run.",
                    "author": {
                        "login": "bombillazo"
                    },
                    "createdAt": "2023-10-20T12:58:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1772695048"
                },
                {
                    "id": "IC_kwDOEKipmc5pqgLw",
                    "body": "And the biggest difference for me is that Supabase uses Relational Database and Appwrite use documents, I think you need to have a really good use case to use document based database, it makes querying so much difficult",
                    "author": {
                        "login": "Dosbodoke"
                    },
                    "createdAt": "2023-10-20T13:32:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1772749552"
                },
                {
                    "id": "IC_kwDOEKipmc5ptCHQ",
                    "body": "Hey everyone, apologies for the delay in response and lack of updates to this thread - I know it can be frustrating for those who want to use Supabase but need to have anonymous logins for auth... \r\n\r\nJust to share some progress updates, we are currently working on ironing out the DX for anonymous logins. Part of this work requires us to scope out the developer experience for linking identities together. As you guys are probably familiar, Supabase Auth currently follows the model of automatically linking user accounts with the same email address. What we need is an API to allow a user to link / unlink an identity easily. \r\n\r\nOnce we figure out what the DX for identity linking looks like, anonymous logins technically comes for free because it is essentially linking an anonymous user to an authenticated identity. We will just need to allow one to signup as an anonymous user which means that they don't need to be verified to be issued a JWT. \r\n\r\nWe've been testing out various identity linking and anonymous login solutions such as firebase / auth0 and noting down the things we like / dislike about them. It would also be great if we can hear from you guys what you like / dislike about the current solutions in this space. \r\n\r\n* What do you find the hardest / most painful thing to do when linking users? \r\n* How do yall resolve the user merge conflicts for your use case? \r\n* Do you prefer a solution where the state of the anonymous user is stored in-memory (via local-storage / cookies) or do you want an anonymous user to be persisted in your database (like what firebase does)? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-20T21:23:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1773412816"
                },
                {
                    "id": "IC_kwDOEKipmc5ptHLQ",
                    "body": "For me, personally:\r\n\r\n> How do yall resolve the user merge conflicts for your use case?\r\n\r\nI would want to avoid this problem where possible. Many providers can provide the underlying user's email - it would be nice to warn users who accidentally sign in with the wrong provider, and prompt them to use the correct one instead. Even better would be to allow some provider combos to automatically link matching accounts (e.g. an existing email/password account signs in with a matching google account)\r\n\r\n> Do you prefer a solution where the state of the anonymous user is stored in-memory (via local-storage / cookies) or do you want an anonymous user to be persisted in your database (like what firebase does)?\r\n\r\nDefinitely in the database. My use-case relies heavily on RPC calls which operate on user data - having to re-implement this in the browser would defeat the purpose.",
                    "author": {
                        "login": "Bickio"
                    },
                    "createdAt": "2023-10-20T21:46:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1773433552"
                },
                {
                    "id": "IC_kwDOEKipmc5ptMkx",
                    "body": "Here's my anonymous user flow:\n1. On fresh install, generate a random \"anon_id\" and save it to local storage\n2. On sign in, check Supa for a mapping from the signed in account to an existing anon id\na. If a mapping exists but it's the same as the current local anon id, continue. Data is read and written keyed on the existing anon id.\nb. If a mapping exists but the remote anon id differs from the local one, overwrite the local anon id with the remote one. Read and write is keyed on the new anon id. User perceives all anonymous data as having been replaced by the account's data.\nc. If no mapping exists, write a mapping to the Supabase table for the just-logged-in user id to the current local anon id. Data is read and written keyed on the existing anon id.\n\n\n> * What do you find the hardest / most painful thing to do when linking users? \n\n1. My code for doing this is complex, subtle and brittle. I've had a lot of nasty bugs coming from it.\n2. All my tables with user data are keyed on anon id instead of user id which is confusing and means they can't be foreign key relations. Also makes it so I can't write user id based rls queries.\n\n> * How do yall resolve the user merge conflicts for your use case? \n\nSee description above. Bscly remote always tramples local. My user data is relatively low stakes, and if a user ever files a support ticket (none have yet) we can overwrite their anon id to user id mapping to recover their lost data.\n\n> * Do you prefer a solution where the state of the anonymous user is stored in-memory (via local-storage / cookies) or do you want an anonymous user to be persisted in your database (like what firebase does)? \n\nSince I'm writing anonymous user data to the remote db keyed on the anon id, a solution where the anonymous user data is stored locally would not be of value to me. I want the anonymous user to be persisted to my DB.\n\n\nHere is the solution I'd like to use.\n1. Supa, upon initializing and finding no existing user session creates a user id with a session marked as anonymous and persits the id to the db's users table. The anonymous session is also persisted locally \n2. Upon initializing and seeing an existing local anonymous session, continues with the anonymous session as the user id\n3. Upon initializing and seeing an expired/invalid non anonymous session, continues with the id of the valid session, but marks the user session as needing to be reaunthenticated\n4. Upon logging in to upgrade from an anonymous session and seeing that the logged in account does not match the anonymous session, resolve via a specified merge conflict strategy: useLocal, useRemote, fail, and/or allow provide a callback where the dev can implement custom onConflict behavior.\nIn rls, I would be able to control whether or not rows can be read/written by expired sessions. For me, the user account system is really just a way for users to sync their data across devices and not lose it when they get a new device. My user data is very not sensitive (mobile game game state/player stats) so I don't care if (and actually really want) expired sessions read and write data associated with their user id. However, I imagine many other Supa devs would want:\n1. Expired sessions to be read only or\n2. For them to have no read write privileges at all\n\nMy above proposal allows for extreme flexibility. The one downside is during rollout existing rls rules could be degraded in security (I want expired and anonymous sessions to send auth data to Supa and thus rules predicated on auth being non null would instead have to predicate on a new property like \"auth.isActive\").\n\nIt'd be quite messy, but to avoid this problem maybe a new auth object would be introduced (authV2?) with support for anonymous/expired sessions and the old auth object would be left unchanged.",
                    "author": {
                        "login": "caseycrogers"
                    },
                    "createdAt": "2023-10-20T22:10:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1773455665"
                },
                {
                    "id": "IC_kwDOEKipmc5pu9wF",
                    "body": "Good to see some progress here - in terms of timeline, is this an EOY kind of deal, or a mid next year thing?  @kangmingtay ",
                    "author": {
                        "login": "ARMATAV"
                    },
                    "createdAt": "2023-10-21T20:55:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1773919237"
                },
                {
                    "id": "IC_kwDOEKipmc5pvroU",
                    "body": "> * Do you prefer a solution where the state of the anonymous user is stored in-memory (via local-storage / cookies) or do you want an anonymous user to be persisted in your database (like what firebase does)?\r\n\r\nDefinitely in database. That's a requirement for our use case. We have a react-native app where users get an anonymous account by default so they don't have to go through a signup flow. We put a prominent signup button \"sign up to keep your progress\" on the main screen for users to link their anonymous account to real credentials. ",
                    "author": {
                        "login": "evelant"
                    },
                    "createdAt": "2023-10-22T14:16:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1774107156"
                },
                {
                    "id": "IC_kwDOEKipmc5pvsvr",
                    "body": "\r\n> * Do you prefer a solution where the state of the anonymous user is stored in-memory (via local-storage / cookies) or do you want an anonymous user to be persisted in your database (like what firebase does)?\r\n\r\nDefinitely in database",
                    "author": {
                        "login": "LeonS"
                    },
                    "createdAt": "2023-10-22T14:35:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1774111723"
                },
                {
                    "id": "IC_kwDOEKipmc5qcu_5",
                    "body": "@kangmingtay thanks for the update. As you can probably tell based on activity in this thread, this is HUGE feature request, particularly for mobile users. I lost a week of time for my mobile app b/c Apple would not let me publish my app unless I allowed users to interact with the app before creating an account. That forced me to create \"fake\" anonymous users. It got even more hacky once I realized you can't \"update\" a user without a confirmation email being sent (you can't opt out of that) so I have to create a new user and then transfer everything over to the new one. Not great.... \r\n\r\nTo answer your questions...\r\n\r\n> What do you find the hardest / most painful thing to do when linking users?\r\n- Ensuring that the anon user (i.e. the logged in \"fake\" account with a random email/pw) is who they are - only they can update their profile, etc. \r\n- Transferring all the objects that are stored for that \"fake\" account (e.g. user profile with settings) to the new profile. It's just some `api.from().update()` with the new ids but it's still a maintenance headache b/c we need to keep that in mind when adding new stored data that is pre required account.\r\n- I do this in a supabase function but that doesn't translate to the user \"logging in\" in the mobile app so I need to `signUp` on the server and then `signIn` after the mobile app to that the JS-client knows who the user is. This should be handled or documented on how to handle. \r\n\r\n\r\n> How do yall resolve the user merge conflicts for your use case?\r\n\r\nSince the anon user is a regular Supabase auth user with \"fake\" credentials, I don't have special handling for this. The RLS policies still apply.\r\n\r\n> Do you prefer a solution where the state of the anonymous user is stored in-memory (via local-storage / cookies) or do you want an anonymous user to be persisted in your database (like what firebase does)?\r\n\r\nDefinitely the database\r\n",
                    "author": {
                        "login": "rcwestlake"
                    },
                    "createdAt": "2023-10-30T19:39:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1785917433"
                },
                {
                    "id": "IC_kwDOEKipmc5q5uid",
                    "body": "Is there any release day for this feature?",
                    "author": {
                        "login": "ZionLG"
                    },
                    "createdAt": "2023-11-04T18:42:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1793517725"
                },
                {
                    "id": "IC_kwDOEKipmc5rJqrA",
                    "body": "I am following this issue too. I need it.",
                    "author": {
                        "login": "SwiftSpotter"
                    },
                    "createdAt": "2023-11-07T03:47:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1797696192"
                },
                {
                    "id": "IC_kwDOEKipmc5ra0iG",
                    "body": "Happy to see progress on this. Following.\r\n\r\n> Do you prefer a solution where the state of the anonymous user is stored in-memory (via local-storage / cookies) or do you want an anonymous user to be persisted in your database (like what firebase does)?\r\n\r\nPersisted in the database 100%",
                    "author": {
                        "login": "GarrettArhSmith"
                    },
                    "createdAt": "2023-11-08T16:02:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1802193030"
                },
                {
                    "id": "IC_kwDOEKipmc5rbaAM",
                    "body": "Following hoping this thread!",
                    "author": {
                        "login": "tmjumper96"
                    },
                    "createdAt": "2023-11-08T17:31:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1802346508"
                },
                {
                    "id": "IC_kwDOEKipmc5rb_Ez",
                    "body": "@demiban FYI this might interest you",
                    "author": {
                        "login": "bombillazo"
                    },
                    "createdAt": "2023-11-08T19:14:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1802498355"
                },
                {
                    "id": "IC_kwDOEKipmc5sVXJl",
                    "body": "Not sure what is more demand than this. :)",
                    "author": {
                        "login": "StevePhuc"
                    },
                    "createdAt": "2023-11-18T15:33:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1817539173"
                },
                {
                    "id": "IC_kwDOEKipmc5sd3un",
                    "body": "So badly need a timeline for this",
                    "author": {
                        "login": "ARMATAV"
                    },
                    "createdAt": "2023-11-20T20:38:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1819769767"
                },
                {
                    "id": "IC_kwDOEKipmc5seTVN",
                    "body": "Please add this! I'll immediately switch from firebase once it's added!",
                    "author": {
                        "login": "sami-azzam"
                    },
                    "createdAt": "2023-11-20T22:08:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1819882829"
                },
                {
                    "id": "IC_kwDOEKipmc5sfb7I",
                    "body": "When please? I feel like going back to firebase just because of this ",
                    "author": {
                        "login": "oliverbytes"
                    },
                    "createdAt": "2023-11-21T03:51:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1820180168"
                },
                {
                    "id": "IC_kwDOEKipmc5ssCmE",
                    "body": "Would love to see this feature. It's blocking our ability to move away from firebase. ",
                    "author": {
                        "login": "Aaron-A"
                    },
                    "createdAt": "2023-11-22T20:48:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1823484292"
                },
                {
                    "id": "IC_kwDOEKipmc5s0sTX",
                    "body": " If we don't plan this anytime soon,  perhaps we could have a document or guide on the best temporary solutions in the meantime. What do you think, @awalias ?",
                    "author": {
                        "login": "StevePhuc"
                    },
                    "createdAt": "2023-11-24T14:28:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/68#issuecomment-1825752279"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MTQyMzc1NTc=",
            "number": 70,
            "title": "Add scopes to Github OAuth",
            "body": "Related to this [discussion](https://github.com/supabase/supabase/discussions/397). \r\n\r\nWe're using Firebase at the moment to sign up new users with 'Sign in with Github'  _and_ read/write to their repos. This is possible because Firebase lets you [add scopes](https://firebase.google.com/docs/auth/web/github-auth) to the OAuth request so the user can grant additional permissions. \r\n\r\nIt looks like the current GoTrue Github scopes are [hard-coded ](https://github.com/supabase/gotrue/blob/4bb48144368a5636abd05c6f0078382968eb10c0/api/provider/github.go#L57) to just be the user's email. \r\n\r\nI've tried doing a second trip to get the additional permissions manually (like [repository.surf's workaround](https://github.com/supabase/repository.surf/blob/10c3a52f3ce004d596f641428f01fd454b35bc00/lib/auth.js#L48)), but I'm hitting a wall. \r\n\r\nI imagine the functionality in `supabase-js` might look like\r\n```\r\nconst { user, session, error } = await supabase.auth.signIn({\r\n  provider: 'github',\r\n  providerOptions: {\r\n    scope: 'repo admin:org'\r\n  }\r\n})\r\n```\r\n\r\nWe're eager to migrate over to Supabase (love it so far), so let me know if there's anything I can do to help with this. ",
            "author": {
                "login": "mateomorris"
            },
            "state": "CLOSED",
            "createdAt": "2021-02-23T08:30:49Z",
            "closedAt": "2021-03-10T01:52:20Z",
            "url": "https://github.com/supabase/gotrue/issues/70",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc4ODU2MDk1Mw==",
                    "body": "hey @mateomorris this is a great idea, we'd def be open to help on this one",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-02T03:57:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/70#issuecomment-788560953"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc4ODk1MzMyNA==",
                    "body": "thanks @awalias, I'm gonna take a whack at this with @Beamanator today",
                    "author": {
                        "login": "mateomorris"
                    },
                    "createdAt": "2021-03-02T14:36:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/70#issuecomment-788953324"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5MjI1MDAyNg==",
                    "body": "Okay @awalias, ready for your review: https://github.com/supabase/gotrue/pull/77\r\n\r\nOnce that's ready, I'll open PR's for `gotrue-js` and docs in `supabase`",
                    "author": {
                        "login": "mateomorris"
                    },
                    "createdAt": "2021-03-07T10:03:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/70#issuecomment-792250026"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5NDczMDEyNQ==",
                    "body": "@mateomorris if you want to open a PR in gotrue-js for https://github.com/supabase/gotrue-js/commit/72324e7fb707ec67266c4f4468a64a316f9b98e4\r\n\r\nthen I will merge it once we have deployed the new backend to prod",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-10T01:55:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/70#issuecomment-794730125"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MjE1ODYwODk=",
            "number": 73,
            "title": "Add Slack as an OAuth Provider",
            "body": "Requested by one user",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-03-03T23:28:40Z",
            "closedAt": "2021-10-28T06:33:47Z",
            "url": "https://github.com/supabase/gotrue/issues/73",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc43USVu",
                    "body": "More users request the integration of new OAuth providers. Could you create a tutorial on how we can add it ourselves? Either as a general 3rd party integration or a tutorial on how to add a single new OAuth provider so that we can contribute back to the repo. ",
                    "author": {
                        "login": "JanRuettinger"
                    },
                    "createdAt": "2021-09-27T16:49:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/73#issuecomment-928064878"
                },
                {
                    "id": "IC_kwDOEKipmc44mK2F",
                    "body": "This is being implemented in #245!",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-22T11:14:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/73#issuecomment-949529989"
                },
                {
                    "id": "IC_kwDOEKipmc441eyZ",
                    "body": ":tada: This issue has been resolved in version 2.1.17 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.1.17)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-10-28T06:34:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/73#issuecomment-953543833"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4MjE5MTYxNjA=",
            "number": 74,
            "title": "Enforce password minimum length",
            "body": "we don't want to be too opinionated on the password requirements, but it may be useful to have a basic requirement of min 6 characters \r\n\r\nthis should only be enforced when the caller is trying to set a password (since oauth rows won't need an associated password)\r\n\r\nsee: https://github.com/supabase/ui/issues/137",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-03-04T08:57:55Z",
            "closedAt": "2021-03-09T01:47:03Z",
            "url": "https://github.com/supabase/gotrue/issues/74",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDc5Mjk4NTM0MA==",
                    "body": "@awalias close the issue please",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-03-08T18:45:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/74#issuecomment-792985340"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NDEwNTg1MjY=",
            "number": 79,
            "title": "Adding a delete user API",
            "body": "Currently there is no Gotrue method for deleting users. \r\n\r\nWe do have a delete user on the dashboard, but Copple says it directly removes the user from `auth.users`. We should support this directly in Gotrue so that others can call this via supabase-js and better for our audit trails, etc. \r\n \r\n[User request](https://twitter.com/No_Guile/status/1374731465649446919?s=20)",
            "author": {
                "login": "inian"
            },
            "state": "CLOSED",
            "createdAt": "2021-03-25T15:41:46Z",
            "closedAt": "2021-06-14T15:05:53Z",
            "url": "https://github.com/supabase/gotrue/issues/79",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgwODcwNzcwOQ==",
                    "body": "@inian actually, Gotrue has method for deleting users. Delete request to /admin/user/{user_id} will do what you need",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-03-27T10:25:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/79#issuecomment-808707709"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgwODcxMjY4OQ==",
                    "body": "@icecream78 but this method doesn't exist on supabase-js",
                    "author": {
                        "login": "NathBabs"
                    },
                    "createdAt": "2021-03-27T11:02:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/79#issuecomment-808712689"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgwODcxOTUyNA==",
                    "body": "I think we have this already:\r\n\r\n[`DELETE /admin/users/{user_id}`](https://github.com/supabase/gotrue/blob/8cb3d71a8c3fcbd9fd0e23586f1203d5861a56a5/api/api.go#L157) but the JWT role needs to be `service_role` or `supabase_admin`\r\n\r\nmight just need adding to gotrue-js as @NathBabs says",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-03-27T11:41:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/79#issuecomment-808719524"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0ODkxMDIwMg==",
                    "body": "@inian @NathBabs it looks like it does exist (as [documented here](https://supabase.io/docs/reference/javascript/delete-user)):\r\n\r\n```javascript\r\nconst { user, error } = await supabase.auth.api.deleteUser(\r\n  '715ed5db-f090-4b8c-a067-640ecee36aa0',\r\n  'YOUR_SERVICE_ROLE_KEY'\r\n)\r\n```",
                    "author": {
                        "login": "nicholaschiang"
                    },
                    "createdAt": "2021-05-26T16:17:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/79#issuecomment-848910202"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2MDc1OTYwNw==",
                    "body": "yes fixed here: https://github.com/supabase/gotrue-js/pull/85",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-06-14T15:05:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/79#issuecomment-860759607"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NDIzOTcyMjc=",
            "number": 80,
            "title": "Internationalization for Authentication Email Templates",
            "body": "# Feature request\r\n\r\n## Internationalization for Authentication Email Templates\r\n\r\nThe Authentication Email Templates should be made available for i18n internationalization so you can send an email in any language based on the current language or locale setting.\r\n\r\nSo instead of having one set of templates, you'd have one set for each language your application supports. I.e. \"en\", \"es\", \"fr\", \"de\".\r\n\r\nTo keep existing compatibility you could leave the existing templates alone as the \"default templates\" but override those with a language-specific version of a language or locale code is set.\r\n## Describe alternatives you've considered\r\n\r\nThe only alternative would be to write a completely separate system, using a third-party email system, to replicate the automated features for password reset, email confirmation, etc.\r\n\r\n## Additional context\r\n\r\nWhile it's relatively easy to create an internationalized login screen with libraries such as Angular's @ngx-translate/core, it's pretty awkward for a Spanish speaking user to sign up on a Spanish page then get an English confirmation email.\r\n",
            "author": {
                "login": "burggraf"
            },
            "state": "OPEN",
            "createdAt": "2021-03-27T02:38:56Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/80",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49zD6e",
                    "body": "any update on this?",
                    "author": {
                        "login": "iabdulin"
                    },
                    "createdAt": "2022-02-11T23:54:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1036795550"
                },
                {
                    "id": "IC_kwDOEKipmc5CxmqW",
                    "body": "Any update??? @supabase !!!",
                    "author": {
                        "login": "wizzymotion"
                    },
                    "createdAt": "2022-05-07T21:51:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1120299670"
                },
                {
                    "id": "IC_kwDOEKipmc5DQeup",
                    "body": "Hey all,\r\n\r\nThanks for your patience. Just to get a sense of what languages people are looking for, do you mind commenting with the corresponding language you'd like to see(or react to corresponding post) ? Some examples below.\r\n\r\nThis would probably fit better in discussions if we have more than five main languages",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-17T04:20:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1128393641"
                },
                {
                    "id": "IC_kwDOEKipmc5DQe27",
                    "body": "es",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-17T04:21:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1128394171"
                },
                {
                    "id": "IC_kwDOEKipmc5DQe7L",
                    "body": "fr",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-17T04:21:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1128394443"
                },
                {
                    "id": "IC_kwDOEKipmc5DQe7z",
                    "body": "de",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-17T04:22:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1128394483"
                },
                {
                    "id": "IC_kwDOEKipmc5DQm72",
                    "body": "pt",
                    "author": {
                        "login": "heikogoll"
                    },
                    "createdAt": "2022-05-17T05:27:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1128427254"
                },
                {
                    "id": "IC_kwDOEKipmc5DehV8",
                    "body": "pl",
                    "author": {
                        "login": "mzalevski"
                    },
                    "createdAt": "2022-05-19T18:47:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1132074364"
                },
                {
                    "id": "IC_kwDOEKipmc5D-Dgt",
                    "body": "Pt-br",
                    "author": {
                        "login": "wizzymotion"
                    },
                    "createdAt": "2022-05-28T23:01:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1140340781"
                },
                {
                    "id": "IC_kwDOEKipmc5D-Dix",
                    "body": "Integrate with i18next !!!",
                    "author": {
                        "login": "wizzymotion"
                    },
                    "createdAt": "2022-05-28T23:02:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1140340913"
                },
                {
                    "id": "IC_kwDOEKipmc5EBcEJ",
                    "body": "nl",
                    "author": {
                        "login": "Vlaai"
                    },
                    "createdAt": "2022-05-30T14:32:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1141227785"
                },
                {
                    "id": "IC_kwDOEKipmc5FXKoL",
                    "body": "Nothing?",
                    "author": {
                        "login": "wizzymotion"
                    },
                    "createdAt": "2022-06-22T22:26:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1163700747"
                },
                {
                    "id": "IC_kwDOEKipmc5GyfMe",
                    "body": "No news on this ?",
                    "author": {
                        "login": "NeoGold-Dev"
                    },
                    "createdAt": "2022-07-18T15:25:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1187640094"
                },
                {
                    "id": "IC_kwDOEKipmc5Gywqo",
                    "body": "Not yet but it's being looked into but there are potentially some dashboard updates which need to be made on the main platform to support changes so progress is not easily visible.\r\n\r\nThanks for your patience so far!\r\n\r\nThe update for now is that you can change your templates to support one single language (e.g. French, German, Spanish) but we're still adding support for multiple languages",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T16:29:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1187711656"
                },
                {
                    "id": "IC_kwDOEKipmc5G3_PE",
                    "body": "Please don't forget to add PT-BR Portuguese.... ( or something like i18n )\r\nMy project is only waiting for this !!!!\r\n",
                    "author": {
                        "login": "wizzymotion"
                    },
                    "createdAt": "2022-07-19T13:52:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1189082052"
                },
                {
                    "id": "IC_kwDOEKipmc5G4MRO",
                    "body": "@wizzymotion will keep pt-br in mind -- if it's okay with you do you mind sharing your use case (e.g. send emails entirely in pt-br  or internationalisation with some users opting for en and others for pt-br and others for another language entirely)? We can see if we can suggest any workarounds in the time being",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-19T14:36:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1189135438"
                },
                {
                    "id": "IC_kwDOEKipmc5G4OjA",
                    "body": "@J0 I already have an alternative up my sleeve.\r\n\r\nhttps://github.com/burggraf/subase-mailer\r\nfrom @burggraf \r\n\r\nWhile I don't finish all the rest of the project, I'm leaving this problem aside, trusting blindly that supabase will be able to serve my application in a GLOBAL way and not just in some languages.\r\n\r\nBut when this becomes my central problem, I will certainly share everything with you.\r\n\r\nThanks.",
                    "author": {
                        "login": "wizzymotion"
                    },
                    "createdAt": "2022-07-19T14:44:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1189144768"
                },
                {
                    "id": "IC_kwDOEKipmc5H2tjv",
                    "body": "cs",
                    "author": {
                        "login": "EskelCz"
                    },
                    "createdAt": "2022-08-04T16:57:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1205524719"
                },
                {
                    "id": "IC_kwDOEKipmc5J3802",
                    "body": "Hey everyone,\r\n\r\nAlthough not very well presented in the Supabase Dashboard, this is somewhat doable today. GoTrue uses [Go's templating language](https://pkg.go.dev/text/template) which you can use to support internationalized templates.\r\n\r\nFor example, if you wish to support 2 languages, for example Spanish and English, this is an example template you can use:\r\n\r\n```text\r\n{{if eq .Data.Language \"es\"}}\r\n<h1>\u00a1Has sido invitado!</h1>\r\n\r\n<p>Ha sido invitado a crear un usuario en {{ .SiteURL }}. Sigue este enlace para aceptar la invitaci\u00f3n...</p>\r\n{{else}}\r\n<h1>You have been invited!</h1>\r\n\r\n<p>You have been invited to create a user on {{ .SiteURL }}. Follow this link to accept the invitation...</p>\r\n{{end}}\r\n```\r\n\r\nThe `.Data.language` would be coming from the user's metadata, which you would need to set manually as the `data` parameter in the [sign up](https://supabase.com/docs/reference/javascript/auth-signup) method for example.\r\n\r\nWe are thinking about adding better support for this in the future, but this will get you far if you really need this. Reach out to support@supabase.com if you need more help with this.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-07T13:38:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1239403830"
                },
                {
                    "id": "IC_kwDOEKipmc5KaN1r",
                    "body": "Hey,\r\n\r\nthanks for the snippet @hf !\r\n<br>\r\nThis didn't work for me:\r\n```html\r\n{{if .Data.Language == \"es\"}}\r\n```\r\nI had to change the template syntax to:\r\n```\r\n{{if eq .Data.language \"es\"}}\r\n```\r\n\r\nThat way, when using the signup-method with\r\n```js\r\n//...\r\ndata: {\r\n  language: 'es'\r\n}\r\n//...\r\n```\r\nit sends the correct email content.\r\n\r\nMaybe I just used your solution incorrectly, but this might help other people regardless ^^.\r\n<br>\r\n_Curiously, with the orignal syntax it would send an entirely different Email containing the line_\r\n>Alternatively, enter the code: `xxxxxx (6-digit number)`\r\n\r\n\r\n",
                    "author": {
                        "login": "MJDeligan"
                    },
                    "createdAt": "2022-09-15T17:15:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1248386411"
                },
                {
                    "id": "IC_kwDOEKipmc5Ljo5G",
                    "body": "i tried the solution that @MJDeligan mentioned above but can't get it to work with supabase-js v2:\r\n\r\n\r\nwhen i send a signInWithOtp like that:\r\n```\r\nsupabase.auth.signInWithOtp({\r\n      email,\r\n      options: {\r\n        emailRedirectTo: `http://localhost:3000/${language}/app/auth`,\r\n        data: { language:\"en\" },\r\n      },\r\n```\r\n\r\nin the supabase magiclink template the gotrue template variable `{{.Data.language}}` is empty.\r\n\r\nare there any docs or references about this out there?\r\n\r\nthanks for any feedback or help!",
                    "author": {
                        "login": "mtin79"
                    },
                    "createdAt": "2022-10-04T22:08:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1267633734"
                },
                {
                    "id": "IC_kwDOEKipmc5LkPvz",
                    "body": "I can confirm that .Data does not seem to be accessible (or rather it is an empty map) in the template when using `auth.signInWithOtp`. It works with the `auth.signup` method (at least with email+password) in v2.0.0-rc.10. \r\n\r\nThe docs for `auth.signInWithOtp` do not include the data property as part of **options**, but it is declared in the typescript type definition.",
                    "author": {
                        "login": "MJDeligan"
                    },
                    "createdAt": "2022-10-05T01:17:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1267792883"
                },
                {
                    "id": "IC_kwDOEKipmc5Lkv-w",
                    "body": "Thanks @MJDeligan for confirming that signInWithOTP in supabase-js v2 is lacking data options to be usable.\nBit disappointed as that was the first thing I tried and making supabase my baas for a new commercial app. Can't see how I could make auth. via magiclink work including i18n email templates using supabase.auth for the time being.",
                    "author": {
                        "login": "mtin79"
                    },
                    "createdAt": "2022-10-05T04:30:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1267924912"
                },
                {
                    "id": "IC_kwDOEKipmc5MxMy6",
                    "body": "I think sending `data` with `signInWithOtp` was maybe just fixed: https://github.com/supabase/gotrue/issues/699#issuecomment-1286449851 ",
                    "author": {
                        "login": "kdoran"
                    },
                    "createdAt": "2022-10-23T01:02:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1287965882"
                },
                {
                    "id": "IC_kwDOEKipmc5M6VEW",
                    "body": "Here's how I solved it\r\n\r\n`confirm.html`\r\n```html\r\n<h1>{{ .Data.welcome }}</h1>\r\n<p>{{ .Data.follow }}</p>\r\n<p><a href='{{ .ConfirmationURL }}'>{{ .Data.link }}</a></p>\r\n```\r\n\r\n`.env`\r\n```\r\nGOTRUE_MAILER_TEMPLATES_CONFIRMATION=https://xxx.tld/mail-templates/confirm.html\r\n```\r\n\r\n`signUp.js`\r\n```js\r\n...\r\nconst {error} = await supabase.auth.signUp(\r\n    {\r\n      email,\r\n      password,\r\n      options: {\r\n        data: t('mail.confirm', {returnObjects: true}),\r\n      },\r\n    },\r\n  );\r\n...\r\n```\r\n\r\nWith this solution I can use the same translation backend the frontend uses.\r\n\r\nI still need to find a solution to translate the `MAILER_SUBJECTS_XXX`.",
                    "author": {
                        "login": "philipp65"
                    },
                    "createdAt": "2022-10-25T10:57:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1290359062"
                },
                {
                    "id": "IC_kwDOEKipmc5So-nl",
                    "body": "I didn't have the opportunity to test the workaround described in this issue, but I'm curious if it is possible to use GoTrue syntax in the subject field for the email too? Has anybody tried that?",
                    "author": {
                        "login": "manuelbieh"
                    },
                    "createdAt": "2023-01-18T04:33:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1386473957"
                },
                {
                    "id": "IC_kwDOEKipmc5YdOih",
                    "body": "To be honest using dynamic values instead of several static templates (really coding antipattern) is the only way to go. \r\nI have to support all 24 EU languages for example. ",
                    "author": {
                        "login": "kvetoslavnovak"
                    },
                    "createdAt": "2023-03-26T10:40:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1484056737"
                },
                {
                    "id": "IC_kwDOEKipmc5YdPsW",
                    "body": "1. how do you localise email subject with the template?\r\n\r\n2. as an alternative... is it possible to disable emailing in cloud Supabase completely so I'd handle all email flows myself in my backend? the rough idea is to handle sign up flows, password resets etc in my own backend with the admin API. that logic would also feed PostMark or MailGun templates with data including URLs. for that to work, I'd need to disable emailing in Supabase (dashboard) completely. not ideal for paid BaaS .",
                    "author": {
                        "login": "dmudro"
                    },
                    "createdAt": "2023-03-26T11:01:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1484061462"
                },
                {
                    "id": "IC_kwDOEKipmc5YdP7I",
                    "body": "> Just to get a sense of what languages people are looking for\r\n\r\n@J0 any language / locale really. as @kvetoslavnovak pointed out just in the EU there 20+ options.",
                    "author": {
                        "login": "dmudro"
                    },
                    "createdAt": "2023-03-26T11:04:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1484062408"
                },
                {
                    "id": "IC_kwDOEKipmc5Z1Y-F",
                    "body": "Hi, I guess I have quite an easy working solution.\r\nWe can use data property when dealing with Supabase Auth metohods and send/store metadata for user. Which in this case means email respective language translations stored and in object (I call it `authEmailsTranslations` in the example).  `[locals.lang]` refers to the user locale (language) you need to get somehow in the front end (usually using language dropdown in a web-page header or through browser API). \r\n\r\nMy endpoint code goes something like this when user signs up (it is possible to update authEmailsTranslations whenever we call Supabase auth method that accept `data`) :\r\n\r\n```js\r\n...\r\nawait supabase.auth.signUp({\r\n  email: body.email,\r\n  password: body.password,\r\n  options: {\r\n    data: authEmailsTranslations[locals.lang]\r\n    }\r\n })\r\n...\r\n```\r\n\r\nThe possible structure of languages translations authEmailsTranslations object is hereunder at the bottom of this comment.\r\n\r\nRespective email templates:\r\n\r\n_Confirm signup_\r\nSubject heading: ` {{ .Data.ConfirmSignup.Title }}`\r\n```html\r\n<h2>{{ .Data.ConfirmSignup.H2 }}</h2>\r\n\r\n<p>{{ .Data.ConfirmSignup.P }}</p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">{{ .Data.ConfirmSignup.Link }}</a></p>\r\n```\r\n\r\n_Invite user_\r\nSubject heading:  `{{ .Data.InviteUser.Title }}`\r\n```html\r\n<h2>{{ .Data.InviteUser.H2 }}</h2>\r\n\r\n<p>{{ .Data.InviteUser.PFirstPart }} {{ .SiteURL }} {{ .Data.InviteUser.PSecondPart }}</p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">{{ .Data.InviteUser.Link }}</a></p>\r\n```\r\n\r\n_Magic Link_\r\nSubject heading:  `{{ .Data.MagicLink.Title }}`\r\n```html\r\n<h2>{{ .Data.MagicLink.H2 }}</h2>\r\n\r\n<p> {{ .Data.MagicLink.P }}</p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">{{ .Data.MagicLink.Link }}</a></p></h2>\r\n```\r\n\r\n_Change Email Address_\r\nSubject heading:  `{{ .Data.ChangeEmailAddress.Title }}`\r\n```html\r\n<h2>{{ .Data.ChangeEmailAddress.H2 }}</h2>\r\n\r\n<p>{{ .Data.ChangeEmailAddress.P }}  {{ .Email }} {{ .Data.ChangeEmailAddress.To }}  {{ .NewEmail }} {{ .Data.ChangeEmailAddress.Last }} </p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">{{ .Data.ChangeEmailAddress.Link }}</a></p>\r\n```\r\n\r\n_Reset Password_\r\nSubject heading:  `{{ .Data.ResetPassword.Title }}`\r\n```html\r\n<h2>{{ .Data.ResetPassword.H2 }}</h2>\r\n\r\n<p>{{ .Data.ResetPassword.P }}</p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">{{ .Data.ResetPassword.Link }}</a></p>\r\n```\r\n\r\nSo I guess Supabase may just update the documentation as internationalization for authentication email templates works quite ok, at least for me.\r\n\r\nEDIT: I am storing  all respective language email templates data when user sings up as user's metadata. You may add a code to update this whenever user sues Supabase auth methods that uses `data` or `data: options: { }` .\r\nWould be nicer if Supabase  let us to have juts one file for all users somewhere and store only language key per user. You might also have an endpoint and form to let user update his/her preferred email language later.\r\n\r\nThere are all translations for EU languages (_authEmailsTranslations object_) if someone is interested or for Supabase team to implement it:\r\n\r\n```js\r\n// authEmailsTranslations object\r\nexport const authEmailsTranslations = {\r\n    bg: {\r\n        ConfirmSignup: {\r\n            Title: \"\u041f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u0442\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\u0442\u0430 \u0441\u0438\",\r\n            H2: \"\u041f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u0442\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\u0442\u0430 \u0441\u0438\",\r\n            P: \"\u0421\u043b\u0435\u0434\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0437\u0438 \u043b\u0438\u043d\u043a, \u0437\u0430 \u0434\u0430 \u043f\u043e\u0442\u0432\u044a\u0440\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0438\u044f \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b:\",\r\n            Link: \"\u041f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u0442\u0435 \u0438\u043c\u0435\u0439\u043b\u0430 \u0441\u0438\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"\u041f\u043e\u043a\u0430\u043d\u0435\u043d \u0441\u0442\u0435\",\r\n            H2: \"\u0411\u044f\u0445\u0442\u0435 \u043f\u043e\u043a\u0430\u043d\u0435\u043d\",\r\n            PFirstPart: \"\u0411\u044f\u0445\u0442\u0435 \u043f\u043e\u043a\u0430\u043d\u0435\u043d \u0434\u0430 \u0441\u044a\u0437\u0434\u0430\u0434\u0435\u0442\u0435 \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b \u0432\",\r\n            PSecondPart: \". \u0421\u043b\u0435\u0434\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0437\u0438 \u043b\u0438\u043d\u043a, \u0437\u0430 \u0434\u0430 \u043f\u0440\u0438\u0435\u043c\u0435\u0442\u0435 \u043f\u043e\u043a\u0430\u043d\u0430\u0442\u0430:\",\r\n            Link: \"\u041f\u0440\u0438\u0435\u043c\u0438 \u043f\u043e\u043a\u0430\u043d\u0430\u0442\u0430\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"\u0412\u0430\u0448\u0438\u044f\u0442 \u043c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u0438 \u043b\u0438\u043d\u043a\",\r\n            H2: \"\u041c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u0438 \u043b\u0438\u043d\u043a\",\r\n            P: \"\u0421\u043b\u0435\u0434\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0437\u0438 \u043b\u0438\u043d\u043a, \u0437\u0430 \u0434\u0430 \u0432\u043b\u0435\u0437\u0435\u0442\u0435 \u0432 \u043f\u0440\u043e\u0444\u0438\u043b\u0430 \u0441\u0438:\",\r\n            Link: \"\u0412\u043b\u0435\u0437\u0442\u0435 \u0432 \u043f\u0440\u043e\u0444\u0438\u043b\u0430 \u0441\u0438\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"\u041f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u0442\u0435 \u043f\u0440\u043e\u043c\u044f\u043d\u0430\u0442\u0430 \u043d\u0430 \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430\u0442\u0430 \u043f\u043e\u0449\u0430\",\r\n            H2: \"\u041f\u043e\u0442\u0432\u044a\u0440\u0434\u0435\u0442\u0435 \u043f\u0440\u043e\u043c\u044f\u043d\u0430\u0442\u0430 \u043d\u0430 \u0438\u043c\u0435\u0439\u043b\u0430\",\r\n            P: \"\u0421\u043b\u0435\u0434\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0437\u0438 \u043b\u0438\u043d\u043a, \u0437\u0430 \u0434\u0430 \u043f\u043e\u0442\u0432\u044a\u0440\u0434\u0438\u0442\u0435 \u0430\u043a\u0442\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u0442\u0430 \u043d\u0430 \u0432\u0430\u0448\u0438\u044f \u0438\u043c\u0435\u0439\u043b \u043e\u0442\",\r\n            To: \"\u0434\u043e\",\r\n            Last: \":\",\r\n            Link: \"\u041f\u0440\u043e\u043c\u0435\u043d\u0435\u0442\u0435 \u0438\u043c\u0435\u0439\u043b\u0430\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"\u041d\u0443\u043b\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u0430\u0442\u0430\",\r\n            H2: \"\u041d\u0443\u043b\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u0430\",\r\n            P: \"\u0421\u043b\u0435\u0434\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0437\u0438 \u043b\u0438\u043d\u043a, \u0437\u0430 \u0434\u0430 \u043d\u0443\u043b\u0438\u0440\u0430\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u0430\u0442\u0430 \u0437\u0430 \u0432\u0430\u0448\u0438\u044f \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b:\",\r\n            Link: \"\u041d\u0443\u043b\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u0430\u0442\u0430\"\r\n        }\r\n    },\r\n    es: {\r\n        ConfirmSignup: {\r\n            Title: \"Confirma tu registro\",\r\n            H2: \"Confirme su registro\",\r\n            P: \"Siga este enlace para confirmar su usuario:\",\r\n            Link: \"Confirme su correo electr\u00f3nico\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Has sido invitado\",\r\n            H2: \"Ha sido invitado\",\r\n            PFirstPart: \"Ha sido invitado a crear un usuario en\",\r\n            PSecondPart: \". Siga este enlace para aceptar la invitaci\u00f3n:\",\r\n            Link: \"Acepte la invitaci\u00f3n\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Tu enlace m\u00e1gico\",\r\n            H2: \"Enlace m\u00e1gico\",\r\n            P: \"Siga este enlace para iniciar sesi\u00f3n:\",\r\n            Link: \"Iniciar sesi\u00f3n\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Confirma el cambio de correo electr\u00f3nico\",\r\n            H2: \"Confirme el cambio de correo electr\u00f3nico\",\r\n            P: \"Siga este enlace para confirmar la actualizaci\u00f3n de su correo electr\u00f3nico de\",\r\n            To: \"a\",\r\n            Last: \":\",\r\n            Link: \"Cambiar correo electr\u00f3nico\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Restablece tu contrase\u00f1a\",\r\n            H2: \"Restablecer contrase\u00f1a\",\r\n            P: \"Siga este enlace para restablecer la contrase\u00f1a de su usuario:\",\r\n            Link: \"Restablecer contrase\u00f1a\"\r\n        }\r\n    },\r\n    cs: {\r\n        ConfirmSignup: {\r\n            Title: \"Potvr\u010fte registraci\",\r\n            H2: \"Potvr\u010fte svou registraci\",\r\n            P: \"N\u00e1sledujte tento odkaz pro potvrzen\u00ed u\u017eivatele:\",\r\n            Link: \"Potvrdit e-mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Byli jste pozv\u00e1ni\",\r\n            H2: \"Byli jste pozv\u00e1ni\",\r\n            PFirstPart: \"Byli jste pozv\u00e1ni k vytvo\u0159en\u00ed u\u017eivatele na\",\r\n            PSecondPart: \". N\u00e1sledujte tento odkaz pro p\u0159ijet\u00ed pozv\u00e1nky:\",\r\n            Link: \"P\u0159ijmout pozv\u00e1n\u00ed\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"V\u00e1\u0161 kouzeln\u00fd odkaz\",\r\n            H2: \"Kouzeln\u00fd odkaz\",\r\n            P: \"N\u00e1sledujte tento odkaz pro p\u0159ihl\u00e1\u0161en\u00ed:\",\r\n            Link: \"P\u0159ihl\u00e1sit se\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Potvr\u010fte zm\u011bnu e-mailov\u00e9 adresy\",\r\n            H2: \"Potvr\u010fte zm\u011bnu e-mailov\u00e9 adresy\",\r\n            P: \"N\u00e1sledujte tento odkaz pro potvrzen\u00ed aktualizace va\u0161\u00ed e-mailov\u00e9 adresy z\",\r\n            To: \"na\",\r\n            Last: \":\",\r\n            Link: \"Zm\u011bnit e-mailovou adresu\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Obnovte sv\u00e9 heslo\",\r\n            H2: \"Obnovit heslo\",\r\n            P: \"N\u00e1sledujte tento odkaz pro obnoven\u00ed hesla pro v\u00e1\u0161 u\u017eivatelsk\u00fd \u00fa\u010det:\",\r\n            Link: \"Obnovit heslo\"\r\n        }\r\n    },\r\n    da: {\r\n        ConfirmSignup: {\r\n            Title: \"Bekr\u00e6ft din tilmelding\",\r\n            H2: \"Bekr\u00e6ft din tilmelding\",\r\n            P: \"F\u00f8lg dette link for at bekr\u00e6fte din bruger:\",\r\n            Link: \"Bekr\u00e6ft din e-mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Du er blevet inviteret\",\r\n            H2: \"Du er blevet inviteret\",\r\n            PFirstPart: \"Du er blevet inviteret til at oprette en bruger p\u00e5\",\r\n            PSecondPart: \". F\u00f8lg dette link for at acceptere invitationen:\",\r\n            Link: \"Accepter invitationen\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Dit magiske link\",\r\n            H2: \"Magisk link\",\r\n            P: \"F\u00f8lg dette link for at logge ind:\",\r\n            Link: \"Log ind\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Bekr\u00e6ft \u00e6ndring af e-mailadresse\",\r\n            H2: \"Bekr\u00e6ft \u00e6ndring af e-mailadresse\",\r\n            P: \"F\u00f8lg dette link for at bekr\u00e6fte opdateringen af din e-mailadresse fra\",\r\n            To: \"til\",\r\n            Last: \":\",\r\n            Link: \"\u00c6ndre e-mailadresse\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Nulstil din adgangskode\",\r\n            H2: \"Nulstil adgangskode<\",\r\n            P: \"F\u00f8lg dette link for at nulstille adgangskoden for din bruger:\",\r\n            Link: \"Nulstil adgangskode\"\r\n        }\r\n    },\r\n    de: {\r\n        ConfirmSignup: {\r\n            Title: \"Best\u00e4tige deine Registrierung\",\r\n            H2: \"Best\u00e4tige deine Anmeldung\",\r\n            P: \"Folge diesem Link, um deinen Benutzer zu best\u00e4tigen:\",\r\n            Link: \"Best\u00e4tige deine E-Mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Du wurdest eingeladen\",\r\n            H2: \"Du wurdest eingeladen\",\r\n            PFirstPart: \"Du wurdest eingeladen, einen Benutzer auf\",\r\n            PSecondPart: \"zu erstellen. Folge diesem Link, um die Einladung anzunehmen:\",\r\n            Link: \"Einladung annehmen\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Dein magischer Link\",\r\n            H2: \"Magic Link\",\r\n            P: \"Folge diesem Link, um dich anzumelden:\",\r\n            Link: \"Anmelden\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Best\u00e4tige \u00c4nderung deiner E-Mail-Adresse\",\r\n            H2: \"Best\u00e4tige \u00c4nderung der E-Mail-Adresse\",\r\n            P: \"Folge diesem Link, um die Aktualisierung deiner E-Mail-Adresse von\",\r\n            To: \"auf\", \r\n            Last: \"zu best\u00e4tigen:\",\r\n            Link: \"E-Mail-Adresse \u00e4ndern\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Setze dein Passwort zur\u00fcck\",\r\n            H2: \"Passwort zur\u00fccksetzen\",\r\n            P: \"Folge diesem Link, um das Passwort f\u00fcr deinen Benutzer zur\u00fcckzusetzen:\",\r\n            Link: \"Passwort zur\u00fccksetzen\"\r\n        }\r\n    },\r\n    et: {\r\n        ConfirmSignup: {\r\n            Title: \"Kinnita registreerumine\",\r\n            H2: \"Kinnita registreerimine\",\r\n            P: \"J\u00e4rgi seda linki, et kinnitada oma kasutaja:\",\r\n            Link: \"Kinnita oma meil\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Olete kutsutud\",\r\n            H2: \"Sind on kutsutud\",\r\n            PFirstPart: \"Sind on kutsutud looma kasutajat saidil\",\r\n            PSecondPart: \". J\u00e4rgi seda linki, et kutsung vastu v\u00f5tta:\",\r\n            Link: \"Kutsung vastu v\u00f5tta\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Sinu maagiline link\",\r\n            H2: \"V\u00f5lulink\",\r\n            P: \"J\u00e4rgi seda linki, et sisse logida:\",\r\n            Link: \"Logi sisse\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Kinnita e-posti aadressi muutus\",\r\n            H2: \"Kinnita e-posti aadressi muutus\",\r\n            P: \"J\u00e4rgi seda linki, et kinnitada oma e-posti aadressi muutust\",\r\n            To: \"lt\", \r\n            Last: \"le:\",\r\n            Link: \"Muuda e-posti aadressi\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"L\u00e4htesta parool\",\r\n            H2: \"L\u00e4htesta parool\",\r\n            P: \"J\u00e4rgi seda linki, et l\u00e4htestada oma kasutaja parool:\",\r\n            Link: \"L\u00e4htesta parool\"\r\n        }\r\n    },\r\n    el: {\r\n        ConfirmSignup: {\r\n            Title: \"\u0395\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03af\u03c9\u03c3\u03b7 \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2\",\r\n            H2: \"\u0395\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03af\u03c9\u03c3\u03b7 \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2\",\r\n            P: \"\u0391\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03ae\u03c3\u03c4\u03b5 \u03b1\u03c5\u03c4\u03cc\u03bd \u03c4\u03bf\u03bd \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03b9\u03ce\u03c3\u03b5\u03c4\u03b5 \u03c4\u03bf\u03bd \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03c3\u03b1\u03c2:\",\r\n            Link: \"\u0395\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03b9\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf email \u03c3\u03b1\u03c2\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"\u0388\u03c7\u03b5\u03c4\u03b5 \u03c0\u03c1\u03bf\u03c3\u03ba\u03bb\u03b7\u03b8\u03b5\u03af\",\r\n            H2: \"\u0388\u03c7\u03b5\u03c4\u03b5 \u03c0\u03c1\u03bf\u03c3\u03ba\u03bb\u03b7\u03b8\u03b5\u03af\",\r\n            PFirstPart: \"\u0388\u03c7\u03b5\u03c4\u03b5 \u03c0\u03c1\u03bf\u03c3\u03ba\u03bb\u03b7\u03b8\u03b5\u03af \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03c3\u03c4\u03bf\",\r\n            PSecondPart: \". \u0391\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03ae\u03c3\u03c4\u03b5 \u03b1\u03c5\u03c4\u03cc\u03bd \u03c4\u03bf\u03bd \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b4\u03b5\u03c7\u03c4\u03b5\u03af\u03c4\u03b5 \u03c4\u03b7\u03bd \u03c0\u03c1\u03cc\u03c3\u03ba\u03bb\u03b7\u03c3\u03b7:\",\r\n            Link: \"\u0391\u03c0\u03bf\u03b4\u03ad\u03c7\u03bf\u03bc\u03b1\u03b9 \u03c4\u03b7\u03bd \u03c0\u03c1\u03cc\u03c3\u03ba\u03bb\u03b7\u03c3\u03b7\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"\u039f \u03bc\u03b1\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c3\u03b1\u03c2 \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf\u03c2\",\r\n            H2: \"\u039c\u03b1\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf\u03c2\",\r\n            P: \"\u0391\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03ae\u03c3\u03c4\u03b5 \u03b1\u03c5\u03c4\u03cc\u03bd \u03c4\u03bf\u03bd \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b4\u03b5\u03b8\u03b5\u03af\u03c4\u03b5:\",\r\n            Link: \"\u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"\u0395\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03af\u03c9\u03c3\u03b7 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7\u03c2 email\",\r\n            H2: \"\u0395\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03af\u03c9\u03c3\u03b7 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2 email\",\r\n            P: \"\u0391\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03ae\u03c3\u03c4\u03b5 \u03b1\u03c5\u03c4\u03cc\u03bd \u03c4\u03bf\u03bd \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03b9\u03ce\u03c3\u03b5\u03c4\u03b5 \u03c4\u03b7\u03bd \u03b5\u03bd\u03b7\u03bc\u03ad\u03c1\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 email \u03c3\u03b1\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf\",\r\n            To: \"\u03c3\u03b5\", \r\n            Last: \":\",\r\n            Link: \"\u0391\u03bb\u03bb\u03b1\u03b3\u03ae email\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"\u0395\u03c0\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2\",\r\n            H2: \"\u0395\u03c0\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2\",\r\n            P: \"\u0391\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03ae\u03c3\u03c4\u03b5 \u03b1\u03c5\u03c4\u03cc\u03bd \u03c4\u03bf\u03bd \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b5\u03c0\u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b5 \u03c4\u03bf\u03bd \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03c3\u03b1\u03c2:\",\r\n            Link: \"\u0395\u03c0\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2\"\r\n        }\r\n    },\r\n    en: {\r\n        ConfirmSignup: {\r\n            Title: \"Confirm Your Signup\",\r\n            H2: \"Confirm your signup\",\r\n            P: \"Follow this link to confirm your user:\",\r\n            Link: \"Confirm your mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"You have been invited\",\r\n            H2: \"You have been invited\",\r\n            PFirstPart: \"You have been invited to create a user on\",\r\n            PSecondPart: \". Follow this link to accept the invite:\",\r\n            Link: \"Accept the invite\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Your Magic Link\",\r\n            H2: \"Magic Link\",\r\n            P: \"Follow this link to login:\",\r\n            Link: \"Log In\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Confirm Email Change\",\r\n            H2: \"Confirm Change of Email\",\r\n            P: \"Follow this link to confirm the update of your email from\",\r\n            To: \"to\",\r\n            Last: \":\",\r\n            Link: \"Change Email\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Reset Your Password\",\r\n            H2: \"Reset Password\",\r\n            P: \"Follow this link to reset the password for your user:\",\r\n            Link: \"Reset Password\"\r\n        }\r\n    },\r\n    fr: {\r\n        ConfirmSignup: {\r\n            Title: \"Confirmez votre inscription\",\r\n            H2: \"Confirmez votre inscription\",\r\n            P: \"Suivez ce lien pour confirmer votre compte :\",\r\n            Link: \"Confirmez votre adresse email\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Vous avez \u00e9t\u00e9 invit\u00e9\",\r\n            H2: \"Vous avez \u00e9t\u00e9 invit\u00e9\",\r\n            PFirstPart: \"Vous avez \u00e9t\u00e9 invit\u00e9 \u00e0 cr\u00e9er un compte sur\",\r\n            PSecondPart: \". Suivez ce lien pour accepter l'invitation :\",\r\n            Link: \"Accepter l'invitation\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Votre lien magique\",\r\n            H2: \"Lien magique\",\r\n            P: \"Suivez ce lien pour vous connecter :\",\r\n            Link: \"Se connecter\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Confirmez le changement d'adresse e-mail\",\r\n            H2: \"Confirmez le changement d'adresse email\",\r\n            P: \"Suivez ce lien pour confirmer la mise \u00e0 jour de votre adresse email de\",\r\n            To: \"\u00e0\", \r\n            Last: \" :\",\r\n            Link: \"Changer l'adresse email\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"R\u00e9initialisez votre mot de passe\",\r\n            H2: \"R\u00e9initialiser le mot de passe\",\r\n            P: \"Suivez ce lien pour r\u00e9initialiser le mot de passe de votre compte :\",\r\n            Link: \"R\u00e9initialiser le mot de passe\"\r\n        }\r\n    },\r\n    ga: {\r\n        ConfirmSignup: {\r\n            Title: \"Deimhnigh do chl\u00e1r\u00fa\",\r\n            H2: \"Cinnteanaigh do chl\u00e1r\u00fa\",\r\n            P: \"Lean an nasc seo chun do chuntas a dhearbh\u00fa:\",\r\n            Link: \"Deimhnigh do sheoladh r\u00edomhphoist\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"T\u00e1 cuireadh curtha chugat\",\r\n            H2: \"Dearadh cuireadh chugat\",\r\n            PFirstPart: \"Cuireadh cuireadh chugat chun cuntas a chruth\u00fa ar\",\r\n            PSecondPart: \". Lean an nasc seo chun an cuireadh a dheimhni\u00fa:\",\r\n            Link: \"Glac leis an gcuireadh\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Do nasc dra\u00edochta\",\r\n            H2: \"Nasc Dra\u00edochta\",\r\n            P: \"Lean an nasc seo chun log\u00e1il isteach:\",\r\n            Link: \"Log\u00e1il isteach\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Deimhnigh an t-athr\u00fa seolta r\u00edomhphoist\",\r\n            H2: \"Cinnteanaigh Athr\u00fa ar Sheoladh R\u00edomhphoist\",\r\n            P: \"Lean an nasc seo chun an nuashonr\u00fa ar do sheoladh r\u00edomhphoist \u00f3\",\r\n            To: \"go\", \r\n            Last: \"a dhearbh\u00fa:\",\r\n            Link: \"Athraigh Seoladh R\u00edomhphoist\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Athshocraigh do phasfhocal\",\r\n            H2: \"Athshocraigh Pasfhocal\",\r\n            P: \"Lean an nasc seo chun an pasfhocal ar do chuntas a athshocr\u00fa:\",\r\n            Link: \"Athshocraigh Pasfhocal\"\r\n        }\r\n    },\r\n    hr: {\r\n        ConfirmSignup: {\r\n            Title: \"Potvrdite svoju prijavu\",\r\n            H2: \"Potvrdite svoju prijavu\",\r\n            P: \"Slijedite ovu vezu da biste potvrdili svoj ra\u010dun:\",\r\n            Link: \"Potvrdite svoju e-po\u0161tu\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Pozvani ste\",\r\n            H2: \"Pozvani ste\",\r\n            PFirstPart: \"Pozvani ste da stvorite ra\u010dun na\",\r\n            PSecondPart: \". Slijedite ovu vezu da biste prihvatili pozivnicu:\",\r\n            Link: \"Prihvati pozivnicu\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Va\u0161 \u010darobni link\",\r\n            H2: \"\u010carobna veza\",\r\n            P: \"Slijedite ovu vezu da biste se prijavili:\",\r\n            Link: \"Prijavi se\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Potvrdite promjenu e-po\u0161te\",\r\n            H2: \"Potvrdite promjenu adrese e-po\u0161te\",\r\n            P: \"Slijedite ovu vezu da biste potvrdili a\u017euriranje va\u0161e e-po\u0161te sa\",\r\n            To: \"na\", \r\n            Last: \":\",\r\n            Link: \"Promijenite e-po\u0161tu\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Poni\u0161tite svoju lozinku\",\r\n            H2: \"Poni\u0161tite lozinku\",\r\n            P: \"Slijedite ovu vezu da biste poni\u0161tili lozinku za svoj ra\u010dun:\",\r\n            Link: \"Poni\u0161ti lozinku\"\r\n        }\r\n    },\r\n    it: {\r\n        ConfirmSignup: {\r\n            Title: \"Conferma la tua iscrizione\",\r\n            H2: \"Conferma la tua registrazione\",\r\n            P: \"Segui questo link per confermare il tuo account:\",\r\n            Link: \"Conferma la tua email\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Sei stato invitato\",\r\n            H2: \"Sei stato invitato\",\r\n            PFirstPart: \"Sei stato invitato a creare un account su\",\r\n            PSecondPart: \". Segui questo link per accettare l'invito:\",\r\n            Link: \"Accetta l'invito\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Il tuo link magico\",\r\n            H2: \"Link magico\",\r\n            P: \"Segui questo link per effettuare il login:\",\r\n            Link: \"Accedi\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Conferma il cambio di indirizzo email\",\r\n            H2: \"Conferma modifica email\",\r\n            P: \"Segui questo link per confermare l'aggiornamento della tua email da\",\r\n            To: \"a\", \r\n            Last: \":\",\r\n            Link: \"Cambia email\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Reimposta la tua password\",\r\n            H2: \"Reimposta la password\",\r\n            P: \"Segui questo link per reimpostare la password del tuo account:\",\r\n            Link: \"Reimposta la password\"\r\n        }\r\n    },\r\n    lv: {\r\n        ConfirmSignup: {\r\n            Title: \"Apstipriniet re\u0123istr\u0101ciju\",\r\n            H2: \"Apstipriniet re\u0123istr\u0101ciju\",\r\n            P: \"Sekojiet \u0161im saitam, lai apstiprin\u0101tu savu lietot\u0101ju:\",\r\n            Link: \"Apstipriniet e-pastu\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Jums ir iel\u016bgums\",\r\n            H2: \"J\u016bs esat aicin\u0101ts\",\r\n            PFirstPart: \"Jums ir piepras\u012bts izveidot lietot\u0101ju vietn\u0113\",\r\n            PSecondPart: \". Sekojiet \u0161im saitam, lai pie\u0146emtu uzaicin\u0101jumu:\",\r\n            Link: \"Pie\u0146emt uzaicin\u0101jumu\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"J\u016bsu burvju saite\",\r\n            H2: \"M\u0101ksl\u012bgais saite\",\r\n            P: \"Sekojiet \u0161im saitam, lai pierakst\u012btos:\",\r\n            Link: \"Pierakst\u012bties\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Apstipriniet e-pasta izmai\u0146as\",\r\n            H2: \"Apstipriniet e-pasta adreses izmai\u0146as\",\r\n            P: \"Sekojiet \u0161im saitam, lai apstiprin\u0101tu savas e-pasta adreses izmai\u0146as no\",\r\n            To: \"uz\", \r\n            Last: \":\",\r\n            Link: \"Main\u012bt e-pastu\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Atiestatiet paroli\",\r\n            H2: \"Atiestatiet paroli\",\r\n            P: \"Sekojiet \u0161im saitam, lai atiestat\u012btu savas lietot\u0101ja paroli:\",\r\n            Link: \"Atiestat\u012bt paroli\"\r\n        }\r\n    },\r\n    lt: {\r\n        ConfirmSignup: {\r\n            Title: \"Patvirtinkite registracij\u0105\",\r\n            H2: \"Patvirtinkite savo registracij\u0105\",\r\n            P: \"Sekite \u0161i\u0105 nuorod\u0105, kad patvirtintum\u0117te savo vartotoj\u0105:\",\r\n            Link: \"Patvirtinti el. lai\u0161k\u0105\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Jums buvo pakviestas\",\r\n            H2: \"Jums buvo pakviestas kurti vartotoj\u0105\",\r\n            PFirstPart: \"Jums buvo pakviestas kurti vartotoj\u0105\",\r\n            PSecondPart: \". Sekite \u0161i\u0105 nuorod\u0105, kad priimtum\u0117te pakvietim\u0105:\",\r\n            Link: \"Priimti pakvietim\u0105\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"J\u016bs\u0173 magi\u0161kas nuorodas\",\r\n            H2: \"Magi\u0161kas prisijungimo nuoroda\",\r\n            P: \"Sekite \u0161i\u0105 nuorod\u0105, kad prisijungtum\u0117te:\",\r\n            Link: \"Prisijungti\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Patvirtinkite el. pa\u0161to pakeitim\u0105\",\r\n            H2: \"Patvirtinkite el. pa\u0161to adreso pakeitim\u0105\",\r\n            P: \"Sekite \u0161i\u0105 nuorod\u0105, kad patvirtintum\u0117te savo el. pa\u0161to adreso pakeitim\u0105 i\u0161\",\r\n            To: \"\u012f\", \r\n            Last: \":\",\r\n            Link: \"Pakeisti el. pa\u0161t\u0105\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Atstatyti slapta\u017eod\u012f\",\r\n            H2: \"Slapta\u017eod\u017eio atk\u016brimas\",\r\n            P: \"Sekite \u0161i\u0105 nuorod\u0105, kad atkurtum\u0117te savo vartotojo slapta\u017eod\u012f:\",\r\n            Link: \"Atkurti slapta\u017eod\u012f\"\r\n        }\r\n    },\r\n    hu: {\r\n        ConfirmSignup: {\r\n            Title: \"Er\u0151s\u00edtse meg a regisztr\u00e1ci\u00f3j\u00e1t\",\r\n            H2: \"Regisztr\u00e1ci\u00f3 meger\u0151s\u00edt\u00e9se\",\r\n            P: \"A felhaszn\u00e1l\u00f3 meger\u0151s\u00edt\u00e9s\u00e9hez k\u00f6vesse ezt a hivatkoz\u00e1st:\",\r\n            Link: \"Er\u0151s\u00edtse meg az e-mail c\u00edm\u00e9t\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Megh\u00edv\u00e1st kapott\",\r\n            H2: \"Elk\u00fcldtek egy megh\u00edv\u00f3t\",\r\n            PFirstPart: \"Megh\u00edvt\u00e1k \u00d6nt, hogy regisztr\u00e1ljon a(z)\",\r\n            PSecondPart: \"oldalra. Az al\u00e1bbi hivatkoz\u00e1sra kattintva elfogadhatja a megh\u00edv\u00e1st:\",\r\n            Link: \"Fogadja el a megh\u00edv\u00e1st\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"A var\u00e1zs linkje\",\r\n            H2: \"M\u00e1gikus hivatkoz\u00e1s\",\r\n            P: \"A bel\u00e9p\u00e9shez k\u00f6vesse ezt a hivatkoz\u00e1st:\",\r\n            Link: \"Bejelentkez\u00e9s\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Er\u0151s\u00edtse meg az e-mail c\u00edm m\u00f3dos\u00edt\u00e1s\u00e1t\",\r\n            H2: \"E-mail c\u00edm v\u00e1ltoztat\u00e1s\u00e1nak meger\u0151s\u00edt\u00e9se\",\r\n            P: \"Az e-mail c\u00edme m\u00f3dos\u00edt\u00e1s\u00e1hoz k\u00f6vesse ezt a hivatkoz\u00e1st:\",\r\n            To: \"-t\u00f3l\", \r\n            Last: \"-ra:\",\r\n            Link: \"V\u00e1ltoztassa meg az e-mail c\u00edm\u00e9t\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"\u00c1ll\u00edtsa vissza a jelsz\u00f3t\",\r\n            H2: \"Jelsz\u00f3 vissza\u00e1ll\u00edt\u00e1sa\",\r\n            P: \"A felhaszn\u00e1l\u00f3 jelszav\u00e1nak vissza\u00e1ll\u00edt\u00e1s\u00e1hoz k\u00f6vesse ezt a hivatkoz\u00e1st:\",\r\n            Link: \"Jelsz\u00f3 vissza\u00e1ll\u00edt\u00e1sa\"\r\n        }\r\n    },\r\n    mt: {\r\n        ConfirmSignup: {\r\n            Title: \"Ikkonferma l-Iskrizzjoni Tiegek\",\r\n            H2: \"Ikkonferma l-Iskrizzjoni tieg\u0127ek\",\r\n            P: \"Segwi dan il-link biex ikkonferma l-utent tieg\u0127ek:\",\r\n            Link: \"Ikkonferma l-email tieg\u0127ek\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Int il-\u0121ejjin imsej\u0127ulik\",\r\n            H2: \"Inti imsej\u0127a g\u0127all-\u0127atra\",\r\n            PFirstPart: \"Inti imsej\u0127a biex tikkrea l-utent fuq\",\r\n            PSecondPart: \". Segwi dan il-link biex ta\u010b\u010betta l-\u0127atra:\",\r\n            Link: \"A\u010b\u010betta l-\u0127atra\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Il-Link tal-Ma\u0121ija Tiegek\",\r\n            H2: \"Link Magic\",\r\n            P: \"Segwi dan il-link biex tid\u0127ol fil-kont tieg\u0127ek:\",\r\n            Link: \"D\u0127ol fil-Kont\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Ikkonferma Tibdil fil-Indirizz Elettroniku\",\r\n            H2: \"Ikkonferma t-Tibdil fil-Email\",\r\n            P: \"Segwi dan il-link biex ikkonferma t-tibdil fil-email tieg\u0127ek minn\",\r\n            To: \"g\u0127al\", \r\n            Last: \":\",\r\n            Link: \"Tibdil Email\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Irrisettja l-Password Tiegek\",\r\n            H2: \"Irrikonoxxi l-Password\",\r\n            P: \"Segwi dan il-link biex irrikonoxxi l-password tal-utent tieg\u0127ek:\",\r\n            Link: \"Irrikonoxxi l-Password\"\r\n        }\r\n    },\r\n    nl: {\r\n        ConfirmSignup: {\r\n            Title: \"Bevestig uw aanmelding\",\r\n            H2: \"Bevestig je aanmelding\",\r\n            P: \"Volg deze link om je gebruiker te bevestigen:\",\r\n            Link: \"Bevestig je e-mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"U bent uitgenodigd\",\r\n            H2: \"Je bent uitgenodigd\",\r\n            PFirstPart: \"Je bent uitgenodigd om een gebruiker aan te maken op\",\r\n            PSecondPart: \". Volg deze link om de uitnodiging te accepteren:\",\r\n            Link: \"Accepteer de uitnodiging\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Uw magische link\",\r\n            H2: \"Magische link\",\r\n            P: \"Volg deze link om in te loggen:\",\r\n            Link: \"Inloggen\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Bevestig de wijziging van e-mailadres\",\r\n            H2: \"Bevestig wijziging e-mailadres\",\r\n            P: \"Volg deze link om de update van je e-mailadres van\",\r\n            To: \"naar\", \r\n            Last: \"te bevestigen:\",\r\n            Link: \"E-mail wijzige\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Reset uw wachtwoord\",\r\n            H2: \"Wachtwoord resetten\",\r\n            P: \"Volg deze link om het wachtwoord voor je gebruiker te resetten:\",\r\n            Link: \"Wachtwoord resetten\"\r\n        }\r\n    },\r\n    pl: {\r\n        ConfirmSignup: {\r\n            Title: \"Potwierd\u017a swoje konto\",\r\n            H2: \"Potwierd\u017a rejestracj\u0119\",\r\n            P: \"Kliknij w link, aby potwierdzi\u0107 swoje konto:\",\r\n            Link: \"Potwierd\u017a e-mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Zosta\u0142e\u015b zaproszony\",\r\n            H2: \"Zosta\u0142e\u015b zaproszony\",\r\n            PFirstPart: \"Zosta\u0142e\u015b zaproszony do utworzenia konta na\",\r\n            PSecondPart: \". Kliknij w link, aby przyj\u0105\u0107 zaproszenie:\",\r\n            Link: \"Przyjmij zaproszenie\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Tw\u00f3j magiczny link\",\r\n            H2: \"Magiczny link<\",\r\n            P: \"Kliknij w link, aby si\u0119 zalogowa\u0107:\",\r\n            Link: \"Zaloguj si\u0119\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Potwierd\u017a zmian\u0119 adresu e-mail\",\r\n            H2: \"Potwierd\u017a zmian\u0119 adresu e-mail\",\r\n            P: \"Kliknij w link, aby potwierdzi\u0107 zmian\u0119 adresu e-mail z\",\r\n            To: \"na\", \r\n            Last: \":\",\r\n            Link: \"Zmie\u0144 adres e-mail\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Zresetuj has\u0142o\",\r\n            H2: \"Zresetuj has\u0142o\",\r\n            P: \"Kliknij w link, aby zresetowa\u0107 has\u0142o dla Twojego konta:\",\r\n            Link: \"Zresetuj has\u0142o\"\r\n        }\r\n    },\r\n    pt: {\r\n        ConfirmSignup: {\r\n            Title: \"Confirme sua inscri\u00e7\u00e3o\",\r\n            H2: \"Confirme seu cadastro\",\r\n            P: \"Siga este link para confirmar o seu usu\u00e1rio:\",\r\n            Link: \"Confirme seu e-mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Voc\u00ea foi convidado\",\r\n            H2: \"Voc\u00ea foi convidado\",\r\n            PFirstPart: \"Voc\u00ea foi convidado para criar um usu\u00e1rio em\",\r\n            PSecondPart: \". Siga este link para aceitar o convite:\",\r\n            Link: \"Aceite o convite\"\r\n\r\n        },\r\n        MagicLink: {\r\n            Title: \"Seu link m\u00e1gico\",\r\n            H2: \"Link M\u00e1gico\",\r\n            P: \"Siga este link para fazer login:\",\r\n            Link: \"Entrar\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Confirme a altera\u00e7\u00e3o do endere\u00e7o de e-mail\",\r\n            H2: \"Confirme a altera\u00e7\u00e3o de e-mail\",\r\n            P: \"Siga este link para confirmar a atualiza\u00e7\u00e3o do seu e-mail de\",\r\n            To: \"para\", \r\n            Last: \":\",\r\n            Link: \"Alterar e-mail\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Redefinir sua senha\",\r\n            H2: \"Redefinir senha\",\r\n            P: \"Siga este link para redefinir a senha do seu usu\u00e1rio:\",\r\n            Link: \"Redefinir senha\"\r\n        }\r\n    },\r\n    ro: {\r\n        ConfirmSignup: {\r\n            Title: \"Confirma\u021bi-v\u0103 \u00eenregistrarea\",\r\n            H2: \"Confirm\u0103-\u021bi \u00eenregistrarea\",\r\n            P: \"Urm\u0103re\u0219te acest link pentru a-\u021bi confirma utilizatorul:\",\r\n            Link: \"Confirm\u0103-\u021bi adresa de e-mail\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"A\u021bi fost invitat\",\r\n            H2: \"Ai fost invitat\",\r\n            PFirstPart: \"Ai fost invitat s\u0103-\u021bi creezi un cont pe\",\r\n            PSecondPart: \". Urm\u0103re\u0219te acest link pentru a accepta invita\u021bia:\",\r\n            Link: \"Accept\u0103 invita\u021bia\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Link-ul dvs. magic\",\r\n            H2: \"Link magic\",\r\n            P: \"Urm\u0103re\u0219te acest link pentru a te autentifica:\",\r\n            Link: \"Conecteaz\u0103-te\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Confirma\u021bi schimbarea adresei de e-mail\",\r\n            H2: \"Confirm\u0103 schimbarea adresei de e-mail\",\r\n            P: \"Urm\u0103re\u0219te acest link pentru a confirma schimbarea adresei tale de e-mail de la\",\r\n            To: \"la\", \r\n            Last: \":\",\r\n            Link: \"Schimb\u0103 adresa de e-e-mail\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Reseta\u021bi parola\",\r\n            H2: \"Resetare parol\u0103\",\r\n            P: \"Urm\u0103re\u0219te acest link pentru a-\u021bi reseta parola:\",\r\n            Link: \"Reseteaz\u0103 parola\"\r\n        }\r\n    },\r\n    sk: {\r\n        ConfirmSignup: {\r\n            Title: \"Potvr\u010fte svoju registr\u00e1ciu\",\r\n            H2: \"Potvrdenie registr\u00e1cie\",\r\n            P: \"Pre potvrdenie svojho pou\u017e\u00edvate\u013ea postupujte pod\u013ea tohto odkazu:\",\r\n            Link: \"Potvr\u010fte svoj email\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Boli ste pozvan\u00ed\",\r\n            H2: \"Boli ste pozvan\u00ed\",\r\n            PFirstPart: \"Boli ste pozvan\u00ed vytvori\u0165 si pou\u017e\u00edvate\u013ea na\",\r\n            PSecondPart: \". Pre prijatie pozv\u00e1nky postupujte pod\u013ea tohto odkazu:\",\r\n            Link: \"Prijmite pozv\u00e1nku\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"V\u00e1\u0161 k\u00fazeln\u00fd odkaz\",\r\n            H2: \"K\u00fazeln\u00fd odkaz\",\r\n            P: \"Pre prihl\u00e1senie sa postupujte pod\u013ea tohto odkazu:\",\r\n            Link: \"Prihl\u00e1si\u0165 sa\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Potvr\u010fte zmenu e-mailovej adresy\",\r\n            H2: \"Potvrdenie zmeny e-mailu\",\r\n            P: \"re potvrdenie aktualiz\u00e1cie va\u0161ej e-mailovej adresy z\",\r\n            To: \"na\", \r\n            Last: \"postupujte pod\u013ea tohto odkazu:\",\r\n            Link: \"Zmeni\u0165 e-mail\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Obnovi\u0165 svoje heslo\",\r\n            H2: \"Obnovenie hesla\",\r\n            P: \"Pre obnovenie hesla pre svojho pou\u017e\u00edvate\u013ea postupujte pod\u013ea tohto odkazu:\",\r\n            Link: \"Obnovi\u0165 heslo\"\r\n        }\r\n    },\r\n    sl: {\r\n        ConfirmSignup: {\r\n            Title: \"Potrdite svojo registracijo\",\r\n            H2: \"Potrdite svojo prijavo\",\r\n            P: \"Sledite tej povezavi, da potrdite svojega uporabnika:\",\r\n            Link: \"Potrdi svoj e-po\u0161tni naslov\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Bili ste povabljeni\",\r\n            H2: \"Bili ste povabljeni\",\r\n            PFirstPart: \"Povabljeni ste, da ustvarite uporabnika na\",\r\n            PSecondPart: \". Sledite tej povezavi, da sprejmete povabilo:\",\r\n            Link: \"Sprejmi povabilo\"\r\n\r\n        },\r\n        MagicLink: {\r\n            Title: \"Va\u0161 \u010darobni povezava\",\r\n            H2: \"\u010carovna povezava\",\r\n            P: \"Sledite tej povezavi, da se prijavite:\",\r\n            Link: \"Prijava\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Potrdite spremembo e-po\u0161tnega naslova\",\r\n            H2: \"Potrdite spremembo e-po\u0161tnega naslova\",\r\n            P: \"Sledite tej povezavi, da potrdite posodobitev va\u0161ega e-po\u0161tnega naslova iz\",\r\n            To: \"v\", \r\n            Last: \":\",\r\n            Link: \"Spremeni e-po\u0161tni naslov\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Ponastavite svoje geslo\",\r\n            H2: \"Ponastavitev gesla\",\r\n            P: \"Sledite tej povezavi, da ponastavite geslo za va\u0161ega uporabnika:\",\r\n            Link: \"Ponastavi geslo\"\r\n        }\r\n    },\r\n    fi: {\r\n        ConfirmSignup: {\r\n            Title: \"Vahvista rekister\u00f6itymisesi\",\r\n            H2: \"Vahvista rekister\u00f6itymisesi\",\r\n            P: \"Seuraa t\u00e4t\u00e4 linkki\u00e4 vahvistaaksesi k\u00e4ytt\u00e4j\u00e4si:\",\r\n            Link: \"Vahvista s\u00e4hk\u00f6posti\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Sinut on kutsuttu\",\r\n            H2: \"Olet kutsuttu k\u00e4ytt\u00e4j\u00e4ksi\",\r\n            PFirstPart: \"Olet kutsuttu luomaan k\u00e4ytt\u00e4j\u00e4\",\r\n            PSecondPart: \"-sivustolle. Seuraa t\u00e4t\u00e4 linkki\u00e4 hyv\u00e4ksy\u00e4ksesi kutsun:\",\r\n            Link: \"Hyv\u00e4ksy kutsu\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Taikalinkkisi\",\r\n            H2: \"Taikalinkki\",\r\n            P: \"Seuraa t\u00e4t\u00e4 linkki\u00e4 kirjautuaksesi sis\u00e4\u00e4n:\",\r\n            Link: \"Kirjaudu sis\u00e4\u00e4n\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Vahvista s\u00e4hk\u00f6postiosoitteen muutos\",\r\n            H2: \"Vahvista s\u00e4hk\u00f6postiosoitteen muutos\",\r\n            P: \"Seuraa t\u00e4t\u00e4 linkki\u00e4 vahvistaaksesi s\u00e4hk\u00f6postiosoitteesi p\u00e4ivitys kohteesta\",\r\n            To: \"kohteeseen\", \r\n            Last: \":\",\r\n            Link: \"Vaihda s\u00e4hk\u00f6posti\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"Palauta salasanasi\",\r\n            H2: \"Nollaa salasana\",\r\n            P: \"Seuraa t\u00e4t\u00e4 linkki\u00e4 nollataksesi k\u00e4ytt\u00e4j\u00e4si salasanan:\",\r\n            Link: \"Nollaa salasana\"\r\n        }\r\n    },\r\n    sv: {\r\n        ConfirmSignup: {\r\n            Title: \"Bekr\u00e4fta din registrering\",\r\n            H2: \"Bekr\u00e4fta din registrering\",\r\n            P: \"F\u00f6lj l\u00e4nken f\u00f6r att bekr\u00e4fta ditt konto:\",\r\n            Link: \"Bekr\u00e4fta din e-postadress\"\r\n        },\r\n        InviteUser: {\r\n            Title: \"Du har blivit inbjuden\",\r\n            H2: \"Du har blivit inbjuden\",\r\n            PFirstPart: \"Du har blivit inbjuden att skapa ett konto p\u00e5\",\r\n            PSecondPart: \". F\u00f6lj l\u00e4nken f\u00f6r att acceptera inbjudan:\",\r\n            Link: \"Acceptera inbjudan\"\r\n        },\r\n        MagicLink: {\r\n            Title: \"Din magiska l\u00e4nk\",\r\n            H2: \"Magisk l\u00e4nk\",\r\n            P: \"F\u00f6lj l\u00e4nken f\u00f6r att logga in:\",\r\n            Link: \"Logga in\"\r\n        },\r\n        ChangeEmailAddress: {\r\n            Title: \"Bekr\u00e4fta e-postadress\u00e4ndring\",\r\n            H2: \"Bekr\u00e4fta \u00e4ndring av e-postadress\",\r\n            P: \"F\u00f6lj l\u00e4nken f\u00f6r att bekr\u00e4fta uppdatering av din e-postadress fr\u00e5n\",\r\n            To: \"till\", \r\n            Last: \":\",\r\n            Link: \"\u00c4ndra e-postadress\"\r\n        },\r\n        ResetPassword: {\r\n            Title: \"\u00c5terst\u00e4ll ditt l\u00f6senord\",\r\n            H2: \"\u00c5terst\u00e4ll l\u00f6senordet\",\r\n            P: \"F\u00f6lj l\u00e4nken f\u00f6r att \u00e5terst\u00e4lla l\u00f6senordet f\u00f6r ditt konto:\",\r\n            Link: \"\u00c5terst\u00e4ll l\u00f6senord\"\r\n        }\r\n    }   \r\n}\r\n```",
                    "author": {
                        "login": "kvetoslavnovak"
                    },
                    "createdAt": "2023-04-13T15:25:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1507168133"
                },
                {
                    "id": "IC_kwDOEKipmc5chavU",
                    "body": "Hi,\r\n\r\nThe examples provided helped a lot to improve my multilingual registration email. I tested passing the translations from the client as @kvetoslavnovak described and using conditionals in the Supabase email templates. For now, I settled on a hybrid approach of passing the translated subject along with a \u2018language' param via the options data from the client.\r\n\r\n1) I struggled at the start as .Data was always empty. Others mentioned this as well. Another thread says data is only sent the first time. \r\n#699 \r\n     'One caveat though: If the user has already signed up, you can't use the data param to update the user_metadata field.\u2019\r\n\r\nIn my testing, this is also true even if the user just requested to sign up. I am not sure if this is a feature or a bug but if there is not a good reason for this I think the data should be updated every time. I kept having to delete the newly registered user to continue testing.\r\n\r\n2)  My solution uses a 'hard coded' plain English subject \u2018Confirm Signup to _app_\u2019 with the translation afterwards. If a TranslatedSubject is not received, only the English will be displayed.  See below for an example. I also added a check for no language in the email message body to prevent empty emails\u2026 (Not sure if there is a !eq function\u2026)\r\n\r\n3) I am not sure why some examples for the client API use 'data\u2019 and some, including the examples on the Supabase website, use options: {data}.\r\nSome better documentation about this would be welcome. As an aside it would also help to point out that the data \u2018keys\u2019 are case-sensitive.\r\n\r\nI also tested including both data and redirect in options. After some trial and error, I got it working as shown below. (I think It helps the onboarding experience to forward new users to a dedicated page.)\r\n\r\n4) In the 'Message variables' section on the email Templates page, there is no mention of the '.Data' option. It would be helpful to add an example and explanation there.\r\n\r\nClient-side example:\r\n(Exclude English as assumed to be the default)\r\n\r\n```\r\nconst authEmailsTranslations = {\r\n    en: {\r\n    },\r\n    es: {\r\n      ConfirmSignup: {\r\n        TranslatedSubject: 'Confirma tu registro'\r\n      },\r\n      InviteUser: {\r\n        TranslatedSubject: 'Has sido invitado'\r\n      },\r\n      MagicLink: {\r\n        TranslatedSubject: 'Tu enlace m\u00e1gico'\r\n      },\r\n      ChangeEmailAddress: {\r\n        TranslatedSubject: 'Confirma el cambio de correo electr\u00f3nico'\r\n      },\r\n      ResetPassword: {\r\n        TranslatedSubject: 'Confirma el cambio de correo electr\u00f3nico'\r\n      }\r\n    },\r\n    fr: {\r\n      ConfirmSignup: {\r\n        TranslatedSubject: 'Confirmez votre inscription'\r\n      },\r\n      InviteUser: {\r\n        TranslatedSubject: 'Vous avez \u00e9t\u00e9 invit\u00e9'\r\n      },\r\n      MagicLink: {\r\n        TranslatedSubject: 'Votre lien magique'\r\n      },\r\n      ChangeEmailAddress: {\r\n        TranslatedSubject: 'Confirmez le changement d'adresse e-mail'\r\n      },\r\n      ResetPassword: {\r\n        TranslatedSubject: 'R\u00e9initialisez votre mot de passe'\r\n      }\r\n    },\r\n    ja: {\r\n      ConfirmSignup: {\r\n        TranslatedSubject: '\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\u3092\u78ba\u8a8d'\r\n      },\r\n      InviteUser: {\r\n        TranslatedSubject: '\u62db\u5f85\u3055\u308c\u307e\u3057\u305f'\r\n      },\r\n      MagicLink: {\r\n        TranslatedSubject: '\u30de\u30b8\u30c3\u30af\u30ea\u30f3\u30af'\r\n      },\r\n      ChangeEmailAddress: {\r\n        TranslatedSubject: '\u96fb\u5b50\u30e1\u30fc\u30eb\u5909\u66f4\u306e\u78ba'\r\n      },\r\n      ResetPassword: {\r\n        TranslatedSubject: '\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30ea\u30bb\u30c3\u30c8'\r\n      }\r\n    }\r\n  } \r\n\r\n  /* pass email address, pwd and lang as 2 char locale, i.e. 'es' */\r\n  const register = async (email, password, lang) => {\r\n    const langMetaData = authEmailsTranslations[lang]\r\n\r\n    langMetaData.language = lang // add this to use for conditionals on Supabase\r\n    // Make sure a matching url is added in the Supabase dashboard\r\n    // in Authentication/URL Configuration/Redirect URLs\r\n    // Note that window.location is only available for Client-side apps\r\n\r\n    const redirect = `${window.location.origin}/registered`\r\n\r\n    const { user, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: {\r\n        data: langMetaData,\r\n\temailRedirectTo: redirect\r\n      }\r\n    })\r\n}\r\n```\r\n \r\nIn Supabase dashboard:\r\n\r\n![image](https://github.com/supabase/gotrue/assets/91238962/9fd433c0-132b-48ef-80ad-6e158a2fc7f8)\r\n",
                    "author": {
                        "login": "nodescan-admin"
                    },
                    "createdAt": "2023-05-18T00:58:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1552264148"
                },
                {
                    "id": "IC_kwDOEKipmc5miBWj",
                    "body": "Here's an approach that can work for this as well: \r\n\r\nhttps://blog.mansueli.com/creating-customized-i18n-ready-authentication-emails-using-supabase-edge-functions-postgresql-and-resend",
                    "author": {
                        "login": "mansueli"
                    },
                    "createdAt": "2023-09-14T21:45:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1720194467"
                },
                {
                    "id": "IC_kwDOEKipmc5qtw76",
                    "body": "Thanks for all the ideas mentioned on how to solve (or rather work around) this, but I would be happy if supabase allowed you to set your own way to compose or send an email (and send it as well).\r\n\r\nWe have an api in our backend that can send fully localized emails, including subject lines. We have a dedicated git repository for this and we version the templates. Another advantage is that we are then able to see when what email was sent to a user and simply help them with customer care if necessary.\r\n\r\nSo I would like to basically be able to specify \"api url for email delivery\" and generate a \"webook to confirm sending\". Supabase would send the api request to my api, expecting a response about the send on my side (async).\r\n\r\n**Please consider this option for more advanced use.** At the same time, this would open Supabase up to more 3rd-party providers, plugins that could offer their services.",
                    "author": {
                        "login": "landsman"
                    },
                    "createdAt": "2023-11-02T09:37:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1790381818"
                },
                {
                    "id": "IC_kwDOEKipmc5qt2kS",
                    "body": "> Thanks for all the ideas mentioned on how to solve (or rather work around) this, but I would be happy if supabase allowed you to set your own way to compose or send an email (and send it as well).\r\n> \r\n> We have an api in our backend that can send fully localized emails, including subject lines. We have a dedicated git repository for this and we version the templates. Another advantage is that we are then able to see when what email was sent to a user and simply help them with customer care if necessary.\r\n> \r\n> So I would like to basically be able to specify \"api url for email delivery\" and generate a \"webook to confirm sending\". Supabase would send the api request to my api, expecting a response about the send on my side (async).\r\n> \r\n> **Please consider this option for more advanced use.** At the same time, this would open Supabase up to more 3rd-party providers, plugins that could offer their services.\r\n\r\nYup, we're working on everything mentioned here. It will take a while though.\r\n\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-11-02T09:52:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/80#issuecomment-1790404882"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NDI1NTQ4Mzc=",
            "number": 81,
            "title": "Create User Account with Multiple Providers",
            "body": "# Feature request: Allow a user to log in with multiple providers\r\n\r\n## Requirement\r\n\r\nA user should be able to log in with more than one provider.  For example:\r\n1.  A user authenticates with Facebook and creates an account in my app.\r\n2. The user decides to quit Facebook.\r\n3. The user wants to log back into my app at a later time, but cannot.  The user should be at minimum be able to \"sign in with email\" and enter their email address and a password, then verify their email, and get access to their user account.\r\n\r\nAnother example:\r\n1. User creates an account in my app with Google.\r\n2. User comes back a month later and can't remember which provider they used, so they try to log in with Facebook.  They can't -- because they already have a Google-provider account.\r\n3. The user should be able to authenticate with Facebook now as well, assuming they use the same email address with both providers.\r\n\r\nFirebase handles this, albeit not very elegantly.  This is an opportunity to make a much more flexible authentication system.\r\n\r\n## Describe alternatives you've considered\r\n\r\nAt this time, it appears that you'd need to create a separate user account, which would not give the user access to data they have previously created inside my app.\r\n\r\n## Additional thoughts\r\n\r\nIf a change to the core user object isn't possible here, how about a table of user aliases at least, where a user can log in using a provider (even if it's not their \"first\" or \"main\" provider) then once logged in the credentials are set to that of the main account.  Not super clean, but might be quicker to implement.\r\n",
            "author": {
                "login": "burggraf"
            },
            "state": "CLOSED",
            "createdAt": "2021-03-27T16:47:21Z",
            "closedAt": "2021-07-02T07:56:42Z",
            "url": "https://github.com/supabase/gotrue/issues/81",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTc5MzAzMg==",
                    "body": "I would find this useful as well.",
                    "author": {
                        "login": "Nick-Mazuk"
                    },
                    "createdAt": "2021-06-30T23:33:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/81#issuecomment-871793032"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTg0MzIyNQ==",
                    "body": "@Nick-Mazuk It appears that this is now working.  I set up an app with multiple providers and I can log in using any of them and it appears to access my same account as long as my email address is the same for each provider.  Works great!",
                    "author": {
                        "login": "burggraf"
                    },
                    "createdAt": "2021-07-01T01:39:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/81#issuecomment-871843225"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NDkxNzQ2MTY=",
            "number": 83,
            "title": "Persist additional scopes provider_token",
            "body": "we recently added the ability to request additional scopes and return the provider_token,\r\n\r\nwe need to figure out the best way to persist this token so it can be used again later, perhaps in the app or user_metadata is a good place\r\n\r\nalternatively add it in the auth schema as a table or column on auth.users",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-02T11:52:19Z",
            "closedAt": "2022-09-07T13:28:35Z",
            "url": "https://github.com/supabase/gotrue/issues/83",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxMzM0MjQ1Mw==",
                    "body": "Given that `refreshSession()`refreshes the `access_token` but removes`provider_token` from the session w/out a way to refetch it without the user authenticating, persisting the `provider_token` takes on more importance if one builds an app that relies on the token to be there when interacting with that third party.\r\n\r\nIn my case integrating with GitHub I know that I want:\r\n\r\n* the user's GitHub `username` upon authenticating right away on `user_meta_data` (in addition to the current `full_name` and `avatar_url`\r\n* The `provider_token` (and maybe `provider_refresh_token` available\r\n\r\nGiven that `refreshSession` removes it from the access_token/JWT, these `provider_tokens` could be stored on the JWT in app_metadata or the user table -- or preferably both.\r\n\r\nOne question I had about storing the `provider_token` on the JWT is:\r\n\r\nIf the provider token is on the JWT in app or user metadata anyone can decode the JWT but just not verify it -- might that let the token out in the wild? And then anyone with that provider token can act as the user?\r\n\r\nThis is similar to the reason Auth0 doesn't set email values in the user data on the JWT unless you use a rule or hook to explicitly set it. That's more personal info that it doesn't want to set on the JWT for just anyone to see by decoding it.\r\n\r\nTherefore, perhaps persisting the `provider_token` on the auth schema user would be a better option?",
                    "author": {
                        "login": "dthyresson"
                    },
                    "createdAt": "2021-04-05T11:10:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-813342453"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxNDc5NDg4MQ==",
                    "body": "I have been struggling so much with this provider token. Quite easily I managed to use Azure accounts to log in, but from there I'm stuck with actually getting/using an access token to access the Azure API. Since a recent update I do get a `provider_token` back, but the value of it doesn't seem to be an access token (while it does for for instance Github). Right now the easiest approach is completely ignoring supabase's auth and doing the token management yourself, which unfortunately defeats the purpose of using supabase.",
                    "author": {
                        "login": "gl3nn"
                    },
                    "createdAt": "2021-04-07T10:19:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-814794881"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTI1MzE3NQ==",
                    "body": "Has there been any decision made how best to support the use case of:\r\n\r\n> retrieving the user's GitHub username upon authenticating right away on user_meta_data (in addition to the current full_name and avatar_url)\r\n\r\nThe scenario I have is that I would like to link a set of GitHub profile info that I have (includes their GitHib username) to their Supabase user account. If on auth, I could fetch that username, I could easily link.\r\n\r\nThanks!\r\n",
                    "author": {
                        "login": "dthyresson"
                    },
                    "createdAt": "2021-05-14T13:43:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-841253175"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjgwMzY3MA==",
                    "body": "> Therefore, perhaps persisting the provider_token on the auth schema user would be a better option?\r\n\r\nagreed, and we should also persist the provider_refresh_token in the auth schema\r\n\r\n> The scenario I have is that I would like to link a set of GitHub profile info that I have (includes their GitHib username) to their Supabase user account.\r\n\r\nwe are actually about to start migrating the supabase dashboard from auth0 to gotrue, so we will also require this functionality. We'll let you know what we decide on whether to grab it as part of the initial fetch vs make a follow up request, one thought is that the JWT itself might get quite large if we fetch all available data but perhaps we could just include username for now as per your request @dthyresson and put it in app_metadata?\r\n\r\n@gl3nn I haven't tested this with Azure, what format does the azure `provider_token` take? Whatever it is, it is presumably used here to grab the initial user data: https://github.com/supabase/gotrue/blob/45d0e8a660f0b8c8036000cfe4a61a5d6b1562be/api/provider/azure.go#L65",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-18T03:49:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-842803670"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0NDI5MzI5NA==",
                    "body": "> we could just include username for now as per your request @dthyresson and put it in app_metadata?\r\n\r\nThe username is all I need to link the identities, so if that is possible then perfect!\r\n\r\nI'll look more into how Auth0 did multiple identity and account linking (https://auth0.com/docs/users/user-account-linking) but not sure if this info was on the JWT:\r\n\r\n```js\r\n  \"identities\": [\r\n    {\r\n      \"provider\": \"google-oauth2\",\r\n      \"user_id\": \"115015401343387192604\",\r\n      \"connection\": \"google-oauth2\",\r\n      \"isSocial\": true\r\n    }\r\n  ],\r\n  \"user_metadata\": {\r\n    \"color\": \"red\"\r\n  },\r\n  \"app_metadata\": {\r\n    \"roles\": [\r\n      \"Admin\"\r\n    ]\r\n  },\r\n````\r\n\r\nbut an `identities` collection with the provider, uid, *username* ... might be an option.\r\n\r\nActually, I'm not sure I actually need it on the JWT, just in the auth.users record so I can join on my existing \"identities\" that has the GH username and the auth.users info.",
                    "author": {
                        "login": "dthyresson"
                    },
                    "createdAt": "2021-05-19T17:00:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-844293294"
                },
                {
                    "id": "IC_kwDOEKipmc40uepO",
                    "body": "@awalias Another RedwoodJS user today asked me about retrieving the GitHub username.\r\n\r\nThey had to do something like:\r\n\r\n```js\r\n const session = supabase.auth.session()\r\n\r\n      const octokit = new Octokit({\r\n        auth: session.provider_token,\r\n      })\r\n      const { data } = await octokit.request('GET /user')\r\n\r\n      const username = data.login\r\n```\r\n\r\non the web client side to get that info -- which isn't ideal.\r\n\r\nIt'd be great to have that info on the `auth.users` and either query it or we can use the Supabase client with the JWT for the user to get their identity and profile info.",
                    "author": {
                        "login": "dthyresson"
                    },
                    "createdAt": "2021-07-22T01:24:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-884599374"
                },
                {
                    "id": "IC_kwDOEKipmc41U1fg",
                    "body": "Having looked at https://github.com/supabase/gotrue/pull/127 that PR and update (and trying out a new fresh GitHub signin) now that there is a `user_name` in the `raw_user_meta_data`, I should be able to join in data that extracts `user_name` form the `raw_user_meta_data` json with other data that contains the GitHub username.\r\n\r\nPerhaps I'll create a function in auth to extract `user_name` or other helpers.\r\n\r\nThanks @dsumer for this!",
                    "author": {
                        "login": "dthyresson"
                    },
                    "createdAt": "2021-08-07T13:21:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-894654432"
                },
                {
                    "id": "IC_kwDOEKipmc5J3501",
                    "body": "Hey everyone, we have merged in this PR (https://github.com/supabase/gotrue/pull/641) to support returning the `provider_refresh_token` in the query fragment. That way, you will be able to refresh your `provider_token` if it expires. However, we have decided that at this point, we will not be persisting the `provider_token` and `provider_refresh_token` in gotrue. \r\n\r\nWill be closing this issue for now, but feel free to reopen it if you have any questions or feedback! Thank you!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:28:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/83#issuecomment-1239391541"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NTc2ODM1OTk=",
            "number": 84,
            "title": "TOTP based multi-factor authentication",
            "body": "# Feature request\n\n## Is your feature request related to a problem? Please describe.\n\nThere is currently no built-in solution for providing TOTP based multi-factor authentication to the user if they want to. Currently only email is an auth option that can be considered a multi-factor authentication.\n\n## Describe the solution you'd like\n\n[Authelia](https://www.authelia.com/) might be worth a look\n\n## Describe alternatives you've considered\n\nOne can always implement their own solution.\n\n## Additional context\n\nI was looking for solutions for 2fa and found Authelia. But unlike gotrue, it doesn't support OAuth Providers yet (it's on their roadmap). As for gotrue, [Netlify has added support for 2fa to their (gotrue based) Identity service](https://www.netlify.com/blog/2020/07/07/two-factor-authentication-is-live-on-netlify/) but no info when (or if) that would be added to gotrue itself. ",
            "author": {
                "login": "maximousblk"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-12T12:20:35Z",
            "closedAt": "2021-05-15T07:40:13Z",
            "url": "https://github.com/supabase/gotrue/issues/84",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxOTM1Njc4MQ==",
                    "body": "I'll transfer this one over to our GoTrue fork \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-04-14T08:59:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/84#issuecomment-819356781"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTYxNjY2Mg==",
                    "body": "closing as duplicate of https://github.com/supabase/gotrue/issues/14",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-15T07:40:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/84#issuecomment-841616662"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NTc2ODcyNTU=",
            "number": 85,
            "title": "When a user email address is updated, a new account is created to same provider",
            "body": "# Chore\r\n\r\nA registered user via Github Auth, updates the email address.\r\n\r\n## Describe the chore\r\n\r\nA registered and authenticated user via Github Auth updates its email address. And the change is made with success.\r\n\r\nThen when it logouts. And sign in again via Github. It is created a new user.\r\n\r\nThe database has now two users from the same provider.\r\n\r\n## Additional context\r\n\r\nSteps to reproduce:\r\n\r\n1. I'm using `vercel/nextjs-subscription-payments` as starting point.\r\n2. Connect it to Supabase.io\r\n3. Sign in with Github, Then we make a update email request using:\r\n```js\r\ntry {\r\n    const updates = {\r\n        email: email\r\n    }\r\n    const { error, data } = await auth.api.updateUser(session.access_token, updates);\r\n\r\n    if (error) {\r\n        throw error\r\n    }\r\n} catch (error) {\r\n    alert(error.message)\r\n}\r\n```\r\n4. Then **supabase.io** sends a email change confirmation to the new user email address\r\n   1. we use the provided token, and send an email update request:\r\n```js\r\ntry {\r\n  const updates = {\r\n    email: email,\r\n    email_change_token: changeEmailToken\r\n  }\r\n  const { error, data } = await auth.api.updateUser(session.access_token, updates);\r\n\r\n  if (error) {\r\n    throw error\r\n  }\r\n}\r\n```\r\n5. **supabase.io** responds with a success (200) and the email is successfully updated\r\n6. Logout the user\r\n7. Sign in again with Github\r\n8. A new account is created\r\n\r\n",
            "author": {
                "login": "vmiguellima"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-06T19:12:35Z",
            "closedAt": "2022-04-26T02:58:37Z",
            "url": "https://github.com/supabase/gotrue/issues/85",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxOTM1OTU2Mw==",
                    "body": "I believe that we have a similar issue set up in our GoTrue fork - basically GoTrue treats email as the identity. I'll shift this over to the GoTrue repo for triage \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-04-14T09:03:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/85#issuecomment-819359563"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NDU4MjU0Ng==",
                    "body": "Took a look at the [/PUT user endpoint](https://github.com/supabase/gotrue/blob/1f83884c1e45f79bb9ff30c7c7566af293c7267b/api/user.go#L52) recently and had some thoughts on this issue:\r\n\r\nConstraints\r\n1. If the user initially signs up via Github, the user should still be able to sign into the same account via Github _even_ if the user changes his/her email.\r\n2. Since gotrue treats email as identity, changing the email would remove the association between Github and the app account created, which results in a subsequent sign-in with Github creating a new account. \r\n3. From my POV, a user would only want to change the email address if they want the app notifications to be sent to a _different email address_.\r\n\r\nSolution 1: We do not allow users to update their email if they chose to sign up via an external oauth provider like Github.\r\n\r\nSolution 2: Upon signing up, the user's email will be stored in the Email column and we can also create a key in the UserMetaData column called \"email_alias\" which will be a duplicate of the email address they used to sign up. If a user who signed up via an external provider tries to update their email, the \"email_alias\" in UserMetaData will be updated instead of the Email field used as identity.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-06-20T16:55:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/85#issuecomment-864582546"
                },
                {
                    "id": "IC_kwDOEKipmc43mKy2",
                    "body": "Hey @kangmingtay, can I work on this for my first contribution? ",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2021-10-02T13:28:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/85#issuecomment-932752566"
                },
                {
                    "id": "IC_kwDOEKipmc5CDZKz",
                    "body": "Hey @bariqhibat,\r\n\r\nSorry for the delayed reply on this. Feel free to take up the issue if you're still interested.\r\n\r\nThanks!\r\nJoel",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-25T07:34:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/85#issuecomment-1108185779"
                },
                {
                    "id": "IC_kwDOEKipmc5CD068",
                    "body": "Hi @J0,\r\n\r\nHas this not been resolved yet? If so then I can start looking into it, bear with me since it's been a while since I've taken a look into the repo. Can assign me on this! Thanks!",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2022-04-25T09:11:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/85#issuecomment-1108299452"
                },
                {
                    "id": "IC_kwDOEKipmc5CF-br",
                    "body": "@bariqhibat correct me if im wrong but i think this issue has been fixed already, we don't really treat email as identity for oauth logins, we use the oauth provider id returned instead. This means that even if you update your email on github, the oauth provider id doesn't change so a new user wouldn't be created.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-04-25T17:49:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/85#issuecomment-1108862699"
                },
                {
                    "id": "IC_kwDOEKipmc5CHVI0",
                    "body": "Hey @kangmingtay ,\r\n\r\nSounds good, shall we go ahead and close the issue?\r\n\r\nHey @bariqhibat,\r\n\r\nSeens like I'm not quite up to date on this issue \ud83d\ude05  Feel free to let us know if the issue still persists for you or if there are any other issues that you'd like to take up.\r\n\r\nThanks!\r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-26T02:00:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/85#issuecomment-1109217844"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NTc2ODg5Njk=",
            "number": 86,
            "title": "OAuth Providers array in `user` object",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIn `app_metadata.provoder` in the `user` object, currently we can only get what provider did the user signed up with and not all the provides that the user has connected.\r\n\r\n## Describe the solution you'd like\r\n\r\nInstead of providing only the initial OAuth Provider, provide an array of all the providers user has used in the past.\r\n\r\n```diff\r\n{\r\n  // ...\r\n  \"app_metadata\": {\r\n-   \"provider\": \"github\"\r\n+   \"providers\": [\"github\", \"gitlab\"]\r\n  },\r\n  // ...\r\n}\r\n```\r\nThis could be a massive breaking change, so here's an alternative solution:\r\n\r\nProvide the current OAuth Provider and Dev's can record it on the application side.\r\n\r\n## Describe alternatives you've considered\r\n\r\nN/A\r\n\r\n## Additional context\r\n\r\nThis can be used to show which OAuth Provider the user has connected and if they want to disconnect a provider or connect more, similar to the following:\r\n\r\n![Screenshot_20210406-124145_Chrome](https://user-images.githubusercontent.com/28438021/113672608-9f50b880-96d5-11eb-987a-6356bda01b7c.jpg)\r\nref: GitLab profile settings\r\n",
            "author": {
                "login": "maximousblk"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-06T07:14:35Z",
            "closedAt": "2022-01-16T19:19:15Z",
            "url": "https://github.com/supabase/gotrue/issues/86",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxOTM2MDg3Mw==",
                    "body": "Nice - seems like a good idea. I'll shift this to our GoTrue repo \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-04-14T09:05:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/86#issuecomment-819360873"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxOTY2MDM0NA==",
                    "body": "I'd like to add that it would be nice if email:pass and email-link are specified separately so that in case an app needs password to be setup (login on cli and similar), but user signed up using magic links we can prompt the user to set it up. ",
                    "author": {
                        "login": "maximousblk"
                    },
                    "createdAt": "2021-04-14T16:41:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/86#issuecomment-819660344"
                },
                {
                    "id": "IC_kwDOEKipmc41iyNK",
                    "body": "Any updates on this? ",
                    "author": {
                        "login": "maximousblk"
                    },
                    "createdAt": "2021-08-13T09:16:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/86#issuecomment-898310986"
                },
                {
                    "id": "IC_kwDOEKipmc44llgv",
                    "body": "This is addressed by #208 (and relevantly, #240).",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2021-10-22T07:51:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/86#issuecomment-949377071"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NTc2ODk3MjM=",
            "number": 87,
            "title": "allow whitelisting multiple domains in supabase auth",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI want to use supabase auth both during development (http://localhost:3000) and production (https://myawesome.domain.com).  But I can only set one 'site url' in the auth setting. I can't enable auth for both domains (dev and prod) at the same time.\r\n\r\n## Describe the solution you'd like\r\n\r\nI want to be able to add two or more domains to 'site url', so that both the dev and prod domain can use supabase auth at the same time.\r\n\r\n## Describe alternatives you've considered\r\n\r\nDuring development, I need to switch supabase auth 'site url' to my dev domain (http://localhost:3000), but this brings down my production website since people can't login anymore.",
            "author": {
                "login": "d-mok"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-03T08:41:10Z",
            "closedAt": "2021-05-19T05:37:14Z",
            "url": "https://github.com/supabase/gotrue/issues/87",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgyMTUzMDk4Mw==",
                    "body": "^ Bump - my team would very much appreciate support for this.",
                    "author": {
                        "login": "rasreee"
                    },
                    "createdAt": "2021-04-16T20:02:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/87#issuecomment-821530983"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0Mzc2MDgzOQ==",
                    "body": "solved with `URI_ALLOW_LIST`\r\n\r\nyou need to however use exact URIs (unlike the `SITE_URL` param which allows a catch all domain)\r\n\r\nand you can specifiy where you want to redirect to using supabase-js redirectTo: https://supabase.io/docs/reference/javascript/auth-signin#sign-in-with-redirect (there is an open bug being worked on [here](https://github.com/supabase/gotrue-js/issues/65))\r\n\r\nand set it the dashboard here:\r\n![image](https://user-images.githubusercontent.com/458736/118761386-e3bf9e80-b8a6-11eb-96e8-c82c9a21e9a8.png)\r\n\r\n\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-19T05:37:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/87#issuecomment-843760839"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0Mzc2MTExMA==",
                    "body": "note that catch all secondary domains might also be in the pipeline: https://github.com/supabase/gotrue/issues/99",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-19T05:37:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/87#issuecomment-843761110"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1MzQyMjMxMg==",
                    "body": "Any chance of wildcard support for this as well? This would be for dynamic preview branches that share a subdomain like Vercel preview branches?",
                    "author": {
                        "login": "KoltonG"
                    },
                    "createdAt": "2021-06-02T22:24:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/87#issuecomment-853422312"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NTc2OTEzNTM=",
            "number": 88,
            "title": "Auth webhook with link",
            "body": "Hi !\r\n\r\nWould it be possible to have add a webhook on the auth setting so that we could send the email ourselves with the link passed as a parameter ?\r\n\r\nCurrently auth are different from my other emails because they're cannot be sent to same way my other emails are. I'm sure that I'm not the only one in this situation. Also, they're more frequently sent to spam than my normal ones because of the link and the smtp connection.",
            "author": {
                "login": "gawlk"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-02T16:44:21Z",
            "closedAt": "2022-01-19T09:27:18Z",
            "url": "https://github.com/supabase/gotrue/issues/88",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgxOTM2MzQ5Ng==",
                    "body": "\ud83d\udc4d transferring to GoTrue",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-04-14T09:08:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/88#issuecomment-819363496"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0Mzc2NDIxNw==",
                    "body": "hey @gawlk you can use custom SMTP server on the supabase dashboard and also set the template (any html/css) from there (both in Auth > Settings)\r\n\r\n![image](https://user-images.githubusercontent.com/458736/118761897-d22ac680-b8a7-11eb-8e2a-d550cf491084.png)\r\n![image](https://user-images.githubusercontent.com/458736/118761863-c50dd780-b8a7-11eb-9f45-792d122bce74.png)\r\n \r\nthe reasons I think webhook might work better is:\r\n- can replace the link with one on your own domain which redirects to the actual one\r\n- can keep your templates under version control or in the same system that you currently manage\r\n- i18n of templates https://github.com/supabase/gotrue/issues/80\r\n\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-19T05:45:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/88#issuecomment-843764217"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MzkwNzkzMw==",
                    "body": "I completely agree with the pros of webhooks. I know about the smtp but it's really not good enough for me, it goes straight to spam every time because of the bounce supabase > mail service > client and because of the weird link. Webhooks would fix the former !",
                    "author": {
                        "login": "gawlk"
                    },
                    "createdAt": "2021-05-19T09:10:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/88#issuecomment-843907933"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg4MDU4ODQ2NA==",
                    "body": "Hey @gawlk, we just merged a PR that's gonna help with this [here](https://github.com/supabase/gotrue/pull/133). Basically, you can now generate the email action links via the `/admin/generate_link` endpoint, and send the link via your own dedicated email service provider (e.g. Sendgrid, etc...). We're testing it in our staging environment now and will release it soon! Hope this helps!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-15T10:37:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/88#issuecomment-880588464"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NjU3NTg5NTM=",
            "number": 89,
            "title": "email addresses are case sensitive / not normalized",
            "body": "# Bug report\r\n\r\n\"Jason@example.com\", \"jason@example.com\", and \"Jason@Example.com\" are all different emails / users. I would expect them to all refer to the same email / user.\r\n\r\n## Describe the bug\r\n\r\nA clear and concise description of what the bug is.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Use Auth from '@supabase/ui' and visit URL.\r\n2. Sign up \"Jason@example.com\" with a password.\r\n3. Sign out\r\n4. Try to sign in with \"jason@example.com\" and previous password, see \"invalid email or password\" error.\r\n5. Try to recover password for \"jason@example.com\", see \"user not found\" error\r\n6. Sign up \"jason@example.com\" with a new unique password.\r\n7. It creates another user.\r\n\r\n## Expected behavior\r\n\r\nI would expect step 4 to succeed in logging me in, and all capitalized versions of an email address to correspond with a single address\r\n\r\n## Additional context\r\n\r\nHaven't taken a look through the code yet, but may make sense to normalize the user email input to lowercase on the frontend, and again before db insertion to be safe.",
            "author": {
                "login": "AdrianArtiles"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-22T16:36:45Z",
            "closedAt": "2021-07-09T08:49:56Z",
            "url": "https://github.com/supabase/gotrue/issues/89",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgyNTM5ODQ0OA==",
                    "body": "this is semi-related to https://github.com/supabase/gotrue/issues/85, but seems slightly different because the email is the same.\r\n\r\nI'll transfer this to the gotrue repo - definitely a bug. Thanks for the report @AdrianArtiles ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-04-23T05:33:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/89#issuecomment-825398448"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0NDU0OTMwMQ==",
                    "body": "Related to my use case: https://github.com/supabase/supabase/discussions/1565",
                    "author": {
                        "login": "quicksnap"
                    },
                    "createdAt": "2021-05-19T22:50:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/89#issuecomment-844549301"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NzAyNTQxNA==",
                    "body": "hey @AdrianArtiles, we've merged the fix for this #110 and it will be included in our next release! Stay tuned!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-09T08:48:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/89#issuecomment-877025414"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NjYwOTQxOTU=",
            "number": 90,
            "title": "redirectTo either ignored or stripped of /#/",
            "body": "### Problem\r\n\r\nI am getting unexpected behavior using the redirectTo in gotrue-dart (I added it through a PR). The URL is constructure with `&redirectTo=<url>`.\r\n\r\nI have 2 scenarios.\r\n\r\nSiteUrl: `https://someapp-something.codemagic.app/#/`\r\nredirectTo: `http://localhost:3000/#/`\r\n**Redirects to:**  `https://someapp-something.codemagic.app/#/`\r\n\r\nSiteUrl: `http://localhost:3000/#/`\r\nredirectTo: `http://localhost:3000/#/`\r\n**Redirects to:** `http://localhost:3000/`\r\n\r\nIn both cases I would want it to redirect to  `http://localhost:3000/#/` including `/#/`.",
            "author": {
                "login": "nstrelow"
            },
            "state": "CLOSED",
            "createdAt": "2021-04-23T13:06:13Z",
            "closedAt": "2021-05-17T00:32:15Z",
            "url": "https://github.com/supabase/gotrue/issues/90",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgyNjQ3MTE5MA==",
                    "body": "I think the server may be overwriting `redirectTo` with the value passed by the browser in the `referer` header (in this case presumably `http://localhost:3000/`\r\n\r\nthis is a bug, we should prioritize `redirectTo` if it's set",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-04-26T03:10:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-826471190"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgyODkyMDY1MA==",
                    "body": "@awalias I have also been running into this issue. It looks like there are other open tickets regarding the same issue.\r\nhttps://github.com/supabase/gotrue-js/issues/65",
                    "author": {
                        "login": "KrisCoulson"
                    },
                    "createdAt": "2021-04-29T03:47:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-828920650"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzNTM5MTU1NQ==",
                    "body": "Any chance this will be able to get fixed?\r\n\r\nThanks for the hard work and all, don't feel pressured \u2764\ufe0f ",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-08T14:51:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-835391555"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTYxNjA4MA==",
                    "body": "@icecream78 do you want to take a look at this one? we need to make sure `redirect_to` takes priority over `Redirect` Header if set",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-15T07:34:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841616080"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTYxNjMxNg==",
                    "body": "@awalias yeah. I'll look on it",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-05-15T07:37:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841616316"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTY1Mzk0Mw==",
                    "body": "@nstrelow please add extra info about your problem.\r\nHave you inserted your redirect_uri in settings? \r\n![image](https://user-images.githubusercontent.com/20445149/118361412-0777a180-b594-11eb-8672-6c84a9c64a6c.png)\r\n\r\nBecause I've checked flow with generating magic link + verification it and Gotrue redirected me by provided redirectTo field's value correctly\r\n\r\n",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-05-15T12:45:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841653943"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTY4MjIwNg==",
                    "body": "@icecream78 I somehow have not seen the \"Additional Redirect URLs\". Was it always there? If added later on, I have not checked it out yet, but will do now.\r\n\r\nAm I correct to assume all my redirects need to be listed, otherwise it won't work?\r\n\r\n",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-15T15:45:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841682206"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTY4MzI5NA==",
                    "body": "3 month ago I've added logic for restricting redirect url according to that list, but I don't know when UI was updated to handle this setting.\r\nAnd yes, you are correct. If redirect url distincts from site url, so you need add it to list. \r\n@nstrelow please try again with filled setting and say results",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-05-15T15:53:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841683294"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTY4MzkwMA==",
                    "body": "The behavior I\u2019ve observed is that the paths on the redirects seem to be\nignored. I have the base URL listed in the allowed URLs but redirecting to\na specific page didn't work.\n",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-05-15T15:57:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841683900"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTY4NDQxOQ==",
                    "body": "@icecream78 I will try again now, but I had the problem @emschwartz is having as well.\r\n\r\nMy url needs to have a `/#/` attached to be parsed correctly by Flutter.\r\n\r\nI will try it and report back",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-15T16:01:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841684419"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTY4ODM2Mg==",
                    "body": "@icecream78 I am still having the same behavior, even though I have defined the \"Additional redirect URLs\". I think this comes from (as mentioned by @emschwartz) stripping the URL path.\r\n\r\nSiteUrl: http://localhost:3000/#/\r\nredirectTo: http://localhost:3000/#/\r\n**Redirects to:** http://localhost:3000/\r\nSomehow the url without the `/#/` path is still allowed. I would expect `http://localhost:3000/` to be not allowed, because it does not match SiteUrl or additional redirect urls.\r\n\r\nSiteUrl: https://someapp-something.codemagic.app/#/\r\nredirectTo: http://localhost:3000/#/\r\n**Redirects to:** https://someapp-something.codemagic.app/#/\r\nI think here my valid redirectTo `http://localhost:3000/#/` fails, because it compares `http://localhost:3000/#/` to the additional redirect URLs and those probably have removed the URL path `/#/`. Because redirectTo does not match it will be redirected to the SiteURL. Am I correct?\r\n\r\nA working example:\r\nSiteUrl: https://someapp-something.codemagic.app/#/\r\nredirectTo: http://localhost:3000/\r\n**Redirects to:** http://localhost:3000/\r\nThis actually works, because there is no URL path specified.\r\n\r\n@icecream78 Is the URL path ignored or removed at some point? If yes, this would have to be revised, to allow paths such as `/#/` which is necessary for some form of webapps. Or when having a webapp hosted at a url path `mysite.com/webapp`",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-15T16:27:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841688362"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTc5NTMwOQ==",
                    "body": "Redirect url doesn't stripped or normalized in any way. When request comes only thing that matter is that if url in allowed list or not.\r\nOne thing is weird in that process. Redirect url in verify constructs by hardcode adding # char + encoded payload. In your case redirect url looks like http://localhost:3000/#/%23access_token.....  I've written code for handling that case but that fix doesn't coordinately help you. \r\nAlso I've written few tests with input data you've provided https://github.com/icecream78/gotrue/commit/c0f3c3e7187305b0828cbc81da55e57c86c947b3 but they all pass.\r\nMaybe I've missed something and it will be nice if somebody point me in it",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-05-16T10:05:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841795309"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTgwMDkzOQ==",
                    "body": "Does that mean that the full URL, including the path, needs to be in the\nallowed list in order for it to work?\n\nIf so, would it be possible to change it to only look at the domain? That\nwould allow redirecting to pages with dynamic paths. It also shouldn't be\nany different from a security perspective because all of the paths are\nunder the control of whoever controls the domain.\n\n>\n",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-05-16T10:55:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841800939"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTgwNTA3NA==",
                    "body": "@icecream78 I think I have to apologize. I added the redirectTo option to the dart SDK. And I did not encode the URL to use it as a parameter. So probably that URL escaping messed it all up. Sorry and thanks for investigating.\r\n\r\nWith that my stuff seems to work now. Will upload a fix soon.\r\n\r\nPS: What @emschwartz suggests sounds sensible, if there is no case where somebody would not control a domain but only a path on it.",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-16T11:36:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841805074"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTgxODIwOQ==",
                    "body": "@emschwartz it's not necessary to include full URL in allowed list, because only domain part is essential for redirect url correctness. If domain part is in allowed list - redirect url will pass, if it is not - redirect will be made to site url value",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-05-16T13:36:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841818209"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTgxODMzMg==",
                    "body": "@nstrelow no problem. I'm glad that I helped you=)",
                    "author": {
                        "login": "icecream78"
                    },
                    "createdAt": "2021-05-16T13:37:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841818332"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTgyMDYxMA==",
                    "body": "@icecream78 I just tried it again and the redirect with a path is definitely not working for me. I have localhost:3000 and another domain listed in my allowed domains. When I set the redirect value to `http://localhost:3000/some_path`, the link in the email has `...&redirect_to=http://localhost:3000/` and it's the same when I use the proper domain.\r\n\r\nIn the console I see the warning `Attempt to set a forbidden header was denied: referer`.",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-05-16T13:52:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-841820610"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjIxNzM0OQ==",
                    "body": "> If so, would it be possible to change it to only look at the domain? That\r\n> would allow redirecting to pages with dynamic paths. It also shouldn't be\r\n> any different from a security perspective because all of the paths are\r\n> under the control of whoever controls the domain.\r\n\r\nthe difficulty here is that in some cases, the mobile URIs/Deep links are reversed e.g. `com.company.mobiletestapp://oauth`, we couldn't come up with a way to parse the strings that guarantees security (this was actually the primary use case for introducing additional urls)\r\n\r\nso we chose for now to force Additional URIs to be **exact** \r\n\r\nthat being said; there is a bug in the client library at the moment which is what @emschwartz is experiencing:\r\n\r\n`Attempt to set a forbidden header was denied: referer` since browsers no longer allow you to set the Referer header manually.\r\n\r\nThe proposed fix is to:\r\na) change the client use `redirect_to` query param instead of setting the Referer header\r\nb) change the back end to prioritize the `redirect_to` query param over the Referer header\r\n\r\nI have raised a [separate issue](https://github.com/supabase/gotrue/issues/99) for being able to add arbitrary paths to urls that are not the primary domain (aka. SITE_URL) - it will require some more thought",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-17T10:39:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-842217349"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjIxOTYxOQ==",
                    "body": "~~@nstrelow do you require the `/#/`? Gotrue appends it's parameters using the same fragment delimiter `#` (it will redirect to `SITE_URL/#access_token=x&expires_at....`) Which is presumably why it's currently being stripped~~\r\n\r\nedit: I just re-read your comment\r\n\r\n> My url needs to have a /#/ attached to be parsed correctly by Flutter.\r\n\r\n@phamhieu does your [commit](https://github.com/supabase/gotrue-dart/commit/95fb42f46a0a7ffaa35db651190ac5e3af8269ba) resolve this issue? ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-17T10:43:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-842219619"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjIyMjEzOA==",
                    "body": "@awalias This part is working now as expected ^^.  Redirect to `http://localhost:3000/#/`\r\nI was able to fix it, by encoding the url parameter `redirectTo`.  I previously added redirectTo support to the gotrue-dart SDK, so I introduced the feature and bug. Sorry for that.\r\n\r\nNow it is fixed\r\n",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-17T10:48:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/90#issuecomment-842222138"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NzQxODQzNzk=",
            "number": 92,
            "title": "WebAuthn/Passkeys support",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nNo, it's purely a nice feature I would like to see. \r\n\r\nI would like WebAuthn to be supported in Supabase Auth. Auth0 will be adding support for WebAuthn which you can see through their [flows preview here](https://flows.auth0.com/?c=RGFzaGZsby5uZXQ=&l=aHR0cHM6Ly9jZG4uZGFzaGZsby5uZXQvYnJhbmQvdGV4dC9kYXJrLnBuZw==&pc=IzMzMw==) (sidebar -> WebAuthn).\r\n\r\n## Describe the solution you'd like\r\n\r\nAdding support for registering and logging in using WebAuthn, or allowing it to be used as two-factor authentication.\r\n\r\n## Describe alternatives you've considered\r\n\r\nIt is possible to implement it myself for my own projects though I'm sure others may like this feature in the SDK/part of auth, and it'd set Supabase ahead in modern compared to Firebase.\r\n\r\n## Additional context\r\n\r\n![image](https://user-images.githubusercontent.com/20425781/116782524-82fc2d80-aa81-11eb-97f9-21dcd416e558.png)\r\n![image](https://user-images.githubusercontent.com/20425781/116782535-97402a80-aa81-11eb-8a1d-fe7600693921.png)\r\n",
            "author": {
                "login": "RihanArfan"
            },
            "state": "OPEN",
            "createdAt": "2021-05-01T12:32:45Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/92",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzMDgwOTMzMw==",
                    "body": "@LeCodeCo please take a look at https://www.github.com/ory/kratos its open source , headless, and there are some similar applications in the Ory community. We also plan a PR here to help in the same direction. Also see this https://www.ory.sh/hydra/docs/next/advanced/",
                    "author": {
                        "login": "tacurran"
                    },
                    "createdAt": "2021-05-02T13:23:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-830809333"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzMDk5MzI2Mg==",
                    "body": "Great idea @LeCodeCo - I'm transferring this to our GoTrue repo to implement it in the Auth server. Also, thanks for the amazingly detailed feature request. The screen mockups are great",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-05-03T02:41:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-830993262"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1MDg1NzQ0Mg==",
                    "body": "I'm watching you feature \ud83d\udc40",
                    "author": {
                        "login": "gregpalaci"
                    },
                    "createdAt": "2021-05-29T16:08:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-850857442"
                },
                {
                    "id": "IC_kwDOEKipmc5BrdRV",
                    "body": "I'm going to move this under our MFA thread #14 So please feel free to following along over there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T01:43:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1101911125"
                },
                {
                    "id": "IC_kwDOEKipmc5B1bQ0",
                    "body": "@J0 While WebAuthn is great for 2FA (and can be tracked in #14), this issue also covers using it as the primary authentication method to replace username/passwords",
                    "author": {
                        "login": "RihanArfan"
                    },
                    "createdAt": "2022-04-20T22:38:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1104524340"
                },
                {
                    "id": "IC_kwDOEKipmc5B15-d",
                    "body": "Hey @LeCodeCo ,\r\n\r\nThat's fair -- thanks for highlighting that -- let's leave this open then.\r\n\r\nLmk if there are any further questions or concerns!\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-21T02:46:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1104650141"
                },
                {
                    "id": "IC_kwDOEKipmc5F5cMG",
                    "body": "Wanted this echo the use of this as both a method of MFA, but also as a password alternative (down with passwords!).",
                    "author": {
                        "login": "RichiCoder1"
                    },
                    "createdAt": "2022-07-01T20:18:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1172685574"
                },
                {
                    "id": "IC_kwDOEKipmc5F563G",
                    "body": "Hey @RichiCoder1,\r\n\r\nWere there any other auth services that you were considering that provide Webauthn as a password alternative(outside of MFA)? We'd love to see what's available out there and what the DX looks like. \r\n\r\nWould also love to understand the immediate use case if any (e.g. for instance one might want anonymous sign-in's because it'd help with implementing a cart feature for the e-commerce app that  they are building). \r\n\r\nWe're probably not going to build it out just yet but both these pointers would be helpful in envisioning what an experience could look like if we were to build it out\r\n\r\nLet me know! ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-02T01:50:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1172811206"
                },
                {
                    "id": "IC_kwDOEKipmc5F6eXd",
                    "body": "> Would also love to understand the immediate use case if any (e.g. for instance one might want anonymous sign-in's because it'd help with implementing a cart feature for the e-commerce app that they are building).\r\n\r\nIf nothing else the use case is protecting users from phishing attacks increasing the security of the user compared to the password flow. This is accomplished by Webauthn binding the authentication key of the user to a specific origin URL. Thus the browser won't try logging in even if presented with the correct public key from a phishing server.\r\n\r\nFor my own use case I think the Webauth based signup and login flow could wholly replace the password flow as it is both more convenient and more secure. It also makes it possible to sign up users without any form of personally identifying information which is good for GDPR.",
                    "author": {
                        "login": "snorremd"
                    },
                    "createdAt": "2022-07-02T20:32:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1172956637"
                },
                {
                    "id": "IC_kwDOEKipmc5GTy6O",
                    "body": "These may be of interest:\r\n- https://www.apple.com/newsroom/2022/05/apple-google-and-microsoft-commit-to-expanded-support-for-fido-standard/\r\n- https://blog.google/technology/safety-security/one-step-closer-to-a-passwordless-future/\r\n- https://fidoalliance.org/white-paper-multi-device-fido-credentials/",
                    "author": {
                        "login": "RihanArfan"
                    },
                    "createdAt": "2022-07-09T19:25:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1179594382"
                },
                {
                    "id": "IC_kwDOEKipmc5J37-H",
                    "body": "Hey all,\r\n\r\nUnfortunately, after much internal discussion, we have decided to focus on SAML and Multi-Factor Authentication. As such, we won't be implementing Webauthn as a a first factor sign in method in the near future.\r\n\r\nConsequently, we will close this issue for now but will re-visit re-open when the time is right. For now, feel free to fork GoTrue or open a Github Discussion if you'd like to explore this further -- we'd be happy to jump in there.\r\n\r\n\r\nSorry about this! ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-07T13:35:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1239400327"
                },
                {
                    "id": "IC_kwDOEKipmc5ON8VG",
                    "body": "I'm very confused about why this is not being considered and when you think the time will be right. Apple, Google, and Microsoft are all heavily invested in and committed to Passkeys. ",
                    "author": {
                        "login": "bdougherty"
                    },
                    "createdAt": "2022-11-12T00:09:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1312277830"
                },
                {
                    "id": "IC_kwDOEKipmc5OS6mM",
                    "body": "> @LeCodeCo please take a look at https://www.github.com/ory/kratos its open source , headless, and there are some similar applications in the Ory community. We also plan a PR here to help in the same direction. Also see this https://www.ory.sh/hydra/docs/next/advanced/\r\n\r\nLooks good!",
                    "author": {
                        "login": "gregpalaci"
                    },
                    "createdAt": "2022-11-14T12:07:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1313581452"
                },
                {
                    "id": "IC_kwDOEKipmc5OmSyO",
                    "body": "Hey all,\r\n\r\nWe hear you and we're not closed to passkeys - it's simply the case that we were prioritizing other important features like MFA and SAML. As such, we wouldn't be able to promise a release date in the immediate future(2022).\r\n\r\nSince Passkeys also make use of the FIDO2(Webauthn) spec it should be easier to make a case after we've added Webauthn support. We're looking into FIDO2 support for MFA devices so we ask for your patience with that.\r\n\r\nIn the meantime, we ask that you indicate interest in the feature via the main comment https://github.com/supabase/gotrue/issues/92#issue-874184379 so we can best convey the demand for the feature.\r\n\r\nThanks!\r\n\r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-11-17T13:45:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1318661262"
                },
                {
                    "id": "IC_kwDOEKipmc5QC6qA",
                    "body": "@J0 since you're asking folks for feedback and want to indicate interest level, it would be nice if this issue could stay open. It being closed could signal that this is not something Supabase will add at all. If there's a better place to track interest, that's great and I'd love to know where that is.",
                    "author": {
                        "login": "maxcountryman"
                    },
                    "createdAt": "2022-12-08T15:57:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1342941824"
                },
                {
                    "id": "IC_kwDOEKipmc5VKqp4",
                    "body": "In my humble opinion, I think WebAuthn should be a priority.\n\nIt's not that complicated to implement, and makes for a significantly secure method while being very cost effective on all kinds of resources; as first class and mfa. ",
                    "author": {
                        "login": "ofeenee"
                    },
                    "createdAt": "2023-02-13T23:31:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1428859512"
                },
                {
                    "id": "IC_kwDOEKipmc5X33oJ",
                    "body": "Would love to see this implemented and fully supported out of the box. It would greatly improve the user experience and security without needing second factors.\r\n\r\nFor now I think I'll try making an example webiste using Matthew Miller's [SimpleWebAuthn](https://github.com/MasterKale/SimpleWebAuthn) package and Next.js.",
                    "author": {
                        "login": "milovangudelj"
                    },
                    "createdAt": "2023-03-17T18:45:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1474263561"
                },
                {
                    "id": "IC_kwDOEKipmc5hbDJg",
                    "body": "In the new age of privacy, passkeys / webauthn support as primary and MFA method is super important.\r\n\r\nHas anyone ever implemented this or is there an open branch with ongoing development on this?",
                    "author": {
                        "login": "chrisciszak"
                    },
                    "createdAt": "2023-07-13T15:44:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1634480736"
                },
                {
                    "id": "IC_kwDOEKipmc5kcsDf",
                    "body": "@J0 It's been a year, any update of plans for 2023? Passkeys are the way.",
                    "author": {
                        "login": "EskelCz"
                    },
                    "createdAt": "2023-08-20T09:54:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1685242079"
                },
                {
                    "id": "IC_kwDOEKipmc5kezs5",
                    "body": "Hey @EskelCz,\r\n\r\nWe're currently prioritising a few other key building blocks such as Anonymous Logins and Auth Hooks. Unfortunately, it seems unlikely that this will move forward this year. We wish to be certain of the security model and the developer experience (particularly on mobile) around it before releasing such a feature.\r\n\r\nIf it would help at all I can also push up a private fork with a WebAuthn implementation  which I worked on the side for a bit for people to play around with and give feedback. This would be purely experimental and I won't be able to make any guarantees around the security model or that GoTrue will be accepting any of the code in the fork.\r\n\r\nIf it's a blocker for the team please sound off via this thread or file feedback via the Supabase dashboard with the use case. We go through all pieces of feedback and will take it into consideration.\r\n\r\nWe're sorry about this and we appreciate your understanding on the matter.\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-21T07:29:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1685797689"
                },
                {
                    "id": "IC_kwDOEKipmc5kfEdJ",
                    "body": "Hey @J0 thank you for providing a proper update on this. \n\nCould you expand what anonymous login will be about and if you have rough delivery timeline for this?\n\nThanks",
                    "author": {
                        "login": "chrisciszak"
                    },
                    "createdAt": "2023-08-21T08:15:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1685866313"
                },
                {
                    "id": "IC_kwDOEKipmc5kfGqe",
                    "body": "Hey @chrisciszak,\r\n\r\nNo worries, thanks for your patience with us. You can check out [this issue](https://github.com/supabase/gotrue/issues/68) for further details about Anonymous logins as well as the timeline.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-21T08:22:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1685875358"
                },
                {
                    "id": "IC_kwDOEKipmc5tMbWQ",
                    "body": "Hey there, we are also very interested in using WebAuthn as a passwordless login method (as well as an MFA).\r\n\r\n@J0 thank you for following up with us about this feature request. It's been 4 months since your last message on the matter. Has anything changed? Can we hope for WebAuthn in 2024?",
                    "author": {
                        "login": "darosior"
                    },
                    "createdAt": "2023-11-29T14:13:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/92#issuecomment-1831974288"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4NzU3MDI5MzI=",
            "number": 93,
            "title": "Add Discord as external auth provider",
            "body": "# Feature request\r\nAdd Discord as external auth provider\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nNot a problem, rather an addition to 3rd party authentication.\r\n\r\n## Describe the solution you'd like\r\n\r\nAllow signing- in through discord similar to how google/github etc. work currently.\r\n\r\n## Describe alternatives you've considered\r\n\r\nSetting up a personal auth endpoint to mint jwts based on discords response might be possible, similar to the response given here https://github.com/supabase/supabase/discussions/417. \r\nSecurity as well as ease of use and implementation would then be lacking though.\r\n\r\n## Additional context\r\n\r\nDiscord is basically the go to service when it comes to gaming communities but also gained a lot of traction outside of gaming in the past year. Allowing users to log in via discord would allow supabase apps to seamlessly onboard all of those users. \r\n",
            "author": {
                "login": "warflash"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-04T18:01:06Z",
            "closedAt": "2021-06-14T14:59:17Z",
            "url": "https://github.com/supabase/gotrue/issues/93",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzNjg3MjA0Mg==",
                    "body": "Sadly I\u00b4m not a go dev so tackling auth for a project of this size is probably out of reach for me personally. \r\nAdding some docs I found on existing implementations, maybe they can be used as references in the future.\r\n\r\nOfficial docs:\r\nhttps://discord.com/developers/docs/topics/oauth2#authorization-code-grant\r\nnext js auth:\r\nhttps://github.com/nextauthjs/next-auth/blob/main/src/providers/discord.js\r\ngoth go auth:\r\nhttps://github.com/markbates/goth/blob/19c3059c9ed44995940c8222a8eda10f6b604e01/examples/main.go#L123",
                    "author": {
                        "login": "warflash"
                    },
                    "createdAt": "2021-05-10T15:52:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/93#issuecomment-836872042"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2MDc1NDkzNQ==",
                    "body": ":tada: This issue has been resolved in version 1.8.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.8.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-06-14T15:00:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/93#issuecomment-860754935"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4Nzc0MDkzNTI=",
            "number": 94,
            "title": "Self hosted Gitlab login provider support by exposing GOTRUE_EXTERNAL_GITLAB_URL as setting in UI",
            "body": "Can this be done by just adding the URL of the self-hosted Gitlab to the configuration properties?",
            "author": {
                "login": "nstrelow"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-06T11:44:34Z",
            "closedAt": "2022-07-19T07:50:10Z",
            "url": "https://github.com/supabase/gotrue/issues/94",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzMzU4ODk3OA==",
                    "body": "Hey @nstrelow - did you try this already? if it failed, can you please provide any error messages?\r\n\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-05-06T14:54:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/94#issuecomment-833588978"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDgzMzU5ODAyMw==",
                    "body": "I did not try changing the code.\r\n\r\nUpon further investigation I saw this:\r\n\r\n![image](https://user-images.githubusercontent.com/1096841/117321295-4cf9e780-ae8d-11eb-8105-73484c32561d.png)\r\n\r\nSeems like gotrue already supports different URLs.\r\nIs there a way I could set it `GOTRUE_EXTERNAL_GITLAB_URL` via web UI or postgres?",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-06T15:06:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/94#issuecomment-833598023"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MDQyNzA1MQ==",
                    "body": "oohh I see what you mean! I will make an issue on our internal dashboard repo for this",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-13T09:07:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/94#issuecomment-840427051"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MDUzMTM4MQ==",
                    "body": "@awalias Thank you so much \ud83d\ude01 ",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-05-13T12:46:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/94#issuecomment-840531381"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1MzcxOTIwMw==",
                    "body": "@awalias Any news on this feature?\r\nAny way I could help implement this?\r\n\r\nI am on the final stretches of my master thesis (1 month left) and would like to hand in a completely self-hosted setup.\r\n\r\nI would like to already test the integration with a private setup, without setting up supabase yet.\r\nStill hoping to see some supabase dump,restore,migrate options to more easily setup self hosted.\r\n\r\nI totally understand if this is low prio and you have so much other stuff to do. If there is a way to help, I will find time in between writing my thesis \ud83d\ude01 ",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-06-03T09:13:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/94#issuecomment-853719203"
                },
                {
                    "id": "IC_kwDOEKipmc49HjJK",
                    "body": "There is already a pull request for this issue.\r\nhttps://github.com/supabase/gotrue/pull/360\r\n\r\nOnce this is merged, this feature will be accomplished.\r\n\r\ncf. https://docs.gitlab.com/ee/integration/openid_connect_provider.html\r\n\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-31T05:15:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/94#issuecomment-1025389130"
                },
                {
                    "id": "IC_kwDOEKipmc5D5tfS",
                    "body": "For reference:\r\n\r\nAs per discussion with @MildTomato this should be possible but could do with better documentation on the docs website. Feel free to reach out if you're keen in contributing to that effort ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-27T01:45:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/94#issuecomment-1139202002"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4OTMxOTUxMDE=",
            "number": 99,
            "title": "Arbitary paths on secondary redirect domains",
            "body": "today we have two fields:\r\n\r\n![image](https://user-images.githubusercontent.com/458736/118474862-1dc16100-b73e-11eb-8580-06cd77f6b783.png)\r\n\r\nSite Url is a domain, and gotrue will allow redirects on any path that is on that primary domain\r\n\r\nAdditional Urls are **exact** Urls (including path, query param etc.) that do **not** have to be on the primary domain. The primary use case for these was mobile deep links that look like: `com.mydomain.sub://customscheme`, hence why they have to be exact, because they are difficult to verify securely\r\n\r\nNow it appears that a new use case has developed for these Additional URLs: multiple environments\r\n\r\npeople may wish to use the same backend for multiple environments and therefore require arbitrary paths on a secondary domain\r\n\r\noptions here seem to be:\r\n\r\n- figure out a way to securely parse Additional URLs - supporting reverse URLs with custom schemes\r\n- introduce \"Additional Site URLs\" that are restricted to standard  `scheme://sub.domain.com`\r\n- make use of gotrue's multi-tenancy (you can dynamically load configs in and out, but thus far we haven't dug into this capability)\r\n- other?",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-17T10:39:04Z",
            "closedAt": "2022-06-29T14:23:50Z",
            "url": "https://github.com/supabase/gotrue/issues/99",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MjMyOTY3NQ==",
                    "body": "Another use case for this is requiring a user to login to perform a certain action on a specific page.\r\n\r\nFor example, if you had a blog with a comment section, reading a post would not require logging in but commenting would. If the user goes to comment, you would prompt them to login. If they login with an email link, you would want it to redirect to that same blog post page instead of to the main page. Redirecting to a specific blog post would require having a dynamic segment in the path.\r\n\r\nAlso, this behavior should work on both the Site URL and the Additional Redirect URLs.",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-05-17T13:34:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/99#issuecomment-842329675"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1MDc1NjI3MA==",
                    "body": "Wondering if this would resolve the use-case of preview environments such as Netlify and Vercel expose in Pull Requests? These all have a similar base domain with a dynamic sub-domain. Something like `*.vercel.app` wildcard support would be very helpful as we can't figure out the exact URL until build time.\r\n\r\nRef: https://mobile.twitter.com/KoltonGagnon/status/1398466644209438723",
                    "author": {
                        "login": "KoltonG"
                    },
                    "createdAt": "2021-05-29T02:46:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/99#issuecomment-850756270"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1MDc1ODUyNg==",
                    "body": "FWIW, for the preview environment use case, you can create branch based\nsubdomains and add those to supabase. It's not quite as flexible as\nsupporting every build domain but it's pretty close.\n",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-05-29T03:03:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/99#issuecomment-850758526"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2MTQ5MjY5MA==",
                    "body": "> Another use case for this is requiring a user to login to perform a certain action on a specific page.\r\n\r\nFor anyone else trying to do this, I got around the current limitation by adding a query string `?redirect=/path/after/login` to the `redirectTo` parameter and handled the redirect in my app.",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-06-15T13:21:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/99#issuecomment-861492690"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MjQ0NjkyNA==",
                    "body": "Did something about the handling of these URLs change in the past 2 weeks? It looks like query strings are now being stripped from the URLs.\r\n\r\nUpdate: Never mind, https://github.com/supabase/ui/issues/230#issuecomment-864768979 made me realize that the query strings and paths do get passed in for the main site URL but not for the additional URLs.",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-07-01T18:05:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/99#issuecomment-872446924"
                },
                {
                    "id": "IC_kwDOEKipmc5FvYlY",
                    "body": "Hey, \r\n\r\nThink might be mostly resolved by #334 . Or, at least the use case  for something `*.vercel.app` \r\n\r\nGoing to close for now but feel free to re-open if there are still pressing use cases that you'd need.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-29T14:23:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/99#issuecomment-1170049368"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4OTM0MzQ2MTQ=",
            "number": 100,
            "title": "Chore: Failed to deploy gotrue image to docker",
            "body": "# Chore\r\nEither upgrade to go1.16 or rollback to go1.15\r\n\r\n## Describe the chore\r\nGotrue image failed to build and upload to docker due to go version difference\r\n\r\n## Additional context\r\nStack Trace: https://github.com/supabase/gotrue/runs/2597879504\r\n",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-17T15:10:51Z",
            "closedAt": "2021-05-19T04:45:31Z",
            "url": "https://github.com/supabase/gotrue/issues/100",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0ODQyNDE1Ng==",
                    "body": ":tada: This issue has been resolved in version 1.7.1 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.7.1)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-05-26T03:19:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/100#issuecomment-848424156"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4OTM4NTg5MTQ=",
            "number": 101,
            "title": "Re-using invitation email shows JSON error on supabase website",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen a user receives an invitation email and accepts it, then later opens the same email and clicks the link a second time the user is shown a JSON error on the supabase website.\r\n\r\n## To Reproduce\r\n\r\n1. Go to Authentication in the dashboard\r\n2. Click on 'Invite' in the header\r\n3. Send an invitation to an unregistered email address you have access to\r\n4. (wait for the email)\r\n5. Open the email and click \"Accept the invite\"\r\n6. Wait for Supabase to redirect you to your app\r\n7. Open the same email and click \"Accept the invite\" again\r\n\r\n## Expected behavior\r\n\r\nThe user should be redirected to the app for the app to present the error message.\r\n\r\n**NOTE:** The error message should be clear that it was an expired invitation. If it sends the displayed JSON error then it is the same payload as if someone attempts to use the magic login a second time (404). Please also see this feature request regarding these callbacks: https://github.com/supabase/supabase/discussions/1566\r\n",
            "author": {
                "login": "RickMeasham"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-15T05:05:01Z",
            "closedAt": "2022-09-07T13:41:28Z",
            "url": "https://github.com/supabase/gotrue/issues/101",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0MTY1MTk0Nw==",
                    "body": ".oO( This probably belongs on the gotrue repo )",
                    "author": {
                        "login": "RickMeasham"
                    },
                    "createdAt": "2021-05-15T12:29:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/101#issuecomment-841651947"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0Mjc2MzQ3Ng==",
                    "body": "Thanks @RickMeasham - transferring now \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-05-18T01:54:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/101#issuecomment-842763476"
                },
                {
                    "id": "IC_kwDOEKipmc5DQdai",
                    "body": "Related: https://github.com/supabase/gotrue/issues/315",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-17T04:10:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/101#issuecomment-1128388258"
                },
                {
                    "id": "IC_kwDOEKipmc5J39ps",
                    "body": "hey @RickMeasham, this has been resolved already - if you click an invite link more than once, you should get back the following error message in the query fragment (`#error=unauthorized_client&error_code=401&error_description=Email+link+is+invalid+or+has+expired`)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:41:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/101#issuecomment-1239407212"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4OTc2ODM1NjY=",
            "number": 104,
            "title": "Generate access_tokens via API",
            "body": "it would be useful to generate access_token + refresh_token via an admin protected endpoint and return them\r\n\r\nsimilarly (or alternatively?) it would be useful to generate and return a magic link",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-21T05:12:53Z",
            "closedAt": "2022-09-07T13:56:54Z",
            "url": "https://github.com/supabase/gotrue/issues/104",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0NTY1ODczMw==",
                    "body": "related: https://github.com/supabase/gotrue/issues/65",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-05-21T05:13:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/104#issuecomment-845658733"
                },
                {
                    "id": "IC_kwDOEKipmc5J4CiD",
                    "body": "Hey,\r\n\r\nThis is not something we wish to encourage. In the Supabase Dashboard you get full access to the JWT signing secret, and you can mint whatever JWT you want.\r\n\r\nIssuing arbitrary refresh tokens is not something that we'll likely support. There are many reasons for this: \r\n- A \"default is secure\" position where only basic settings are required for a secure GoTrue deployment.\r\n- Not all developers are created equal -- although having access to the database is a problem, we want to make it more difficult for malicious actors to impersonate users.\r\n- Backward compatibility -- as GoTrue evolves, custom information associated with refresh tokens may not be well supported.\r\n\r\nIf you really need this though, you are free to modify your database as it suits you.\r\n\r\nI'll be closing the issue for now. If you feel very strongly about this and have a valid use case, please re-open an issue.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-07T13:56:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/104#issuecomment-1239427203"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU4OTk2ODc4ODU=",
            "number": 105,
            "title": "Return oauth_secret_token for OAuth1.0 providers",
            "body": "# Feature request\r\nCurrently, only the provider_token (oauth_token) is being returned for OAuth1.0 providers. In the future, we would either want to return the `oauth_secret_token` as well or not at all. \r\n\r\n## Is your feature request related to a problem? Please describe.\r\nReturning both the `provider_token` and `oauth_secret_token` will allow the service to retrieve a user's credentials in the future without having to ask the user for permission again. In the case of Twitter, the service can retrieve a user's tweets / retweet count / etc... \r\n\r\n## Describe the solution you'd like\r\nOAuth1.0 tokens generally have a longer lasting lifetime compared to OAuth2.0 (Twitter's tokens do not expire but can be revoked by the user whenever). We can send the `oauth_secret_token` as part of the query parameters returned together with the `provider_token`. \r\n\r\n## Additional context\r\n1. Is it secure / a good practice to send the `oauth_secret_token` as a query parameter? \r\n",
            "author": {
                "login": "kangmingtay"
            },
            "state": "OPEN",
            "createdAt": "2021-05-24T14:02:55Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/105",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NzQ4NjQ1NA==",
                    "body": "+1 for this one! If it works out it would be helpful for me! I have a twitter app that makes use of secret on user's behalf!\r\n\r\nIf it's not a priority right then please let me know, thanks!",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2021-07-09T22:21:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-877486454"
                },
                {
                    "id": "IC_kwDOEKipmc41Ks_k",
                    "body": "@kangmingtay Hi Kang, any ETA/plans for this one? I've been facing auth issues in my existing setup and would really want to use Supabase before I get too many users in the app(it's already on production \ud83d\ude05)",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2021-08-03T16:42:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-891998180"
                },
                {
                    "id": "IC_kwDOEKipmc43IpMJ",
                    "body": "@kangmingtay @kiwicopple Can we get an update on this one? The `provider_token` on it's own is not too helpful for Twitter.",
                    "author": {
                        "login": "mike-wax"
                    },
                    "createdAt": "2021-09-22T14:58:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-925012745"
                },
                {
                    "id": "IC_kwDOEKipmc43KaOm",
                    "body": "\nHey @rishimohan, @mike-wax, we're currently in the midst of refactoring gotrue so that we can securely return the provider_token & provider_secret token (for twitter's case). We didn't support it initially because the supabase-js client library stores tokens in local storage. This is a security concern for twitter as twitter uses oauth1.0 - which returns tokens that are long-lived. If an attacker manages to get the tokens from local storage, the tokens do not expire and only the user can revoke them. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-23T03:11:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-925475750"
                },
                {
                    "id": "IC_kwDOEKipmc43LJTf",
                    "body": "@kangmingtay thanks! Are you planning to store the secrets in supabase encrypted?",
                    "author": {
                        "login": "mike-wax"
                    },
                    "createdAt": "2021-09-23T09:59:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-925668575"
                },
                {
                    "id": "IC_kwDOEKipmc43LJxb",
                    "body": "@kangmingtay Makes sense, looking forward to it!",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2021-09-23T10:02:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-925670491"
                },
                {
                    "id": "IC_kwDOEKipmc43LQ-H",
                    "body": "> @kangmingtay thanks! Are you planning to store the secrets in supabase encrypted?\n\nNope, for oauth1.0 (twitter), we don't intend to store it on the browser at all. We'll be returning the provider_token & provider_secret_token in the api response. For oauth2.0, the provider_token will be returned the same way as mentioned above and the provider_refresh_token will be stored as a http-only cookie. We'll be providing an endpoint to refresh your provider_token as well. \n\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-23T10:46:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-925699975"
                },
                {
                    "id": "IC_kwDOEKipmc49GBTO",
                    "body": "Any update?",
                    "author": {
                        "login": "Timonzimm"
                    },
                    "createdAt": "2022-01-29T21:20:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-1024988366"
                },
                {
                    "id": "IC_kwDOEKipmc5LPlIu",
                    "body": "Given that this was implemented in #490, I'm closing the issue. Feel free to re-open it.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T14:35:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-1262375470"
                },
                {
                    "id": "IC_kwDOEKipmc5LPvno",
                    "body": "@hf can you please share link to the PR where it's implemented? thanks",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2022-09-29T15:07:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-1262418408"
                },
                {
                    "id": "IC_kwDOEKipmc5LS-P_",
                    "body": "@rishimohan I'll reopen the issue as this was only added to OAuth2.0 providers, while Twitter uses OAuth1.0.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-30T08:20:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-1263264767"
                },
                {
                    "id": "IC_kwDOEKipmc5MIPn4",
                    "body": "@kangmingtay any update? This is quite a blocking issue.",
                    "author": {
                        "login": "Timonzimm"
                    },
                    "createdAt": "2022-10-13T08:24:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-1277229560"
                },
                {
                    "id": "IC_kwDOEKipmc5OjRwS",
                    "body": "Months have passed, yet an update to be made...",
                    "author": {
                        "login": "diogoribeirodev"
                    },
                    "createdAt": "2022-11-17T00:27:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-1317870610"
                },
                {
                    "id": "IC_kwDOEKipmc5sUnSH",
                    "body": "+1 would love an update on this!",
                    "author": {
                        "login": "feresr"
                    },
                    "createdAt": "2023-11-18T03:06:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/105#issuecomment-1817343111"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MDAxOTQzNzE=",
            "number": 106,
            "title": "Bug: Github Auth - Unable to exchange external code",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nUsing github as an external provider results in an error during the redirect phase after the sign in attempt. \r\n```\r\nerror: server_error\r\nerror_description: Unable to exchange external code: 7cf84a55c55bd5f9ac26\r\n```\r\n\r\n## Additional context\r\nSeems to work locally, checking prod to see why its failing \r\nhttps://github.com/supabase/supabase/discussions/1192",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-25T02:28:46Z",
            "closedAt": "2021-07-24T18:23:28Z",
            "url": "https://github.com/supabase/gotrue/issues/106",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1NDk4MjA0MA==",
                    "body": "I experienced ghe same with facebook as a provider.",
                    "author": {
                        "login": "ElesGergo"
                    },
                    "createdAt": "2021-06-04T20:29:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/106#issuecomment-854982040"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1NTk5NTk2OQ==",
                    "body": "Hi @ElesGergo, at the moment, I can't seem to reproduce the bug, could you please highlight the steps you took to enable facebook as an auth provider? If it helps, we have a [tutorial](https://www.youtube.com/playlist?list=PL5S4mPUpp4OvE6MLbO1xAMvKLKT1sFsHF) that provides a step-by-step guide on enabling 3rd-party providers on Supabase. Let me know if this helps \ud83d\udc4d ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-06-07T14:41:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/106#issuecomment-855995969"
                },
                {
                    "id": "IC_kwDOEKipmc40xZjF",
                    "body": "a lot of people are reporting getting spaces when they copy-paste the github client secret, might be worth checking for anyone experiencing the same",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-23T02:58:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/106#issuecomment-885364933"
                },
                {
                    "id": "IC_kwDOEKipmc40xZm-",
                    "body": "also there are backend auth logs inside the Supabase dashboard at Auth > Settings (scroll to the bottom), there should be some additional info there",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-23T02:59:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/106#issuecomment-885365182"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MDE4OTI1NTM=",
            "number": 107,
            "title": "redirectTo allows url which should not be permitted",
            "body": "with \r\n```\r\n      GOTRUE_SITE_URL: http://localhost:9999\r\n      GOTRUE_URI_ALLOW_LIST: https://supabase.io/docs\r\n```\r\n\r\nand a `redirect_to` of `https://supabase.io/docss` is permitted, but it should instead redirect to the default `http://localhost:9999` (note the extra 's' in 'docss')",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-26T07:25:36Z",
            "closedAt": "2021-06-14T15:02:51Z",
            "url": "https://github.com/supabase/gotrue/issues/107",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2MDc1NzE5Mw==",
                    "body": "fixed by #111 ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-06-14T15:02:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/107#issuecomment-860757193"
                },
                {
                    "id": "IC_kwDOEKipmc41VdC9",
                    "body": "I think it would make sense to to disable\r\n`https://supabase.io/docss` but to allow `https://supabase.io/docs?test=123` so that it's possible to add additional query strings to the redirect URI\r\n\r\nAn use case is to allow passing additional state such as `http://mysite.com/callback?secret=123456789` then I can know for a fact that the original user requested the email. I need this because sendMagicLinkEmail does not return an User response.",
                    "author": {
                        "login": "Illyism"
                    },
                    "createdAt": "2021-08-08T15:49:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/107#issuecomment-894816445"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MDI2MjMzOTk=",
            "number": 109,
            "title": "Custom email templates and sending",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI'm currently using Firebase Authentication which gives me full control over magic link emails. Their admin library simply [generates the email action links](https://firebase.google.com/docs/auth/admin/email-action-links) and I'm responsible for creating and sending the emails:\r\n\r\n```typescript\r\nconst email = 'johndoe@example.com';\r\nconst link = await admin.auth().generateSignInWithEmailLink(email);\r\nawait sendMyCustomLoginEmail(link);\r\n```\r\n\r\n## Describe the solution you'd like\r\n\r\nI want to have an API like Google's \u261d\ufe0f where I can generate all the email action links using a server-side Node.js library (or simply the GoTrue REST API already provided by Supabase) and then send the emails myself.\r\n\r\n## Describe alternatives you've considered\r\n\r\nYour [pricing page](https://supabase.io/pricing) specifies that people on any paid plan (i.e. \"Pro\" or \"Enterprise\") can remove Supabase branding from the authentication emails.\r\n\r\nIt also looks like I can customize the email templates send by Supabase in my project's \"Authentication\" tab:\r\n\r\n![image](https://user-images.githubusercontent.com/20798889/119693528-38ac6900-be01-11eb-9202-c8568bbe8771.png)\r\n\r\nBut, while that \u261d\ufe0f is really nice (and will probably work for most use-cases), I would like to be able to use whatever email templating library that I want. I already send other transactional emails to my users (e.g. meeting notifications, purchase confirmations) and I want all my emails to look the same. Thus, I want my authentication emails to use the same email templating solution that all my other transactional emails use.\r\n\r\n## Additional context\r\n\r\nCurrently, I [use SendGrid](https://github.com/tutorbookapp/tutorbook/blob/develop/lib/mail/send.ts) to send all my transactional emails that are composed of [React components with inline styling](https://github.com/tutorbookapp/tutorbook/blob/develop/lib/mail/components.tsx) and rendered with [`ReactDOMServer.renderToStaticMarkup`](https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup).\r\n\r\nFor example, for my current login link setup, my front-end simply calls [`POST /api/login`](https://github.com/tutorbookapp/tutorbook/blob/develop/pages/api/login.tsx) with the user's email and location:\r\n\r\n```tsx\r\n// pages/api/login.tsx\r\nimport LoginEmail from 'lib/mail/login';\r\nimport send from 'lib/mail/send';\r\n\r\nexport default async function login(req: Req, res: Res<void>): Promise<void> {\r\n  const actionCodeSettings = {\r\n    url: `http://${\r\n      req.headers.host || 'tutorbook.org'\r\n    }/confirm?href=${encodeURIComponent(req.body.redirect)}`,\r\n  };\r\n  const link = await auth.generateSignInWithEmailLink(req.body.email, actionCodeSettings)\r\n  if (err) throw new APIError(`${err.name} creating link: ${err.message}`, 500);\r\n  await send({\r\n    to: [{ email: req.body.email }],\r\n    subject: `Tutorbook Login Confirmation (${req.body.location}).`,\r\n    html: renderToStaticMarkup(\r\n      <LoginEmail link={link as string} location={req.body.location} />\r\n    ),\r\n  });\r\n  res.status(200).end();\r\n}\r\n```\r\n\r\nAnd then that [`LoginEmail`](https://github.com/tutorbookapp/tutorbook/blob/develop/lib/mail/login.tsx) template is defined using those reusable React components (that each have inline styling):\r\n\r\n```tsx\r\n// lib/mail/login.tsx\r\nimport { Button, Email, Footer, Header, Item, P } from 'lib/mail/components';\r\n\r\nexport interface LoginEmailProps {\r\n  link: string;\r\n  location: string;\r\n}\r\n\r\nexport default function LoginEmail({\r\n  link,\r\n  location,\r\n}: LoginEmailProps): JSX.Element {\r\n  return (\r\n    <Email>\r\n      <Header />\r\n      <Item left='48px' right='48px'>\r\n        <P style={{ marginTop: '0px !important' }}>Hi there,</P>\r\n        <P>\r\n          We just received a login attempt from {location}. To complete the\r\n          login process, simply click the button below:\r\n        </P>\r\n        <br />\r\n        <Button href={link}>CONFIRM LOGIN</Button>\r\n      </Item>\r\n      <Footer>\r\n        <P style={{ marginBottom: '0px !important' }}>\r\n          If you didn&apos;t attempt to log in but received this email, or if\r\n          the location doesn&apos;t match, please ignore this email. If you are\r\n          concerned about your account&apos;s safety, please reply to this email\r\n          to get in touch with us.\r\n        </P>\r\n      </Footer>\r\n    </Email>\r\n  );\r\n}\r\n```",
            "author": {
                "login": "nicholaschiang"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-26T16:13:07Z",
            "closedAt": "2021-07-15T10:12:34Z",
            "url": "https://github.com/supabase/gotrue/issues/109",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg0ODkwODYxOA==",
                    "body": "Also, you guys should update the authentication [docs](https://supabase.io/docs/guides/auth#tips) and [reference](https://supabase.io/docs/reference/javascript/reset-password-email) to make it clear that developers can customize the email templates from their project's \"Authentication\" tab. I had no idea that I could until I created a new project and opened that tab.",
                    "author": {
                        "login": "nicholaschiang"
                    },
                    "createdAt": "2021-05-26T16:15:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/109#issuecomment-848908618"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NTUwMjcxNw==",
                    "body": "Hey @nicholaschiang, thanks for the feedback! We've just made a PR for this issue so stay tuned! :) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-07T10:50:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/109#issuecomment-875502717"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg4MDU3MzIyOQ==",
                    "body": "Gonna close this issue now, we're currently testing it in our staging environment.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-15T10:12:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/109#issuecomment-880573229"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MTMxNzA4Nzc=",
            "number": 114,
            "title": "remove user email from session",
            "body": "# Feature request\r\n\r\nEmail is personally identifiable information and sensitive information, so exposing it is a security concern.\r\n\r\nCurrently, user email is provided in both the user and session responses from signIn and other methods:\r\n```\r\nconst { user, session, error } = await supabase.auth.signIn({\r\n  email: 'example@email.com',\r\n  password: 'example-password',\r\n})\r\n```\r\n\r\nSpecifically, email is within session.access_token.\r\n\r\nThis isn't necessary because we already have email within the user object.\r\n\r\n## Describe the solution you'd like\r\n\r\nThe system should use User UID in the session instead.\r\n\r\n## Describe alternatives you've considered\r\n\r\n1. Supabase could support secret salting for the jwt and/or specifically salting the email within the jwt.\r\n2. Supabase could support custom application jwts (I would really like this actually, but in addition to not instead of the current request)\r\n\r\n## Additional context\r\n\r\nStackExchange on why unencrypted emails are insecure:\r\nhttps://softwareengineering.stackexchange.com/a/408592/395521\r\n\r\nI know that some applications are fine with public emails - but some are not. Supabase should default to the less permissive pattern and applications can send along email by other means if desired.\r\n\r\nGithub, Twitter, Google - I consider these companies as security models and since Supabase supports social login from these providers it seems to be a shared value. I don't believe any of them have email in a req header or cookie in plain text, jwt, or b64 encoding. If it's there at all, it's obfuscated in a non-standard way.\r\n\r\nOTOH, they do make User ID apparent in cookies or other req headers\r\n",
            "author": {
                "login": "Vandivier"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-05T02:31:02Z",
            "closedAt": "2022-09-07T13:56:24Z",
            "url": "https://github.com/supabase/gotrue/issues/114",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg1NTYzNzg4Mg==",
                    "body": "Hey @Vandivier - I'm going to shift this to the Auth repo. It's a valid consideration (although could break all compatibility with the upstream Netlify server",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-06-07T06:44:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/114#issuecomment-855637882"
                },
                {
                    "id": "IC_kwDOEKipmc41Es3j",
                    "body": "unencrypted jwt also ends up in the URI during 'send magic link' flow\r\n\r\none solution here would be to let users add a salt or encryption key to the Supabase UI, perhaps in Auth -> Settings alongside External OAuth Providers. Supabase and application servers could share this secret without exposure elsewhere, including session and other cases.",
                    "author": {
                        "login": "Vandivier"
                    },
                    "createdAt": "2021-08-01T00:50:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/114#issuecomment-890424803"
                },
                {
                    "id": "IC_kwDOEKipmc5J4CYb",
                    "body": "hey @Vandivier, if the JWT is obtained by an attacker, even if the email isn't in the JWT payload, they can easily query the `GET /user` endpoint to return the entire user object which will also contain the user's email. We return the user's email in the JWT payload so they don't have to make an additional API call to `GET /user` to get the entire user object. This improves the DX of using gotrue significantly.\r\n\r\n> unencrypted jwt also ends up in the URI during 'send magic link' flow\r\n\r\nThe jwt is sent in the query fragment so it doesn't get logged by intermediate network routers. The only way an attacker can steal the JWT is if they have access to your browser's context. At this point, they can do much worse things than getting just the email from the JWT. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:56:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/114#issuecomment-1239426587"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MjU1ODgyODc=",
            "number": 117,
            "title": "Allow non http schemes for SITE_URL",
            "body": "I haven't tried to repro this one yet, investigation is needed, but @farzd has [reported](https://github.com/supabase/supabase/issues/1802) that redirects don't work for none http schemes in SITE_URL\r\n\r\nwe should be very cautious of security when implementing this change, strict validation of the custom scheme will be necessary for any change",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-20T12:26:42Z",
            "closedAt": "2021-07-01T02:48:21Z",
            "url": "https://github.com/supabase/gotrue/issues/117",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NjE3OTM5Ng==",
                    "body": "I'm also getting strange inconsistent results with just a HTTP url.\r\nThis is my URL\r\n![image](https://user-images.githubusercontent.com/1423413/122970904-55977600-d386-11eb-8421-e954880eb0dd.png)\r\n\r\nWhen i try do magic link via an API call\r\n```\r\n const { error } = await supabase.auth.signIn({\r\n  email: 'farzad.qasim[AT]gmail.com',\r\n });\r\n```\r\n\r\ni'm getting [without /signin suffix in the redirect link]\r\n![image](https://user-images.githubusercontent.com/1423413/122970709-2123ba00-d386-11eb-8a69-497c7c129021.png)\r\n\r\nBut if i send magiclink via backend CMS\r\n![image](https://user-images.githubusercontent.com/1423413/122970798-3c8ec500-d386-11eb-9b41-0ebdc9247123.png)\r\n\r\nI'm getting the correct url [with the /signin suffix in the redirect link]\r\n![image](https://user-images.githubusercontent.com/1423413/122970844-47e1f080-d386-11eb-8940-d56fac2b6d0f.png)\r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "farzd"
                    },
                    "createdAt": "2021-06-22T17:19:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/117#issuecomment-866179396"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NjQ5MDY1Nw==",
                    "body": "@farzd  - could you please check the network tab of your client, and let us know the URL when it calls [`/magiclink`](https://github.com/supabase/gotrue-js/blob/b887af5567409a189b0e700880a032c65d0d21e8/src/GoTrueApi.ts#L106)? Are there any params added to the end of the URL? It's definitely strange that there is different behaviour between the 2 systems",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-06-23T03:19:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/117#issuecomment-866490657"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NjczMjE1Mw==",
                    "body": "@kiwicopple from my client \r\n```\r\nPOST\r\nRequest URL: https://MYSUPABASEURL.supabase.co/auth/v1/magiclink\r\nRequest Payload: {email: \"farzad.qasim[AT]gmail.com\"}\r\n```\r\nI noticed that in the request headers, [i'm running a local React client]\r\n```\r\norigin: http://localhost:3000\r\nreferer: http://localhost:3000/\r\n```\r\nso i just ran the client from my IP address instead e.g: http://192.168.4.36:3000/\r\nand now i'm getting the correct link so not sure if localhost as the referer and Site URL has something to do with it\r\n\r\n",
                    "author": {
                        "login": "farzd"
                    },
                    "createdAt": "2021-06-23T10:45:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/117#issuecomment-866732153"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTg2MDM2NA==",
                    "body": "@farzd I think you'll need to explicitly set `http://localhost:3000/signin` as the `redirectTo` option in the js function,\r\n\r\nin this case the server is seeing the referer header and using that, but explicit `redirect_to` query params will take precedent ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-01T02:20:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/117#issuecomment-871860364"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTg2NTY5Ng==",
                    "body": "the original bug here seems to be an issue with the validation on the supabase dashboard, I tested the backend and it seems happy to receive alternate schemes\r\n\r\nhave opened an issue in our dashboard repo",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-01T02:34:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/117#issuecomment-871865696"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTg3MDI5Mw==",
                    "body": "hey @farzd this issue is now fixed it should be deployed into the dashboard today or tomorrow \ud83d\udc4d ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-01T02:48:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/117#issuecomment-871870293"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MzU3NjIzMQ==",
                    "body": "amazing turn around time guys \ud83d\ude80 \ud83d\ude80 \ud83d\ude80  \r\n\r\nThanks",
                    "author": {
                        "login": "farzd"
                    },
                    "createdAt": "2021-07-04T12:06:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/117#issuecomment-873576231"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MjU2MDExNzc=",
            "number": 118,
            "title": "Add Twitch as an auth provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nMy application requires users to be able to authenticate with their Twitch account.\r\n\r\n## Additional context\r\nhttps://dev.twitch.tv/docs/authentication",
            "author": {
                "login": "iipanda"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-20T13:35:38Z",
            "closedAt": "2021-07-09T05:28:26Z",
            "url": "https://github.com/supabase/gotrue/issues/118",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MzI3NTQ1MQ==",
                    "body": "I'll try to take this one - First request ever though.",
                    "author": {
                        "login": "dougwithseismic"
                    },
                    "createdAt": "2021-07-02T21:58:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/118#issuecomment-873275451"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MzMwMTA5MA==",
                    "body": "I'm not that familiar with Go so I'll pass on this one for now, but I think a nice place to start would be here: https://github.com/twitchdev/authentication-go-sample/blob/main/oidc-authorization-code/main.go along with the official documentation. @dougwithseismic ",
                    "author": {
                        "login": "OscarWoHA"
                    },
                    "createdAt": "2021-07-02T23:22:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/118#issuecomment-873301090"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NjkyNDYxNw==",
                    "body": "Hey everyone, gonna close this issue! We now have twitch as a new provider thanks to @ph1p \ud83c\udf89",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-09T05:28:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/118#issuecomment-876924617"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MjU5NzExMjk=",
            "number": 119,
            "title": "Chore: Return a \"successful\" response to avoid leaking information about who is signed up for the service",
            "body": "for this one we should start returning a \"successful\" response to avoid leaking information about who is signed up for the service\r\n\r\nref: https://security.stackexchange.com/a/234757\r\n\r\nrelated to #114 \r\n\r\n_Originally posted by @awalias in https://github.com/supabase/gotrue/pull/115#discussion_r655149348_",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-21T08:35:26Z",
            "closedAt": "2021-09-08T10:02:09Z",
            "url": "https://github.com/supabase/gotrue/issues/119",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42bnH_",
                    "body": "Hi @kangmingtay. I want to solve the issue. So, you can assign to me. Before starting, I want to make sure that I am on the right point.\r\nhttps://github.com/supabase/gotrue/blob/ceba0d5991b5230f25187baca9592cce576c5ca3/api/signup.go#L92\r\n\r\nHere, this is the line that you talk on https://github.com/supabase/gotrue/pull/115#discussion_r655149348. I think I just need to change the inside of the `badRequestError` function. Am I right? Also, \"**Thanks for registering, now go check your email to complete the process.**\" message is suitable for this issue? ",
                    "author": {
                        "login": "gozeloglu"
                    },
                    "createdAt": "2021-09-05T19:05:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/119#issuecomment-913207807"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MjY5MzU1ODA=",
            "number": 120,
            "title": "Setting Email Headers for Auth Mails",
            "body": "# Feature request\r\n\r\nI'm currently having some email deliverability issues with @gmx and @yahoo addresses.\r\n\r\nAfter some research I think it is because the auth emails don't have the \"From\" email header set.\r\n\r\n## Describe the solution you'd like\r\n\r\nAdd a \"From\" field to the auth templates so we can set the email header.  \r\n\r\n## Describe alternatives you've considered\r\n\r\nAdd a \"From\" field to the account settings to have it set global.\r\n\r\nThanks for your time!",
            "author": {
                "login": "chrcit"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-21T19:53:16Z",
            "closedAt": "2021-07-02T09:49:18Z",
            "url": "https://github.com/supabase/gotrue/issues/120",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NTQ1OTEzNw==",
                    "body": "Hi @christiancito, thanks for your question! You can check out the discussion [here](https://github.com/supabase/gotrue/issues/88#issuecomment-843764217) for a way around this. Basically, it involves using the custom SMTP server on the supabase dashboard and setting the \"SMTP Admin Email\" to the email address of your choice. Hope this helps!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-06-22T01:49:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-865459137"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NTY0MzAzNA==",
                    "body": "@kangmingtay Hi, thanks for the swift reply. I setup the custom smtp and the custom email address is working properly. \n\nWhat I'm unable to set is the name of the sender. Without this header some mail servers get pre blocked by my mail services (Mailjet) or classify the mail as spam.",
                    "author": {
                        "login": "chrcit"
                    },
                    "createdAt": "2021-06-22T06:43:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-865643034"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NTY4MjE0Ng==",
                    "body": "@christiancito ah I see, hmm I did some investigation in our [auth repo](https://github.com/supabase/gotrue) and it seems that the \"SMTP Admin Email\" is actually being set as the header when the template is created. It seems to me like a specific problem with @gmx and @yahoo addresses? In the meantime, I'll be transferring this issue to our auth repo and we'll aim to investigate it further.\r\n\r\nHere are some links to the code which handles the SMTP flow and sets the header: \r\n1. We create a new mailer here and set the from field to the \"SMTP Admin Email\" value. See [here](https://github.com/supabase/gotrue/blob/1f83884c1e45f79bb9ff30c7c7566af293c7267b/mailer/mailer.go#L38)\r\n2. Then, we load different templates based on whether it's an invite, confirmation or recovery and then call the `mailme.Mailer.Mail()` method. See [here](https://github.com/supabase/gotrue/blob/1f83884c1e45f79bb9ff30c7c7566af293c7267b/mailer/template.go#L104) for more information.\r\n3. Finally, we call a 3rd party library to set the headers and body for the email template and send the email. See [here](https://github.com/netlify/mailme/blob/9b1d3a9cef8bb81cebaebff53ac464c3d15f1a45/mailme.go#L69) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-06-22T07:47:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-865682146"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NTY4OTM1MQ==",
                    "body": "@christiancito what value do you have in the \"SMTP_ADMIN_EMAIL\" field in the supabase dashboard? Is this address verified with your mail provider?",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-06-22T07:58:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-865689351"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NTgwNDU0Mg==",
                    "body": "@kangmingtay I'm sorry I worded the issues incorrectly. \r\n\r\nWhat I mean is that I'm unable to set the name of the sender not the email address. So the emails just come from \"theater@zeitimpuls.at\" not '\"zeitimpuls shortfilm festival\" <theater@zeitimpuls.at>'.\r\n\r\n@awalias I have \"theater@zeitimpuls.at\". This email is verified with the mail provider.",
                    "author": {
                        "login": "chrcit"
                    },
                    "createdAt": "2021-06-22T09:21:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-865804542"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NzE1ODMzNg==",
                    "body": "To fix this issue I switched from Mailjet to Postmark (all around better tool).\r\nThere I was able to set the a sender name.\r\n\r\nNot sure if Mailjet is unique in not providing a sender name for a sender email or if it would be good to have this in Supabase. As far as I can tell the default Supabase emails also don\u2019t have a header set.\r\nThis led tons of email servers to block us.",
                    "author": {
                        "login": "chrcit"
                    },
                    "createdAt": "2021-06-23T21:04:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-867158336"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTkyMzM0Nw==",
                    "body": "> What I mean is that I'm unable to set the name of the sender not the email address. So the emails just come from \"[theater@zeitimpuls.at](mailto:theater@zeitimpuls.at)\" not '\"zeitimpuls shortfilm festival\" [theater@zeitimpuls.at](mailto:theater@zeitimpuls.at)'.\r\n\r\nHey @christiancito! Yeah you're right, I realised the 3rd party library we were using doesn't have the option to format the \"From\" header to allow for a custom sender name. I've made the fix on our end and it should be possible to do so when we enable it on the UI. Stay tuned! :) \r\n\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-01T05:06:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-871923347"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3Mjg3MTE1OA==",
                    "body": ":tada: This issue has been resolved in version 1.8.2 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v1.8.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-07-02T09:50:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/120#issuecomment-872871158"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5Mjc3OTAyNDI=",
            "number": 121,
            "title": "Supabase Twitter oauth is logging in as the same user? Same UID every time.",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/2057\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **richiemcilroy** June 23, 2021</sup>\r\nI've implemented Supabase into Next.js, got auth to work, but when logging in via Twitter it's logging into the same UID every single time, when the twitter account is different. It provides the exact same UID every time.\r\n\r\nInitial function:\r\n\r\n```\r\n  const handleOAuthSignIn = async (provider) => {\r\n    setLoading(true);\r\n    const { error } = await signIn({ provider });\r\n    if (error) {\r\n      setMessage({ type: 'error', content: error.message });\r\n    }\r\n    setLoading(false);\r\n  };\r\n```\r\n\r\nSign in request:\r\n\r\n`signIn: (options) => supabase.auth.signIn(options),`\r\n\r\nAny ideas?</div>",
            "author": {
                "login": "inian"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-23T02:14:01Z",
            "closedAt": "2021-10-08T06:40:46Z",
            "url": "https://github.com/supabase/gotrue/issues/121",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU5MjkxMjM3NjU=",
            "number": 123,
            "title": "Additional redirect URLs not working reliably",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nURLs added in \"Additional Redirect URLs\" used to work but now only the URL in \"Site URL\" does. Also, added URLs don't seem to work right away?\r\n\r\n## To Reproduce\r\n\r\nA little bit hard to reproduce, but here's what I did:\r\n\r\n1. Added http://localhost:3000 in \"Additional Redirect URLs\" and https://some-site.com in \"Site URL\"\r\n2. Did not work for the first couple of hours, and all of sudden it worked\r\n3. Did not touch any auth settings and...\r\n4. After some time, tried to set http://localhost:3000 in `redirectTo` but I got https://some-site.com as `redirect_url` parameter\r\n\r\nI tried to refresh auth settings page a couple of times to check if URLs are saved.\r\n\r\n## Expected behavior\r\n\r\nWhen I update URLs in auth settings, I should be able to use those URLs in `redirectTo` option and get that URL as `redirect_url` parameter.\r\n\r\n## System information\r\n\r\n- Version of supabase-js: 1.15.0\r\n\r\n## Additional context\r\n\r\nPossibly related to https://github.com/supabase/supabase/issues/1895",
            "author": {
                "login": "heauton"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-24T09:37:20Z",
            "closedAt": "2021-07-29T05:42:29Z",
            "url": "https://github.com/supabase/gotrue/issues/123",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg2NzU1NDk0OA==",
                    "body": "moving this to gotrue repo",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-06-24T11:19:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-867554948"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MDE1OTMwNA==",
                    "body": "Hey @heauton, which endpoint were you calling that led to this? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-06-29T01:33:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-870159304"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MDk0MzE0MQ==",
                    "body": "I'm also seeing this issue.\r\n\r\nI have `http://localhost:3000` as one of 3 additional URLs. When I call `supabase.auth.signIn` with `redirectTo: 'http://localhost:3000/some/path'`, the link that is emailed to the user contains `redirect_to=https://my-site-url.com`.",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-06-29T21:52:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-870943141"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTAzOTIwNQ==",
                    "body": "I'm having the same issue.",
                    "author": {
                        "login": "JSsantana"
                    },
                    "createdAt": "2021-06-30T01:58:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-871039205"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTIxNDM2MQ==",
                    "body": "@heauton are you able to reproduce this? It may have been something related to our internal infrastructure if there was some delay in the setting of the values\r\n\r\n@emschwartz this seems like the correct behaviour - the additional URLs need to be *exact* matches (including scheme, path), so you would need to add `http://localhost:3000/some/path` to be able to redirect to this URI\r\n\r\nnote: the purpose of additional URLs was initially for mobile deep links which may not conform to the standard `scheme://sub.domain.tld` pattern hence why we can not match the host securely with wildcard paths etc.\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-06-30T08:47:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-871214361"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTQwMjk3Mw==",
                    "body": "@awalias I didn't have that exact path in the additional URLs. Will it let through dynamic query strings? Or, is there a way I could change the additional URLs programmatically (ideally with a DB trigger but alternatively with an API call)? I need people to be able to login to a specific page whose path is dynamically generated.\r\n\r\nAnother idea: would it be possible to have a separate config option for additional URLs where you want to match only the scheme and host? I understand that the original use case for the additional URLs was mobile deep links -- and it makes sense to have a config option for that -- but the behavior of this option seems a bit limiting.",
                    "author": {
                        "login": "emschwartz"
                    },
                    "createdAt": "2021-06-30T13:25:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-871402973"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MTg2MTIyMA==",
                    "body": "sure! I think you already saw the related issue here: https://github.com/supabase/gotrue/issues/99\r\n\r\nI think it should support your use case\r\n\r\nfor the current field (additional uris) it's difficult for us to parse the strings securely since mobile deep links can take any form (sometimes reverse URLs for example)",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-01T02:22:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-871861220"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3Mjg4OTg2Nw==",
                    "body": "I'm having the same issue. What is the best way to handle additional urls for development use cases?",
                    "author": {
                        "login": "conradlin"
                    },
                    "createdAt": "2021-07-02T10:20:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-872889867"
                },
                {
                    "id": "IC_kwDOEKipmc40-lBD",
                    "body": "We've fixed this issue already and i'm gonna close this issue for now. Please feel free to reopen it if you're still experiencing these issues thanks!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-29T05:42:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/123#issuecomment-888819779"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5MzYxNDI1MzQ=",
            "number": 130,
            "title": "Return the user's Discord ID in the Supabase Auth user_metadata",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nMany interactions with the Discord API require the authenticated user's Discord ID. The user's Discord ID is available in the Oauth flow here https://github.com/supabase/gotrue/blob/master/api/provider/discord.go#L26 but it is omitted from the Supabase Auth `user_metadata` here https://github.com/supabase/gotrue/blob/master/api/provider/discord.go#L90-L93\r\n\r\nThis is a show stopping issue for Discord specifically, but I imagine it may be useful to have the user's ID on other provider's platforms as well.\r\n\r\n## Describe the solution you'd like\r\n\r\nInclude the user's Discord ID from the Oauth flow in the Supabase Auth `user_metadata`. Currently, when fetching either the Supabase Auth Session or the Supabase Auth User, the `user_metadata` looks like this:\r\n\r\n```\r\nuser_metadata: {\r\n  avatar_url: \"some url\",\r\n  full_name: \"some name\"\r\n}\r\n```\r\n\r\nThis feature would change it to this:\r\n\r\n```\r\nuser_metadata: {\r\n  discord_id: \"some id\",\r\n  avatar_url: \"some url\",\r\n  full_name: \"some name\"\r\n}\r\n```\r\n\r\nOr if it makes more sense to have a generic solution for all providers:\r\n\r\n```\r\nuser_metadata: {\r\n  provider_id: \"some id\",\r\n  avatar_url: \"some url\",\r\n  full_name: \"some name\"\r\n}\r\n```\r\n\r\n## Describe alternatives you've considered\r\n\r\nIt's easy enough to Oauth with Discord directly through their `/users/@me` endpoint, without using the supabase-js client, and therefore have access to the user's Discord ID from the Discord Oauth response. However, this solution does more harm than good because you lose the automatic user management on the Supabase side if you bypass the supabase-js client.\r\n\r\n",
            "author": {
                "login": "fredguest"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-03T01:43:11Z",
            "closedAt": "2021-07-09T09:41:27Z",
            "url": "https://github.com/supabase/gotrue/issues/130",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3MzQ5NjEwNw==",
                    "body": "It does seem odd that this issue has never been raised with another provider, but I think the reason may be that most of the familiar auth providers have made their platform APIs more restricted and less useful over time, such that most developers use them exclusively for authentication at this point. Discord is the exact opposite. It has a very broad API that has only expanded in functionality over time, such that most developers primarily use it to build integrations, and therefore use the auth as well in a supporting role. In any case, the user's Discord ID is essential.",
                    "author": {
                        "login": "fredguest"
                    },
                    "createdAt": "2021-07-04T01:22:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/130#issuecomment-873496107"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NzA1NjgyNg==",
                    "body": "Hi @fredguest, thanks for spotting this! I've included it in the PR [here](https://github.com/supabase/gotrue/pull/136) and it will be in the upcoming release, so stay tuned! Keep hacking \ud83d\ude0e",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-09T09:39:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/130#issuecomment-877056826"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDAwNzI2NTM=",
            "number": 134,
            "title": "Allow invite links to be sent more than once",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nAn admin user can only send the invite link to a new user once. Once the link expires, the user will not be able to use the invite link to signup and the admin user cannot issue a new invite link.\r\n\r\n",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-08T17:25:37Z",
            "closedAt": "2021-07-21T11:14:16Z",
            "url": "https://github.com/supabase/gotrue/issues/134",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU5NDA5MzU3NzI=",
            "number": 137,
            "title": "Integration tests not passing",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nRunning `make test` as described in [CONTRIBUTING.md](https://github.com/supabase/gotrue/blob/master/CONTRIBUTING.md) after following all the other steps (setup, building, migrations) results in a lot of failing tests and ultimately a null pointer error  `suite.go:63: test panicked: runtime error: invalid memory address or nil pointer dereference`. Most of the failing test are failing because of a 401 (unauthorized) response \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Clone repo to local machine \r\n2. Install dependencies (including soda cli & running `make deps`)\r\n3. Build gotrue \r\n4. Run migrations (`make migrate_dev` && `make migrate_test`) \r\n5. Test (`make test`)\r\n4. See error\r\n\r\n## Expected behavior\r\n\r\nPassing tests\r\n\r\n## Screenshots\r\n![Screenshot 2021-07-09 at 19 06 01](https://user-images.githubusercontent.com/15890505/125113295-c2ca3b80-e0e8-11eb-8915-4d65a4a53033.png)\r\n\r\n\r\n## System information\r\n\r\n- OS: [Ubuntu 20.04 and macOS Big Sur]\r\n- Version of Go: [go1.16.1]\r\n",
            "author": {
                "login": "i-pip"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-09T17:09:03Z",
            "closedAt": "2022-01-19T09:09:18Z",
            "url": "https://github.com/supabase/gotrue/issues/137",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NzQwNDA1OQ==",
                    "body": "Hey @i-pip, thanks for bringing this up! There are 2 reasons why the tests are failing currently:\r\n1. The netlify upstream uses mysql whereas our gotrue repo is based on postgres\r\n2. The netlify upstream uses the `is_super_admin` to determine if a user is an admin. However, our gotrue repo assigns a `role` field in the JWT to determine if a user is an admin or not. \r\n\r\nGoing forward, the priority will be to clean up the test suite but in the meantime, we're focusing on unit testing parts of the codebase first. Hope this clarifies! :) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-09T19:17:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/137#issuecomment-877404059"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NzQwNzcwNg==",
                    "body": "Thanks for the clarification @kangmingtay. I've been racking my head a few days now wondering if there's something wrong with my setup (both linux and mac)... I'll leave this open for any new contributors that run into the same issue \r\n",
                    "author": {
                        "login": "i-pip"
                    },
                    "createdAt": "2021-07-09T19:24:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/137#issuecomment-877407706"
                },
                {
                    "id": "IC_kwDOEKipmc48kmmu",
                    "body": "Closing since all the tests are passing now.\r\n\r\nLet us know if you're still facing any issues @i-pip\r\nThanks for reporting this!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-19T09:09:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/137#issuecomment-1016228270"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDEwMDQ5NDE=",
            "number": 138,
            "title": "Site Url is truncated in \"Confirm Email Change\"",
            "body": "## Describe the bug\r\n\r\nI set up my \"Site Url\" parameter in supabase dashboard at \"https://xxxxxx.vercel.app/api/redirect\" (xxxxxx=edited) but the confirmation link in the email point to \"https://xxxxxx.vercel.app\". \r\n\r\nlink in email is:\r\n\r\nhttps://xxxxxx.vercel.app/?email_change_token=dOf8Nuc1ImB77lmn0JER9K&type=email_change&redirect_to=https://xxxxxx.vercel.app/\r\n\r\n\r\n\r\n",
            "author": {
                "login": "edelah"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-09T14:57:34Z",
            "closedAt": "2021-08-27T03:15:30Z",
            "url": "https://github.com/supabase/gotrue/issues/138",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDg3NzQwMDYxNw==",
                    "body": "Hi @edelah, thanks for raising this issue. Can I confirm that this issue is only encountered when a user tries to change his / her email? We have a PR for the fix [here](https://github.com/supabase/gotrue/pull/132) and will be planning to release it soon so stay tuned!\r\n\r\nPS: will be transferring the issue to our gotrue repo for better visibility ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-09T19:10:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/138#issuecomment-877400617"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDQ0MjUxNjA=",
            "number": 139,
            "title": "Email Confirm and Password reset via code",
            "body": "Hi Team,\r\nIs it possible for email confirmation, we can ask users to enter the verification code rather than clicking the link?",
            "author": {
                "login": "nomanmurtaza786"
            },
            "state": "CLOSED",
            "createdAt": "2021-03-20T10:57:50Z",
            "closedAt": "2022-02-10T07:49:28Z",
            "url": "https://github.com/supabase/gotrue/issues/139",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49qqol",
                    "body": ":tada: This issue has been resolved in version 2.5.8 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.5.8)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-02-10T07:50:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/139#issuecomment-1034594853"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDU4MDk0NjY=",
            "number": 140,
            "title": "Bring proper OAuth flow for Mobile Apps",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nPlease correct me if I am wrong, but currently third party login using OAuth is only supported for web. It would be great if there were a way we could login users on iOS and Android apps. \r\n\r\nWith the current setup, when users are logging into mobile application using Supabase OAuth login, they are first redirected to the browser and would complete the login process there. The problem with this is that when doing a social login, most users are not logged in on their browser, so they are required to enter their email and password when using third party login with Supabase. This is a friction that we don't typically expect from social account login. \r\n\r\nI am not by all means an expert in Auth, so please correct me if I am not making sense, but it seems like not every login provider have proper auth flow for mobile apps. Here are some of my findings from a quick google search:\r\n\r\n- Google login for mobile on how to obtain an access token note that there is no client secret:\r\nhttps://developers.google.com/identity/protocols/oauth2/native-app#obtainingaccesstokens\r\n\r\n- Facebook login for mobile on how to obtain access token\r\n[For iOS](https://developers.facebook.com/docs/facebook-login/ios/)\r\n[For Android](https://developers.facebook.com/docs/facebook-login/android)\r\n- Twitter login flow seems to be same for mobile and web, so not much to do there\r\n- Other providers are yet to have research done...\r\n\r\n## Describe the solution you'd like\r\n\r\nHave no idea how to go about implementing this...\r\n\r\n## Describe alternatives you've considered\r\n\r\nUsing the auth flow of redirecting the users to the browser, which are not ideal for some platforms. \r\n\r\n## Additional context\r\n\r\nThis seems like a massive amount of work, so not looking for any immediate solutions, but just wanted to open this issue so that we have something to point people to when they come with this request. We are getting quite a few requests about proper mobile auth flow from Flutter developers. \r\n",
            "author": {
                "login": "dshukertjr"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-15T22:59:38Z",
            "closedAt": "2021-11-07T00:51:28Z",
            "url": "https://github.com/supabase/gotrue/issues/140",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc40zyua",
                    "body": "Yep, would be nice if we could get the auth flow in react native to work properly \u2757 ",
                    "author": {
                        "login": "vbylen"
                    },
                    "createdAt": "2021-07-24T03:18:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/140#issuecomment-885992346"
                },
                {
                    "id": "IC_kwDOEKipmc409HVw",
                    "body": "+1 For this",
                    "author": {
                        "login": "NiketanG"
                    },
                    "createdAt": "2021-07-28T16:10:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/140#issuecomment-888436080"
                },
                {
                    "id": "IC_kwDOEKipmc41U7Ae",
                    "body": "Hi Team, is there any eta on this from supabase end?\r\n\r\nit would be great to know, so we can plan the mobile app development accordingly. \r\n\r\n",
                    "author": {
                        "login": "himeshp"
                    },
                    "createdAt": "2021-08-07T16:41:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/140#issuecomment-894677022"
                },
                {
                    "id": "IC_kwDOEKipmc45XxCK",
                    "body": "With https://github.com/supabase/gotrue/pull/189, this issue is now closed!",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2021-11-07T00:51:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/140#issuecomment-962531466"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDU5NTI5NTg=",
            "number": 141,
            "title": "Return user on successful /POST verify",
            "body": "# Bug report\r\nCurrent JSON response returned on successful POST /verify contains `user: null` \r\n\r\nReason for current implementation: Netlify upstream originally returns `user:null` on the /verify endpoint",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-16T05:15:49Z",
            "closedAt": "2022-02-28T07:46:26Z",
            "url": "https://github.com/supabase/gotrue/issues/141",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42Zpwt",
                    "body": "I'm hitting this error calling the SignOut() function from the Svelte quick-start documentation:\r\n\r\n```\r\nasync function signOut() {\r\n\t\ttry {\r\n\t\t\tloading = true;\r\n\t\t\tlet { error } = await supabase.auth.signOut();\r\n\t\t\tif (error) throw error;\r\n\t\t} catch (error) {\r\n\t\t\talert(error.message);\r\n\t\t} finally {\r\n\t\t\tloading = false;\r\n\t\t}\r\n\t}\r\n```\r\n\r\nGetting error:\r\n\r\n```\r\nSignOut.svelte:19 TypeError: Cannot read properties of null (reading 'user')\r\n    at Object.callback (index.svelte? [sm]:11)\r\n    at GoTrueClient.ts:617\r\n    at Map.forEach (<anonymous>)\r\n    at SupabaseAuthClient._notifyAllSubscribers (GoTrueClient.ts:617)\r\n    at SupabaseAuthClient.<anonymous> (GoTrueClient.ts:437)\r\n    at Generator.next (<anonymous>)\r\n    at polyfills.ts:19\r\n    at new Promise (<anonymous>)\r\n    at __awaiter3 (polyfills.ts:19)\r\n    at SupabaseAuthClient.signOut (GoTrueClient.ts:434)\r\n```",
                    "author": {
                        "login": "aaronkai"
                    },
                    "createdAt": "2021-09-03T17:25:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/141#issuecomment-912694317"
                },
                {
                    "id": "IC_kwDOEKipmc447vhu",
                    "body": "What are the options here, considering upstream might not fix this?",
                    "author": {
                        "login": "domnantas"
                    },
                    "createdAt": "2021-10-30T10:12:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/141#issuecomment-955185262"
                },
                {
                    "id": "IC_kwDOEKipmc4560Jp",
                    "body": "@domnantas \r\n\r\nI was able to mitigate this, in JS frontend, by signing in again with the refresh_token, like this:\r\n\r\n```javascript\r\n  const veriyOTP = async () => {\r\n    let { session, error } = await supabase.auth.verifyOTP({\r\n      phone: `+1${phoneNumber}`,\r\n      token: code,\r\n    });\r\n    \r\n    if (session?.refresh_token && !error) {\r\n      const {\r\n        user,\r\n        session: sesh,\r\n        error,\r\n      } = await supabase.auth.signIn({\r\n        refreshToken: session.refresh_token,\r\n      });\r\n    }\r\n  };\r\n```\r\n\r\nThis returns the user, and fires `supabase.auth.onAuthStateChange` with a user in the session. This will work for now, but SMS auth has been heavily promoted as a big new feature and this was reported a while ago ",
                    "author": {
                        "login": "Seanmclem"
                    },
                    "createdAt": "2021-11-17T15:59:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/141#issuecomment-971719273"
                },
                {
                    "id": "IC_kwDOEKipmc459w7K",
                    "body": "Hey @Seanmclem, apologies for missing out on this and the delay! We've been working alot on other aspects of gotrue - in particular migrating our dashboard from auth0 to gotrue so we can start dogfooding gotrue. But since this seems like a high priority for most of yall, I'll discuss this with my team and look to push out a fix ASAP. \r\n\r\nAnother workaround you can consider is to also call the `GET /user` endpoint with the access token you get after verification to obtain the user object. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-11-18T03:44:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/141#issuecomment-972492490"
                },
                {
                    "id": "IC_kwDOEKipmc46oR8y",
                    "body": "Hey everyone, just an update, we have decided **not** to return a user on successful `POST /verify` due to the following reasons:\r\n1. `/verify` should be only responsible for verifying confirmation / recovery / invite / email change tokens\r\n2. To get an authenticated user, you should use the `GET /user` endpoint and pass a valid access token JWT as the authorisation header.\r\n\r\nWill be closing this issue if there are no further questions! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-01T13:24:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/141#issuecomment-983637810"
                },
                {
                    "id": "IC_kwDOEKipmc4-0nGn",
                    "body": ":tada: This issue has been resolved in version 2.5.19 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.5.19)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-02-28T07:49:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/141#issuecomment-1053979047"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDYwNTk0MDU=",
            "number": 142,
            "title": "Allow configuration of OAuth2 redirect domain in hosted supabase console",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIn the OAuth 2 authentication flow, a user is redirected to the supabase.co domain in the callback step. Google in particular shows this to the user with the message 'Enter your password to continue to supabase.co' - which is confusing for the user, given they are coming from a domain with a different name and probably don't know what supabase is (a pity, of course!).\r\n\r\nThe second problem is identified in this issue: [Unable to use Google OAuth in production](https://github.com/supabase/supabase/issues/2128) - we are unable to verify a Google OAuth2 client, as we can't verify the supabase.co domain which must be included in a list of allowed callbacks. Therefore we must use an unverified client - with a limit on users.\r\n\r\n## Describe the solution you'd like\r\n\r\nWhen supabase.co/auth/v1/authorize is called for an OAuth2 flow, it sets the callback to [myproject].supbase.co/v1/auth/callback - but it would solve the above problems if the callback was configurable to a proxy, eg auth.[mydomain]/callback\r\n\r\nI already mask the supabase.co project auth API (via a Vercel rewrite) - so for example, authentication requests go through auth.[mydomain]/authorize - which is then proxied to [myproject].supabase.co/auth/v1/authorize. This is handy for React Native, which asks the user if it's OK to proceed to auth.[mydomain] before opening a browser to complete an authentication session - which would be confusing to users if it asked to go to supabase instead.\r\n\r\nIt appears the underlying GoTrue server is configured to use a callback URL with a [EXTERNAL_X_URL environment variable](https://supabase.io/docs/gotrue/server/about#external-authentication-providers) which is presumably set to [myproject].supbase.co/v1/auth/callback.\r\n\r\nIf the Supabase console allowed setting the callback location to an URL that proxies to the GoTrue server, that would solve the above problems - users would not get confused about what they are logging into, and Google verification would be possible.\r\n\r\n## Describe alternatives you've considered\r\n\r\n...supporting custom domains globally for a Pro plan!\r\n",
            "author": {
                "login": "heysailor"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-06T01:37:38Z",
            "closedAt": "2023-08-21T08:56:28Z",
            "url": "https://github.com/supabase/gotrue/issues/142",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc40hyHS",
                    "body": "hey! have moved this to the gotrue repo.\r\n\r\nyou're spot on in your assessment of the solution @heysailor :)\r\n\r\nonce we add the option to the dashboard you should be able to set some proxy URLs\r\n\r\nfor this one:\r\n> Therefore we must use an unverified client - with a limit on users.\r\n\r\nI believe it's only needed to verify if you are using restricted or sensitive scope, and there is also a mechanism for having the requirement waived if you are using a platform (like supabase). Regardless, it should also be solved by the solution you proposed \ud83d\udc4d \r\n\r\n\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-16T08:26:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-881271250"
                },
                {
                    "id": "IC_kwDOEKipmc40lmCq",
                    "body": "Thanks @awalias \r\n\r\n> I believe it's only needed to verify if you are using restricted or sensitive scope, and there is also a mechanism for having the requirement waived if you are using a platform (like supabase). Regardless, it should also be solved by the solution you proposed \ud83d\udc4d\r\n\r\nYou're correct, verification is only needed for restricted or sensitive scopes - although also if you want to display a logo on the consent page, so it's nice to have. [Can't see anywhere an allowance for using a platform.](https://support.google.com/cloud/answer/9110914?hl=en)\r\n\r\nProxy support, or custom domains, would be ace. Cheers",
                    "author": {
                        "login": "heysailor"
                    },
                    "createdAt": "2021-07-19T06:15:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-882270378"
                },
                {
                    "id": "IC_kwDOEKipmc42D2vN",
                    "body": "We're falling in the same scenario and we're unable to verify the supabase callback domains during google auth consent screen verification:\r\n![image](https://user-images.githubusercontent.com/893608/131087092-558ff911-b210-49fc-859c-2d446350e210.png)\r\n\r\nThe only info we're were able to gather on the topic from Google was: \r\n\r\n> Note: If you are using a third party service provider and your domain is owned by them, then you need to provide a detailed justification for us to validate it.\r\n\r\nhttps://support.google.com/cloud/answer/9110914?hl=en#how-smooth&zippy=%2Chow-can-i-make-sure-the-verification-process-is-as-streamlined-as-possible",
                    "author": {
                        "login": "kachar"
                    },
                    "createdAt": "2021-08-27T07:11:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-906980301"
                },
                {
                    "id": "IC_kwDOEKipmc42Musp",
                    "body": "I'm currently on the Free plan of supabase but I'll gladly upgrade to Pro plan just for this feature \ud83e\udd7a",
                    "author": {
                        "login": "vamonke"
                    },
                    "createdAt": "2021-08-31T14:46:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-909306665"
                },
                {
                    "id": "IC_kwDOEKipmc42vGK_",
                    "body": "> The only info we're were able to gather on the topic from Google was:\r\n> \r\n> > Note: If you are using a third party service provider and your domain is owned by them, then you need to provide a detailed justification for us to validate it.\r\n\r\nHave you found any way to provide said justification. I'm in the process of verifying, and I can't see any way to submit a justification for using a 3rd party domain",
                    "author": {
                        "login": "wyatt"
                    },
                    "createdAt": "2021-09-13T15:34:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-918315711"
                },
                {
                    "id": "IC_kwDOEKipmc42vNsw",
                    "body": "For those coming to this later: It\u2019s not terribly well documented on the\nGoogle side - you only need to verify a domain with them if you have a\ncustom icon.\n\nIf you already have an icon, it\u2019s quite tricky to remove it, yes truly.\nThere are some hacks to achieve it, but I found it was simplest to remove\nthe project and make a new one.\n",
                    "author": {
                        "login": "heysailor"
                    },
                    "createdAt": "2021-09-13T16:07:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-918346544"
                },
                {
                    "id": "IC_kwDOEKipmc43Bx_p",
                    "body": "After a bit of back and forth with Google, explaining what Supabase was, and why I needed those domains verified, they finally verified my site. I referenced the link @kachar mentioned, and now I've got a verified OAuth page in production.\r\n\r\nIT CAN BE DONE! \ud83c\udf89\ud83c\udf89\ud83c\udf89",
                    "author": {
                        "login": "wyatt"
                    },
                    "createdAt": "2021-09-20T19:23:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-923213801"
                },
                {
                    "id": "IC_kwDOEKipmc43EITo",
                    "body": "@wyatt - I've just been through the same back and forth explaining what Supabase is and had my verification request rejected (after 7 fairly unhelpful template emails from Google). I'm going to try and resubmit with the icon removed as @heysailor suggested; was there anything else in particular you did to get it through?",
                    "author": {
                        "login": "EmilePW"
                    },
                    "createdAt": "2021-09-21T10:06:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-923829480"
                },
                {
                    "id": "IC_kwDOEKipmc43ER4w",
                    "body": "Ugh that sounds hard work! \n\nI didn't try to get verification - I just made a new project, without an OAuth icon, which therefore didn't need verification.\n\nThis situation of not needing verification is covered in the [Google OAuth FAQ listed here](https://support.google.com/cloud/answer/9110914?hl=en#general-verification-process) - check under the \"When does my app need to be verified by Google?\" section. If you don't do any of the things listed there, you're free as a bird. ",
                    "author": {
                        "login": "heysailor"
                    },
                    "createdAt": "2021-09-21T10:57:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-923868720"
                },
                {
                    "id": "IC_kwDOEKipmc43EfTo",
                    "body": "@heysailor Oh I see - in my case I'm using sensitive scopes so I'll still need some kind of verification. I'm just going to try again anyway - seems like there's some randomness depending on whose reading the application so I'll just hope it works this time.\r\n\r\n@wyatt - did you have sensitive scopes in your case?",
                    "author": {
                        "login": "EmilePW"
                    },
                    "createdAt": "2021-09-21T12:12:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-923923688"
                },
                {
                    "id": "IC_kwDOEKipmc44gpaB",
                    "body": "For anyone whose found this thread and has the same problem as me where verification is required, the way I got around it was to create two separate OAuth clients; one for Supabase with the basic scopes so that it doesn't require verification (and no logo added, as above) and another with my own domain with the sensitive scopes. This way you can still easily integrate Google OAuth with Supabase for login/signup and then have incremental auth where you ask for permission with the second client as necessary.",
                    "author": {
                        "login": "EmilePW"
                    },
                    "createdAt": "2021-10-20T22:23:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-948082305"
                },
                {
                    "id": "IC_kwDOEKipmc476pn2",
                    "body": "This is great @EmilePW, thanks for the insight. I'll try the 2 client strategy when I need to access sensitive scopes later.",
                    "author": {
                        "login": "dhruvbhatia7"
                    },
                    "createdAt": "2022-01-04T22:52:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1005230582"
                },
                {
                    "id": "IC_kwDOEKipmc49F92V",
                    "body": "Does anyone have a solution to the first problem: getting the Google Oauth flow to say `to continue to MYDOMAIN.COM` rather than the scary looking supabase app name?\r\n\r\n<img width=\"502\" alt=\"Screenshot 2022-01-29 at 19 35 54\" src=\"https://user-images.githubusercontent.com/1463197/151675108-44f45c25-862b-48a4-a252-20dd1a527137.png\">\r\n\r\nI am hoping to migrate a substantial app over to supabase but this is a blocker for me as I think this message would scare users away",
                    "author": {
                        "login": "jordn"
                    },
                    "createdAt": "2022-01-29T19:39:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1024974229"
                },
                {
                    "id": "IC_kwDOEKipmc4-zC3n",
                    "body": "Can confirm that users find this sketchy \ud83d\ude05 would be amazing to get this resolved, even if it's a hacky solution to start",
                    "author": {
                        "login": "connorlindsey"
                    },
                    "createdAt": "2022-02-27T14:14:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1053568487"
                },
                {
                    "id": "IC_kwDOEKipmc4_VqBn",
                    "body": "I also got feedback that the \"random letter domain\" makes users feel uncomfortable to log in",
                    "author": {
                        "login": "LittlePouch"
                    },
                    "createdAt": "2022-03-09T07:49:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1062641767"
                },
                {
                    "id": "IC_kwDOEKipmc4_Zi1g",
                    "body": "Does this help you? https://github.com/supabase/supabase/discussions/2925#discussioncomment-1716295\r\n\r\nI've had two apps approved using the steps I described and it now shows \"to continue to <my site name>\". When you get to the bit about removing the supabase items in \"under Authorised Domains, ensure only your owned domains are in the list. If you see Supabase, clear the field and delete that line item\" I really do mean clear that field. Put your cursor in, highlight and delete the text so there's nothing in it, and then hit the trash button.",
                    "author": {
                        "login": "tourbillonlabs"
                    },
                    "createdAt": "2022-03-10T04:46:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1063660896"
                },
                {
                    "id": "IC_kwDOEKipmc4_cXRD",
                    "body": "@tourbillonlabs  Thanks, I'm trying that. I started the verification, we'll see how it goes. But I must say this is process quite confusing, ",
                    "author": {
                        "login": "LittlePouch"
                    },
                    "createdAt": "2022-03-10T19:10:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1064399939"
                },
                {
                    "id": "IC_kwDOEKipmc4_hywZ",
                    "body": "@LittlePouch Yeah. Swiftness of the process does seem to depend on which agent you get. My first attempt took 17 emails total and it's because they kept canned response-ing me and the wording was so subtle that I missed what they were getting at. Once I figured out the Authorised domains thing it went quickly. The second time I ticked all the boxes ahead, and only the button branding caught me out. But after I fixed that, success. I did reference the previously approved app in the application, so I'm not sure if that expedited as well.\r\n\r\nGood luck!",
                    "author": {
                        "login": "tourbillonlabs"
                    },
                    "createdAt": "2022-03-12T06:05:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1065823257"
                },
                {
                    "id": "IC_kwDOEKipmc5LfyaC",
                    "body": "Just discovered this issue. I've implemented a solution at https://github.com/supabase/gotrue/pull/725\r\n\r\nI should note there's no UI component required for the solution. Rather you provide the proxy URL as an option of your `signInWithOAuth` call. In my case this is much more preferable than an additional option in Supabase as I've actually got the same server/app handling multiple domains and I want to be able to make this decision at runtime.\r\n\r\nhttps://github.com/supabase/gotrue-js/pull/466",
                    "author": {
                        "login": "Benjamin-Dobell"
                    },
                    "createdAt": "2022-10-04T08:57:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1266624130"
                },
                {
                    "id": "IC_kwDOEKipmc5kfTCt",
                    "body": "Hey all,\r\n\r\nWe now offer [custom domains](https://supabase.com/docs/guides/platform/custom-domains) as an add on for our Pro plan. Going to close this issue for now but let me know if there are still unresolved concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-21T08:56:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/142#issuecomment-1685926061"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDYwNjMyNDU=",
            "number": 143,
            "title": "Allow user to map custom domain to callback url on Sign with OAuth Provider",
            "body": "# Feature request\r\n\r\nPartially addresses https://github.com/supabase/supabase/issues/1895 where the user isn't redirected to the `redirectTo` value specified by the developer after signing in with the desired OAuth provider.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nThis problem can be broken down into 2 parts:\r\n1. The OAuth provider only recognises that it needs to redirect the user to `https://<PROJECT_REF>.supabase.co/auth/v1/callback` and shows \"Continue to supabase.co\" (for google's case)\r\n* Possible solution: The developer will have to map the callback url to a url that they control.\r\n\r\n2.  Gotrue isn't aware of any urls associated with `https://<PROJECT_REF>.supabase.co/auth/v1/callback`.  \r\n* Possible solution: Implement logic in gotrue to associate custom urls to the callback url.\r\n",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-16T08:27:18Z",
            "closedAt": "2022-09-14T13:20:04Z",
            "url": "https://github.com/supabase/gotrue/issues/143",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KT_vl",
                    "body": "Duplicate of #142 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:20:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/143#issuecomment-1246755813"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDgzMzY3MDY=",
            "number": 146,
            "title": "Support for Sign in using third party OAuth access token",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI want to migrate my chrome extension, which currently uses `Firebase Javascript SDK`, to `Supabase`. Currently I use `chrome.identity.getAuthToken()` which returns a Google OAuth access token. Then we pass this access token to `firebase.auth.GoogleAuthProvider.credential(null, access_token)` which initializes the user session.\r\n\r\nIs there a way I can directly use the third party OAuth access token for Supabase login?\r\n\r\n## Describe the solution you'd like\r\n\r\nJust like refresh token, I would like to have support for login via third party OAuth access token.\r\n\r\n## Describe alternatives you've considered\r\n\r\nI have tried setting the access token via the exposed method `supabase.auth.setAuth(access_token)` but it doesn't work since it only sets the jwt token and does not initialize the session.\r\n\r\n## Additional context\r\n\r\nI cannot use the usual login flow using Supabase third-party login provider(google) because Google restricts the opening of popups and iframes in Chrome Manifest V3.",
            "author": {
                "login": "amitsingh-007"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-20T06:45:07Z",
            "closedAt": "2022-09-14T13:30:21Z",
            "url": "https://github.com/supabase/gotrue/issues/146",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42DhbX",
                    "body": "Hey @amitsingh-007, thanks for the feedback, we'll be working on getting this up soon so that you can choose to stick with your own usual login flow and send the access token to gotrue to initialise the session / signup user in the auth schema via gotrue.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-08-27T03:14:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/146#issuecomment-906893015"
                },
                {
                    "id": "IC_kwDOEKipmc43dvr8",
                    "body": "@kangmingtay it looks like you gave an explanation for a login flow for an arbitrary auth provider which uses oAuth. Could you elaborate a bit more on how how \"initialise the session / signup user in auth scheme\" works? There are a lot of requests for new auth integrations. I think a solid guide on how to use them arbitrarily unsupported OAuth providers would help a lot of people.",
                    "author": {
                        "login": "JanRuettinger"
                    },
                    "createdAt": "2021-09-29T21:07:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/146#issuecomment-930544380"
                },
                {
                    "id": "IC_kwDOEKipmc46-lRw",
                    "body": "+1 \r\nWould be great to have this feature implemented as well. Refresh token only works once, I have a use-case where I need to log in the user using the same token multiple times. Sign in with access token would solve for this.",
                    "author": {
                        "login": "dhruvbhatia7"
                    },
                    "createdAt": "2021-12-09T03:50:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/146#issuecomment-989484144"
                },
                {
                    "id": "IC_kwDOEKipmc483oN5",
                    "body": "@amitsingh-007\r\n\r\nThe functionality you are looking for should be possible by using oidc's idtoken instead of oauth2's access token.\r\n\r\nSo it is practically the same as this issue.\r\nhttps://github.com/supabase/gotrue-js/issues/169\r\n\r\nAnd there is already a pull request for this issue.\r\nhttps://github.com/supabase/gotrue-js/pull/207\r\n\r\nOnce this pull request is merged, you should have the functionality you are looking for.\r\n\r\nPlease help us merge this pull request.\r\n\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-25T14:05:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/146#issuecomment-1021215609"
                },
                {
                    "id": "IC_kwDOEKipmc483oft",
                    "body": "@kangmingtay @JanRuettinger @dhruvbhatia7\r\nPlease Help.",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-25T14:06:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/146#issuecomment-1021216749"
                },
                {
                    "id": "IC_kwDOEKipmc5KUDBV",
                    "body": "Hey everyone, we're not planning to support this in the near future because we prioritising other features such as MFA and SAML for now. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:30:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/146#issuecomment-1246769237"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NDk1NjE3NjQ=",
            "number": 149,
            "title": "Confirmation url stripped after \"#/\" by browsers",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nWhen clicking on the confirmation url of the invite or recover emails, if the value of the redirect_to parameter of the url contains \"#/\", the part after is stripped by the browser.\r\n\r\n## To Reproduce\r\n\r\n1. With GOTRUE_SITE_URL = http://localhost:5000/#/\r\n2. Send an invite email.\r\n3. Click on the link in the invite email : http://localhost:8000/ext/auth/verify?token=LxSrVKfTNFRFJK4qhF0wHA&type=invite&redirect_to=http://localhost:5000/#/\r\n4. -> The link is opened by the browser which strips the url on '#/', so Gotrue receives a wrong redirect_to url : http://localhost:5000/ instead of http://localhost:5000/#/ . Then the user is not redirected at the expected location.\r\n\r\n\r\n## Expected behavior\r\n\r\nThe redirect_to url should not be stripped when the user clicks on the link.    \r\nTo avoid that, Gotrue should urlencode the redirect_to parameter when building the confirmation url in the email.\r\nThe link in the email would then look like :\r\nhttp://localhost:8000/ext/auth/verify?token=LxSrVKfTNFRFJK4qhF0wHA&type=invite&redirect_to=http%3A%2F%2Flocalhost%3A5000%2F%23%2F   \r\ninstead of :  \r\nhttp://localhost:8000/ext/auth/verify?token=LxSrVKfTNFRFJK4qhF0wHA&type=invite&redirect_to=http://localhost:5000/#/ \r\n\r\n",
            "author": {
                "login": "tartard"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-21T10:26:43Z",
            "closedAt": "2022-09-27T06:58:42Z",
            "url": "https://github.com/supabase/gotrue/issues/149",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc41wWIZ",
                    "body": "This issue effects the Flutter framework as it defaults to a # url strategy. In my case my URLs are:\r\n\r\nhttps://amsbkonxeeapffdsedwm.supabase.co/auth/v1/verify?token=YSt3hWNH0t-gkSIplHaPJg&type=recovery&redirect_to=http://example.com:36969/#authed?\r\n\r\nhttp://example.com:36969/#access_token=asd&expires_in=3600&refresh_token=asdasd&token_type=bearer&type=recovery\r\n\r\nWhile I have a work around it is painful to parse. You can see it does not even send it in a query.  I could switch URL strategies to be without the hash (which I think would fix it?) but it is not that well supported in Flutter.",
                    "author": {
                        "login": "MateusAmin"
                    },
                    "createdAt": "2021-08-19T12:16:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/149#issuecomment-901866009"
                },
                {
                    "id": "IC_kwDOEKipmc41wdzD",
                    "body": "> While I have a work around it is painful to parse. You can see it does not even send it in a query. I could switch URL strategies to be without the hash (which I think would fix it?) but it is not that well supported in Flutter.\r\n\r\nYes, changing URL strategies to be without the hash seems to be the only available workaround currently.\r\n",
                    "author": {
                        "login": "tartard"
                    },
                    "createdAt": "2021-08-19T13:03:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/149#issuecomment-901897411"
                },
                {
                    "id": "IC_kwDOEKipmc5KUDrZ",
                    "body": "Hey @tartard, just checking in, are you still experiencing this issue?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:32:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/149#issuecomment-1246771929"
                },
                {
                    "id": "IC_kwDOEKipmc5K9eOt",
                    "body": "Hey @kangmingtay  , I am not on this project anymore and am not planing to take some time to dive again in supabase in the coming weeks, but reading again the discussion in the PR linked to this ticket ( https://github.com/supabase/gotrue/pull/150 ) reminds me that url-encoding the hash '#' with '%23' in the configuration solves this issue : \r\n`SITE_URL = http://localhost:5000/%23/`  \r\n \r\nSo i guess we can close this issue.  \r\nThanks",
                    "author": {
                        "login": "tartard"
                    },
                    "createdAt": "2022-09-26T07:44:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/149#issuecomment-1257628589"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTAyMjgzMTE=",
            "number": 152,
            "title": "add in `confirmed_at` for backwards compatibility",
            "body": "as discussed with @kiwicopple , on the assumption that some people might be using the `confirmed_at` column directly we can add it back in as a column in the auth schema as a generated column - which takes the minimum date of `email_confirmed_at`, and `phone_confirmed_at`\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-22T01:35:18Z",
            "closedAt": "2021-07-22T02:52:30Z",
            "url": "https://github.com/supabase/gotrue/issues/152",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU5NTExNzUwNDY=",
            "number": 158,
            "title": "Trim spaces for OAuth Provider config ",
            "body": "# Bug report\r\nAddresses possible human error due to copying and pasting OAuth credentials\r\n",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-23T01:23:12Z",
            "closedAt": "2021-07-29T05:40:17Z",
            "url": "https://github.com/supabase/gotrue/issues/158",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWU5NTE3MzU0MjM=",
            "number": 159,
            "title": "Support arbitrary OpenID Connect providers for external authentication",
            "body": "# Feature request\r\n\r\nI would like to be able to use arbitrary OpenID Connect providers for external authentication.\r\n\r\nWhile this module has support for significantly more providers than the netlify fork, it is still limiting being stuck with the hardcoded providers listed here https://github.com/supabase/gotrue#external-authentication-providers\r\n\r\nIt looks like there is already a [Go OIDC client](https://github.com/coreos/go-oidc), so it should be possible to integrate relatively easily.\r\n",
            "author": {
                "login": "aaronpk"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-23T16:44:47Z",
            "closedAt": "2022-02-07T16:26:15Z",
            "url": "https://github.com/supabase/gotrue/issues/159",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc43UP8q",
                    "body": "Are there any documented work arounds for using external OpenID/Auth2 providers till this is implemented?",
                    "author": {
                        "login": "JanRuettinger"
                    },
                    "createdAt": "2021-09-27T16:35:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/159#issuecomment-928055082"
                },
                {
                    "id": "IC_kwDOEKipmc45XzSK",
                    "body": "Any updates?",
                    "author": {
                        "login": "JanRuettinger"
                    },
                    "createdAt": "2021-11-07T02:18:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/159#issuecomment-962540682"
                },
                {
                    "id": "IC_kwDOEKipmc485swW",
                    "body": "These issues are essentially the same thing.\r\n\r\nhttps://github.com/supabase/gotrue/issues/159\r\nhttps://github.com/supabase/gotrue/issues/299\r\n\r\nIt is recommended that you keep one of them and close the others.\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-26T01:08:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/159#issuecomment-1021758486"
                },
                {
                    "id": "IC_kwDOEKipmc4850Y5",
                    "body": "Transferring from #299 \r\n> Currently, id_token, nonce, and provider are required parameters in the IdTokenGrant method of gotrue/token.go. It would be better if either \"issuer and ClientID\" or \"provider\" is specified here. (If both are specified, we need to discuss which one should be adopted.) All you have to do is to specify the issuer and ClientID parameter directly in the \"oidc.NewProvider(ctx, issuer)\" part of the getVerifier method in gotrue/token.go. Once the backend is changed to accept issuer and ClientID parameters, gotrue-js will also need to be changed to allow issuer and ClientID parameters to be specified. Or, in the future, it may be simpler to remove the provider parameter and specify the issuer and ClientID.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-26T02:07:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/159#issuecomment-1021789753"
                },
                {
                    "id": "IC_kwDOEKipmc4857WM",
                    "body": "@kiwicopple @J0 @mstade @kangmingtay\r\n\r\nI wrote a pull request to resolve this issue.\r\nI would appreciate someone who understands the OpenID Connect spec to review and merge it.",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-26T03:05:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/159#issuecomment-1021818252"
                },
                {
                    "id": "IC_kwDOEKipmc4858Mg",
                    "body": "Hey @koba-ninkigumi,\r\n\r\nThanks for the PR. We will look at it once a slot frees up! \r\n\r\nJoel\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-26T03:12:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/159#issuecomment-1021821728"
                },
                {
                    "id": "IC_kwDOEKipmc49fek0",
                    "body": ":tada: This issue has been resolved in version 2.5.3 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.5.3)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-02-07T16:26:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/159#issuecomment-1031661876"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTIxNzM1OTY=",
            "number": 160,
            "title": "CUSTOM SMTP not working",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI am getting error with sending magic links (and password recovery) emails when trying to use custom smtp\r\n\r\n<img width=\"486\" alt=\"Screen Shot 2021-07-25 at 10 54 15 am\" src=\"https://user-images.githubusercontent.com/39247918/126884392-234d5e2d-3a9a-4871-aebe-0c1c6a23f18e.png\">\r\n\r\nThe issue is happening on both on my next.js app and also supabase web ui.\r\n\r\n![Screen Shot 2021-07-25 at 10 58 20 am](https://user-images.githubusercontent.com/39247918/126884428-f15e82a9-dc50-4c17-9ac5-5e243412dbd0.png)\r\n\r\nNote:\r\nGmail less secure access has been activated. I could send emails via python's smtplib library.\r\n\r\n## To Reproduce\r\n\r\nEnter SMTP details for Gmail\r\n\r\n<img width=\"867\" alt=\"Screen Shot 2021-07-25 at 10 52 42 am\" src=\"https://user-images.githubusercontent.com/39247918/126884363-b12fbe91-e89a-4b1f-8d15-2515a8124480.png\">\r\n\r\nWhen right clicking on user to \"send magic link\" it fails. This also happens to any other actions\r\n\r\n<img width=\"486\" alt=\"Screen Shot 2021-07-25 at 10 54 15 am\" src=\"https://user-images.githubusercontent.com/39247918/126884392-234d5e2d-3a9a-4871-aebe-0c1c6a23f18e.png\">\r\n\r\n\r\n\r\n## Expected behavior\r\n\r\nReceive an email from custom email for magic links and/or password recovery\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser: Chrome\r\n- Version of supabase-js: 1.3.2\r\n- Version of Node.js: v14.17.3\r\n\r\n## Additional context\r\n\r\nN/A\r\n",
            "author": {
                "login": "gpaw"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-25T00:59:20Z",
            "closedAt": "2021-07-25T23:59:38Z",
            "url": "https://github.com/supabase/gotrue/issues/160",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc400nt6",
                    "body": "Hey @gpaw, hmm i tried reproducing this error on my end and can't seem to do so. Could you check the \"Logs\" section at the bottom of the \"Authentication\" -> \"Settings\" page and see what the issue is? It could be an issue with your SMTP custom config.\r\n\r\nThis stackoverflow thread might help you resolve the issue (https://stackoverflow.com/questions/20337040/getting-error-while-sending-email-through-gmail-smtp-please-log-in-via-your-w) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-25T14:22:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/160#issuecomment-886209402"
                },
                {
                    "id": "IC_kwDOEKipmc4004ux",
                    "body": "@kangmingtay \r\n\r\nSo the logs does not produce any recently actioned activity, maybe verbose needs to be turned on? idk\r\n\r\nBut I followed your thread and I did enabled \"less secure app\" (which is a must). But what I didn't do was \"http://www.google.com/accounts/DisplayUnlockCaptcha \" - this fixed the issue!\r\n\r\nMate you went above and beyond to help me on this issue, thank you so much!\r\n\r\nIssue resolved.\r\n\r\n",
                    "author": {
                        "login": "gpaw"
                    },
                    "createdAt": "2021-07-25T23:59:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/160#issuecomment-886279089"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTIzOTg4OTc=",
            "number": 161,
            "title": "Reset password (resetPasswordForEmail) ignores \"redirectTo\" parameter",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen a user requests the Password Reset option, they get a link which points to `...redirect_to=http://localhost:3200`, which is my app's home url, not the one specified in the `redirectTo` parameter. That way, my app router cannot show the user the option to reset the password. Similar to issue https://github.com/supabase/supabase/issues/832.\r\n\r\n## To Reproduce\r\n\r\nRequest the password reset, make sure to specify a `redirectTo` param\r\n```\r\nconst { data, error } = await this.supabase.auth.api.resetPasswordForEmail('test@email.com', {\r\n   redirectTo: 'http://localhost:3200/forgot-password',\r\n});\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe user should receive an email containing a link with a URL pointing to `...redirect_to=http://localhost:3200/forgot-password`\r\n\r\n## Screenshots\r\n\r\nAuthentication settings are set to allow the Forgot Password URL\r\n![image](https://user-images.githubusercontent.com/59844981/126909841-dd87fc35-e193-427c-9295-d3af85a0c019.png)\r\n\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser chrome\r\n- Version of supabase-js: 1.20.0\r\n- Version of Node.js: 12.19.0\r\n- Front-end application using React Router\r\n",
            "author": {
                "login": "andresiggia"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-25T18:46:26Z",
            "closedAt": "2021-07-26T10:23:54Z",
            "url": "https://github.com/supabase/gotrue/issues/161",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4008Gn",
                    "body": "Thanks @andresiggia - I'll move this one to our Auth repo",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-07-26T00:52:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/161#issuecomment-886292903"
                },
                {
                    "id": "IC_kwDOEKipmc401JvU",
                    "body": "related: https://github.com/supabase/gotrue-js/issues/104\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-26T03:42:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/161#issuecomment-886348756"
                },
                {
                    "id": "IC_kwDOEKipmc4015zi",
                    "body": "Hey @andresiggia, I'm unable to reproduce the issue you encountered and it's actually working for me. Could you send me your project ref so I can help you debug further?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-26T09:41:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/161#issuecomment-886545634"
                },
                {
                    "id": "IC_kwDOEKipmc4018w8",
                    "body": "@kangmingtay sure my project is studio-finder (id `vsxtrjktxzcvygmqmguh`) and I'm getting the following message on Chrome's console when requesting the password reset\r\n![image](https://user-images.githubusercontent.com/59844981/126971136-acd3b11a-72a9-4e4e-ae69-faaf95ee3f83.png)\r\n",
                    "author": {
                        "login": "andresiggia"
                    },
                    "createdAt": "2021-07-26T10:01:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/161#issuecomment-886557756"
                },
                {
                    "id": "IC_kwDOEKipmc401_4d",
                    "body": "Hmm, this is strange, while I debug this issue, have you tried using the cURL endpoint for sending password recovery / magiclinks? It would be a good sanity check :) \r\n\r\n```\r\ncurl -X POST 'https://vsxtrjktxzcvygmqmguh.supabase.co/auth/v1/recover?redirect_to=http://localhost:3200/forgot-password' \\\r\n-H \"apikey: SUPABASE_KEY\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-d '{\r\n  \"email\": \"someone@email.com\"\r\n}'\r\n```",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-26T10:17:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/161#issuecomment-886570525"
                },
                {
                    "id": "IC_kwDOEKipmc402A-u",
                    "body": "@kangmingtay I've cleared cache here, restarted my app and now it seems to work, sorry for that.",
                    "author": {
                        "login": "andresiggia"
                    },
                    "createdAt": "2021-07-26T10:23:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/161#issuecomment-886575022"
                },
                {
                    "id": "IC_kwDOEKipmc402BTX",
                    "body": "Awesome! Glad it's solved :) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-07-26T10:25:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/161#issuecomment-886576343"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTQ0NzgxMDk=",
            "number": 164,
            "title": "SMS templates",
            "body": "ability to add custom body to OTP SMSs\r\n\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-28T05:05:13Z",
            "closedAt": "2021-08-18T09:43:11Z",
            "url": "https://github.com/supabase/gotrue/issues/164",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc41s8NG",
                    "body": "#183 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-08-18T09:43:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/164#issuecomment-900973382"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTQ1OTQ1ODA=",
            "number": 166,
            "title": "Database configuration",
            "body": "# Improve documentation\r\n\r\n## Link : [https://github.com/supabase/gotrue#database](https://github.com/supabase/gotrue#database)\r\n\r\n## Describe the problem\r\n\r\nAs far as I know, the Supabase fork of GoTrue might support to Postgres database, while the original repo is only supporting MySQL/MariaDB. But the docs of this repo also stated, that only supported MySQL. \r\n\r\n## Describe the improvement\r\n\r\nIs this fork of GoTrue does supported Postgress? If yes, could u please share the relevant `DB_DRIVER` for config? As well as it would be awesome if you guys can share, what things you guys made to make GoTrue compatible with PostgreSQL. Thanks in advance!\r\n",
            "author": {
                "login": "Yasirunet"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-28T08:09:18Z",
            "closedAt": "2021-08-23T05:53:37Z",
            "url": "https://github.com/supabase/gotrue/issues/166",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc41H6qy",
                    "body": "Hi @Yasirunet, maybe this file and its folder will help you to set up your Postgres database https://github.com/supabase/gotrue/blob/master/hack/postgresd.sh . And yes it should definitely be documented if it is a supported driver.",
                    "author": {
                        "login": "ph1p"
                    },
                    "createdAt": "2021-08-02T19:14:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/166#issuecomment-891267762"
                },
                {
                    "id": "IC_kwDOEKipmc41yvtL",
                    "body": "Hey @Yasirunet, sorry for the lapse in documentation! We were really pushing for some features to go out for the launch week in August such as the ability for gotrue to automatically run its database migrations on start. This wasn't a concern in the past because we didn't make any changes to the underlying schema but with the phone authentication feature, we had to add some extra columns to the `users` table. \r\n\r\n> Is this fork of GoTrue does supported Postgress?\r\n\r\nThat is correct. The DB_DRIVER should be `postgres`. Since the upstream of gotrue by netlify is using `mysql` as the DB_DRIVER, we had to make changes to the initial schema to make it compatible with postgres. In addition, some of the code in gotrue relied on specific mysql dialect which doesn't work for postgres. We had to make those changes too. Hope this helps!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-08-20T07:30:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/166#issuecomment-902495051"
                },
                {
                    "id": "IC_kwDOEKipmc412cNY",
                    "body": "Thanks for the reply @kangmingtay. I'll close this issue for now. If I found any problem while I configure gotrue with Postgres I'll raise it separately. It's better if u can update the docs once u get free time. Keep up the great work! \u270c",
                    "author": {
                        "login": "Yasirunet"
                    },
                    "createdAt": "2021-08-23T05:53:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/166#issuecomment-903463768"
                },
                {
                    "id": "IC_kwDOEKipmc46CwNf",
                    "body": "Hi everyone \ud83d\udc4b  I saw the README still says the only suported driver is mysql [here](https://github.com/supabase/gotrue#database).\r\n> `DB_DRIVER` - `string` **required**\r\nChooses what dialect of database you want. Must be `mysql`.\r\n\r\nShould this be changed to `postgresql`?\r\n\r\nThanks for all you do! \u2764\ufe0f ",
                    "author": {
                        "login": "mtwichel"
                    },
                    "createdAt": "2021-11-19T06:53:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/166#issuecomment-973800287"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTQ5OTU5OTE=",
            "number": 167,
            "title": "Support Telegram as Auth provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nFor [dip.chat](https://dip.chat), we use Telegram groups. I eventually like to add login with Telegram so users can sign in to the web app and edit their profile, credit card info, etc.\r\n\r\n## Describe the solution you'd like\r\n\r\nAs a user of supabase, I would like to be able to use [Telegram](https://telegram.org/) as an authentication provider. \r\n\r\n## Describe alternatives you've considered\r\n\r\nI've requested it on NextAuth.js: https://github.com/nextauthjs/next-auth/issues/2406\r\n\r\nI've also considered contributing it there ^ or just writing it myself in my app.\r\n\r\n## Additional context\r\n\r\nI am not sure where I would start, but I would considering implementing this myself with some guidance/pointers.\r\n\r\n### Links from Telegram\r\n\r\n- [User Authorization](https://core.telegram.org/api/auth#sign-insign-up)\r\n- [Telegram Login Widget](https://core.telegram.org/widgets/login)\r\n- [Telegram Login for Websites](https://telegram.org/blog/login)\r\n",
            "author": {
                "login": "jsjoeio"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-28T15:44:34Z",
            "closedAt": "2022-04-19T05:28:45Z",
            "url": "https://github.com/supabase/gotrue/issues/167",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44nFur",
                    "body": "Looked at including this in #245 but as this [reply ](https://github.com/nextauthjs/next-auth/issues/2406#issuecomment-913238005) said its not standard 0Auth so the Supabase team might need to look at this one",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-22T16:12:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/167#issuecomment-949771179"
                },
                {
                    "id": "IC_kwDOEKipmc5BsHxv",
                    "body": "Hey all,\r\n\r\nWe'll be managing all provider related issues in #451 As such, we'll be closing this issue and managing replies over there instead.\r\n\r\nFeel free to let us know if you have any urgent questions/concerns about this move.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T05:28:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/167#issuecomment-1102085231"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTU0MjA4ODA=",
            "number": 168,
            "title": "Custom Copy for phone OTP",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWe are working on a mobile app that uses a Supabase DB. It would be nice to be able to change the OTP message copy to not include our website URL. Additionally, in our app we don't use the terminology OTP, being able to override the sms copy to use our language would be great too.\r\n\r\n## Describe the solution you'd like\r\n\r\nI see two ways of doing this, both of which would use a template similar to how email templates work currently. Something like: `Your ${companyName} sign in code is {{ .OTPCode }}`. This could be specified either:\r\n\r\n1. Add an additional configuration option when signing in, similar to `redirectUrl`\r\n2. A setting in the \"Phone Auth\" settings on the Supabase dashboard\r\n\r\n## Describe alternatives you've considered\r\n\r\nNone that I can think of.\r\n\r\n## Additional context\r\n\r\nThanks so much for the Phone Auth feature, it's super great and fits our use case really well!\r\n",
            "author": {
                "login": "jaredramirez"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-28T22:00:35Z",
            "closedAt": "2021-08-18T09:42:11Z",
            "url": "https://github.com/supabase/gotrue/issues/168",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc40-ZXK",
                    "body": "Nice one - good idea @jaredramirez . I'll move this over to the GoTrue server",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-07-29T03:27:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/168#issuecomment-888772042"
                },
                {
                    "id": "IC_kwDOEKipmc41BFd0",
                    "body": "Additionally on iOS, it will not attempt to autofill the code like in the following screenshot unless the SMS copy includes the word `code` (according to [this](https://stackoverflow.com/a/57255825) at least)\r\n\r\n![image](https://user-images.githubusercontent.com/8095741/127568994-86624155-bea7-4ce4-a00f-c490e7359a67.png)\r\n",
                    "author": {
                        "login": "jaredramirez"
                    },
                    "createdAt": "2021-07-29T21:36:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/168#issuecomment-889476980"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTU5OTMyMzU=",
            "number": 170,
            "title": "Add anonymous auth",
            "body": "# Feature request\r\n\r\nBasically what Firebase already has: https://firebase.google.com/docs/auth/web/anonymous-auth.\r\n\r\nAs a user, be able to anonymously login without filling any info and remember my data. When I want to sign up, I want my data to be kept.",
            "author": {
                "login": "OrhanTozan"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-23T12:25:38Z",
            "closedAt": "2021-08-12T03:10:18Z",
            "url": "https://github.com/supabase/gotrue/issues/170",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc41dOlt",
                    "body": "Probable duplicate of #68.",
                    "author": {
                        "login": "OrhanTozan"
                    },
                    "createdAt": "2021-08-11T14:03:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/170#issuecomment-896854381"
                },
                {
                    "id": "IC_kwDOEKipmc41e-mx",
                    "body": "yeah this one's a dup! Thanks for pointing that out @OrhanTozan - i'll close",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-08-12T03:10:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/170#issuecomment-897313201"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTU5OTQ2NTY=",
            "number": 171,
            "title": "Ability to verify token without the JWT Secret",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI have a main application that identify the user and then i need to communicate with many nodejs server application distributed on users computer so it can not hold the JWT Secret but i need to verify caller identify for right management\r\n\r\n\r\n## Describe the solution you'd like\r\n\r\nLike with Firebase i would like to be able to have a public key able to verify the JWT token\r\nhttps://firebase.google.com/docs/auth/admin/verify-id-tokens#verify_id_tokens_using_a_third-party_jwt_library\r\n\r\n## Describe alternatives you've considered\r\n\r\nI'm using firebase\r\n",
            "author": {
                "login": "neckaros"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-29T14:39:25Z",
            "closedAt": "2022-02-08T02:25:10Z",
            "url": "https://github.com/supabase/gotrue/issues/171",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc41AUYF",
                    "body": "@kangmingtay we would need to switch to public/private key JWTs , a level up from secret only JWTs",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-07-29T16:08:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/171#issuecomment-889275909"
                },
                {
                    "id": "IC_kwDOEKipmc483kgb",
                    "body": "@neckaros\r\nI also use FireBase.\r\n\r\nWhat @awalias said above is not correct.\r\n\r\nYou are not the only one who is asking for this feature.\r\n\r\nWhat you're asking for is actually the same as this issue.\r\nhttps://github.com/supabase/gotrue-js/issues/169\r\n\r\nAnd there is already a pull request for this issue.\r\nhttps://github.com/supabase/gotrue-js/pull/207\r\n\r\nSo, when this pull request is merged, the realization of the functionality you are looking for will be achieved.\r\nIf you read this pull request, you will understand it if you are using FireBase.\r\n\r\nPlease help us to get it merged.\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-25T13:48:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/171#issuecomment-1021200411"
                },
                {
                    "id": "IC_kwDOEKipmc49pS9x",
                    "body": "I don't understand why you close this issue. The PR might fix it but as of now it's not fixed right?\r\n\r\n@koba-ninkigumi  i'm not sur how the OIDC relate to my request.\r\n\r\nBasically i need a public key to verify a token without knowing the private key like in the PR linked by @Alexays (asymetric cryptography)\r\n\r\nhttps://github.com/supabase/gotrue/pull/195\r\n",
                    "author": {
                        "login": "neckaros"
                    },
                    "createdAt": "2022-02-09T22:04:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/171#issuecomment-1034235761"
                },
                {
                    "id": "IC_kwDOEKipmc49pqJJ",
                    "body": "@neckaros \r\n\r\nAs a result of my PR being merged a few days ago, you can now authenticate the id_token by specifying the location of the public key with issuer and the correct client_id approved by issuer.\r\n\r\nThe actual usage is as follows.\r\nIf you want to use Google's public key, do the following\r\n\r\n```\r\nconst { user, session, error } = await supabase.auth.signIn({\r\n  oidc:{\r\n      id_token: 'your idtoken',\r\n      nonce: 'random value',\r\n      provider: 'google'\r\n  }\r\n})\r\n```\r\n\r\nIf you want to use a public key of your choice, specify the location of the public key in issuer.\r\n(If you specify issuer as follows, the public key will be loaded from the location described in https://accounts.google.com/.well-known/openid-configuration based on the oidc specification. Please refer to the oidc specification for details. https://openid.net/specs/openid-connect-core-1_0.html )\r\n\r\n```\r\nconst { user, session, error } = await supabase.auth.signIn({\r\n  oidc:{\r\n      id_token: 'your idtoken',\r\n      nonce: 'random value',\r\n      issuer: 'https://accounts.google.com',\r\n      client_id: 'your client_id'\r\n  }\r\n})\r\n```\r\n\r\nThe documentation will be available on the supabse website in a few weeks.\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-02-10T00:00:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/171#issuecomment-1034330697"
                },
                {
                    "id": "IC_kwDOEKipmc49prux",
                    "body": "@neckaros \r\n\r\nAnd your request is to do the same thing as the link below, right?\r\nhttps://firebase.google.com/docs/auth/admin/verify-id-tokens#verify_id_tokens_using_a_third-party_jwt_library\r\n\r\nIn other words, id_token validation on the backend side.\r\nThat can be achieved with the following code in goture You can do that with the following code in goture.\r\nHave a look at the following file.\r\nhttps://github.com/supabase/gotrue/blob/master/api/token.go\r\nline 333 of\r\n\r\n```\r\nfunc (a *API) IdTokenGrant(ctx context.Context, w http.ResponseWriter, r *http.Request) error {\r\n```",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-02-10T00:08:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/171#issuecomment-1034337201"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTcyOTUxNzM=",
            "number": 174,
            "title": "Expose provider name being used to log in",
            "body": "# Feature request\r\n\r\nExpose the name of the provider that's being used to authenticate a given user.\r\n\r\n- A project can have 12 different ways to log in (email, magic link, phone, plus 9 third-party OAuth providers.)\r\n- A user may sign up using one provider, say google, which results in the provider being set to `google` in the app_metatdata like this:\r\n```\r\napp_metadata: {\r\n  provider: \"google\"\r\n }\r\n```\r\n- Then the user may later log in using the Facebook provider, but there's no easy way for the developer to know that the login came from Facebook, because the app_metadata will still always say 'google' as the provider.\r\n\r\n## Describe the solution you'd like\r\n\r\nAdding the currently used provider name to the access token would be fine.  Basically anywhere you can expose the name of the provider that was just used to authenticate the user would be fine.  The use case here is to log each different provider a user has used to log in, to help troubleshoot authentication issues for a user.  \r\n\r\n\"I tried to log in but it didn't work!\" <-- would be much easier to troubleshoot if we could see they registered using email then logged in using twitter, then google, then github.\r\n\r\n## Describe alternatives you've considered\r\n\r\n- We could log the `attempt` to log in from the client, since the client sets the provider name when calling `supabase.auth.signIn()`, but that's not a real login, that's just an attempt that might not be completed successfully.\r\n- We could add the provider to the `redirectTo` parameter of the `signIn()` call: \r\n```\r\nredirectTo: `${window.location.origin}?provider=${provider}`\r\n```\r\n   - This would require the developer to parse this information from the search part of the app's querystring, then make a second call back to the database to log this info\r\n   - This would also require that every possible provider is added to the `Additional Redirect URLs`, which in an app with every possible auth provider, would make it a significant list.  If you wanted to have redirect URLs for localhost (dev) and production, you might need 2 dozen or more redirect urls:  `http://localhost:8100?provider=facebook,http://localhost:8100?provider=google` etc.\r\n\r\n\r\n",
            "author": {
                "login": "burggraf"
            },
            "state": "OPEN",
            "createdAt": "2021-07-31T18:14:50Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/174",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LPPek",
                    "body": "This is a great suggestion. It will likely be covered with the work we're doing with SAML where the provider used to log in as well as its properties (if any) are added to the access token so they can be used in RLS policies and other places.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T13:30:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/174#issuecomment-1262286756"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTczNDU2MjE=",
            "number": 175,
            "title": "CORS - Allowed origins support",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nCurrently, it appears that all origins are allowed for requests. This potentially means that someone is able to retrieve the URL and anon token from the network tab of a browser dev console, and run the requests elsewhere.\r\n\r\nSource:\r\n - The CORS handler (https://github.com/supabase/gotrue/blob/master/api/api.go#L200) doesn't specify an `AllowedOrigins` parameter (as per https://github.com/rs/cors#parameters), so it appears that all origins are allowed as the default value if not specified is `*`\r\n\r\n## Describe the solution you'd like\r\n\r\nProvide an env variable which passes `AllowedOrigins` through to the relevant parts of GoTrue (as well), omitting it if not specified so that the default `*` is provided. This could be an independent input field in the dashboard, but implementing the env support would be a good starting point. This would prevent websites outside of the allowed origins from calling into authentication. It may also be preferable to provide such functionality to the other parts of the stack (e.g. REST, storage, etc).\r\n\r\nIf allowed origin option is specified (dashboard or env), CORS behaviour will limit requests only for those specific origins, otherwise, all origins will be allowed.\r\n\r\n## Describe alternatives you've considered\r\n\r\nRouting requests through an API is certainly an option, but that would perhaps require further wrapping of requests. For self-hosting, an Nginx proxy in front can handle CORS to all services underneath it, but I feel that providing an option within the core of the stack would be a nicer option.\r\n\r\n## Additional context\r\n\r\nWe were discussing this in 'client side security concerns' thread in the general channel on Discord, with these feature request details mostly mirrored in the 'CORS discussion' thread in the ideas and suggestions channel.\r\n\r\nThe main concern I have is that resources that are spent serving requests from illegitimate sources (i.e. third-party websites) could be better used serving legitimate requests. Likewise, preventing a third-party front-end from requesting data (e.g. a public table where only SELECT queries are allowed) via REST or even sending an auth request unless they're in the allowed origins list would be desirable in some scenarios.\r\n\r\nIf this functionality is already available or implemented elsewhere in the stack, could you provide some details and I'll aim to update the docs.\r\n\r\nIf such functionality isn't needed due to other mechanisms in place, clarification would be much appreciated.",
            "author": {
                "login": "ChronSyn"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-01T00:17:38Z",
            "closedAt": "2022-09-29T12:29:49Z",
            "url": "https://github.com/supabase/gotrue/issues/175",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc419gdw",
                    "body": "Hi @ChronSyn, thanks for raising this issue up! This would definitely be good for developers who want to self-host gotrue without having to set up an api gateway. On our end, we actually have an internal issue to limit this on our Kong api gateway.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-08-25T08:59:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/175#issuecomment-905316208"
                },
                {
                    "id": "IC_kwDOEKipmc5LO8TY",
                    "body": "Hey, this issue is not relevant for GoTrue. Let me try to explain why.\r\n\r\nGoTrue is an API server written in Go. It does not have TLS support built-in, as it's meant to be placed in front of a proper HTTP reverse proxy such as NGINX, load balancer or other such software or appliance. As such it is not aware about your network configuration and it would be fairly complex to try to do so. Typically this task, again, is left to a proper reverse proxy to fulfill. This includes setting up proper CORS support.\r\n\r\nAny existing support in GoTrue for CORS is really just a developer aid, for when you need to quickly test things out. It is not meant to be used as-is in production environments.\r\n\r\nHowever, should you need to setup a more production-ready environment locally, I suggest you use NGINX in front of GoTrue and configure relevant settings there (like TLS, CORS, maximum body sizes, etc). This is a good guide to get you started: https://stackoverflow.com/questions/45986631/how-to-enable-cors-in-nginx-proxy-server\r\n\r\nOn another note:\r\n\r\n> This potentially means that someone is able to retrieve the URL and anon token from the network tab of a browser dev console, and run the requests elsewhere.\r\n\r\nThis is something we can't control, not with CORS or anything else. A compromised end-user device (which includes users opening up the development console) is not something that can be guarded against, and thus does not fall under the security model. Don't forget that the main purpose behind the CORS mechanism is to prevent cross-origin attacks where unauthorized domains can be using your APIs.\r\n\r\nWe will take the notion into consideration for the CORS settings we have on the Supabase platform, which may be possible to lock down to only domains you list.\r\n\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T12:29:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/175#issuecomment-1262208216"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTc3NzY2Mjk=",
            "number": 176,
            "title": "Feature Request: Ability to sign in with a username alias",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nHello together! \ud83d\ude0a First of all, thanks for creating and maintaining such an awesome product. I am using supabase for customer to build a backend document management platform. They want the login to have usernames (not email) and passwords. As far as I can see, this is currently not possible with Supabase Auth.\r\n\r\n## Describe the solution you'd like\r\n\r\nA solution could be, that every supabase auth user also **_can_** have a username instead of an email. If it's set, and the user signs in with this alias, **something like:**\r\n\r\n```js\r\nlet { user, error } = await supabase.auth.signIn({\r\n  username: 'someone',\r\n  password: 'xxx'\r\n})\r\n```\r\nit should also sign them in. I am generally not a fan of usernames, but in such cases where a username is really required from a customer, or when building like a social network platform, it would be absolutely great to have this ability.\r\n\r\n## Describe alternatives you've considered\r\n\r\n- In Firebase, there is the ability to a custom sign in-strategy, where you can use your own authentication system to authenticate with Firebase. I haven't found the ability in supabase. (https://firebase.google.com/docs/auth/web/custom-auth) So it's no alternative.\r\n",
            "author": {
                "login": "madebyfabian"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-30T14:52:50Z",
            "closedAt": "2022-09-14T13:38:22Z",
            "url": "https://github.com/supabase/gotrue/issues/176",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KUFjQ",
                    "body": "Hey @madebyfabian, we don't plan to support username-password sign-ins in gotrue. This is because it is not a secure option and there is no good way to recover the user's account if they forget their username (unless they have a verified email in which case they should just be using email-password logins). \r\n\r\nIf you want to include the customer's username as described in your usecase, you can opt to ask for it and add it in the `raw_user_meta_data` field in the `users` table. The `signUp` method allows you to pass in custom user metadata. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:38:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/176#issuecomment-1246779600"
                },
                {
                    "id": "IC_kwDOEKipmc5KUK3I",
                    "body": "@kangmingtay Thanks for your answer! I understand the security aspect of it. \r\n\r\nThe usecase back then was basically having no public signup flow, so my customer would have created accounts for different customers of them so they can access the platform. But the didn't wanted to deal with asking for an email of every customer requesting an account. So maybe in the end this would be a usecase for password-only access (\"this page is protected by a password...\") and then I think it's out of scope of supabase auth.",
                    "author": {
                        "login": "madebyfabian"
                    },
                    "createdAt": "2022-09-14T13:54:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/176#issuecomment-1246801352"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NTk5MDkxNjA=",
            "number": 178,
            "title": "ability to set access_token expiry from Supabase dashboard",
            "body": "so users can issue long lived tokens",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-04T05:22:46Z",
            "closedAt": "2021-09-08T09:51:19Z",
            "url": "https://github.com/supabase/gotrue/issues/178",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42izIu",
                    "body": "Closing this in view of security concerns listed [here](https://github.com/supabase/gotrue/pull/181#issuecomment-913971083)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-08T09:51:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/178#issuecomment-915092014"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NjI0MzI1ODA=",
            "number": 179,
            "title": "Azure single tenant support - tenant name as parameter in auth endpoint",
            "body": "# Feature request\r\n\r\nWhen authenticating against AD in Azure I get the following error:\r\n> Application [My application name] is not configured as a multi-tenant application. Usage of the *common* endpoint is not supported for such applications created after 10-15-2018. Use a tenant-specific endpoint or configure the application to be multi-tenant.\r\n\r\nSince I want this to be an internal-only application and all our users are in our AD in Azure, I do _not_ want to configure this to be multi-tenant.\r\n\r\n## Describe the solution you'd like\r\n\r\n[This StackOverflow issue](https://stackoverflow.com/questions/53526121/use-a-tenant-specific-endpoint-or-configure-the-application-to-be-multi-tenant) suggests that the endpoint needs to be specific to my application:\r\n\r\n>  (...) the following line:\r\nlet kAuthority = \"https://login.microsoftonline.com/common\"\r\nneeded to be changed to:\r\nlet kAuthority = \"https://login.microsoftonline.com/MY_TENANT_NAME\"\r\n\r\nThis endpoint configuration is found in the [Azure provider API](https://github.com/supabase/gotrue/blob/master/api/provider/azure.go#L46):\r\n\r\n```ts\r\n\tEndpoint: oauth2.Endpoint{\r\n\t\tAuthURL:  authHost + \"/common/oauth2/v2.0/authorize\",\r\n\t\tTokenURL: authHost + \"/common/oauth2/v2.0/token\",\r\n\t},\r\n```\r\n\r\nI am not sure if the tenant name needs to be in one or both of these endpoints.\r\n\r\nOne way of supplying this tenant name would be to include this as a parameter in `SupabaseClientOptions`, and another could be to use it in the `auth.signIn`-method. The first seems to me a bit cleaner, while the latter would potentially more easily allow more than one tenant (not sure if that even makes sense). \r\n\r\nAny feedback on this request would be greatly appreciated!\r\n\r\n**PS:**\r\nA million thanks to the Supabase team, you are doing a fantastic job! Thank you so much for this service! :heart: ",
            "author": {
                "login": "solvemon"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-06T06:15:59Z",
            "closedAt": "2022-04-19T01:37:28Z",
            "url": "https://github.com/supabase/gotrue/issues/179",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45gWs2",
                    "body": "Any progress on this?  Would love to start using supabase but this is currently a blocker for my organization.  Any way around this?",
                    "author": {
                        "login": "CrutchTheClutch"
                    },
                    "createdAt": "2021-11-10T04:45:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-964782902"
                },
                {
                    "id": "IC_kwDOEKipmc45kw3z",
                    "body": "Attempted to get this started with the above draft pull request.  I'm very inexperienced with golang but I think I'm heading in the right direction.  I believe all we need is to allow the \"common\" part of the url to be replaceable with a config value (tenant id)",
                    "author": {
                        "login": "CrutchTheClutch"
                    },
                    "createdAt": "2021-11-11T02:40:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-965938675"
                },
                {
                    "id": "IC_kwDOEKipmc47366M",
                    "body": "Hi @solvemon, @CrutchTheClutch and @jimkytola, \r\n\r\nI'm one of the maintainers for the gotrue repo and saw that @jimkytola recently submitted a PR to fix this issue. I just have a couple of questions about this:\r\n\r\n1. What's the difference between using `\"https://login.microsoftonline.com/common\"` vs `\"https://login.microsoftonline.com/MY_TENANT_NAME\"`? Are there situations where `/common` must be used instead? Reason for this is because I'm concerned that the PR submitted will break existing implementations that rely on `/common` for azure sign-in.\r\n\r\n2. In the context of using Supabase, would you need to be able to set the `EXTERNAL_AZURE_URL` env var via the dashboard to `\"https://login.microsoftonline.com/MY_TENANT_NAME\"`?\r\n\r\n3. What are some of the use cases for allowing more than one tenant? E.g. Will there be some cases where you would want to set the `EXTERNAL_AZURE_URL` dynamically? \r\n\r\nE.g. \r\n`\"https://login.microsoftonline.com/MY_TENANT_NAME_1\"`\r\n`\"https://login.microsoftonline.com/MY_TENANT_NAME_2\"`\r\n`\"https://login.microsoftonline.com/MY_TENANT_NAME_3\"`\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-04T04:09:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-1004514956"
                },
                {
                    "id": "IC_kwDOEKipmc47_iqh",
                    "body": "I am by no means competent in the world of Microsoft, so I probably don't know what I am talking about, but here is my situation. I am working in a parent-umbrella company, where other sub-organisations are members, and our Supabase-solution is made available to them. At first (when I started on our project) I thought the best solution would be to get all users into our top-level AD, and then restrict access by only allowing signups and logins from within our AD. However, this is now implemented over the `common`-endpoint, meaning I allow all Microsoft-accounts to log in. I work around this by disabling sign-up and only allowing logins that I have explicitly invited into our system (via the dashboard). This works well for us, but would obviously not scale well if the user base grows large.\r\n\r\n1. `https://login.microsoftonline.com/MY_TENANT_NAME` will only allow users that exist in the specified tenant / AD to signup up or log in, while `/common` will allow from any Microsoft business/school account.\r\n2. In order to restrict logins to a specified AD, you must use the name of the tenant in the Azure URL. If tenant-restriction is implemented, the `TENANT_NAME` would have to be set from the dashboard. I don't think the entire URL needs to be specified (unless there exists any other Azure-compatible login flows that uses other external systems?)\r\n3. Allowing a set of tenants would be a very nice feature! In my case, I could potentially use this instead of the common-endpoint. A challenge here would be determining which tenant a user belongs to. Either the system needs to try and potentially fail over multiple endpoints, or maybe the user must select which tenant/organisation they are logging into?",
                    "author": {
                        "login": "solvemon"
                    },
                    "createdAt": "2022-01-06T11:45:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-1006512801"
                },
                {
                    "id": "IC_kwDOEKipmc4_SL05",
                    "body": "Would love to have this. Currently a blocker for our organization.\r\n\r\nFrom the looks of it, https://github.com/supabase/gotrue/pull/298 should support single tenant. Not sure where to set this though, is it undocumented? or does that PR only work with self-hosted?",
                    "author": {
                        "login": "cerinoligutom"
                    },
                    "createdAt": "2022-03-08T12:35:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-1061731641"
                },
                {
                    "id": "IC_kwDOEKipmc4_SPno",
                    "body": "Hey @cerino-ligutom, we've already merged the fix in and will deploy it to all projects this week. You will be able to add the tenant url in the authentication settings page on the dashboard. Stay tuned!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-03-08T12:54:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-1061747176"
                },
                {
                    "id": "IC_kwDOEKipmc4_V5KX",
                    "body": "Awesome! I see the option now and it works great! \ud83c\udf89\r\n\r\n![image](https://user-images.githubusercontent.com/6721822/157405596-a338edb2-274f-45f9-ac8a-eb25d369c6d7.png)\r\n",
                    "author": {
                        "login": "cerinoligutom"
                    },
                    "createdAt": "2022-03-09T09:07:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-1062703767"
                },
                {
                    "id": "IC_kwDOEKipmc5Brcp9",
                    "body": "Hey all, \r\n\r\nIt seems like a fix has been deployed for this issue. As such, I'm going to close the issue for now but feel free to re-open if there are issues with the fix or concerns that have come up.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T01:37:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/179#issuecomment-1101908605"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NjI0NzQwMzM=",
            "number": 180,
            "title": "Admin API: get user by email",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI'd like to be able to get user details (in particular, the ID) by supplying an email address, using the admin API (with the service role API key).\r\n\r\n## Describe the solution you'd like\r\n\r\nAn admin API which allows getting user details by email address instead of by user ID only.\r\n\r\n## Describe alternatives you've considered\r\n\r\nI tried to use the admin users API, but I wasn't able to figure out how to use the `filter` query parameter to search for emails (it always returned a database error). Returning all users isn't sustainable for merely looking up a single user as well. The other alternative would be to create a view of the `auth.users` table which is only accessible to the `service_role` role, to allow convenient access to the table via the Supabase JS client.",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-06T07:23:45Z",
            "closedAt": "2022-01-14T11:02:30Z",
            "url": "https://github.com/supabase/gotrue/issues/180",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc419hQ1",
                    "body": "Hey @bnjmnt4n, thanks for raising up this issue! The filter query params to search for emails was broken because it was using mysql dialect. Since this version of gotrue supports postgres, we are working on fixing it. With regards to the supabase js client library, we are also working on splitting the admin api functionality into a separate package. There's an open issue [here](https://github.com/supabase/gotrue-js/issues/90) which will be updated once its ready! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-08-25T09:04:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/180#issuecomment-905319477"
                },
                {
                    "id": "IC_kwDOEKipmc45VYc-",
                    "body": "The filter parameter seems to work now, but I'm not sure how to properly filter by email. Requests to `/users?filter=email%40domain.com` and `/users?filter=email@domain.com` both do not return the appropriate email. Would greatly appreciate some guidance in knowing the right format for providing exact emails to filter by. Right now, my workaround is to request `/users?filter=domain.com` and then iterating through the result for the right email.",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2021-11-05T13:45:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/180#issuecomment-961906494"
                },
                {
                    "id": "IC_kwDOEKipmc46vSyp",
                    "body": "Hi there,\r\n\r\nI am also figuring out how I get a single user (his id) based on his email (on the server). The most obvious way I thought would be just to read the \"users\" table is in schema \"auth\". So I create a supabase client connected to the schema auth:\r\n\r\ncreateClient(supabase_url, supabase_service, {\r\n    schema: \"auth\"\r\n})\r\n\r\nHowever, it looks like you cannot connect to this schema, why?\r\nThere is a setting under supabase > settings > API > Settings ...but I cannot add the auth schema :/\r\n\r\nI mean, there is a createUser() and deleteUser() in Auth (Server only) ...why is there no readUser()? I would guess that this is one of the most important tables/ objects for every application? Almost all my tables reference the auth.users table by id\r\n\r\nSorry, I am new to supabase and gotrue, etc. so maybe I don't have any \"best practice\" on how to model data :)\r\n\r\nBR, Carsten\r\n\r\n",
                    "author": {
                        "login": "came"
                    },
                    "createdAt": "2021-12-03T12:22:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/180#issuecomment-985476265"
                },
                {
                    "id": "IC_kwDOEKipmc46vjaT",
                    "body": "Hi @bnjmnt4n, I tried to filtering by `/admin/users?filter=email@domain.com` and it seems to work for me. You can check out how the filter logic works to look up the email [here](https://github.com/supabase/gotrue/blob/master/models/user.go#L408-L412). Let me know if you're still facing this issue!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-03T14:01:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/180#issuecomment-985544339"
                },
                {
                    "id": "IC_kwDOEKipmc46vnUY",
                    "body": "Hi @came, if you're using the `supabase-js` library, we currently don't support getting a user by id but we have created [an issue](https://github.com/supabase/gotrue-js/issues/190) to keep track of it and will be looking to add it in the next couple of weeks! \r\n\r\nWe also currently only support connecting to the public and storage schema so the following wouldn't work:\r\n```\r\nconst supabase = createClient(supabase_url, supabase_key, {\r\n  schema: \"auth\"\r\n})\r\n\r\nconst res = await supabase.from('users').select('id').eq('email', 'email@domain.com')\r\n```",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-03T14:22:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/180#issuecomment-985560344"
                },
                {
                    "id": "IC_kwDOEKipmc48YXgP",
                    "body": "Closing this, not sure why the filtering wasn't working for me back then, but it works now!",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2022-01-14T11:02:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/180#issuecomment-1013020687"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NzMwNzEyNDU=",
            "number": 184,
            "title": "Improve error message when providers are disabled",
            "body": "e.g. \"email logins are disabled\" would be cleaner than \"unsupported email provider\"\r\n\r\nThe latter can cause confusion that a particular email service provider e.g. protonmail is incompatible https://github.com/supabase/supabase/issues/2851",
            "author": {
                "login": "darora"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-17T21:14:47Z",
            "closedAt": "2021-08-20T07:47:48Z",
            "url": "https://github.com/supabase/gotrue/issues/184",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc41uk3i",
                    "body": "I'll take care of this. I'd love to help out!",
                    "author": {
                        "login": "nickmancari"
                    },
                    "createdAt": "2021-08-18T20:17:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/184#issuecomment-901402082"
                },
                {
                    "id": "IC_kwDOEKipmc41uxBF",
                    "body": "Submitted the PR to address this issue.",
                    "author": {
                        "login": "nickmancari"
                    },
                    "createdAt": "2021-08-18T21:48:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/184#issuecomment-901451845"
                },
                {
                    "id": "IC_kwDOEKipmc41yx25",
                    "body": "Closed by #186 , thanks!",
                    "author": {
                        "login": "darora"
                    },
                    "createdAt": "2021-08-20T07:47:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/184#issuecomment-902503865"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5NzM1NDY1ODY=",
            "number": 185,
            "title": "Configuration DB_NAMESPACE has no effect",
            "body": "# Bug report\r\nDB_NAMESPACE configuration is supposed to add a prefix to the tables.\r\n\r\n> Adds a prefix to all table names.\r\n\r\nIt doesn't have any effect.\r\n\r\n## Describe the bug\r\nChanging the value for DB_NAMESPACE doesn't do anything in postgres.\r\n\r\n## Expected behavior\r\nThat the prefixes of the tables are set accordingly.\r\n\r\n## Additional context\r\nAfter comparing superficially the netlify repo and this one, I figured, that the feature has been removed from the core. I'm convinced that this has to do with supabase using postgres as the underlying DB and defining schemas there, but before digging deeper, it would be interesting to know what the developers motivation and goal was and if it is somehow possible to bring the feature back in. Or is there already another way to have multiple unrelated tables?",
            "author": {
                "login": "Mimameid"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-18T11:06:35Z",
            "closedAt": "2022-09-12T17:07:49Z",
            "url": "https://github.com/supabase/gotrue/issues/185",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc419QEQ",
                    "body": ">  I'm convinced that this has to do with supabase using postgres as the underlying DB and defining schemas there\r\n\r\nHey @Mimameid, thanks for the question! We decided to remove the `DB_NAMESPACE` env var because postgres makes use of schemas instead of namespaces. Do you have some use case for wanting to use the `DB_NAMESPACE` ? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-08-25T07:21:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-905249040"
                },
                {
                    "id": "IC_kwDOEKipmc419kgD",
                    "body": "> Hey @Mimameid, thanks for the question! We decided to remove the `DB_NAMESPACE` env var because postgres makes use of schemas instead of namespaces. Do you have some use case for wanting to use the `DB_NAMESPACE` ? \n\nThe docs should be updated. Apart from that:\n\nTwo front end applications. One for customers and one for organizers. I would like to use one supabase project since they use the same underlying data. Organizers can manipulate it and customers can't. \n\nThe issue I see, and correct me if I am wrong: When using one project, customers would be able to authenticate for the organizer's front end and vice versa. Even though there is the possibility to restrict their access type (policies) on the database, the authentication would be valid. \n\nHow would one solve this with supabase?\n\n\n",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-08-25T09:22:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-905332739"
                },
                {
                    "id": "IC_kwDOEKipmc42BswB",
                    "body": "Hey @Mimameid, I see, hmm for your use case, using the `DB_NAMESPACE` wouldn't help much even if it worked. Also, separating the customers and organisers into 2 different schemas isn't ideal. As of now, gotrue doesn't support role-based access control (RBAC) yet but I can think of 2 possible solutions for you:\r\n1. you can assign each user to a customer or organiser role and save it in postgres (maybe as another table). And based on the user's role, you decide which UI to show. You can use RLS to limit access to data based on the user's role.\r\n2. Alternatively, you can assign each user to a customer or organiser role. If the user is an organiser, you have some backend function to access the organisers' data using the `service_role` key we provide on the dashboard. Customers will be assigned the `anon_key` to use. \r\n\r\nLet me know if this helps!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-08-26T13:29:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-906415105"
                },
                {
                    "id": "IC_kwDOEKipmc42MC2M",
                    "body": "> Hey @Mimameid, I see, hmm for your use case, using the `DB_NAMESPACE` wouldn't help much even if it worked. Also, separating the customers and organisers into 2 different schemas isn't ideal. As of now, gotrue doesn't support role-based access control (RBAC) yet but I can think of 2 possible solutions for you:\r\n> \r\n> 1. you can assign each user to a customer or organiser role and save it in postgres (maybe as another table). And based on the user's role, you decide which UI to show. You can use RLS to limit access to data based on the user's role.\r\n> 2. Alternatively, you can assign each user to a customer or organiser role. If the user is an organiser, you have some backend function to access the organisers' data using the `service_role` key we provide on the dashboard. Customers will be assigned the `anon_key` to use.\r\n> \r\n> Let me know if this helps!\r\n\r\nThose are workarounds, but delegate the issue.\r\n\r\nFrom what I understand it should be possible to change the namespace/schema through the config as the [original repo](https://github.com/netlify/gotrue/blob/4730b6ae9447443bc3d8687a33067574a1403c4f/cmd/migrate_cmd.go#L38-L41) does.\r\n\r\nThis fork doesn't allow to do so. \r\n\r\nIf there is no intention to allow this feature in supabase, which imo would be a pity, it should at least be considered to remove it from the docs [here](https://github.com/supabase/gotrue/blob/master/README.md) and [here](https://supabase.io/docs/gotrue/server/about) before closing this issue.\r\n\r\n\r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-08-31T10:55:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-909127052"
                },
                {
                    "id": "IC_kwDOEKipmc42bnQP",
                    "body": "Hey @kangmingtay,\r\n\r\nwould you reopen this? \r\n\r\n",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-09-05T19:09:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-913208335"
                },
                {
                    "id": "IC_kwDOEKipmc42i0Qj",
                    "body": "Hey @Mimameid, sorry for the late reply! Didn't mean to close it actually. To address your concerns:\r\n1. We'll add back the support for setting the schema dynamically. It's not a high priority in the current sprint, but you're welcome to contribute if something urgent for you.\r\n2. Are you planning to use the DB_NAMESPACE to separate the customers and organisers in different schemas? I would recommend the solutions I've provided above if you want to implement some form of RBAC. Personally, I feel that RLS is the best option for your use case (and the most secure) because the access-control is restricted on the database level. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-08T09:58:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-915096611"
                },
                {
                    "id": "IC_kwDOEKipmc42mdaW",
                    "body": "@kangmingtay \r\n\r\n1. Sounds good. I might have a look into it, even though my GO knowledge is limited (as of now).\r\n\r\n2. Well, it is maybe a bit more complicated. The register/signup endpoint for organizers shouldn't be public. Matter of fact, only an operator of the service is allowed to register/signup new organizers. Now in supabase a regular user would use the same endpoint to register/signup and furthermore login and authenticate. To guarantee separation between the two using roles or some other flag, extended custom logic is needed. \r\nAt this point I would like to refer to the original documentation regarding the DB_NAMESPACE config: `Adds a prefix to all table names.`\r\nAs far as I understand, what this means in practice is, that I can use the same postgres, same schema, but 2 different gateways (GoTrue instances). Correct me if I am wrong.\r\n\r\n",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-09-09T12:35:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-916051606"
                },
                {
                    "id": "IC_kwDOEKipmc5C3cd5",
                    "body": "This issue is open for contributions:\r\n\r\nOne possible approach to consider would be to read the `DB_NAMESPACE` environment variable  in before running the migration and looking into each migration file to replace the corresponding schema name(mysql uses namespaces but postgres uses schema)\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-10T02:52:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-1121830777"
                },
                {
                    "id": "IC_kwDOEKipmc5KcpoH",
                    "body": ":tada: This issue has been resolved in version 2.16.6 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.16.6)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-09-16T07:36:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/185#issuecomment-1249024519"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5Nzc2NjcxNzQ=",
            "number": 187,
            "title": "Netlify OAuth Provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nAdd Netlify OAuth provider\r\n\r\n## Additional context\r\n\r\nhttps://twitter.com/jlengstorf/status/1429611357356187652\r\n\r\n<img width=\"595\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10214025/130551483-e83c85db-62e9-471f-bb37-5dea9e139959.png\">\r\n\r\nhttps://app.netlify.com/user/applications\r\n",
            "author": {
                "login": "kiwicopple"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-24T03:32:39Z",
            "closedAt": "2022-04-19T02:14:45Z",
            "url": "https://github.com/supabase/gotrue/issues/187",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc419wqV",
                    "body": "Might need to hold off on this one until some of the security issues here are covered: https://community.redwoodjs.com/t/i-implemented-a-netlify-oauth-not-identity-auth-provider-but-im-not-sure-i-should-have-and-why/903",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-08-25T10:36:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/187#issuecomment-905382549"
                },
                {
                    "id": "IC_kwDOEKipmc5Brgli",
                    "body": "Hey all,\r\n\r\nWe plan on tracking all OAuth provider requests on https://github.com/supabase/gotrue/issues/451 so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:14:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/187#issuecomment-1101924706"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5Nzc4ODEyODE=",
            "number": 188,
            "title": "Add support for \"GitHub Apps\"",
            "body": "Currently, only \"OAuth Apps\" are supported. There is a [Differences between GitHub Apps and OAuth Apps](https://docs.github.com/en/developers/apps/getting-started-with-apps/differences-between-github-apps-and-oauth-apps).\r\n\r\nThe endpoint urls for `auth` and `token` are the same for both application types, but they might require different `scopes`.\r\n\r\nHere is some JavaScript that I have used previously to get the user information from the new API (a user-agent is mandatory):\r\n\r\n```js\r\nconst response = await fetch('https://api.github.com/graphql', {\r\n  method: 'POST',\r\n  headers: {\r\n    Authorization: `bearer ${access_token}`,\r\n    'User-Agent': 'fancy-app',\r\n  },\r\n  body: `{\"query\": \"query{viewer{id login email avatarUrl(size:72)}}\"}`,\r\n});\r\n```\r\n\r\nAs you see, constructing the query is simple. A special GraphQL library is not necessary. The response is JSON.",
            "author": {
                "login": "purpleKarrot"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-24T09:09:34Z",
            "closedAt": "2021-08-24T10:35:01Z",
            "url": "https://github.com/supabase/gotrue/issues/188",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc416fKL",
                    "body": "Just double checked, it seams \"GitHub Apps\" actually *are* supported. It is necessary to set the permission for accessing the user's email as described here: https://docs.github.com/en/developers/apps/managing-github-apps/editing-a-github-apps-permissions",
                    "author": {
                        "login": "purpleKarrot"
                    },
                    "createdAt": "2021-08-24T10:35:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/188#issuecomment-904524427"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5Nzg1OTgyNTA=",
            "number": 190,
            "title": "Improve message and move disable logic on magic links to signup only ",
            "body": "Hey there, I've been following these issues: #184 & supabase/supabase#2851. And looking at the code I have an impression that the message change done on #186 is still not accurate for Magic Links. The new message says `Email logins are disabled` and for me its a bit misleading because the UI on Supabase says Signup and not login. See picture below:\r\n\r\n![Screen Shot 2021-08-24 at 8 22 53 PM](https://user-images.githubusercontent.com/5065602/130706776-6075c269-7938-4135-a176-a9bd9916e35d.png)\r\n\r\nNow, if I'm not totally off here, I think there's one other thing that's also misleading on this. It's this line here: https://github.com/supabase/gotrue/blob/9b955cbce0f19979d32429a3e5bb5425e7fd05f2/api/magic_link.go#L25\r\n\r\nThis line throws an error for Magic Links if the Email config is disabled, independent if its a signup (new user) or a signin (existing user) but the toggle on Supabase UI says Signup (same screenshot above). \r\n\r\nI would expect in this case, as a supabase user, that if I disable the signup toggle on the UI, that my existing users would still be able to get a Magic Link and signin and in case it's a new email/user then they would get that error and the message should say `Email signups are disabled` instead of saying logins.  \r\n\r\nAnd if that would be the direction, then the check for `if !config.External.Email.Enabled` would make more sense if it was after this line, where it knows its a signup (new user): (https://github.com/supabase/gotrue/blob/9b955cbce0f19979d32429a3e5bb5425e7fd05f2/api/magic_link.go#L47)\r\n\r\nI'm using Supabase and that is the behavior I was expecting when I disabled Email signups on the Auth settings but instead, what its doing today is that it's blocking both signup AND signin for Magic Links, and I think this is the reason.\r\n\r\nIf this make sense at all I could try to make a PR.",
            "author": {
                "login": "denneralex"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-25T00:50:48Z",
            "closedAt": "2022-09-14T13:55:39Z",
            "url": "https://github.com/supabase/gotrue/issues/190",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5A17cs",
                    "body": "I come from the future, any solution yet? :open_mouth:  ",
                    "author": {
                        "login": "zavbala"
                    },
                    "createdAt": "2022-04-04T18:29:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/190#issuecomment-1087878956"
                },
                {
                    "id": "IC_kwDOEKipmc5KULO9",
                    "body": "Hey @denneralex, this seems like more of a documentation problem. The `config.External.Email.Enabled` setting is intended to gate both user signups and sign-ins via email. \r\n\r\nChanging this behaviour would lead to unintended consequences for those developers that use it to gate both user signups and sign-ins via email. \r\n\r\nCurrently, we don't see a usecase where you would want to enable email sign-ups but not email sign-ins. It would be great if you can elaborate more on what you're trying to achieve here. \r\n\r\nClosing this issue for now but feel free to reopen it if it's still a problem you're facing.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:55:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/190#issuecomment-1246802877"
                },
                {
                    "id": "IC_kwDOEKipmc5KUO9l",
                    "body": "@kangmingtay I think there is some confusion here, very possibly on my part, but in the original message I see this line:\r\n\r\n> I would expect in this case, as a supabase user, that if I disable the signup toggle on the UI, that my existing users would still be able to get a Magic Link and signin\r\n\r\nYou say\r\n\r\n> Currently, we don't see a usecase where you would want to enable email sign-ups but not email sign-ins.\r\n\r\nI think that's the opposite of what the OP means? I am interested in this thread because I actually have an issue of my own going, #330, and that one is about making it possible to enable email signins but not email signups. And I feel like this issue is very related to this, just instead of email signins it is talking specifically about magic links.",
                    "author": {
                        "login": "TomasHubelbauer"
                    },
                    "createdAt": "2022-09-14T14:06:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/190#issuecomment-1246818149"
                },
                {
                    "id": "IC_kwDOEKipmc5KsbE-",
                    "body": "@TomasHubelbauer just to clarify, the UI looks different on our platform now - it's been updated to show this: \r\n\r\nIf the \"Enable email provider\" toggle is switched on, then it will allow any email-related signups and sign-ins. Can you please describe why you would want to enable sign-ins only but not signups? \r\n\r\n<img width=\"989\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28647601/191407574-c2229c8b-081c-4a4e-af9e-8f34244554d9.png\">\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-21T03:27:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/190#issuecomment-1253159230"
                },
                {
                    "id": "IC_kwDOEKipmc5KyrNJ",
                    "body": "@TomasHubelbauer there's also this setting which would have the intended effect, however it is not specific to email or magic link sign-in\r\n\r\n<img width=\"891\" alt=\"image\" src=\"https://user-images.githubusercontent.com/64883/191717431-2cbfa893-0d51-4b26-a7d3-14f619c7b7a0.png\">\r\n",
                    "author": {
                        "login": "mrmartineau"
                    },
                    "createdAt": "2022-09-22T09:57:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/190#issuecomment-1254798153"
                },
                {
                    "id": "IC_kwDOEKipmc5KyruM",
                    "body": "@mrmartineau I was not aware this existed, I think it is newer than my GitHub issue. I will check this out. Thank you for letting me know! It seems super promising for what I need.",
                    "author": {
                        "login": "TomasHubelbauer"
                    },
                    "createdAt": "2022-09-22T09:59:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/190#issuecomment-1254800268"
                },
                {
                    "id": "IC_kwDOEKipmc5PogKM",
                    "body": "Hello, just wanted to ask, if we could update the config.toml file that's used for local development. Currently, the email provider section contains these keys:\r\n```\r\n[auth.email]\r\n# Allow/disallow new user signups via email to your project.\r\nenable_signup = true\r\n# If enabled, a user will be required to confirm any email change on both the old, and new email\r\n# addresses. If disabled, only the new email is required to confirm.\r\ndouble_confirm_changes = false\r\n# If enabled, users need to confirm their email address before signing in.\r\nenable_confirmations = false\r\n```\r\nThe overall [auth] section contains the following keys:\r\n```\r\n[auth]\r\n# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used\r\n# in emails.\r\nsite_url = \"http://localhost:3000\"\r\n# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.\r\nadditional_redirect_urls = [\"https://localhost:3000\"]\r\n# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 seconds (one\r\n# week).\r\njwt_expiry = 3600\r\n# Allow/disallow new user signups to your project.\r\nenable_signup = false\r\n```\r\nIf we enable disable the signup key under auth.email, we cannot login anymore. This is quite misleading. We get the same error: \r\n```\r\nEmail logins are disabled\r\n```\r\n\r\nIf you want to achieve enabled logins but disabled sign ups, you have to disable the signup key in the [auth] section and enable it in the [auth.signup] section which is quite confusing.\r\n\r\nThanks!",
                    "author": {
                        "login": "juanvilladev"
                    },
                    "createdAt": "2022-12-03T02:28:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/190#issuecomment-1336017548"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5ODIyMjYyNDQ=",
            "number": 193,
            "title": "OAuth providers seem to have a dependency on email signups being enabled",
            "body": "Moving from https://github.com/supabase/supabase/issues/2851#issuecomment-904395347\r\n\r\nGoogle Auth provider refresh token call fails with \"400 Unsupported Email Provider\".",
            "author": {
                "login": "darora"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-29T22:57:50Z",
            "closedAt": "2022-09-21T13:19:43Z",
            "url": "https://github.com/supabase/gotrue/issues/193",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Bsc6x",
                    "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nBug is appearing after disabling \"Enable Email Signup\" in dashboard.\r\nI'm using Discord as provider for OAuth.\r\nWhen supabase-js client is trying to refresh token in react-app instead of getting new token I'm getting this response:\r\n\r\nHTTP Code 400 with body:\r\n`{\r\n  \"code\": 400,\r\n  \"msg\": \"Email logins are disabled\"\r\n}`\r\n\r\nAfter enabling \"Enable Email Signup\" I'm getting token with response.\r\n\r\n## To Reproduce\r\n\r\n1. Setup via discord sign in\r\n2. Disable \"Enable Email Signup\" in supabase dashboard\r\n3. Sign in with discord in your app\r\n4. Wait for request\r\n\r\n## Expected behavior\r\n\r\nGetting new token with request.\r\n\r\n## System information\r\n\r\n- Version of @supabase/supabase-js: 1.22.5\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T07:09:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/193#issuecomment-1102171825"
                },
                {
                    "id": "IC_kwDOEKipmc5KufSM",
                    "body": "Hey everyone, please take a look at this comment by @kangmingtay on why we're not able to devote more time on this for now. https://github.com/supabase/gotrue/pull/414#issuecomment-1238321323",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:19:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/193#issuecomment-1253700748"
                },
                {
                    "id": "IC_kwDOEKipmc5Kuf2j",
                    "body": "Please refer to #214 to track this issue further.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:21:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/193#issuecomment-1253703075"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5ODUyOTc5ODU=",
            "number": 198,
            "title": "Support Sign in With Apple with AuthenticationServices",
            "body": "# Feature request\r\n\r\nOn Apple platforms, Sign in with Apple ID should be done with the [AuthenticationServices](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential?language=objc) framework in native apps. Currently it is not possible to use this, we also have an issue open in [gotrue-swift](https://github.com/supabase/gotrue-swift/issues/4) but it seems the server itself would required some changes for this to work.\r\n\r\n## Describe the solution you'd like\r\n\r\n@thecoolwinter:\r\n> Right now I think the GoTrue server would need to be modified to accept and validate the JWT from the AuthenticationServices framework and send back a GoTrue JWT.\r\n\r\n",
            "author": {
                "login": "catlan"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-01T15:31:28Z",
            "closedAt": "2021-09-02T16:52:00Z",
            "url": "https://github.com/supabase/gotrue/issues/198",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42WF4x",
                    "body": "[Apple's docs](https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api/verifying_a_user) give a little more detail as to what's required to make auth with the AuthenticationServices framework work.\r\n\r\nBasically, only 2 modifications would need to be made to the gotrue server:\r\n1. Add a `POST /authorize/apple` *(or another path)* endpoint what accepts: JWT identity token, access token, nonce, apple ID, and email.\r\n\r\nThis endpoint needs to verify the identity token against Apple's servers and then exchange the access token for an refresh token as in the graphic from the [docs](https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api/verifying_a_user). It should then create a user if needed, otherwise it needs to store the refresh token for later verification. The apple ID would be nice to store as well, probably where other OAuth information is stored. It should also return a GoTrue JWT. \r\n\r\nAlso important in this step is checking the `nonce` given from the client. This should be verified against the `nonce` field in the identity token to prevent replay attacks.\r\n\r\n2. When verifying this user: Grab the refresh token from `1` and verify it against apple's servers using the [validation](https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens) endpoint. This can only be done once a day, so we'd need to store both the refresh token and the last validated date in the user object. If it's valid, generate a normal GoTrue JWT.\r\n\r\nThis step takes care of the case where a user removes their account through their Apple ID. The next time we go to refresh their token, it should be invalid and we consider the user signed out.",
                    "author": {
                        "login": "thecoolwinter"
                    },
                    "createdAt": "2021-09-02T14:41:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/198#issuecomment-911760945"
                },
                {
                    "id": "IC_kwDOEKipmc42WP3t",
                    "body": "Hey @thecoolwinter, @catlan, thanks for the feedback! We are currently working on it and we actually have a PR [here](https://github.com/supabase/gotrue/pull/189) for this! \r\n\r\nWe're in the midst of testing it thoroughly and doing abit of refactoring before we merge this in. The reason why it's taking awhile is because we want to make sure its secure and well-thought out so that we don't have to make any API changes that break backward compatibility in the future.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-02T15:21:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/198#issuecomment-911801837"
                },
                {
                    "id": "IC_kwDOEKipmc42WQMJ",
                    "body": "That's great to hear, @kangmingtay! ",
                    "author": {
                        "login": "catlan"
                    },
                    "createdAt": "2021-09-02T15:22:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/198#issuecomment-911803145"
                },
                {
                    "id": "IC_kwDOEKipmc42WTyD",
                    "body": "Awesome! Glad to hear it! I'll watch that PR so we can make changes to the swift repo when it becomes available.",
                    "author": {
                        "login": "thecoolwinter"
                    },
                    "createdAt": "2021-09-02T15:39:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/198#issuecomment-911817859"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5ODYwOTU3MTE=",
            "number": 199,
            "title": "TikTok OAuth Provider",
            "body": "# Feature request\r\n\r\nCreate an OAuth provider for TikToke\r\n\r\nTikTok recently published their OAuth flow\r\nhttps://developers.tiktok.com/doc/login-kit-web\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nFor the application that I am working on, we convert users from TikTok.  Currently, we plan to authenticate them from  using Phone authentication, but TikTok support could drastically improve our conversion.\r\n\r\n## Describe the solution you'd like\r\n\r\nSocial login with TikTok is supported similar to existing 3rd party providers.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThe only other alternative would be to host our own authentication server and use it in tandem with Supabase.  Not particularly ideal.\r\n\r\n## Additional context\r\n\r\nn/a",
            "author": {
                "login": "chimon2000"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-02T04:13:50Z",
            "closedAt": "2022-04-19T02:13:38Z",
            "url": "https://github.com/supabase/gotrue/issues/199",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44lnv5",
                    "body": "Was just looking into PRing this in but found that Login Kit doesn't provide email. So I'm not sure how it would work with the other providers all supporting emails. Might be something the supabase team needs to comment on.\r\nhttps://developers.tiktok.com/doc/manage-user-access-tokens",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-22T08:05:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/199#issuecomment-949386233"
                },
                {
                    "id": "IC_kwDOEKipmc44oVQd",
                    "body": "I imagine this would be fine since Phone Number authentication does not provide an email, but probably good to get some feedback from the team.\r\n\r\ncc @kiwicopple",
                    "author": {
                        "login": "chimon2000"
                    },
                    "createdAt": "2021-10-23T06:08:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/199#issuecomment-950096925"
                },
                {
                    "id": "IC_kwDOEKipmc44ql8A",
                    "body": "> I imagine this would be fine since Phone Number authentication does not provide an email, but probably good to get some feedback from the team.\n> \n> cc @kiwicopple\n\nYeah, the bigger issue is there is no contact info, just username and tiktok id",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-25T09:00:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/199#issuecomment-950689536"
                },
                {
                    "id": "IC_kwDOEKipmc445JrC",
                    "body": "Hey @HarryET, @chimon2000, we have actually stopped using the email from the oauth provider as the primary identifier for a user. The current list of providers still check if a new user / existing user has an email associated with their provider account but we haven't got to refactoring that bit yet. For the TikTok oauth provider implementation-wise, the response needs to contain the `open_id` field since that's TikTok's way of uniquely identifying a user.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-10-29T07:45:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/199#issuecomment-954505922"
                },
                {
                    "id": "IC_kwDOEKipmc445LSl",
                    "body": "> Hey @HarryET, @chimon2000, we have actually stopped using the email from the oauth provider as the primary identifier for a user. The current list of providers still check if a new user / existing user has an email associated with their provider account but we haven't got to refactoring that bit yet. For the TikTok oauth provider implementation-wise, the response needs to contain the `open_id` field since that's TikTok's way of uniquely identifying a user.\n\nThat's awesome! I'll try get a PR open today for TikTok",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-29T07:56:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/199#issuecomment-954512549"
                },
                {
                    "id": "IC_kwDOEKipmc5Brgb2",
                    "body": "Duplicate of #451 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:13:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/199#issuecomment-1101924086"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5ODc1MzE3NzQ=",
            "number": 200,
            "title": "Misunderstanding the email_change",
            "body": "Hello, I think something wrong with the email_change functionality. I'm successfully getting a verification link after changing the current email, but getting a json message (`{\"code\":202,\"msg\":\"Email change request accepted\"}`) after clicking it, nothing else.\r\n\r\nI think,  the 334 line of verify.go should not be returned with nil and interrupt the execution\r\n\r\n<img width=\"1022\" alt=\"Screen Shot 2021-09-03 at 13 11 02\" src=\"https://user-images.githubusercontent.com/5887811/131973965-98521249-2af2-4b74-9e9a-31206ccfaaa1.png\">\r\n",
            "author": {
                "login": "xurshid29"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-03T08:19:20Z",
            "closedAt": "2021-09-24T03:07:27Z",
            "url": "https://github.com/supabase/gotrue/issues/200",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42cLMT",
                    "body": "Hey @xurshid29, this is intended as we send 2 emails when a user requests for an email change- one to the old account and one to the new account. We'll add some documentation to make this clearer in the future! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-06T05:31:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/200#issuecomment-913355539"
                },
                {
                    "id": "IC_kwDOEKipmc42cMq9",
                    "body": "@kangmingtay  Thanks for the clarification. This is not a bug, this is a feature). How can I remove a bug label from this issue then?",
                    "author": {
                        "login": "xurshid29"
                    },
                    "createdAt": "2021-09-06T05:49:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/200#issuecomment-913361597"
                },
                {
                    "id": "IC_kwDOEKipmc42cSyX",
                    "body": "Maybe we can specify second `redirect_to `query parameter for this request? When the acceptedTokenError is returned, we will allow developers to redirect users to the specified url, instead of showing blank JSON page?",
                    "author": {
                        "login": "DavraYoung"
                    },
                    "createdAt": "2021-09-06T06:46:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/200#issuecomment-913386647"
                },
                {
                    "id": "IC_kwDOEKipmc42eX7y",
                    "body": "Hey @DavraYoung, yeah this sounds good, will fix this soon! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-07T01:48:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/200#issuecomment-913932018"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5ODkwNTk3NjU=",
            "number": 202,
            "title": "Make release action dependent on test action",
            "body": "the [release](https://github.com/supabase/gotrue/blob/master/.github/workflows/release.yml) action should only start if the [test](https://github.com/supabase/gotrue/blob/master/.github/workflows/test.yml) action passes",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-06T11:11:18Z",
            "closedAt": "2022-02-18T11:07:42Z",
            "url": "https://github.com/supabase/gotrue/issues/202",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4-P5AG",
                    "body": ":tada: This issue has been resolved in version 2.5.9 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.5.9)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-02-18T11:10:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/202#issuecomment-1044353030"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5OTA3MjcyNTc=",
            "number": 209,
            "title": "Cannot Turn Off Automatic Account Merging",
            "body": "## Describe the bug\r\n\r\nSupabase automatically merges different provider accounts by email address.\r\n\r\n## To Reproduce\r\n\r\n1. Create an account using Supabase Auth with GitHub as provider, where the GitHub account has the email address test@example.com.\r\n2. Log out.\r\n3. Log in again, but this time using Twitter as the provider. The Twitter account has the same email address test@example.com.\r\n4. When the user comes back, they now get the GitHub login information, not the Twitter information.\r\n\r\n## Expected behavior\r\n\r\nCouple of different options - Firebase has a flow for this scenario, but it's a bit complicated IMHO:\r\n\r\nhttps://firebase.google.com/docs/auth/web/account-linking\r\n\r\nSuggestion:\r\n\r\nCreate a switch in Supabase UI that defaults to off - \"Allow Account Merging\". If it's off logging in with different providers creates different accounts - the end.\r\n\r\n- If Account Merging is set to true, if a sign in with a duplicate is detected generate a new event \"request account link\" with a flow similar to a password reset.\r\n- Add an auth query to request linked profiles.\r\n- Add an auth operation to unlinked profiles.\r\n",
            "author": {
                "login": "wiverson"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-07T15:55:33Z",
            "closedAt": "2022-09-19T06:18:27Z",
            "url": "https://github.com/supabase/gotrue/issues/209",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42gRSV",
                    "body": "This is a good suggestion @wiverson. Just curious, why do you want to turn off automatic merging? ",
                    "author": {
                        "login": "inian"
                    },
                    "createdAt": "2021-09-07T15:57:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/209#issuecomment-914429077"
                },
                {
                    "id": "IC_kwDOEKipmc42gTCm",
                    "body": "Working on an entertainment title. User has a public professional profile for GitHub and a personal profile for Twitter. User creates account with GitHub, but now can't create account with Twitter.\n\nPeople have different (public) identities on different services even if they have the same (private) email address.\n",
                    "author": {
                        "login": "wiverson"
                    },
                    "createdAt": "2021-09-07T16:07:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/209#issuecomment-914436262"
                },
                {
                    "id": "IC_kwDOEKipmc42gTZ2",
                    "body": "Also, seems like a potential security issue, although depends on how elaborate an attack scenario & trust levels for things like abandoned/semi-abandoned accounts. \ud83e\udd37\u200d\u2642\ufe0f",
                    "author": {
                        "login": "wiverson"
                    },
                    "createdAt": "2021-09-07T16:09:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/209#issuecomment-914437750"
                },
                {
                    "id": "IC_kwDOEKipmc42hI-X",
                    "body": "This actually gets worse the more social accounts that are supported. For example, I'd like to support people logging in with Google, Discord, Twitch and email/pass. It's very easy to imagine people having very different avatars for those accounts that reflect very different identities - for example, they may have their work photo associated with their Google account, and a personal \"fun\" account photo for their Discord/Twitch identity.\r\n\r\nIt would be nice to be fancy and offer things like an API to allow users to select their preferred profile. I can offer custom avatars, but that's getting a bit further away from the simplicity.\r\n\r\nMy particular case is for a game for streamers, so I'd like users to be able to log in with an identity that matches the streamer's identity. For example, if the streamer is hosting a game on Twitch, I'd like folks to be able to use their twitch identity. If the streamer is hosting on Discord, I'd like to support that.\r\n\r\nRIght now, once someone is registered with an email address, that's it. If they register on Twitter first, I can't get their Discord or Twitch id - I just get the Twitter account back.\r\n\r\nBasically, supabase is just taking a very simple merge strategy - \"hey, same email, same person, done\" but unfortunately it's quite a bit more complicated than that. The short term solution is to just allow turning off merge - then if someone logs in with Twitter, I get their Twitter identity. Twitch, Discord, email/pass, whatever.\r\n\r\nIf supporting account linking in the future, add the needed APIs.\r\n\r\nMy two cents - let me know if there is anything I can do to help. :)\r\n",
                    "author": {
                        "login": "wiverson"
                    },
                    "createdAt": "2021-09-07T22:02:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/209#issuecomment-914657175"
                },
                {
                    "id": "IC_kwDOEKipmc42hbUx",
                    "body": "Somehow related to this: https://github.com/supabase/supabase/issues/2556\r\n\r\nI also think of this somehow, where people nowadays try to create multiple account for example they use FB for personal things account and Google for maybe branding account that can be possible with same email address",
                    "author": {
                        "login": "sandbox-apps"
                    },
                    "createdAt": "2021-09-08T00:38:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/209#issuecomment-914732337"
                },
                {
                    "id": "IC_kwDOEKipmc5KitOy",
                    "body": "Hi everyone, we currently don't have plans to support manual linking of accounts in the near future. Currently, GoTrue only supports automatic linking of accounts based on the user's email.\r\n\r\n\r\nWe will revisit on the future though, so feel free to follow along on #313 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-19T06:18:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/209#issuecomment-1250612146"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5OTI2MzQ4NTY=",
            "number": 211,
            "title": "Support a denylist to block non-existent or abusive domain signups",
            "body": "",
            "author": {
                "login": "darora"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-09T21:10:26Z",
            "closedAt": "2023-05-03T14:28:00Z",
            "url": "https://github.com/supabase/gotrue/issues/211",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Walx8",
                    "body": "Related to supabase/gotrue#1057",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T10:26:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/211#issuecomment-1449811068"
                },
                {
                    "id": "IC_kwDOEKipmc5bYanF",
                    "body": "Closing in favour of tracking internally. This is a use case that will be taken into account when implementing the webhooks RFC though it's also quite likely that we'll have another method of blocking abusive signups\r\n\r\nUpd: on further thought, this is likely best handled outside of webhooks. Leaving as closed nonetheless and will open a task to track internally",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-03T14:28:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/211#issuecomment-1533127109"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5OTMwOTQyNjQ=",
            "number": 212,
            "title": "Allow configuration string or template file for custom email templates",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nThe only way to use custom email templates is using a URL via `MAILER_TEMPLATES_<TYPE>` configuration as suggested in [the docs](https://github.com/supabase/gotrue/blob/master/README.md). One can't deploy GoTrue with custom template files or set a string in the config.\r\n\r\n## Describe the solution you'd like\r\n\r\n1. Be able to set a config/environment variable like `MAILER_TEMPLATES_<TYPE>_CONTENT`.\r\n2. Deploy GoTrue with template files\r\n",
            "author": {
                "login": "Mimameid"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-10T10:16:38Z",
            "closedAt": "2022-07-19T07:47:20Z",
            "url": "https://github.com/supabase/gotrue/issues/212",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42pu2f",
                    "body": "Hey @Mimameid, we've added an endpoint to generate your own signup / recovery / invite or magiclinks [here](https://github.com/supabase/gotrue#post-admingenerate_link) so you can use any email provider / smtp server and customise the email templates freely. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-10T13:35:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/212#issuecomment-916909471"
                },
                {
                    "id": "IC_kwDOEKipmc42p_0A",
                    "body": "Hey @kangmingtay, this is not quite it, since it demands quite some work on the developers end and bypasses the mailing functionality of GoTrue.\r\n\r\nWhile the functionality is there. One would just need to allow to overwrite the [the default values](https://github.com/supabase/gotrue/blob/master/mailer/template.go#L21-L44). This would provide some basic email templating functionality and would be simpler and faster for the developer.\r\n\r\nWhat do you think?",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-09-10T15:10:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/212#issuecomment-916978944"
                },
                {
                    "id": "IC_kwDOEKipmc42qGRo",
                    "body": "Hmm I don't think it's necessary to create another env var to support this. If you're planning to self-host gotrue, you can just create your template html files and host them on a storage service (such as AWS S3 or Supabase storage \ud83e\udd23), and point the `MAILER_TEMPLATES_<TYPE>` to the corresponding URL. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-10T15:43:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/212#issuecomment-917005416"
                },
                {
                    "id": "IC_kwDOEKipmc42raaB",
                    "body": "@kangmingtay I thought about it, your suggestion can work.\r\n\r\nI still think, for something very basic and simple, it can be a nice thing to have. But I understand if there is no interest in such a \"feature\", since there are other means to tackle it.\r\n\r\nPS.: I deleted my last post. Rereading it the next morning, I figured it didn't make much sense. :zipper_mouth_face: ",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-09-11T06:13:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/212#issuecomment-917350017"
                },
                {
                    "id": "IC_kwDOEKipmc5G2lzr",
                    "body": "Seems like the issue here has been resolved -- going to close for now but feel free to re-open if there are still pressing queries.\r\n\r\nRest assured that we are working on the email templating experience and you should be able to see updates soon.\r\n\r\nThanks",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-19T07:47:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/212#issuecomment-1188715755"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5OTMxMTgxNDc=",
            "number": 213,
            "title": "Refresh token reuse detection",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nUsing invalidated refresh tokens doesn't have any consequences.\r\n\r\n## Describe the solution you'd like\r\n\r\nUsing an invalid refresh token should invalidate every refresh token and access token descending from the original refresh token.\r\n\r\n## Additional context\r\n\r\nThis can protect the application from compromise and replay attacks.\r\n",
            "author": {
                "login": "Mimameid"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-10T10:49:45Z",
            "closedAt": "2021-11-22T07:40:21Z",
            "url": "https://github.com/supabase/gotrue/issues/213",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42pvyx",
                    "body": "Hey @Mimameid, hmm just to clarify, does using an invalidated refresh token return an access token? Or is there nothing returned? A refresh token is only valid for one-time use and is revoked after it's used. Once the refresh token is revoked, the `revoked` column in the `auth.refresh_tokens` table is set to true and the refresh token can no longer be used.\r\n\r\n> Using an invalid refresh token should invalidate every refresh token and access token descending from the original refresh token.\r\n\r\nHmm I feel that this might not be a good enhancement to add because an attacker can exploit it by constantly sending invalid refresh tokens to the api, which will result in blocking an actual user from obtaining an access token / a valid refresh token.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-10T13:41:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/213#issuecomment-916913329"
                },
                {
                    "id": "IC_kwDOEKipmc42p4Wc",
                    "body": "Hey @kangmingtay, no it does not. It just returns an error message, telling that the refresh token is invalid. \r\n\r\nApart from preventing replay attacks, this would prevent a compromised refresh token (though in this case we could assume that the user has bigger issues) having unlimited access, without anyone noticing.\r\n\r\nReferring to this: https://datatracker.ietf.org/doc/html/rfc6819#section-5.2.2.3",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-09-10T14:29:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/213#issuecomment-916948380"
                },
                {
                    "id": "IC_kwDOEKipmc42p9Xl",
                    "body": "Ah ok I see where you're coming from, this is a good point and definitely will help to improve the security of gotrue overall. Currently, even if a refresh token is revoked, the access token will still be valid for the duration of the `GOTRUE_JWT_EXP`. So what we'll need to do is to revoke any access tokens tied to a revoked / expired refresh token. \r\n\r\nHowever, we don't have to revoke every refresh token descending from the original refresh token because a new refresh token isn't dependent on the old one. The refresh token is generated uniformly randomly using go's native crypto library. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-10T14:57:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/213#issuecomment-916968933"
                },
                {
                    "id": "IC_kwDOEKipmc42qBdi",
                    "body": "Hey @kangmingtay, if descendant refresh tokens aren't revoked, there is no telling, if there was a malicious usage of the refresh token. The article says:\r\n\"...in case of such an access attempt the valid refresh token and the access authorization associated with it are both revoked.\".\r\n\r\nIn other words: There should only be one refresh token valid. If an invalid refresh token, the valid token is descending from, is used, the valid one should be invalidated. ",
                    "author": {
                        "login": "Mimameid"
                    },
                    "createdAt": "2021-09-10T15:19:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/213#issuecomment-916985698"
                },
                {
                    "id": "IC_kwDOEKipmc42qD8M",
                    "body": "Got it! Found a great resource [here](https://auth0.com/blog/refresh-tokens-what-are-they-and-when-to-use-them/#Refresh-Token-Rotation) by Auth0 that we can reference along with the RFC to implement better practices for managing refresh tokens on gotrue. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-10T15:34:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/213#issuecomment-916995852"
                },
                {
                    "id": "IC_kwDOEKipmc46IIHY",
                    "body": "@Mimameid thanks for the feedback, we'll will be shipping this out soon in the next release!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-11-22T07:41:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/213#issuecomment-975208920"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5OTQwMTc1MDQ=",
            "number": 214,
            "title": "Oauth fails when no email is linked to account ",
            "body": "## Feature request\n\n### Problem \nSupabase Oauth relies on the assumption that users signing in with Oauth providers have an email linked to their account, which isn't always the case. \n\n### Solution\nIt would be nice if phone numbers could be used instead of email when using Oauth.\n\n### Example \nAn example is Facebook. If users haven't linked an email to their account they're screwed. This may turn off some from my app/website and lead them to using an alternate app/website",
            "author": {
                "login": "lunandd"
            },
            "state": "OPEN",
            "createdAt": "2021-09-09T15:04:38Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/214",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42rf1V",
                    "body": "Related to this: https://github.com/supabase/supabase/issues/2853",
                    "author": {
                        "login": "sandbox-apps"
                    },
                    "createdAt": "2021-09-11T09:07:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-917372245"
                },
                {
                    "id": "IC_kwDOEKipmc42sGSa",
                    "body": "I'll move this to the GoTrue repo so that the auth team can comment \ud83d\udc4d \r\n\r\n@kangmingtay - the related issue [here](https://github.com/supabase/supabase/issues/2853) has a lot of discussion. I'll leave it in the supabase repo for now but can shift it here if you prefer (or close this as a duplicate)",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-09-12T01:44:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-917529754"
                },
                {
                    "id": "IC_kwDOEKipmc486pAD",
                    "body": "Adding a +1 here. Ran into this adding Discord login. I'm working on crypto/web3 use cases so asking for email is unfortunately a no go.",
                    "author": {
                        "login": "jtgi"
                    },
                    "createdAt": "2022-01-26T09:13:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1022005251"
                },
                {
                    "id": "IC_kwDOEKipmc49aT33",
                    "body": "Anything we can do to help? +1 as well for this",
                    "author": {
                        "login": "adrianhorning08"
                    },
                    "createdAt": "2022-02-04T20:00:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1030307319"
                },
                {
                    "id": "IC_kwDOEKipmc4-Gtah",
                    "body": "+1. Facing issue with Twitter Oauth when there is no email linked with the user account. \r\n\r\nhttps://github.com/supabase/supabase/issues/2853",
                    "author": {
                        "login": "RamyaChinnadurai"
                    },
                    "createdAt": "2022-02-16T18:02:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1041946273"
                },
                {
                    "id": "IC_kwDOEKipmc4-fJCc",
                    "body": "Seems like this issue makes Supabase auth unusable for a large chunk of users...unfortunate because it's a big part of the value proposition.",
                    "author": {
                        "login": "jnorris441"
                    },
                    "createdAt": "2022-02-23T00:46:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1048350876"
                },
                {
                    "id": "IC_kwDOEKipmc4-44sE",
                    "body": "I spent ages trying to debug this. I think in the meantime there should either be a) a big red flag in the docs on potentially effected providers (ran into it with Twitter in my case), or just flat out disabling those providers until there's a fix. Because it means that any provider where an email isn't guaranteed could fail randomly in production after testing during dev.",
                    "author": {
                        "login": "madeleineostoja"
                    },
                    "createdAt": "2022-03-01T07:13:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1055099652"
                },
                {
                    "id": "IC_kwDOEKipmc4_G9Jg",
                    "body": "I'm experiencing the same issue.  My accounts DO have emails so I think the root cause here is missing middleware to handle the additional request for the email from the API.\r\n \r\nThis maybe helpful:\r\nhttps://auth0.com/rules/get-twitter-email\r\n",
                    "author": {
                        "login": "oespn"
                    },
                    "createdAt": "2022-03-04T03:21:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1058787936"
                },
                {
                    "id": "IC_kwDOEKipmc4_Kaq2",
                    "body": "+1 for this, ran into the same issue with Twitter OAuth",
                    "author": {
                        "login": "sarimrmalik"
                    },
                    "createdAt": "2022-03-05T05:31:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1059695286"
                },
                {
                    "id": "IC_kwDOEKipmc4_S68d",
                    "body": "Hi everyone! We've started to work on this issue and are aware that this is not ideal for anyone who wants to oauth as the primary login mechanism. The PR is mentioned above and feel free to ask any questions / add in your thoughts. We will do this in phases for each provider instead of all at once. The first phase will include twitter and facebook for now. \r\n\r\nCurrently, the main question I have is:\r\n1. Should a user who signs in with the oauth provider without an email address be automatically confirmed? \r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-03-08T15:49:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1061924637"
                },
                {
                    "id": "IC_kwDOEKipmc4_U7Ij",
                    "body": "@kangmingtay I think if you are trusting a third party to vouch for their identity there is no reason to confirm them again. Maybe that is simplistic",
                    "author": {
                        "login": "jnorris441"
                    },
                    "createdAt": "2022-03-09T01:09:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1062449699"
                },
                {
                    "id": "IC_kwDOEKipmc4_WIhy",
                    "body": "Agree about confirmation, to me the whole point of oauth is handing off validation to a trusted 3rd party",
                    "author": {
                        "login": "madeleineostoja"
                    },
                    "createdAt": "2022-03-09T10:18:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1062766706"
                },
                {
                    "id": "IC_kwDOEKipmc5JwPko",
                    "body": "Any updates on this PR? thanks :)",
                    "author": {
                        "login": "magikmea"
                    },
                    "createdAt": "2022-09-05T18:40:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1237383464"
                },
                {
                    "id": "IC_kwDOEKipmc5Jz6Te",
                    "body": "hey everyone, i've left a reply on the PR to explain why we have decided not to move forward with it yet: https://github.com/supabase/gotrue/pull/414#issuecomment-1238321323",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-06T15:57:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1238344926"
                },
                {
                    "id": "IC_kwDOEKipmc5J1_iu",
                    "body": "I'm glad there was work done for this.\r\n\r\nIs there a workaround better than putting in a fake auto-confirmed email like user75555@oauthfakedomain.com?",
                    "author": {
                        "login": "jnorris441"
                    },
                    "createdAt": "2022-09-07T04:21:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1238890670"
                },
                {
                    "id": "IC_kwDOEKipmc5KEDdR",
                    "body": "Thanks for taking a look at this, @kangmingtay. I'm happy to brainstorm suggestions in the meantime. Still, regarding my project, this is a severe hold-up, and the feasible workaround is to revert to Firebase/some other provider until this is solved.",
                    "author": {
                        "login": "richawo"
                    },
                    "createdAt": "2022-09-10T00:40:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1242576721"
                },
                {
                    "id": "IC_kwDOEKipmc5LOx0u",
                    "body": "@RichardAwoyemi Really sorry to hear that. We're working on quite a few things in the enterprise space this year and it's unlikely we'll be able to get to this. We are very aware of the issue and it is high on our agenda, but can't promise any timelines yet.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T11:48:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/214#issuecomment-1262165294"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWU5OTQwMjIzMzA=",
            "number": 215,
            "title": "Add Auth0 as a Login Provider",
            "body": "# Feature request\n\n## Auth0\n\nWould it be possible to include Auth0 as a login provider. Would like transition over to Supabase however this is preventing me from doing so.\n\n## Describe alternatives you've considered\n\nTutorial on importing users from Auth0.",
            "author": {
                "login": "juanzgc"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-11T17:55:51Z",
            "closedAt": "2022-04-19T02:12:30Z",
            "url": "https://github.com/supabase/gotrue/issues/215",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc42sHvh",
                    "body": "I'll shift this to the Auth repo \ud83d\udc4d \r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-09-12T02:17:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/215#issuecomment-917535713"
                },
                {
                    "id": "IC_kwDOEKipmc446ryt",
                    "body": "Looking into doing this. Found some prior art and examples from other repos.\r\n\r\n- https://github.com/nextauthjs/next-auth/blob/main/src/providers/auth0.js\r\n",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-29T17:11:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/215#issuecomment-954907821"
                },
                {
                    "id": "IC_kwDOEKipmc5BrgSK",
                    "body": "Hey all,\r\n\r\nWe plan on tracking all OAuth provider requests on https://github.com/supabase/gotrue/issues/451 so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:12:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/215#issuecomment-1101923466"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc47iC7Y",
            "number": 217,
            "title": "Error response for Sign-up with email & password should include error type (or code) to handle the reason of error, in client side.",
            "body": "# Feature request\r\n\r\nI'm using gotrue client like \"gotrue-js\" and \"gotrue-dart\". When calling sign-up with email and password, it return the error as just a **String** message, like \"A user with this email address has already been registered\". It's meaningful but difficult to handle the error in client side because it doesn't express with programmatic type or code.\r\n\r\n## Describe the solution you'd like\r\n\r\nInclude defined error code with error message in the response.\r\n\r\n## Describe alternatives you've considered\r\n\r\nFor the time being, I've made wrapper code to judge the error type with error message sentence.  But it's not safety, so headache for me.\r\n\r\n## Additional context\r\n\r\nFirebase has [FirebaseAuthException](https://firebase.google.com/docs/reference/android/com/google/firebase/auth/FirebaseAuthException). \r\nClient can identify the reason of error by checking that exception code, like \"email-already-in-use\", \"invalid-email\", \"week-password\" .... .\r\n\r\n\r\n**I really love the supabase!! I appreciate you to make this fantastic BaaS and packages.**",
            "author": {
                "login": "sugitlab"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-17T00:03:58Z",
            "closedAt": "2022-09-21T13:25:40Z",
            "url": "https://github.com/supabase/gotrue/issues/217",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KuhOP",
                    "body": "This is intentional because the explanatory message would leak information that the user has an account. We are thinking about removing this obfuscation though in a next major version of GoTrue and its client libraries.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:25:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/217#issuecomment-1253708687"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc47nl3d",
            "number": 219,
            "title": "API compatibility with netlify/gotrue",
            "body": "Do you have or/and intend to keep the public API surface compatible with netlify/gotrue?\r\n\r\nI'm writing a administration UI for gotrue and thought about addnig compatibility for your fork too.",
            "author": {
                "login": "markhaehnel"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-19T07:25:05Z",
            "closedAt": "2021-09-20T11:31:23Z",
            "url": "https://github.com/supabase/gotrue/issues/219",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc43AVn2",
                    "body": "Hey @markhaehnel, we have a RFC [here](https://github.com/supabase/rfcs/pull/2) and the current plan is to unfork gotrue from netlify's upstream version because our fork has diverged quite abit. You can checkout the link I've attached for a detailed explanation on the tradeoffs of this decision and the current disparities with the upstream repo.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-09-20T11:15:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/219#issuecomment-922835446"
                },
                {
                    "id": "IC_kwDOEKipmc43AXc1",
                    "body": "Hi @kangmingtay. This is a reasonable decision even if it's not the best for the open source community.\r\nNetlify doesn't really maintain their GoTrue repository well, imho.  With missing documentation and half broken features. I totally understand the decision.\r\n\r\nI'm looking forward to the further development of your fork! \ud83d\udc4d\ud83c\udffb ",
                    "author": {
                        "login": "markhaehnel"
                    },
                    "createdAt": "2021-09-20T11:26:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/219#issuecomment-922842933"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc48FiS4",
            "number": 227,
            "title": "feat: Indicate that confirmation is required in response",
            "body": "thread here https://github.com/supabase/gotrue-dart/issues/32#issuecomment-906639397 and https://github.com/supabase/gotrue-js/issues/126\r\n\r\nshowing that at the API level it's not clear that a signUp was successful and is awaiting email/phone verification\r\n\r\nperhaps all responses should have a field `data.awaitingEmailVerification` and `data.awaitingPhoneVerification` with corresponding bools",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-27T12:21:53Z",
            "closedAt": "2022-09-21T13:34:15Z",
            "url": "https://github.com/supabase/gotrue/issues/227",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc43TW33",
                    "body": "any thoughts on this one @thorwebdev ?",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-09-27T12:22:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/227#issuecomment-927821303"
                },
                {
                    "id": "IC_kwDOEKipmc43VStJ",
                    "body": "I'd suggest adding a more general 'status' enum field on the 'profile' or 'status' endpoint response.",
                    "author": {
                        "login": "darora"
                    },
                    "createdAt": "2021-09-27T21:55:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/227#issuecomment-928328521"
                },
                {
                    "id": "IC_kwDOEKipmc43WVe6",
                    "body": "pilling on @darora's suggestion, maybe something like `{verified: true/false}`? or `{phoneVerified:true/false}` and `{emailVerified:true/false}` - doesn't even have to modify the user model, can be implemented at API level since there are already `PhoneConfirmedAt` and `EmailConfirmedAt` fields on the `User` model ",
                    "author": {
                        "login": "i-pip"
                    },
                    "createdAt": "2021-09-28T01:52:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/227#issuecomment-928602042"
                },
                {
                    "id": "IC_kwDOEKipmc43Wgfl",
                    "body": "an example of this currently being inferred at the application level for one of our demos: https://github.com/supabase/supabase/blob/0364dc7bac2314320aeb6e3ed7a4e20a1a4637f8/examples/javascript-auth/index.js#L72",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-09-28T02:31:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/227#issuecomment-928647141"
                },
                {
                    "id": "IC_kwDOEKipmc5KukDP",
                    "body": "If there's a valid date in the `user` object returned on the `email_confirmed_at` and/or `phone_confirmed_at` fields, then the user has confirmed their email and/or phone number.\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:34:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/227#issuecomment-1253720271"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc48TF0p",
            "number": 228,
            "title": "User already signed up is throwing a wrong message and supabase.io panel not being respected",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nEven with the \"Enable email confirmations\" option disabled, I am receiving the message \"Thanks for registering, now check your email to complete the process.\" when I try to signup a user already registered. I don't remember exactly the message, but before this bug start, I was receiving some messages like `User already been registered` when trying to re-signup an already created user. \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Disable Email confirmations on Supabase.io\r\n2. Try to register an already registered user\r\n3. See throwing with the wrong message\r\n\r\n## Expected behavior\r\n\r\nWhen trying to register an already registered user, the message should be consistent and in sync with supabase.io rules of Authentication. \r\n\r\n## System information\r\n\r\n- OS: MacOS\r\n- Version of supabase-js: 1.23.1\r\n- Version of Node.js: v12.13.0\r\n\r\n## Additional context\r\n\r\nThis issue breaks my app for 2 days once this messaging flow is the way that I can ensure that a user exists or not in Supabase User Base.\r\n",
            "author": {
                "login": "obetomuniz"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-29T13:10:54Z",
            "closedAt": "2022-06-01T03:13:11Z",
            "url": "https://github.com/supabase/gotrue/issues/228",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc43ccd0",
                    "body": "This was actually a change to prevent leaking user email addresses. See https://github.com/supabase/gotrue/issues/119.",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2021-09-29T13:58:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/228#issuecomment-930203508"
                },
                {
                    "id": "IC_kwDOEKipmc43ce-4",
                    "body": "I don't think the fix on supabase/gotrue#119 is 100% suitable for re-signup attempts scenarios, as I mentioned, in the Supabase Dashboard, my \"Enable email confirmations\" option is disabled, so no email confirmation indications should happen. It wrongly approaches that throwing scenario.\r\n\r\n- `Thanks for registering`-> It's a falsy-positive, once the user is already registered\r\n- `now go check your email to complete the process.` -> Sometimes the \"email confirmations\" are disabled by application design.\r\n\r\nSomething like `User registered` is enough, and only if \"email confirmations\" are enabled, `User registered, check your email to complete the process.`",
                    "author": {
                        "login": "obetomuniz"
                    },
                    "createdAt": "2021-09-29T14:09:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/228#issuecomment-930213816"
                },
                {
                    "id": "IC_kwDOEKipmc5EIeOS",
                    "body": "Seems like this has been resolved by #237  am going to close this for now but feel free to re-open if you are still facing issues.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-01T03:13:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/228#issuecomment-1143071634"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc481cLj",
            "number": 233,
            "title": "[Dashboard] Allow custom proxy URLs for EXTERNAL_X_REDIRECT_URI",
            "body": "A user should be able to swap the redirect URL for a vanity proxy address they have set up\r\n\r\n### Discussed in https://github.com/supabase/supabase/discussions/3428\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ilyabo** October  5, 2021</sup>\r\nIs it possible to use the actual site URL in the auth callback URL for external OAuth providers? Maybe at least with the Pro plan?\r\n\r\nIt doesn't look very convincing or trustworthy with the randomly generated hostname:\r\n\r\n\r\n<img src=https://user-images.githubusercontent.com/351828/136155124-b53dfc19-9f91-4281-b552-e364e129b175.png width=300>\r\n\r\n\r\nI tried adding a URL-rewrite on Vercel (from `https://\u2026supabase.co/auth/v1/callback` to `https://mysiteurl.com/auth/v1/callback`), but I am getting this error when trying to authenticate with GitHub:\r\n```\r\n?error=redirect_uri_mismatch&error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application.\r\n```</div>",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-08T03:15:21Z",
            "closedAt": "2022-05-10T02:37:41Z",
            "url": "https://github.com/supabase/gotrue/issues/233",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46x3L9",
                    "body": "I am having the same issue. Is there any update? ",
                    "author": {
                        "login": "0radek"
                    },
                    "createdAt": "2021-12-05T01:45:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/233#issuecomment-986149629"
                },
                {
                    "id": "IC_kwDOEKipmc47fxPq",
                    "body": "I agree, the current random generated database name is screaming **_I've been hacked, don't sign in!!!_**.\r\n\r\nWould it be possible to use the new `_middleware.js` in NextJs 12 to receive the request then await the response from the real database?\r\n\r\nex:\r\n\r\nGoogle => your site => async request to Supabase => back to your site => back to Google\r\n\r\nor even:\r\n\r\nGoogle => your site => async request to Supabase => back to Google directly",
                    "author": {
                        "login": "TheThirdRace"
                    },
                    "createdAt": "2021-12-20T18:50:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/233#issuecomment-998183914"
                },
                {
                    "id": "IC_kwDOEKipmc5C3YQ5",
                    "body": "This looks like it might be a subset of the problem described in #143 \r\n\r\n@awalias  would it be okay if we closed the issue and continued the discussion there instead?",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-10T02:30:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/233#issuecomment-1121813561"
                },
                {
                    "id": "IC_kwDOEKipmc5C3ah4",
                    "body": "@J0 yeah good call, lets close this one",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-05-10T02:37:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/233#issuecomment-1121822840"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49IpGn",
            "number": 235,
            "title": "auth.signUp() - Error messages not directed related to issue",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\n**Case 1:** When a user is trying to **sign up with an already existing email**, the error message prints:\r\n`\"Thanks for registering, now check your email to complete the process\"`\r\n\r\n![Image Description](https://hdmlbxshrurxrggmrogp.supabase.co/storage/v1/object/public/gpic/v1/image_2021_fUlL_M7zxP)\r\n\r\n**Case 2:** When a user is trying to **sign up without an e-mail**, the error message prints:\r\n`\"Signup provider must be either email or phone\"`, even though **Phone Signup is disabled**.\r\n\r\n![Image Description](https://hdmlbxshrurxrggmrogp.supabase.co/storage/v1/object/public/gpic/v1/image_2021_BmhPV4Zq6Z)\r\n![Image Description](https://hdmlbxshrurxrggmrogp.supabase.co/storage/v1/object/public/gpic/v1/image_2021_iFzCk08Ph0)\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\nThis happens whenever I use:\r\n```\r\nconst { user, session, error } = await supabase.auth.signUp({\r\n  email: 'example@email.com',\r\n  password: 'example-password',\r\n})\r\n```\r\n\r\n## Expected behavior\r\n\r\nError messages should reflect the respective issue.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser (if applies): chrome\r\n- Version of supabase-js: 1.24.0\r\n- Version of Node.js: 14.17.6\r\n",
            "author": {
                "login": "lucasmrl"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-11T15:59:18Z",
            "closedAt": "2021-11-01T02:34:21Z",
            "url": "https://github.com/supabase/gotrue/issues/235",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44LpMJ",
                    "body": "Hey @lucasmrl, can I work on this issue?",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2021-10-13T18:01:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/235#issuecomment-942576393"
                },
                {
                    "id": "IC_kwDOEKipmc44MH9M",
                    "body": "Moving this to the relevant repo. Feel free to work on it @bariqhibat!",
                    "author": {
                        "login": "soedirgo"
                    },
                    "createdAt": "2021-10-13T20:38:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/235#issuecomment-942702412"
                },
                {
                    "id": "IC_kwDOEKipmc44M0yR",
                    "body": "Nice @bariqhibat ! Sorry @soedirgo , thanks for putting in the right place!",
                    "author": {
                        "login": "lucasmrl"
                    },
                    "createdAt": "2021-10-14T02:19:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/235#issuecomment-942886033"
                },
                {
                    "id": "IC_kwDOEKipmc4479iS",
                    "body": "Hey, pretty sure this would be fixed in next release, we can close this! @kangmingtay ",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2021-10-30T14:28:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/235#issuecomment-955242642"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49O2pj",
            "number": 236,
            "title": "add Spotify OAuth Provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI need to authenticate users with Spotify.\r\n\r\n## Describe alternatives you've considered\r\n\r\nI've used passport Spotify strategy before.",
            "author": {
                "login": "stardvst"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-14T21:02:59Z",
            "closedAt": "2021-10-28T06:33:47Z",
            "url": "https://github.com/supabase/gotrue/issues/236",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44RyrZ",
                    "body": "Thanks @pixietale - I'll transfer this one over to the Auth server",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-10-15T10:24:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/236#issuecomment-944188121"
                },
                {
                    "id": "IC_kwDOEKipmc44mK0n",
                    "body": "This is being implemented in #245!",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-10-22T11:13:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/236#issuecomment-949529895"
                },
                {
                    "id": "IC_kwDOEKipmc441eyD",
                    "body": ":tada: This issue has been resolved in version 2.1.17 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.1.17)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-10-28T06:34:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/236#issuecomment-953543811"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49U8Qx",
            "number": 239,
            "title": "Error sending confirmation SMS (Golang unable to marshal JSON)",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nPhone Auth is not working properly when calling\r\n```ts\r\nconst { user, error } = await supabase.auth.signUp({\r\n  email: values.email,\r\n  password: values.password,\r\n  phone: values.phoneNumber\r\n})\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Use Phone Auth \r\n2. See error\r\n\r\n## Expected behavior\r\n\r\nA confirmation SMS should be sent \r\n\r\n## Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/59773847/136599546-b60e0546-f22b-469b-8bac-e3fc4cae6b96.png)\r\n\r\n## System information\r\n\r\n- OS: Windows\r\n- Browser (if applies) Chrome\r\n- Version of supabase-js: 1.24.0\r\n\r\n## Additional context\r\n\r\nThe phone number is a Malaysian phone number starting with `+60`, since this error is coming from Golang, I suspect it's something wrong with the supabase backend?\r\n",
            "author": {
                "login": "marcustut"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-08T17:39:04Z",
            "closedAt": "2021-11-01T02:34:39Z",
            "url": "https://github.com/supabase/gotrue/issues/239",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44XMm-",
                    "body": "thanks for the report @marcustut \r\n\r\ncan I ask are you using the default template in Auth > Templates?\r\n\r\nand how are you passing the mobile number? Does it still fail if you remove the `+` ?\r\n\r\n![image](https://user-images.githubusercontent.com/458736/137709454-4520ff70-3ea1-4efb-a653-5d250d71ee15.png)\r\n\r\nit seems like gotrue is choking on one of these provided values https://github.com/supabase/gotrue/blob/9dfe6fe65e5607fbd020233c0bc98dd954f084a8/api/sms_provider/twilio.go#L23\r\n\r\nit appears we may need to do some extra validation on either the template body, or something else",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-10-18T09:59:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/239#issuecomment-945605054"
                },
                {
                    "id": "IC_kwDOEKipmc44XaA5",
                    "body": "Hey @marcustut, thanks for reaching out! It would be great if you can provide the full error message you're getting. The \"+\" shouldn't matter because we format the phone number being sent in the request body.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-10-18T11:12:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/239#issuecomment-945659961"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49b43I",
            "number": 241,
            "title": "How to setup gotrue in docker compose with supabase correctly",
            "body": "# Improve documentation\r\nHow to setup Gotrue in context with supabase (selfhosted )\r\n\r\n\r\n## Describe the problem\r\n\r\nI have used the supabase docker compose file and at first Gotrue did not start since the env.sample did not contain a value. So for the host, I use localhost and for the post I use 9999. This is my env\r\n\r\n```\r\n## DB port\r\nPOSTGRES_PORT=5432\r\n\r\n## Realtime\r\nWS_PORT=4000\r\n\r\n# Auth\r\n\r\n## General\r\nSITE_URL=http://localhost:3000\r\nADDITIONAL_REDIRECT_URLS=\r\nJWT_EXPIRY=3600\r\nDISABLE_SIGNUP=false\r\n\r\n## Email auth\r\nENABLE_EMAIL_SIGNUP=true\r\nENABLE_EMAIL_AUTOCONFIRM=true\r\nSMTP_ADMIN_EMAIL=\r\nSMTP_HOST=localhost\r\nSMTP_PORT=9999\r\nSMTP_USER=\r\nSMTP_PASS=\r\nSMTP_SENDER_NAME=\r\n\r\n## Phone auth\r\nENABLE_PHONE_SIGNUP=false\r\nENABLE_PHONE_AUTOCONFIRM=false\r\n\r\n# Ports\r\n\r\n## API endpoint ports\r\nKONG_HTTP_PORT=8000\r\nKONG_HTTPS_PORT=8443\r\n\r\n```\r\n\r\n\r\n\r\nWhen I try to call the signup method on the client. I get the error back\r\n\r\n```\r\ntime=\"2021-10-19T20:29:11Z\" level=error msg=\"500: Database error updating user\" component=api error=\"ERROR: operator does not exist: text = uuid (SQLSTATE 42883)\" method=POST path=/signup referer= remote_addr=\"***\" request_id=99c64f3b-e228-4eb8-9532-1c8ddd1e9c7c\r\n```\r\n\r\nI read the documentation, but somehow I dont get it, what should i configure, so that gotrue can create user in the db.\r\nThe Realtime API and postgrest API works fine. \r\n\r\nAny help appriciated.\r\n",
            "author": {
                "login": "Manuelbaun"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-19T20:37:26Z",
            "closedAt": "2021-10-19T21:01:10Z",
            "url": "https://github.com/supabase/gotrue/issues/241",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44c56T",
                    "body": "so, I just found the missing piece. I had to enable the extentions reading this and of cause restart the docker compose stuff. Now its working fine \ud83d\udc4d \r\nhttps://supabase.io/docs/guides/hosting/overview#database-extensions",
                    "author": {
                        "login": "Manuelbaun"
                    },
                    "createdAt": "2021-10-19T21:01:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/241#issuecomment-947101331"
                },
                {
                    "id": "IC_kwDOEKipmc44c88c",
                    "body": "[UPDATE], I actually found the real cause of this issue. It is completly unrealted to gotrue \ud83d\ude48.\r\nI have created triggers on the auth.user table to copy some userdata, like the id and email to a user table in the public scheme. \r\n\r\nI use this, to have users available while create, design and sync my tables schemas via prisma. Because primsa cannot handle cross schema references.\r\n\r\nthe problem was, that I used text as the type of a column and not the database uuid. So it could not convert uuid to text and this is the meaning of the over error.",
                    "author": {
                        "login": "Manuelbaun"
                    },
                    "createdAt": "2021-10-19T21:19:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/241#issuecomment-947113756"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49b5bC",
            "number": 242,
            "title": "Add Ethereum login",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI'd like to let my users log in with their Eth wallet (Metamask, etc)\r\n\r\n## Describe the solution you'd like\r\n\r\nJust like Uniswap does.\r\n\r\n## Describe alternatives you've considered\r\n\r\nLooks like [Redwood has an Eth login](https://github.com/oneclickdapp/ethereum-auth).\r\n\r\n## Additional context\r\n\r\nn/a\r\n",
            "author": {
                "login": "chasers"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-19T20:40:38Z",
            "closedAt": "2022-04-19T02:10:35Z",
            "url": "https://github.com/supabase/gotrue/issues/242",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45-8FS",
                    "body": "I am not working on looking into this as a provider or a new method of authorizing. It may take some time while I investigate \ud83d\ude04 ",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-11-18T11:59:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/242#issuecomment-972800338"
                },
                {
                    "id": "IC_kwDOEKipmc5BrgB_",
                    "body": "[](https://github.com/supabase/gotrue/issues/258#issuecomment-1101921655)Hey all,\r\n\r\nWe plan on tracking all OAuth provider requests on https://github.com/supabase/gotrue/issues/451 so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:10:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/242#issuecomment-1101922431"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49e8fW",
            "number": 243,
            "title": "supabase.auth.SignIn() for Third Party OAuth doesn't accepts Redirect URL option provided",
            "body": "## Description\r\nI have been using Supabase since some time and loving it !! But I am trying to add Google OAuth to my application and facing issues with `redirectTo` option. Although I have mentioned the exact URL in `redirectTo` option, after Google OAuth Consent screen, the user is directed to **Site URL** configured in Supabase Dashboard.\r\n\r\nI have provided the `redirectTo` value as:\r\n```\r\nsupabase.auth.signIn( { provider:'google' }, { redirectTo:'https://khajaghar.stackmystore.com' } )\r\n```\r\n\r\nI have added the same exact URL to my **Additional Redirect URLs**\r\n\r\n![image](https://user-images.githubusercontent.com/17889806/138118690-ab99cbde-3faa-4fe2-92ba-7e6c71f4195f.png)\r\n\r\n### Actual Behavior\r\nThe site is always redirected to the Site URL irrespective of value provided in `redirectTo` option. Only if I change my **Site URL** to the value of redirectTo it works fine which makes `redirectTo` option redundant\r\n\r\n### Expected behavior\r\nProvided I have mentioned the exact address in Additional Redirect URL in Supabase Dashboard and the same address is being used in redirectTo value, the redirection should work as desired.\r\n\r\nI am using following dependency versions:\r\n```\r\n\"@supabase/gotrue-js\": \"^1.18.0\"\r\n\"@supabase/supabase-js\": \"^1.24.0\"\r\n```",
            "author": {
                "login": "spaceVStab"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-20T15:05:11Z",
            "closedAt": "2021-10-30T14:45:54Z",
            "url": "https://github.com/supabase/gotrue/issues/243",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44n9_n",
                    "body": "First of all, you have to specify a domain in your supabase dashboard thru the api settings.\r\n\r\nFor example we have `https://examples.net`\r\n\r\nNow the `redirectTo` works as expected when you redirect to a route with the same origin domain like for example `https://examples.net/provider?id=52Dyj`",
                    "author": {
                        "login": "zakaria-chahboun"
                    },
                    "createdAt": "2021-10-22T22:53:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/243#issuecomment-950001639"
                },
                {
                    "id": "IC_kwDOEKipmc44oE1z",
                    "body": "I have attached my supabase dashboard setting which mentions both Site URL and Additional Redirect URLs. Both are configured.",
                    "author": {
                        "login": "spaceVStab"
                    },
                    "createdAt": "2021-10-23T00:49:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/243#issuecomment-950029683"
                },
                {
                    "id": "IC_kwDOEKipmc49uX_E",
                    "body": "I'm also dealing with this issue, @spaceVStab how did you resolve?",
                    "author": {
                        "login": "kaspnilsson"
                    },
                    "createdAt": "2022-02-10T21:59:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/243#issuecomment-1035567044"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49f-gE",
            "number": 244,
            "title": "SAML SSO Support",
            "body": "# Feature request\r\nI'd like to support SAML SSO through services such as OneLogin, Okta, Ping Identity, etc.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nEnterprise clients want to use these providers for authentication and is key for an application trying to service larger customers\r\n\r\n## Describe the solution you'd like\r\n\r\nI'd like to be able to manage and upload SAML certificates and allow customers to login through SAML SSO.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThere aren't very many industry alternatives to SAML SSO for enterprise clients. The only alternative if the feature isn't supported is to not use Supabase Auth and use Firebase or Auth0 or roll your own.\r\n\r\n## Additional context\r\n\r\nNo other context I can think of. Feel free to ask any questions about the use case and I can provide more details.\r\n",
            "author": {
                "login": "Emsu"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-20T20:15:28Z",
            "closedAt": "2023-05-02T11:02:33Z",
            "url": "https://github.com/supabase/gotrue/issues/244",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4-E1no",
                    "body": "If relevant -> [SAML Jackson](https://github.com/boxyhq/jackson) \ud83d\ude80",
                    "author": {
                        "login": "sama8"
                    },
                    "createdAt": "2022-02-16T12:45:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1041455592"
                },
                {
                    "id": "IC_kwDOEKipmc5KukYy",
                    "body": "Hey this is being worked on, check back in a couple of months!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:35:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1253721650"
                },
                {
                    "id": "IC_kwDOEKipmc5OJRlo",
                    "body": "Any progress on this? Very much interested in hooking Up Okta to Supabase and RLS.",
                    "author": {
                        "login": "kevinmlong"
                    },
                    "createdAt": "2022-11-10T23:55:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1311054184"
                },
                {
                    "id": "IC_kwDOEKipmc5QHKjN",
                    "body": "Likewise.",
                    "author": {
                        "login": "aantn"
                    },
                    "createdAt": "2022-12-09T09:20:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1344055501"
                },
                {
                    "id": "IC_kwDOEKipmc5RBux_",
                    "body": "Status update: this can be used on self-hosted now, but we're working on getting everything set-up for projects early next year. Please express interest as a comment or emoji here, we'll reach out to you when we have a beta.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-20T14:01:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1359408255"
                },
                {
                    "id": "IC_kwDOEKipmc5RBwAm",
                    "body": "We want this ASAP! ",
                    "author": {
                        "login": "aantn"
                    },
                    "createdAt": "2022-12-20T14:03:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1359413286"
                },
                {
                    "id": "IC_kwDOEKipmc5RBzqF",
                    "body": "To clarify our requirements, we need to use different SSO providers for different users in the same Supabase project. (Depending on which one of our customers they belong to.) Will this be supported?\r\n\r\nThis means that our Supabase project will have, for example, multiple Okta SSO providers for different email domains.",
                    "author": {
                        "login": "aantn"
                    },
                    "createdAt": "2022-12-20T14:14:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1359428229"
                },
                {
                    "id": "IC_kwDOEKipmc5TVTQn",
                    "body": "Hey all,\r\n\r\nPlease see [the SAML guide](https://supabase.com/docs/guides/platform/sso) on how to enable sign in with SSO on the `supabase.com` \r\n\r\nIf you're looking to build an application using Supabase which supports SSO please emote on @hf 's comment above for updates",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-20T09:01:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1398092839"
                },
                {
                    "id": "IC_kwDOEKipmc5afq2H",
                    "body": "Are there any instructions anywhere on how to use SAML with self-hosted supabase? Mostly I need to know what to do with the metadata XML / url",
                    "author": {
                        "login": "fortenforge"
                    },
                    "createdAt": "2023-04-21T19:28:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1518251399"
                },
                {
                    "id": "IC_kwDOEKipmc5afxmp",
                    "body": "Local development with SAML is a bit tricky, mainly because all the popular identity providers don't allow you to use localhost, or a non-HTTPS endpoint.\r\n\r\nSelf-hosting is supported, but we don't have docs for this yet. Again this is because you need to securely expose GoTrue to the internet behind HTTPS. It's not particularly easy nor is there one way to do thus. In any case the short story is this:\r\n\r\nThere are some admin APIs related to SAML you should call with an admin JWT. You can find them in the [openapi.yaml](https://github.com/supabase/gotrue/blob/master/openapi.yaml) spec. (Put this file in editor-next.swagger.io for a better view.)\r\n\r\nWith these you can create a SAML connection. It's basically what the Supabase CLI uses under the hood. We also have a Terraform / Pulumi provider we use internally that may be helpful, but it's still in the early stages: https://github.com/supabase-community/pulumi-gotrue\r\n\r\nThat's kind of it. Let me know if you have any questions.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-04-21T20:01:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1518279081"
                },
                {
                    "id": "IC_kwDOEKipmc5ahZbT",
                    "body": "Thanks, that's very helpful. I'm assuming the admin APIs are a POST request to `/admin/sso/provider`. Is there anything else? Also, is an Admin JWT the same as the service account JWT? ",
                    "author": {
                        "login": "fortenforge"
                    },
                    "createdAt": "2023-04-22T16:54:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1518704339"
                },
                {
                    "id": "IC_kwDOEKipmc5bRWXz",
                    "body": "@fortenforge \r\n\r\n> I'm assuming the admin APIs are a POST request to /admin/sso/provider\r\n\r\nWe support `GET` , `PUT` and `DELETE` methods as well, you can take a look at the [openapi spec](https://github.com/supabase/gotrue/blob/master/openapi.yaml) for the full list of params. \r\n\r\n> Also, is an Admin JWT the same as the service account JWT?\r\n\r\nIf you're using Supabase, the admin JWT is the service key. If you're self-hosting gotrue, an Admin JWT needs to have a `role` claim with a value that has been set in the env variable `GOTRUE_JWT_ADMIN_ROLES` ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-02T11:00:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1531274739"
                },
                {
                    "id": "IC_kwDOEKipmc5bRW2Q",
                    "body": "hey everyone, i'm closing this issue since we support SAML SSO already. Check out our blog post and docs here:\r\n1. [Blog post](https://supabase.com/blog/supabase-auth-sso-pkce)\r\n2. [Docs](https://supabase.com/docs/guides/auth/sso/auth-sso-saml)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-02T11:02:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/244#issuecomment-1531276688"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49m2lo",
            "number": 246,
            "title": "Restrict providers for given email domains",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\n#244 requests for SAML SSO support. Commonly, domains which are under SSO have all other sign-in options restricted, to only allow access via the SAML SSO. By restricting the providers available for signing in based on the user's domain name, SSO support would be considerably easier to integrate.\r\n\r\n## Describe the solution you'd like\r\n\r\nPotentially, a new table could be created which contains the domain name and the list of allowed providers for that domain. By default, all domains would be allowed to have sign-ins though any enabled provider, whereas if a domain is stored in the table, only the list of providers stored in the matching row would be allowed.\r\n\r\nIf a user logins via an existing provider, their email should then be checked against the list of restricted domains. If their domain is now restricted, and the provider they use now disallowed, they should be prompted to use a different provider, then have the restricted provider and provider ID be removed from their account on next login.\r\n\r\nNote: I haven't considered how this would work with gotrue's SMS authentication.\r\n\r\n## Describe alternatives you've considered\r\n\r\nWithout such a solution to restrict the list of providers for given domains, there doesn't seem to be a way to implement industry-standard SSO as users will be able to login through other providers with the same email address.",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-22T13:39:35Z",
            "closedAt": "2022-09-20T05:54:55Z",
            "url": "https://github.com/supabase/gotrue/issues/246",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc441hih",
                    "body": "A possible implementation would be to also include the OAuth provider information in `auth.audit_log_entries.payload`. That way we can write a `before insert` trigger to conditionally raise an exception on insertion, thereby causing the authentication transaction to fail.\r\n\r\nThe nice thing about this approach is that we can implement SQL-based provider restrictions, almost like RLS.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-10-28T06:56:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-953555105"
                },
                {
                    "id": "IC_kwDOEKipmc442FSK",
                    "body": "Now that you mentioned it, another alternative maybe allowing direct RLS policies on inserts into `auth.users` or `auth.identities`. They can likely provide a similar amount of extensibility, and should already be widely used and understood by Supabase users, without depending on triggers (although permissions might be tricky to setup).",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2021-10-28T10:06:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-953701514"
                },
                {
                    "id": "IC_kwDOEKipmc445V7L",
                    "body": "That only works for new signups or new OAuth identities though, it doesn't prevent existing users from signing in. \ud83e\udd14 ",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-10-29T08:34:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-954556107"
                },
                {
                    "id": "IC_kwDOEKipmc45Y-LZ",
                    "body": "thanks @liaujianjie and @bnjmnt4n !\r\n\r\njust to clarify what you're trying to achieve, you want the ability to write rules such as:\r\n\r\n- @facebook.com emails can **only** log in with the facebook oauth provider\r\n- @hootsuite.com emails can **only** log in with the google oauth provider\r\n\r\nis that correct?",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-11-08T06:22:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-962847449"
                },
                {
                    "id": "IC_kwDOEKipmc45Y-TD",
                    "body": "Yes, that's right!",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-11-08T06:23:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-962847939"
                },
                {
                    "id": "IC_kwDOEKipmc45ZAmR",
                    "body": "Just wanted to add that I'm looking to integrate with WorkOS as for SAML SSO and SCIM.\r\n\r\nWith SCIM or other similar user-provisioning services/standards, we also need the ability to write even more specific rules such as:\r\n- @foo-corp.com emails can **only** log in with Google OAuth provider **if** the user is in the `designers` Google group\r\n- @bar-corp.com emails can **only** log in with Okta OAuth provider (via WorkOS) **if** the the user has already been provisioned the app\r\n\r\nIn my WorkOS integration implementation, I already have a couple of tables that contains data on SCIM group membership and SAML user information. That is, I already have these information in my Supabase tables:\r\n- For @foo-corp.com, the user emails who are in the `designers` Google group\r\n- For @bar-corp.com, the user emails who are provisioned access to our service\r\n\r\nIt would be amazing if we could just write an RLS policy that conditionally allows/rejects sign ins based on the rows we have.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-11-08T06:46:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-962857361"
                },
                {
                    "id": "IC_kwDOEKipmc48clHU",
                    "body": "Hey,\r\n\r\nJust bumping this here. This thread has been inactive for a while so I would just like to highlight that we haven't forgotten about this issue and we are actively working on the WorkOS integration as well as SAML.\r\n\r\nThanks for your patience!\r\nJoel",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-17T04:15:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-1014125012"
                },
                {
                    "id": "IC_kwDOEKipmc5KnhUd",
                    "body": "Hey all! \r\n\r\nThis should be resolved via #244 which @hf is actively working on. Feel free to follow along there -- going to close this issue for now but feel free to re-open if there are further concerns ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-20T05:54:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/246#issuecomment-1251874077"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49m6Fn",
            "number": 247,
            "title": "`auth.users`: index is not used when searching for users by email",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nhttps://github.com/supabase/gotrue/pull/110 modified the SQL query to lowercase the email address. However, it did not update the index used for this query, which led to sequential scans being used to find users by emails instead of an index scan.\r\n\r\n## To Reproduce\r\n\r\nRun the following SQL:\r\n\r\n```\r\n> EXPLAIN ANALYZE SELECT users.aud, users.confirmation_sent_at, users.confirmation_token, users.confirmed_at, users.created_at, users.email, users.email_change, users.email_change_confirm_status, users.email_change_sent_at, users.email_change_token_current, users.email_change_token_new, users.email_confirmed_at, users.encrypted_password, users.id, users.instance_id, users.invited_at, users.is_super_admin, users.last_sign_in_at, users.phone, users.phone_change, users.phone_change_sent_at, users.phone_change_token, users.phone_confirmed_at, users.raw_app_meta_data, users.raw_user_meta_data, users.recovery_sent_at, users.recovery_token, users.role, users.updated_at FROM auth.users  \r\n  WHERE instance_id = '00000000-0000-0000-0000-000000000000' and lower(email) = 'XXXXX' and aud = 'authenticated' LIMIT 1\r\n\r\nQUERY PLAN\r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nLimit  (cost=0.00..14.57 rows=1 width=407) (actual time=67.477..67.478 rows=1 loops=1)\r\n  ->  Seq Scan on users  (cost=0.00..17856.92 rows=1226 width=407) (actual time=67.476..67.476 rows=1 loops=1)\r\n        Filter: ((instance_id = '00000000-0000-0000-0000-000000000000'::uuid) AND ((aud)::text = 'authenticated'::text) AND (lower((email)::text) = 'XXXXX'::text))\r\n        Rows Removed by Filter: 86021\r\nPlanning Time: 0.696 ms\r\nExecution Time: 67.539 ms\r\n```\r\n\r\n## Expected behavior\r\n\r\nAn index can be created with the `lower(email)` expression instead.\r\n\r\n```\r\n> CREATE INDEX users_instance_id_lower_email_id_idx ON auth.users USING btree (instance_id, lower(email));\r\n> EXPLAIN ANALYZE SELECT users.aud, users.confirmation_sent_at, users.confirmation_token, users.confirmed_at, users.created_at, users.email, users.email_change, users.email_change_confirm_status, users.email_change_sent_at, users.email_change_token_current, users.email_change_token_new, users.email_confirmed_at, users.encrypted_password, users.id, users.instance_id, users.invited_at, users.is_super_admin, users.last_sign_in_at, users.phone, users.phone_change, users.phone_change_sent_at, users.phone_change_token, users.phone_confirmed_at, users.raw_app_meta_data, users.raw_user_meta_data, users.recovery_sent_at, users.recovery_token, users.role, users.updated_at FROM auth.users  \r\n  WHERE instance_id = '00000000-0000-0000-0000-000000000000' and lower(email) = 'XXXXX' and aud = 'authenticated' LIMIT 1\r\n\r\nQUERY PLAN\r\n--------------------------------------------------------------------------------------------------------------------------------------------------------\r\nLimit  (cost=0.42..2.18 rows=1 width=407) (actual time=0.058..0.059 rows=1 loops=1)\r\n  ->  Index Scan using users_instance_id_lower_email_id_idx on users  (cost=0.42..2144.85 rows=1219 width=407) (actual time=0.057..0.057 rows=1 loops=1)\r\n        Index Cond: ((instance_id = '00000000-0000-0000-0000-000000000000'::uuid) AND (lower((email)::text) = 'XXXXX'::text))\r\n        Filter: ((aud)::text = 'authenticated'::text)\r\nPlanning Time: 0.804 ms\r\nExecution Time: 0.129 ms\r\n```\r\n\r\nWithout the index, as the number of users increase, the cost of the sequential scan when finding users (which is a common operation) will increase linearly as well.",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-22T13:54:44Z",
            "closedAt": "2022-01-21T07:58:25Z",
            "url": "https://github.com/supabase/gotrue/issues/247",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc48sYeY",
                    "body": "Closing since this seems to have been addressed in #343.",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2022-01-21T07:58:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/247#issuecomment-1018267544"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc49wL3u",
            "number": 248,
            "title": "Logout on one device prevents all other devices from getting new jwt",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/3637\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Vinzent03** October 24, 2021</sup>\r\nI am using the dart SDK, but I think that doesn't matter.\r\n\r\nLet's say I'm signed in on device A and B. Now I log out on Device A. This [revokes](https://github.com/supabase/gotrue#post-logout) all refresh tokens in `auth.refresh_tokens`. Now my jwt expires on device B and I want to get a new jwt by calling the [token](https://github.com/supabase/gotrue#post-token) endpoint. This requires a refresh token, this is saves on the client, but because of the log out on device A, it's revoked and doesn't work. Which causes device B to be logged out too.\r\n\r\nSo my question is, is this intended or is my workflow wrong?</div>",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-26T09:12:48Z",
            "closedAt": "2022-09-20T05:53:57Z",
            "url": "https://github.com/supabase/gotrue/issues/248",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc44zJB5",
                    "body": "It would be interesting to cover both approaches, closing all sessions and closing a single session.",
                    "author": {
                        "login": "brunoprietog"
                    },
                    "createdAt": "2021-10-27T13:28:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/248#issuecomment-952930425"
                },
                {
                    "id": "IC_kwDOEKipmc473aVd",
                    "body": "Any news???",
                    "author": {
                        "login": "wizzymotion"
                    },
                    "createdAt": "2022-01-03T21:48:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/248#issuecomment-1004381533"
                },
                {
                    "id": "IC_kwDOEKipmc482Ugi",
                    "body": "Hey @wizzymotion,\r\n\r\nThanks for your patience so far! We've added this into our task board and we are hoping to address this within the month. Let me know if you have any further questions/concerns.\r\n\r\nThanks!\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-25T07:06:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/248#issuecomment-1020872738"
                },
                {
                    "id": "IC_kwDOEKipmc5AfPSz",
                    "body": "I know supabase does their own thing with GoTrue, but on the netlify/gotrue repository readme ([here](https://github.com/netlify/gotrue#endpoints)), it clearly says that this is intended behavior for GoTrue\r\n\r\n> * **POST /logout**\r\n> \r\n> Logout a user (Requires authentication).\r\n> \r\n>  This will revoke all refresh tokens for the user. Remember that the JWT tokens will still be valid for stateless auth until they expire.\r\n\r\nSo we can take away that the access token isn't revoked, but ALL refresh tokens are (this contradicts what the supabase docs say about signOut()) [see docs here](https://supabase.com/docs/reference/javascript/auth-signout)\r\n\r\n> Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\r\n> \r\n> For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\r\n\r\nThe docs say that you can disable sessions using the jwt, but this does not happen. This signOut only calls the `/logout` endpoint https://github.com/supabase/gotrue-js/blob/2f183f421096755d3ae2bd4f698503422a6b8eea/src/GoTrueApi.ts#L325 which does not affect session tokens, only refresh tokens.\r\n\r\n---\r\n\r\nThe current take-away for me is that the docs for `signOut` need to be clarified quickly, but if the behavior of `/logout` is going to be changed, we should consider the security implications before changing it. \r\n\r\nCurrently, if a refresh token gets stolen from the user, users can logout and ensure that any stolen tokens are revoked. If this behavior is changed, there needs to be a way to ensure that all refresh tokens are revoked. I am ok if `/logout` behavior is changed, but we need to ensure that we still provide this functionality in another endpoint.\r\n\r\nI think to meet all needs, it would be appropriate for `/logout` to revoke the access token used to authorize the logout (and maybe the user can provide the current refresh token as well to be revoked along with the access token), but we need a seperate endpoint for `/revokeAllRefreshTokens` (or some other simpler name) to be able to ensure users can secure their api's properly.",
                    "author": {
                        "login": "msdrigg"
                    },
                    "createdAt": "2022-03-29T14:18:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/248#issuecomment-1081930931"
                },
                {
                    "id": "IC_kwDOEKipmc5AfTBQ",
                    "body": "I edited my comment above for clarity, sorry to confuse the person who already read and thumbs-upped it.",
                    "author": {
                        "login": "msdrigg"
                    },
                    "createdAt": "2022-03-29T14:31:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/248#issuecomment-1081946192"
                },
                {
                    "id": "IC_kwDOEKipmc5KnhLA",
                    "body": "Hey all,\r\n\r\nThe behaviour described is indeed intended -- logout should revoke all refresh tokens and log out all devices. It seems like the docs have been updated to reflect this as well. We will transitioning moving to use database sessions which might make it easier to allow for management of different sessions on different devices.\r\n\r\nGoing to close the issue for now but feel free to comment or request to re-open if there are still further issues.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-20T05:53:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/248#issuecomment-1251873472"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-FDCa",
            "number": 258,
            "title": "add SoundCloud OAuth Provider",
            "body": "# Feature request\r\nPlease add SoundCloud OAuth provider.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nTo extend music streaming platform authentication.\r\n\r\n## Additional context\r\nhttps://developers.soundcloud.com/docs/api/guide#authentication",
            "author": {
                "login": "stardvst"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-01T19:21:20Z",
            "closedAt": "2022-04-19T02:08:50Z",
            "url": "https://github.com/supabase/gotrue/issues/258",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45DrAY",
                    "body": "I can have a look!",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-11-02T09:31:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/258#issuecomment-957263896"
                },
                {
                    "id": "IC_kwDOEKipmc45kNWO",
                    "body": "It appears that the SoundCloud API is similar to Netlify - #187 - in the way it dosen't have scopes meaning a Token grants access to all actions, this may need comment from @kiwicopple, @awalias or @kangmingtay.",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-11-10T22:09:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/258#issuecomment-965793166"
                },
                {
                    "id": "IC_kwDOEKipmc5Brf13",
                    "body": "Hey all,\r\n\r\nWe plan on tracking all OAuth provider requests on #451  so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:08:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/258#issuecomment-1101921655"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-P07l",
            "number": 260,
            "title": "Revoke refresh tokens for a user on update password",
            "body": "# Bug report\r\nIf a user is logged in on multiple sessions and updates the account's credentials (e.g. the password) on one session, all other active sessions should be logged out / have their refresh tokens revoked. ",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-04T03:51:12Z",
            "closedAt": "2022-09-21T13:39:51Z",
            "url": "https://github.com/supabase/gotrue/issues/260",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Kul5r",
                    "body": "Moving to our internal backlog.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:39:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/260#issuecomment-1253727851"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-Q0JO",
            "number": 261,
            "title": "create user (POST /admin/users) not working when signups are disabled",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nthe create user endpoint `POST /admin/users` should work for admin users, even if signups are disabled\r\n\r\n## To Reproduce\r\n\r\n1. Start GoTrue with signups disabled\r\n2. `POST /admin/users` \r\n3. See error `{\"message\": \"Signups not allowed for this instance\", \"status\": 403}`\r\n\r\n## Expected behavior\r\n\r\nshould create a user\r\n\r\n## Additional context\r\n\r\nhttps://github.com/supabase/gotrue-js/pull/166\r\n",
            "author": {
                "login": "kiwicopple"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-04T10:35:52Z",
            "closedAt": "2021-11-08T09:42:39Z",
            "url": "https://github.com/supabase/gotrue/issues/261",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc4-UJDA",
            "number": 263,
            "title": "POST /admin/generate_link returns empty string when SMTP env vars aren't set",
            "body": "# Bug report\r\n* Missing SMTP env vars cause the `POST /admin/generate_link` endpoint to fail silently and return an empty string in the action_link field in the response.\r\n* https://github.com/supabase/gotrue/blob/aead739cfff919500cdee343496279743448bca8/api/mail.go#L145",
            "author": {
                "login": "kangmingtay"
            },
            "state": "OPEN",
            "createdAt": "2021-11-05T05:34:37Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/263",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Kums1",
                    "body": "Not an issue in Supabase Auth (on the platform) since there's always an SMTP server. But for self-hosting, GoTrue uses the noop mailer which makes it confusing.\r\n\r\nAdding the label good first issue if someone wants to contribute.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:42:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/263#issuecomment-1253731125"
                },
                {
                    "id": "IC_kwDOEKipmc5kDU66",
                    "body": "What would you like to do here?\r\n\r\nI think that https://github.com/supabase/gotrue/blob/master/internal/mailer/mailer.go#L44 should panic at this point if the configuration doesn't specify that a noop is accepted.\r\nObviously, a new field in https://github.com/supabase/gotrue/blob/master/internal/conf/configuration.go#L192 must be added.",
                    "author": {
                        "login": "ifraixedes"
                    },
                    "createdAt": "2023-08-15T08:34:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/263#issuecomment-1678593722"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDQ2NjY0NDQz",
            "number": 264,
            "title": "Send code instead of magic link",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nOn mobile, the current magic link implementation requires the user to manually navigate to the mail app, find the email (in their spam folder) and click the link.\r\n\r\nAlong the way the OS may have presented the user with an option to choose a specific mail app, and/or to choose which browser to use to open the link.\r\n\r\nThere's also the developer headache of implementing redirects which can get annoying when using local, staging and production environments.\r\n\r\nAll of the above adds cognitive overload.\r\n\r\n**tl;dr** sending a short code to the user will improve UX and DX.\r\n\r\n## Describe the solution you'd like\r\n\r\nInstead of sending a magic link, send a short code.\r\n\r\nNo need for context switching between apps (assuming the user has email notifications enabled).\r\n\r\n## Additional context\r\n\r\nLike so:\r\n![image](https://user-images.githubusercontent.com/57633368/128057314-feb46191-2e68-48b7-866c-6287036e7fee.jpeg)",
            "author": {
                "login": "vbylen"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-03T17:09:26Z",
            "closedAt": "2022-06-29T03:17:00Z",
            "url": "https://github.com/supabase/gotrue/issues/264",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc41i6Ma",
                    "body": "I raise. all login options should be adjusted under native. this should be the method, log with oauth2 data.",
                    "author": {
                        "login": "KULTI1995"
                    },
                    "createdAt": "2021-08-13T10:02:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-898343706"
                },
                {
                    "id": "IC_kwDOEKipmc43_POr",
                    "body": "Bump.\n\nThis is a no-brainer feature to fix mobile auth!\n\n@kiwicopple ",
                    "author": {
                        "login": "vbylen"
                    },
                    "createdAt": "2021-10-09T16:35:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-939324331"
                },
                {
                    "id": "IC_kwDOEKipmc44ArhQ",
                    "body": "This will be a very useful feature.",
                    "author": {
                        "login": "FrancoTanzarella"
                    },
                    "createdAt": "2021-10-11T05:53:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-939702352"
                },
                {
                    "id": "IC_kwDOEKipmc45X2lL",
                    "body": "Hey all - I will transfer this over to our Auth server",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-11-07T05:21:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-962554187"
                },
                {
                    "id": "IC_kwDOEKipmc47NEbX",
                    "body": "Described this issue also at [#4455](https://github.com/supabase/supabase/issues/4455)",
                    "author": {
                        "login": "edgarasben"
                    },
                    "createdAt": "2021-12-14T08:26:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-993281751"
                },
                {
                    "id": "IC_kwDOEKipmc47NFzY",
                    "body": "What I would add to this, please don't make it code OR link. There should be an option to send code AND link for user to choose from. I talked with some people about this and for some it's a personal preference.",
                    "author": {
                        "login": "edgarasben"
                    },
                    "createdAt": "2021-12-14T08:28:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-993287384"
                },
                {
                    "id": "IC_kwDOEKipmc48CjaV",
                    "body": "we also need to make sure to reference https://github.com/supabase/gotrue/issues/290 some valuable discussion there",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-01-07T10:30:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1007302293"
                },
                {
                    "id": "IC_kwDOEKipmc48E14j",
                    "body": "I'd also like to add that some of our users' work email is configured to sandbox or sanitise URLs found in emails. For example, with [Mimecast](https://www.mimecast.com/products/email-security-with-targeted-threat-protection/url-protect/). Not sure why but magic link URLs, when opened in URL sandboxes, seem to not sign in.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-01-08T07:33:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1007902243"
                },
                {
                    "id": "IC_kwDOEKipmc486Y24",
                    "body": "Is it possible to bump this up in the list of priorities? I'm receiving user support requests regarding this sign in issue weekly, so I'll be the first in line to test this when shipped. \ud83d\ude05\r\n\r\nUse cases where this feature is important for us:\r\n1. When the user receives the magic link email on a different device or browser from which they are trying to sign in from.\r\n2. When the user's work email has URL sanitization/sandboxing.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-01-26T07:35:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1021939128"
                },
                {
                    "id": "IC_kwDOEKipmc486aHt",
                    "body": "Done. Let's talk about this tomorrow.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-26T07:45:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1021944301"
                },
                {
                    "id": "IC_kwDOEKipmc4-N4i9",
                    "body": "Can we get this in? it's bizarre to me this was not incorporated when designing the user API's. If on a shared computer, or if a hacker gets a token credentials, the attack blast radius is much larger. They can literally change the user's password and get full access to the account",
                    "author": {
                        "login": "nodiesBlade"
                    },
                    "createdAt": "2022-02-18T03:34:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1043826877"
                },
                {
                    "id": "IC_kwDOEKipmc5C4USa",
                    "body": "\u6211\u4e5f\u60f3\u8981\u9a8c\u8bc1\u7801\u767b\u5f55\u7684\u529f\u80fd\uff0c\u80fd\u52a0\u5165\u8fd9\u4e2a\u529f\u80fd\u5417\uff1f",
                    "author": {
                        "login": "paintingStyle"
                    },
                    "createdAt": "2022-05-10T08:01:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1122059418"
                },
                {
                    "id": "IC_kwDOEKipmc5FiBgu",
                    "body": "Another example from Notion.so how they do it. Super smooth, and it's a website, not even a mobile app:\r\n<img width=\"448\" alt=\"image\" src=\"https://user-images.githubusercontent.com/725324/175818563-15700d56-6511-43d5-8a60-d37efae9c080.png\">\r\n",
                    "author": {
                        "login": "edgarasben"
                    },
                    "createdAt": "2022-06-26T14:17:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1166546990"
                },
                {
                    "id": "IC_kwDOEKipmc5FtPUx",
                    "body": "@edgarasben It is already possible :-)\r\n\r\nIn your email templates:\r\n\r\n```\r\n<p>\r\n  Use the login code <code>{{ .Token }}</code>.\r\n</p>\r\n```\r\n\r\nOn the client side:\r\n\r\n```tsx\r\nawait auth.verifyOTP({ email: \"janedoe@compant.com\", token: \"OTP_TOKEN_GOES_HERE\", type: \"magiclink\" });\r\n```",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-06-29T03:12:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1169487153"
                },
                {
                    "id": "IC_kwDOEKipmc5FtP0j",
                    "body": "Thanks for highlighting this @liaujianjie !\r\n\r\nGoing to go ahead and close the issue but feel free to re-open if anyone still has related requests/unresolved concerns.\r\n ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-29T03:17:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1169489187"
                },
                {
                    "id": "IC_kwDOEKipmc5Ft0Zx",
                    "body": "@liaujianjie any way to test this in a local environment with supabase cli? I can view the templates tab but the ui won't let me make any changes.",
                    "author": {
                        "login": "vbylen"
                    },
                    "createdAt": "2022-06-29T07:37:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1169639025"
                },
                {
                    "id": "IC_kwDOEKipmc5pVrWs",
                    "body": "I am not sure if the response by [liaujianjie](https://github.com/liaujianjie) resolves this. How do you send the Otp given just an email? The idea was to allow users to verify email address using Otp over Magic Link during the signup process.\r\n\r\nAm I missing something?",
                    "author": {
                        "login": "ahmadbk"
                    },
                    "createdAt": "2023-10-17T22:27:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1767290284"
                },
                {
                    "id": "IC_kwDOEKipmc5pVu2r",
                    "body": "@ahmadbk once you've added `{{ .Token }}` to your email templates, the email sent to the user will contain a numeric code for them to enter\r\n\r\nyou can call the [`verifyOtp`](https://supabase.com/docs/reference/javascript/auth-verifyotp) method to verify that code - have you tried this out yet?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-17T22:39:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/264#issuecomment-1767304619"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-fibE",
            "number": 265,
            "title": "SMS doesn't send on first try",
            "body": "received this from a user:\r\n\r\n\r\n> There's a bug with Supabase phone auth where when you first signup with SMSOTP (supabase.signIn) it doesn't send SMSOTP, you gotta call the function twice then it sends the SMSOTP.\r\n>\r\n> But once you've signed up already then the SMSOTP works the first time it's called. Can you guys fix this?\r\n\r\n\r\nhave asked for some details on provider etc.",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-09T10:46:45Z",
            "closedAt": "2022-03-24T13:14:33Z",
            "url": "https://github.com/supabase/gotrue/issues/265",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc477zTi",
                    "body": "can't seem to reproduce this - could be due to the user's network latency, will close for now",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-05T09:47:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/265#issuecomment-1005532386"
                },
                {
                    "id": "IC_kwDOEKipmc5AJ4A_",
                    "body": "managed to reproduce this - issue happens when `SMS_AUTOCONFIRM = true`, when the user signs up for the first time, an otp isn't sent.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-03-23T12:40:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/265#issuecomment-1076330559"
                },
                {
                    "id": "IC_kwDOEKipmc5AOyV0",
                    "body": ":tada: This issue has been resolved in version 2.6.11 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.6.11)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-03-24T13:17:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/265#issuecomment-1077618036"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-hEa4",
            "number": 266,
            "title": "Remove `auth.instances`",
            "body": "# Chore\r\n\r\n## Describe the chore\r\n\r\nIt doesn't seem like Supabase will ever make use of the original multi-tenant style GoTrue since each project has its own database provisioned. It might make sense to remove the `auth.instances` table and `instance_id` foreign key, which don't have any value.",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-09T17:02:33Z",
            "closedAt": "2021-11-10T02:11:30Z",
            "url": "https://github.com/supabase/gotrue/issues/266",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45gGHM",
                    "body": "Hey @bnjmnt4n, we actually have some long-term plans for using that to allow users to implement multi-tenancy using gotrue \ud83d\ude05",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-11-10T02:07:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/266#issuecomment-964714956"
                },
                {
                    "id": "IC_kwDOEKipmc45gGg6",
                    "body": "Cool, interested to see what that would look like. Will close this for now then!",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2021-11-10T02:11:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/266#issuecomment-964716602"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-jBiA",
            "number": 267,
            "title": "Make audit log entries more detailed for logins",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nThe audit log entries for logins do not include details about the kind of login (provider).\r\n\r\n## Describe the solution you'd like\r\n\r\nThe audit log entries for logins could be more detailed by including provider kind, and provider IDs.",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-10T03:43:47Z",
            "closedAt": "2022-02-26T09:28:21Z",
            "url": "https://github.com/supabase/gotrue/issues/267",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45oYyi",
                    "body": "Alternatively, we could add a FK column that references `auth.identities` instead. That way we can query whatever identity information we need with a join, including provider.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-11-12T07:38:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/267#issuecomment-966888610"
                },
                {
                    "id": "IC_kwDOEKipmc45o7-w",
                    "body": "That's also fine, although I think there is value in making the audit log entries table self-contained (and avoiding any potential issues with referential integrity when identities are deleted).",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2021-11-12T11:33:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/267#issuecomment-967032752"
                },
                {
                    "id": "IC_kwDOEKipmc45o-0o",
                    "body": "Oh right, the requirements for retaining audit logs definitely should take priority.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-11-12T11:54:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/267#issuecomment-967044392"
                },
                {
                    "id": "IC_kwDOEKipmc4-srFv",
                    "body": "Closed by https://github.com/supabase/gotrue/pull/373.",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2022-02-26T09:28:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/267#issuecomment-1051898223"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-jDFh",
            "number": 268,
            "title": "`auth.identities`: add index for `user_id` column",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\n#208 introduced the `auth.identities` table with the following schema: https://github.com/supabase/gotrue/blob/13c53ec7f43329f587971bfa6644199adb5d9454/migrations/20210909172000_create_identities_table.up.sql.\r\n\r\nEach new login with a new provider for an existing user will call the [`user.UpdateAppMetaDataProviders` function](https://github.com/supabase/gotrue/blob/62e7ccd13cd41cd5571f75c4baae5ac0fb187e7c/models/user.go#L221), which will look for [all identities with the specified `user_id`](https://github.com/supabase/gotrue/blob/06de2419be835f1c3760e5dcc90702b84dc4583b/models/identity.go#L74). Currently, this does a sequential scan on the whole table to find all such providers. It might be good to optimize this with an index on `user_id`.",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-10T03:59:13Z",
            "closedAt": "2021-11-22T07:41:34Z",
            "url": "https://github.com/supabase/gotrue/issues/268",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46IILZ",
                    "body": "thanks for the feedback @bnjmnt4n, we've added it :) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-11-22T07:41:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/268#issuecomment-975209177"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-rNKV",
            "number": 271,
            "title": "Allow exception created by a user inside of a trigger function to bubble up when using signUp/signIn",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIt would be good if an exception created by a user inside of a Postgres Trigger function would bubble all the way up to the client code. Currently, I have created an exception but I keep on getting the same default \"Database error saving new user\" error although I know the signUp process is failing due to my exception. I would prefer to see the message from my exception here.\r\n\r\nAnother related issue is that the confirmation email is sent before the record gets inserted into the database, not sure why this happens, because by raising an exception the database normally rollback all transactions so the email being sent shouldn't happen before the transaction is completed and successful.\r\n",
            "author": {
                "login": "silentworks"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-08T02:20:03Z",
            "closedAt": "2022-06-06T23:58:54Z",
            "url": "https://github.com/supabase/gotrue/issues/271",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45n5bk",
                    "body": "Transferring this to our GoTrue server as it will need to be handled there first. \r\n\r\nSome code for testing from silentworks:\r\n\r\n```\r\nCREATE OR REPLACE FUNCTION public.username_exists()\r\n    RETURNS TRIGGER \r\n    LANGUAGE plpgsql \r\n    SECURITY DEFINER SET search_path = public\r\n    AS\r\n$$\r\nBEGIN\r\n    IF EXISTS(SELECT 1 FROM profiles WHERE username = new.raw_user_meta_data->>'username' LIMIT 1) THEN\r\n        RAISE EXCEPTION 'Username already exists';\r\n    END IF;\r\n    RETURN new;\r\nEND\r\n$$;\r\n\r\n/* Trigger itself */\r\nCREATE TRIGGER on_auth_user_creation\r\n    BEFORE INSERT ON auth.users\r\n    FOR EACH ROW EXECUTE PROCEDURE public.username_exists();\r\n```\r\n\r\nHowever, I think we wouldn't want anything leaking from the database so we should only bubble up the error under specific instances.\r\n\r\nPostgREST has a good way of handling this - we should use the same so that it's consistent everywhere:\r\n\r\nhttps://postgrest.org/en/v8.0/api.html?highlight=exceptions#raise-errors-with-http-status-codes\r\n\r\neg: \r\n\r\n```\r\nRAISE sqlstate 'PT409' using\r\n  message = 'Username conflict',\r\n  detail = 'Username already exists.',\r\n  hint = 'Try another username';\r\n```\r\n\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-11-12T02:08:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/271#issuecomment-966760164"
                },
                {
                    "id": "IC_kwDOEKipmc46MRki",
                    "body": "I think there is a second, related issue here - if a BEFORE trigger modifies the record to be inserted into the table, the API still returns the data that was passed in the request, NOT the data which was actually saved in the auth.users table.\r\n\r\n@kiwicopple Do you want a separate issue for that or can it be handled with this one?",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2021-11-23T08:56:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/271#issuecomment-976296226"
                },
                {
                    "id": "IC_kwDOEKipmc46QNnP",
                    "body": "@chipilov that should be raised as a separate issue as it's not directly related to this one.\r\n",
                    "author": {
                        "login": "silentworks"
                    },
                    "createdAt": "2021-11-24T00:54:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/271#issuecomment-977328591"
                },
                {
                    "id": "IC_kwDOEKipmc46SFZI",
                    "body": "> @chipilov that should be raised as a separate issue as it's not directly related to this one.\r\n\r\nOk, opened a separate issue: https://github.com/supabase/gotrue/issues/288",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2021-11-24T12:12:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/271#issuecomment-977819208"
                },
                {
                    "id": "IC_kwDOEKipmc5Ebdo2",
                    "body": ":tada: This issue has been resolved in version 2.6.34 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.6.34)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-06-07T00:02:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/271#issuecomment-1148049974"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-sIya",
            "number": 272,
            "title": "version command broken",
            "body": "```bash\r\nubuntu@glijyxliukyupfxblqvu:~$ /opt/gotrue/gotrue version\r\n\r\n```\r\n\r\nexpected the version number but currently returns an empty string",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-12T09:28:58Z",
            "closedAt": "2022-02-10T04:56:13Z",
            "url": "https://github.com/supabase/gotrue/issues/272",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc477nSj",
                    "body": ":tada: This issue has been resolved in version 2.3.2 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.3.2)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-01-05T08:36:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/272#issuecomment-1005483171"
                },
                {
                    "id": "IC_kwDOEKipmc49qRJD",
                    "body": "doesn't seem to work for me in supabase producation environment, just gives a blank string",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-02-10T04:49:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/272#issuecomment-1034490435"
                },
                {
                    "id": "IC_kwDOEKipmc49qR1_",
                    "body": "seems to have been due to a custom build process",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-02-10T04:56:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/272#issuecomment-1034493311"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-sI8a",
            "number": 273,
            "title": "signUp endpoint leaks info of user status",
            "body": "on the current version of gotrue on the platform (I can't tell which version it's running because of https://github.com/supabase/gotrue/issues/272)\r\n\r\nwhen AUTOCONFIRM is off:\r\n\r\n```javascript\r\n// first (legitimate) sign up\r\n{\r\n  id: \"f4b4f3d0-2199-49fa-b2b1-1011d5286077\",\r\n  aud: \"authenticated\",\r\n  role: \"authenticated\",\r\n  email: \"ant@supabase.io\",\r\n  phone: \"\",\r\n  confirmation_sent_at: \"2021-11-12T09:03:44.348928215Z\",\r\n  app_metadata: { provider: \"email\", providers: [\"email\"] },\r\n  user_metadata: {},\r\n  identities: [],\r\n  created_at: \"2021-11-12T08:56:58.742428Z\",\r\n  updated_at: \"2021-11-12T09:03:47.071014Z\",\r\n};\r\n\r\n// after confirmation (second sign up attempt)\r\n{\r\n  id: \"d453d455-5157-47bc-9230-0a147c88e5d0\",\r\n  aud: \"authenticated\",\r\n  role: \"authenticated\",\r\n  email: \"ant@supabase.io\",\r\n  email_confirmed_at: \"2021-11-12T09:04:45.588597531Z\", // need to scrub\r\n  phone: \"\",\r\n  confirmation_sent_at: \"2021-11-12T09:04:45.588597531Z\",\r\n  confirmed_at: \"2021-11-12T09:04:45.588597531Z\", // need to scrub\r\n  last_sign_in_at: \"2021-11-12T09:04:45.588597531Z\", // need to scrub\r\n  app_metadata: { provider: \"email\", providers: [\"email\"] },\r\n  user_metadata: {},\r\n  identities: [],\r\n  created_at: \"2021-11-12T09:04:45.588597531Z\",\r\n  updated_at: \"2021-11-12T09:04:45.588597531Z\",\r\n};\r\n```\r\n\r\nwhen AUTOCONFIRM is on:\r\n\r\n```javascript\r\n// first login\r\n{\r\n  access_token:\r\n\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhdXRoZW50aWNhdGVkIiwiZXhwIjoxNjM2NzEyNjIxLCJzdWIiOiI5MTAyMjk2Zi05MjQwLTRhNWItODU2ZC1lZTE1ODYxMWE5MzIiLCJlbWFpbCI6ImFudEBzdXBhYmFzZS5pbyIsInBob25lIjoiIiwiYXBwX21ldGFkYXRhIjp7InByb3ZpZGVyIjoiZW1haWwiLCJwcm92aWRlcnMiOlsiZW1haWwiXX0sInVzZXJfbWV0YWRhdGEiOnt9LCJyb2xlIjoiYXV0aGVudGljYXRlZCJ9.cRyuPGd1IzFKnxbCw3MW-cOpLmkvaxXYptqWhZfXfrg\",\r\n  token_type: \"bearer\",\r\n  expires_in: 3600,\r\n  refresh_token: \"P_Zk7mMMeFzekSTr-Iaa9w\",\r\n  user: {\r\n    id: \"9102296f-9240-4a5b-856d-ee158611a932\",\r\n    aud: \"authenticated\",\r\n    role: \"authenticated\",\r\n    email: \"ant@supabase.io\",\r\n    email_confirmed_at: \"2021-11-12T09:23:41.666823918Z\",\r\n    phone: \"\",\r\n    last_sign_in_at: \"2021-11-12T09:23:41.670073224Z\",\r\n    app_metadata: { provider: \"email\", providers: [\"email\"] },\r\n    user_metadata: {},\r\n    identities: [],\r\n    created_at: \"2021-11-12T09:23:41.663031Z\",\r\n    updated_at: \"2021-11-12T09:23:41.671485Z\",\r\n  },\r\n};\r\n\r\n// second attempt (expected an error \"user already registered\")\r\n{\r\n  id: \"88a33f2d-c494-4253-a5d2-0975ca29bc02\",\r\n  aud: \"authenticated\",\r\n  role: \"authenticated\",\r\n  email: \"ant@supabase.io\",\r\n  email_confirmed_at: \"2021-11-12T09:23:48.488392901Z\",\r\n  phone: \"\",\r\n  confirmation_sent_at: \"2021-11-12T09:23:48.488392901Z\",\r\n  confirmed_at: \"2021-11-12T09:23:48.488392901Z\",\r\n  last_sign_in_at: \"2021-11-12T09:23:48.488392901Z\",\r\n  app_metadata: { provider: \"email\", providers: [\"email\"] },\r\n  user_metadata: {},\r\n  identities: [],\r\n  created_at: \"2021-11-12T09:23:48.488392901Z\",\r\n  updated_at: \"2021-11-12T09:23:48.488392901Z\",\r\n};\r\n```",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-12T09:29:39Z",
            "closedAt": "2021-11-13T04:19:12Z",
            "url": "https://github.com/supabase/gotrue/issues/273",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45ouEb",
                    "body": "It looks like the Gotrue version includes https://github.com/supabase/gotrue/pull/237, which generates a new random UUID, and sets the timestamp details all to the current time, to prevent leakage of the actual user details, while avoiding returning a \"user already registered\" error response.",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2021-11-12T10:03:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/273#issuecomment-966975771"
                },
                {
                    "id": "IC_kwDOEKipmc45rxs2",
                    "body": "If autoconfirm is enabled , the expected output should be \"User already registered\" on a repeated signup. \r\nAlso, the current version on the platform is v2.2.1, but the changes made for the behaviour above are on v.2.2.2.\r\n\r\nThis [PR](https://github.com/supabase/gotrue/pull/274) should resolve some fields potentially leaking user information on repeated signups.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-11-13T04:19:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/273#issuecomment-967777078"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-x5o3",
            "number": 275,
            "title": "'Email not confirmed' error message on supabase.auth.signIn has higher priority than 'Invalid login credentials'",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\n'Email not confirmed' error message on supabase.auth.signIn has higher priority than 'Invalid login credentials'.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create an email/password user with `supabase.auth.signUp`\r\n2. Don't click the confirmation link sent to the email address\r\n3. Try to log in using `supabase.auth.signIn` using a _different_ password\r\n4. See 'Email not confirmed' error\r\n\r\n## Expected behavior\r\n\r\nIn step 4, I find it odd that an attacker could know that a user hasn't confirmed their email. If they don't know the password, my experience on the internet tells me that they should first be hit with the 'Invalid login credentials' error.",
            "author": {
                "login": "brunobely"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-12T08:42:51Z",
            "closedAt": "2021-11-25T03:43:18Z",
            "url": "https://github.com/supabase/gotrue/issues/275",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46V0am",
                    "body": ":tada: This issue has been resolved in version 2.2.8 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.2.8)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-11-25T03:44:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/275#issuecomment-978798246"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-ysz4",
            "number": 276,
            "title": "Token refresh API only works when Email Auth is enabled",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/3874\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **davidmuzi** November 12, 2021</sup>\r\nIm currently using Sign in with Apple, and am able to successfully make user authenticated calls using the returned JWT. However, when I attempt to refresh the token, I get a 400 response.\r\n\r\n```\r\ncurl -X \"POST\" \"https://avql....supabase.co/auth/v1/token?grant_type=refresh_token\" \\\r\n     -H 'apikey: eyJhbGci...' \\\r\n     -H 'Content-Type: application/json; charset=utf-8' \\\r\n     -d $'{\"refresh_token\": \"u14G...\"}'\r\n```\r\nResponse:\r\n`{\"code\":400,\"msg\":\"Email logins are disabled\"}` \r\n\r\nIf I enable Email Auth in settings, then it works, but Im only interested in using Apple login.\r\n</div>",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-15T10:22:24Z",
            "closedAt": "2021-11-25T04:00:36Z",
            "url": "https://github.com/supabase/gotrue/issues/276",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46V2t6",
                    "body": ":tada: This issue has been resolved in version 2.2.9 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.2.9)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-11-25T04:01:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/276#issuecomment-978807674"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-2Nnv",
            "number": 277,
            "title": "minting custom JWTs",
            "body": "as discussed here: https://github.com/supabase/supabase/discussions/3899#discussioncomment-1645752\r\n\r\nit would be good to have an **admin** endpoint that can mint tokens with custom claims. This is mainly a convenience function so that the user doesn't need to fetch the jwt_secret from supabase, or swap it out if it's rolled. Would increase usability, and more and more users are asking for advice on how to do this: a simple method/end-point would make the DX much nicer\r\n\r\nI want to send a body:\r\n```javascript\r\n{\r\n  'sub': 'abc',\r\n  'custom-claim-1': 'xyz',\r\n  'foo': 'bar',\r\n  'role': 'authenticated'\r\n}\r\n```\r\n\r\ngotrue might simply sign and return the `access_token` \r\n\r\npotential issues:\r\n- how do we handle expiry? should this also be passed as part of the claims?\r\n- gotrue will not be able to refresh these access_tokens\r\n\r\nanother option would be to have a more integrated approach:\r\n- call the signIn() method, with a bunch of custom claims, but the more opinionated we are here, the less flexible the custom access_tokens become. So it may make sense to just offer a \"token signing endpoint for advanced users\" to start",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-16T03:23:48Z",
            "closedAt": "2022-09-21T13:46:37Z",
            "url": "https://github.com/supabase/gotrue/issues/277",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46Sv6_",
                    "body": "I feel like I should provide some context and color to the above, since the issue originated from a comment of mine. We basically have two use cases for minting specific JWT tokens:\r\n\r\n1. Signing in \u2013 i.e. authenticating with our application and issuing both access and refresh tokens, such that the client can stay logged in\r\n2. Performing an action on behalf of another user \u2013 e.g. an admin or support user needs to do something on behalf of another user \u2013 in which case only an access token is necessary\r\n\r\nIn the case of (1), it's the same as if you'd just use the `signIn()` method, but in the case of (2) the need for blacklisting/revocation might be more relevant.\r\n\r\nThe way we solve this today is by creating the tokens as necessary in an identity provider we've deployed ourselves, using the JWT secret as given by Supabase. In order to use the identity provider, you must be a registered client, which essentially also equates to a user in Supabase, albeit with different profile metadata than a human user. The main issues we have with this are:\r\n\r\n1. We can't easily change the JWT secret if its compromised\r\n2. We can't automatically roll the JWT secret on a regular basis\r\n3. We don't get any meaningful audit logs for \"regular\" users\r\n\r\nWith an official minting function these could potentially all be remedied, since then Supabase could deal with things like audit logging, JWT secret rolling etc.\r\n\r\nI am conflicted about all this though. On the one hand, it would be a pretty flexible solution to allow developers using the Supabase platform to implement almost any custom auth solution, or hook into their existing auth infrastructure. On the other hand, I can't help but feel it seems like a workaround more than a solution. It's a bit hard to put into words without writing an essay, but really what we'd like the ability to do one of:\r\n\r\n1. Hook into/override the interactions in the authentication flow, such that login/consent/etc can be completely custom\r\n2. Just point Supabase to any compliant OpenID Connect/OAuth2/SAML identity provider of our choice, rather than big tech providers like Google, Apple, Facebook etc. \u2013 e.g. a generic OIDC adapter that you just point to the `/.well-known/openid-configuration` endpoint of the provider\r\n\r\nIt's a bit unfortunate also that the only way to sign JWTs is by secret, rather than a public/private key pair which is typically a recommended practice. Obviously a key pair isn't any safer if the private key is leaked, but at least you don't need a secret to _verify_ tokens then, which is the case with simple HMAC signing.",
                    "author": {
                        "login": "mstade"
                    },
                    "createdAt": "2021-11-24T15:39:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/277#issuecomment-977993407"
                },
                {
                    "id": "IC_kwDOEKipmc46VpXl",
                    "body": "If there is a function to create custom access tokens and/or sign in on behalf of another user, then it should be protected such that only whitelisted users of the system may call it. They should probably also be restricted to which claims they can set on the token (if any) and for which users they may generate tokens. This sort of implies a kind of role/attribute based authorization scheme for this purpose, which doesn't really exist today does it?\r\n\r\nA user probably shouldn't be able to create a new access token for themselves \u2013 it'd defeat the purpose of refresh tokens and would enable anyone who happens to get ahold of an access token to keep refreshing that in perpetuity.\r\n\r\nI dunno, it seems this kind of feature can easily balloon into something unwieldy to be honest. It might be a decent workaround for _our_ use case, but as a generic feature I'm not so sure.",
                    "author": {
                        "login": "mstade"
                    },
                    "createdAt": "2021-11-25T02:25:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/277#issuecomment-978752997"
                },
                {
                    "id": "IC_kwDOEKipmc5KuoHr",
                    "body": "We're not planning to officially support minting of custom JWTs at this point. If you want to do it today, you have to use the long-winded way of signing with the JWT secret, at your own risk.\r\n\r\nIn the next major version of GoTrue we are going to be adding support for asymmetric JWTs and at that point we'll likely provide an admin API endpoint which will enable you to mint JWT tokens safely.\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T13:46:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/277#issuecomment-1253736939"
                },
                {
                    "id": "IC_kwDOEKipmc5Ku80Y",
                    "body": "@hf will the asymmetric JWT work also mean there will be a JWKS endpoint? Is there more information about this work you could link to? Plenty of questions around key generation, rotation, storage etc. \ud83d\ude05",
                    "author": {
                        "login": "mstade"
                    },
                    "createdAt": "2022-09-21T14:48:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/277#issuecomment-1253821720"
                },
                {
                    "id": "IC_kwDOEKipmc5KvBjz",
                    "body": "> @hf will the asymmetric JWT work also mean there will be a JWKS endpoint? Is there more information about this work you could link to? Plenty of questions around key generation, rotation, storage etc. \ud83d\ude05\n\nYes, there will be a JWKS and OIDC endpoint. It's a giant piece of work on our side and the document is unfortunately internal only at this point. Work on it has been deprioritized at this time as we are working on MFA and SAML support.\n\nIt is an important feature for us, and we'll probably update this issue with more information on timelines when we start planning for it again.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-21T15:03:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/277#issuecomment-1253841139"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-3evZ",
            "number": 278,
            "title": "Custom email templates are not working",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\n1. Enable Custom SMTP (in case relevant I am using SendGrid SMTP Gateway)\r\n2. Create a custom email template for \"Confirm Signup\"\r\n3. Use a custom `subject` and custom `body`\r\n4. Save these changes\r\n5. Refresh the dashboard and confirm the changes are saved correctly - all good\r\n\r\nThe email that gets delivered uses the new custom `subject` but the `body` is the default supabase template\r\n\r\n## Expected behavior\r\n\r\nThe email that gets delivered should use the custom `body` as well (currently only the `subject` is being used). \r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n![image](https://user-images.githubusercontent.com/6538573/141449916-30225ab8-7dcf-48d9-b231-27cbac2ffca0.png)\r\n\r\n## System information\r\n\r\n- N/A - standard Supabase cloud setup\r\n",
            "author": {
                "login": "jamesallchin"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-12T10:12:25Z",
            "closedAt": "2021-11-17T12:09:32Z",
            "url": "https://github.com/supabase/gotrue/issues/278",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc45ovvC",
                    "body": "Just as a quick follow-up - I have turned off the custom SMTP and the problem still remains",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-11-12T10:13:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-966982594"
                },
                {
                    "id": "IC_kwDOEKipmc45ox2b",
                    "body": "Investigating this more, the bug appears to be down what is set in the body. \r\n\r\nIf I use a very basic template - it will get used correctly.\r\n\r\nIf I use a more lengthy complex template - it will get ignored (no errors surfaced it just resorts back to the default)",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-11-12T10:26:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-966991259"
                },
                {
                    "id": "IC_kwDOEKipmc45qCtf",
                    "body": "I\u2019m having the same problem.",
                    "author": {
                        "login": "jtparrett"
                    },
                    "createdAt": "2021-11-12T18:21:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-967322463"
                },
                {
                    "id": "IC_kwDOEKipmc45u1R1",
                    "body": "hey @jamesallchin - can you please provide a template which is failing? We'll use it to reproduce and test against",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-11-15T06:29:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-968578165"
                },
                {
                    "id": "IC_kwDOEKipmc45vlYk",
                    "body": "Hi @kiwicopple thanks for looking into this - here you go\r\n\r\n```\r\n    <span class=\"preheader\" style=\"color: transparent; display: none; height: 0; max-height: 0; max-width: 0; opacity: 0; overflow: hidden; mso-hide: all; visibility: hidden; width: 0;\">This is preheader text. Some clients will show this text as a preview.</span>\r\n    \r\n    <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"body\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background-color: #f6f6f6;\">\r\n      <tr>\r\n        <td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\r\n        <td class=\"container\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;\">\r\n          <div class=\"content\" style=\"box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;\">\r\n\r\n            <table role=\"presentation\" class=\"main\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background: #ffffff; border-radius: 3px;\">\r\n              <tr>\r\n                <td class=\"wrapper\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 20px;\">\r\n                  <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\r\n                    <tr>\r\n                      <td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">\r\n\r\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"width:100%;\">\r\n    <tr>\r\n        <td align=\"center\" style=\"padding:20px 0;\">\r\n            <a href=\"https://was\"  style=\"font-family:'Helvetica neue', Helvetica, Arial, Verdana, sans-serif;font-size:16px;color:#205081;text-decoration:none;\">\r\n                <img src=\"https://wastelocator-images.s3.eu-west-2.amazonaws.com/waste-locator-logo-600.png\" alt=\"{{{preheader}}}\" border=\"0\" width=\"186\" style=\"display:block;outline:0;padding:0;border:0;width:186px;height:auto;font-family:'Helvetica neue', Helvetica, Arial, Verdana, sans-serif;font-size: 16px;color:#205081;\"/>\r\n            </a>\r\n        </td>\r\n    </tr>\r\n</table>\r\n<p style=\"color: #0e0d0d; font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; margin-top: 10px; margin-bottom: 10px;\">Hi.</p><p style=\"color: #0e0d0d; font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; margin-top: 10px; margin-bottom: 10px;\">Thanks for signing up to Waste Locator.</p><p style=\"color: #0e0d0d; font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; margin-top: 10px; margin-bottom: 10px;\">To complete the sign up process, please click on the button below.</p><p style=\"color: #0e0d0d; font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; margin-top: 10px; margin-bottom: 10px;\">Thanks!</p><p style=\"color: #0e0d0d; font-family: sans-serif; font-size: 14px; font-weight: normal; margin: 0; margin-top: 10px; margin-bottom: 10px;\">The Waste Locator Team</p><table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"btn btn-primary\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; box-sizing: border-box;\">\r\n    <tbody>\r\n    <tr>\r\n        <td align=\"left\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; padding-bottom: 15px;\">\r\n        <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: auto;\">\r\n            <tbody>\r\n            <tr>\r\n                <td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; background-color: #38A169; border-radius: 5px; text-align: center;\"> <a href=\"{{ .ConfirmationURL }}\" target=\"_blank\" style=\"display: inline-block; color: #ffffff; background-color: #38A169; border: solid 1px #38A169; border-radius: 5px; box-sizing: border-box; cursor: pointer; text-decoration: none; font-size: 14px; font-weight: bold; margin: 0; padding: 12px 25px; text-transform: capitalize; border-color: #38A169;\">Click Here to Complete The Sign Up</a> </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n        </td>\r\n    </tr>\r\n    </tbody>\r\n</table>\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </td>\r\n        <td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\r\n      </tr>\r\n    </table>\r\n\r\n\r\n    <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"body\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background-color: #f6f6f6;\">\r\n        <tr>\r\n          <td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\r\n          <td class=\"container\" style=\"font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;\">\r\n            <div class=\"footer\" style=\"clear: both; Margin-top: 10px; text-align: center; width: 100%;\">\r\n                <table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;\">\r\n                  <tr>\r\n                    <td class=\"content-block\" style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;\">\r\n                      <span class=\"apple-link\" style=\"color: #999999; font-size: 12px; text-align: center;\">Braid Wood Cottage, Asheridge, Buckinghamshire, HP5 2UU</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td class=\"content-block powered-by\" style=\"font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;\">\r\n                      Copyright 2021. Waste Locator Ltd.\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n            </div>\r\n           </td>\r\n           <td style=\"font-family: sans-serif; font-size: 14px; vertical-align: top;\">&nbsp;</td>\r\n          </tr>\r\n        </table>\r\n```\r\n\r\n",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-11-15T10:58:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-968775204"
                },
                {
                    "id": "IC_kwDOEKipmc45vlwE",
                    "body": "On a side note (kind of related) - how do I access supabase logs more generally from the BE stack? For example I never see anything logs in the supabase dashboard under auth. Is this a paid feature?",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-11-15T11:00:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-968776708"
                },
                {
                    "id": "IC_kwDOEKipmc450EUP",
                    "body": "> how do I access supabase logs more generally from the BE stack?\r\n\r\ncheck back in a few weeks!",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-11-16T07:23:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-969950479"
                },
                {
                    "id": "IC_kwDOEKipmc450GcB",
                    "body": "just acknowledging that the auth logs at the bottom of the Auth > Settings page seem to be broken - investigating now @jamesallchin \r\n\r\n![image](https://user-images.githubusercontent.com/458736/141940323-94729b29-4d48-4b78-95ab-5447d6831ee6.png)\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-11-16T07:30:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-969959169"
                },
                {
                    "id": "IC_kwDOEKipmc450060",
                    "body": "hey @jamesallchin I was able to reproduce in my own project - it seems that the issue is in gotrue itself since the long template is being saved correctly in the platform: https://app.supabase.io/api/auth/cvwawazfelidkloqmbma/templates/magic-link\r\n\r\n\r\nand I see this error in gotrue:\r\n```\r\nError loading template from https://app.supabase.io/api/auth/cvwawazfelidkloqmbma/templates/magic-link: template: https://app.supabase.io/api/auth/cv>\r\n```\r\n\r\nI'm going to transfer the issue to the gotrue repo - my guess is that gotrue isn't able to download the entire file for some reason related to it's size",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-11-16T10:50:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-970149556"
                },
                {
                    "id": "IC_kwDOEKipmc4502eq",
                    "body": "error is from the mailme package here: https://github.com/netlify/mailme/blob/876c043aa349526e4372914d5ee416ec1de242f1/mailme.go#L163",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-11-16T10:59:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-970155946"
                },
                {
                    "id": "IC_kwDOEKipmc450-Ns",
                    "body": "thanks @awalias for looking into this - really appreciate it",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-11-16T11:40:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-970187628"
                },
                {
                    "id": "IC_kwDOEKipmc454ibb",
                    "body": "Hi @jamesallchin. Quick update - the reason the Confirmation Email template failed was that it could not be parsed due to invalid template token replacement. Basically, the template was invalid, but unfortunately a) the UI did not let you know when saving that there was an issue and b) the log mentioned above was not helpful in diagnosing the problem; it simply said, could not fetch template.\r\n\r\nI'll be writing up some issues to help make the documentation and the template admin UI clearer for what tokens and the format are allowed in each template type. And, also an issue to look into validating the template when saving -- therefore letting you know the template has a problem and it won't save.\r\n\r\nFor your particular Confirmation Email, the following token replacement variables are allowed:\r\n* `SiteUR`\r\n* `Email` \r\n* `ConfirmationURL`\r\n\r\nThe problematic variable is in this line:\r\n\r\n```\r\n alt=\"{{{preheader}}}\" border=\"0\" width=\"186\" \r\n```\r\n\r\nThere are two problems here:\r\n\r\n* variable replacements are done with two enclosing braces, ie:\r\n\r\n```\r\n<p><a href=\"{{ .ConfirmationURL }}\">Log In</a></p>\r\n```\r\n\r\n... and this has three `{{{xxx}}}`\r\n\r\n* the variable `preheader ` is not a valid variable option for this template type\r\n\r\nI think perhaps `preheader` is being used in this alt tag, but more often it's used as a css style/class:\r\n\r\n```\r\n<span class=\"preheader\" style=\"color: transparent\r\n```\r\n\r\nMight you try to update your template and correct that `alt` tag to be a standard test attribute value and let me know if the email is sent out as you expect?\r\n\r\nThanks for reporting and it will help others once the docs get updated.",
                    "author": {
                        "login": "dthyresson"
                    },
                    "createdAt": "2021-11-17T02:42:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-971122395"
                },
                {
                    "id": "IC_kwDOEKipmc454jHn",
                    "body": "> I\u2019m having the same problem.\r\n\r\nHi @jtparrett Could you share your template as well -- or check for the template variables and the use of braces? Perhaps this is the same issue that @jamesallchin had with an invalid template.\r\n\r\nFYI - The list of valid template variables per each email template type can currently be found in: https://github.com/supabase/gotrue#e-mail\r\n\r\nTypically these are:\r\n\r\n```\r\n SiteURL, Email, and ConfirmationURL\r\n```\r\n\r\nBut `NewEmail` is available on email address changes.",
                    "author": {
                        "login": "dthyresson"
                    },
                    "createdAt": "2021-11-17T02:48:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-971125223"
                },
                {
                    "id": "IC_kwDOEKipmc455gJE",
                    "body": "@dthyresson i can indeed confirm that this issue is fixed if I remove the erroneous `{{{preheader}}}` tag. \r\n\r\nMany thanks for investigating. I agree with you would make a lot of sense that there is pre-validation of the template on save. \r\n\r\nAnd also would be very useful to get the auth logging fixed in the dashboard.",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-11-17T09:04:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/278#issuecomment-971375172"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4-7FYh",
            "number": 279,
            "title": "RFC: sending JWT in header",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nCurrently when redirecting from GoTrue to site url we send the token as fragment which isn't accessible on the server, meaning we have no ability to read the token in a server-side auth route for example, which is why we currently need the AJAX request to set our auth cookie: https://github.com/supabase/supabase/blob/master/examples/nextjs-with-supabase-auth/pages/index.js#L19-L31  which isn't an ideal experience.\r\n\r\n## Describe the solution you'd like\r\n\r\nWe should make the JWT accessible server-side so that users can set their site URL to a server-route (e.g. with nextjs /api/auth) where they set their application auth cookie before the page is rendered to avoid unwanted side effects.\r\n\r\nI think the easiest way would be for us to always set the cookie header, which is currently only set conditionally, e.g. https://github.com/supabase/gotrue/blob/master/api/verify.go#L127-L131 but I'm not sure if there is any downside to always sending the Cookie header. If not, we could just remove the condition and always set it.\r\n\r\n## Additional context\r\n\r\nFor example, Auth0 sets the JWT in a request header when they redirect to your return URL:\r\n\r\n```js\r\n// console.log(req)\r\n{\r\n// ...\r\n  url: '/api/callback?code=KKo1d_njmlNx9Czw6fK_iiIMpPigpSyWUphj2RnQHlh1Z&state=eyJyZXR1cm5UbyI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCJ9',\r\n  method: 'GET',\r\n  query: {\r\n    code: 'KKo1d_njmlNx9Czw6fK_iiIMpPigpSyWUphj2RnQHlh1Z',\r\n    state: 'eyJyZXR1cm5UbyI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCJ9'\r\n  },\r\n  [Symbol(kHeaders)]: {\r\n    host: 'localhost:3000',\r\n    connection: 'keep-alive',\r\n    'cache-control': 'max-age=0',\r\n    'upgrade-insecure-requests': '1',\r\n    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36',\r\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\r\n    'sec-fetch-site': 'cross-site',\r\n    'sec-fetch-mode': 'navigate',\r\n    'sec-fetch-user': '?1',\r\n    'sec-fetch-dest': 'document',\r\n    'sec-ch-ua': '\"Google Chrome\";v=\"95\", \"Chromium\";v=\"95\", \";Not A Brand\";v=\"99\"',\r\n    'sec-ch-ua-mobile': '?0',\r\n    'sec-ch-ua-platform': '\"macOS\"',\r\n    'accept-encoding': 'gzip, deflate, br',\r\n    'accept-language': 'en-GB,en;q=0.9,de-DE;q=0.8,de;q=0.7,sv-SE;q=0.6,sv;q=0.5',\r\n    cookie: 'nonce=CMsL6Gf_6--6BWvmVoa6dN5JjEQfk-3akVAsJOFSLww.ci2MKZ6bOPG0mVKUdIn4AYuc5V6cGTt5ZJCm1Wpqp-c; state=eyJyZXR1cm5UbyI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCJ9.8z0o6e3gtALtDo9xVT-Rj6kxubkVXSV_jCNlggLV0CQ; code_verifier=TlQbgMQi55G3RFFm_OgD0Iv6KMoz9gcRCqu_fmXxVcA.eCfeYKoksLKLiPgqv7Iovfvzr9x3eE9Fb1yPHNvCeZs'\r\n  },\r\n// ...\r\n}\r\n```\r\n\r\nThe cookie header is then read server-side in the callback route (https://github.com/auth0/nextjs-auth0/blob/main/src/auth0-session/handlers/callback.ts#L38-L56) to set up the OpenID issuer which makes requests to Auth0. I don't think we need to whole OpenID issuer (just yet) but I think we should make the JWT accessible server-side to facilitate the expected DX.\r\n",
            "author": {
                "login": "thorwebdev"
            },
            "state": "OPEN",
            "createdAt": "2021-11-17T03:57:07Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/279",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc454qQg",
                    "body": "Correction, Auth0 does not set the JWT in the header but rather the params needed to create the OpneID issuer client callback: https://github.com/panva/node-openid-client/blob/main/docs/README.md#clientcallbackredirecturi-parameters-checks-extras\r\n\r\nWhich then returns the token which is then written to session storage: https://github.com/auth0/nextjs-auth0/blob/main/src/auth0-session/handlers/callback.ts#L61",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2021-11-17T03:59:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-971154464"
                },
                {
                    "id": "IC_kwDOEKipmc454x1t",
                    "body": "cool - it looks like there are 2 possibilities\r\n\r\n## Option 1: Follow Auth0 flow\r\n\r\nFollow the Auth0 flow. In this case it looks like we need to send some additional data (`state` param, `nonce` etc), which is then used to verify and create a new session.\r\n\r\n## Option 2: Send the session directly.\r\n\r\nSend the session data in a cookie, as you point out [here](https://github.com/supabase/gotrue/blob/master/api/verify.go#L127-L131). This is very similar to how we attach the session to the [URL fragment](https://github.com/supabase/gotrue/blob/1dddc248fb820e638f0d54b9d51c2803295b5c1d/api/verify.go#L139), which is inaccessible to the server.\r\n\r\nquestions: \r\n\r\n- if the cookie is set on a GoTrue server it should be accessible on a `xxxx.supabase.co` domain only right? Does this need to be another header/method of attaching the session info?\r\n- are there any security concerns around the session data leaking if it's in a header? I guess it's no less secure than the URL fragment, which is already a part of the OAuth spec\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-11-17T05:00:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-971185517"
                },
                {
                    "id": "IC_kwDOEKipmc4547nM",
                    "body": "I think option 2 is the low-hanging fruit here. We can think about option 1 later down the road.\r\n\r\n> if the cookie is set on a GoTrue server it should be accessible on a xxxx.supabase.co domain only right? Does this need to be another header/method of attaching the session info?\r\n\r\nCorrect, the user's server can't access the cookie, but it can access the cookie header of this specific request. And we'd then simply extend our existing `supabase.auth.api.setAuthCookie(req, res)` functionality to look for the JWT in the header and then set the user's application cookie which is then used for subsequent requests throughout their app \ud83d\udc4d\r\n\r\n> are there any security concerns around the session data leaking if it's in a header? I guess it's no less secure than the URL fragment, which is already a part of the OAuth spec\r\n\r\nYah, that's exactly what I'm looking to confirm. I *think* it's fine as long as everything is happening via HTTPS? But also not an expert here unfortunately.",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2021-11-17T06:19:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-971225548"
                },
                {
                    "id": "IC_kwDOEKipmc455IvK",
                    "body": "Oh, and lastly we would also need to enable the gotrue server to accept form submit requests for email sign-in and for sign-out requests. These requests will then also need to be redirected back to the site url. That way we can ensure that all sign-up/sign-in/sign-out requests go through the user's `/auth` server route to update the application state.",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2021-11-17T07:07:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-971279306"
                },
                {
                    "id": "IC_kwDOEKipmc46B3FT",
                    "body": "I think the form submissions are an immediate go-ahead. There are no security concerns there - in fact I think that's how netlify's version works",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-11-19T00:28:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-973566291"
                },
                {
                    "id": "IC_kwDOEKipmc46RC-m",
                    "body": "> And we'd then simply extend our existing supabase.auth.api.setAuthCookie(req, res) functionality to look for the JWT in the header and then set the user's application cookie which is then used for subsequent requests throughout their app\r\n\r\nWe will need to make this cookie http-only in gotrue-js. Currently it [is not](https://github.com/supabase/gotrue-js/blob/1a4e81d6f44593ca726172e1daaf8473df5618e1/src/GoTrueApi.ts#L478), which makes it less secure than just using local storage. \r\n\r\n> are there any security concerns around the session data leaking if it's in a header?\r\n\r\nUsually the token is sent in the hash, so that the server _doesn't_ get access to it. But since the whole point here is to get the server access to the jwt, I think its fine sending it in the header. ",
                    "author": {
                        "login": "inian"
                    },
                    "createdAt": "2021-11-24T05:31:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-977547174"
                },
                {
                    "id": "IC_kwDOEKipmc46RWI6",
                    "body": "> We will need to make this cookie http-only in gotrue-js. Currently it is not, which makes it less secure than just using local storage.\r\n\r\nThis is part of the `setAuthCookie` of the `auth.api` namespace which only works server-side and sets an http-only cookie via the user's server-side environment: https://github.com/supabase/gotrue-js/blob/master/src/lib/cookies.ts#L134",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2021-11-24T08:05:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-977625658"
                },
                {
                    "id": "IC_kwDOEKipmc46RWts",
                    "body": "Ah didnt dig into the serializeCookie function - this is perfect then!",
                    "author": {
                        "login": "inian"
                    },
                    "createdAt": "2021-11-24T08:08:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-977628012"
                },
                {
                    "id": "IC_kwDOEKipmc48HSGK",
                    "body": "We should also figure out https://github.com/supabase/supabase/discussions/889 as part of this.",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2022-01-10T04:48:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1008542090"
                },
                {
                    "id": "IC_kwDOEKipmc4-zFdy",
                    "body": "If I'm understanding the intended implementation of option 2 correctly, a notable downside is that there would be no way for this to work if Javascript were disabled on the client side. I'm not yet fully acquainted with all of how GoTrue works, so there's room for me to be missing something obvious to others, but I think it would be ultimately preferable if client-side javascript were not required to use Supabase. With RLS and authentication, ISTM that Supabase would still have a lot to offer without client-side Javascript, so it seems ultimately suboptimal for it to require it in all scenarios, especially if the goal is to enable the server-side.\r\n\r\nThat all said, the header may still have utility on a progressively-enhanced site, to inform the server when the client side refreshes the token. A similar mechanism likely needs to exist as well for when the server-side needs to refresh the token in a `fetch` call.",
                    "author": {
                        "login": "ryanhiebert"
                    },
                    "createdAt": "2022-02-27T14:53:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1053579122"
                },
                {
                    "id": "IC_kwDOEKipmc5CtEZl",
                    "body": "> If I'm understanding the intended implementation of option 2 correctly, a notable downside is that there would be no way for this to work if Javascript were disabled on the client side.\n\nI'll have to agree here-- I'm trying to make a Javascript-less app with Supabase on the backend (through an API of course), so sending the JWT and whatever other info in a header would make server-side authentication so much easier. ",
                    "author": {
                        "login": "jackmerrill"
                    },
                    "createdAt": "2022-05-05T22:49:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1119110757"
                },
                {
                    "id": "IC_kwDOEKipmc5LAGXe",
                    "body": "I believe solution 2 would work with no client-side JS. If I understand correctly, the idea is to set the auth cookie in the redirection made by gotrue. If the cookie is set this way, your future requests to your server would contain the authentication cookie. You could then use this token to make your server-side requests to supabase.\r\n\r\nIs there any progress on this issue? Did someone already take a stab at it?",
                    "author": {
                        "login": "florianlouvet"
                    },
                    "createdAt": "2022-09-26T16:32:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1258317278"
                },
                {
                    "id": "IC_kwDOEKipmc5LPaPz",
                    "body": "Hey everyone I'm on the Supabase Auth team here to shed some light on this issue.\r\n\r\nWe don't want Supabase Auth to rely on cookies for authentication and authorization. It is common in the industry now to use the concept of access and refresh tokens as the preferred mechanism for authenticating and authorizing a user in an application. Cookies are a relatively browser-centric technology that does not fit well with non-browser applications such as native mobile apps, CLI and desktop apps, apps on TVs and IoT devices.\r\n\r\nTherefore GoTrue does not really use cookies (although there is some old code that issues them). Developers should not rely on those cookies for any purpose.\r\n\r\nThat being said, cookies are a great way to convey the access and refresh tokens in web apps, especially for cases where the application is not a SPA and has a server component that requires some user authorization to take place. This is becoming increasingly popular with server-side rendering frameworks, and is traditional in server-based (Django, Rails, PHP, ...) web apps. Here's a snippet of code you can use to extract the access and refresh tokens from within the SPA and set it as cookies on the origin where your app is hosted:\r\n\r\n```typescript\r\nsupabase.auth.onAuthStateChange((event, session) => {\r\n  if (event === \"SIGNED_OUT\" || event === \"USER_DELETED\") {\r\n    // delete cookies on sign out\r\n    const expires = new Date(0).toUTCString();\r\n    document.cookie = `my-access-token=; path=/; expires=${expires}; SameSite=Lax; secure`;\r\n    document.cookie = `my-refresh-token=; path=/; expires=${expires}; SameSite=Lax; secure`;\r\n  } else if (event === \"SIGNED_IN\" || event === \"TOKEN_REFRESHED\") {\r\n    const maxAge = 100 * 365 * 24 * 60 * 60; // 100 years, never expires\r\n    document.cookie = `my-access-token=${session.access_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;\r\n    document.cookie = `my-refresh-token=${session.refresh_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;\r\n  }\r\n})\r\n```\r\n\r\nWe are aware about the problems with having a redirect-style flow to get back the access and refresh tokens issued for a login session, however this flow does work for the majority of use cases today. Both browser and native mobile apps use the concept of URLs to finish authentication flows.\r\n\r\nAn alternative to this flow which we are keen on implementing is the [Proof-Key Code Exchange method (PKCE)](https://www.oauth.com/oauth2-servers/pkce/) that has multiple security benefits and also supports a larger set of use cases including server-only, desktop and CLI apps. There are no concrete timelines for this as I write this comment, but it is relatively high on our priority list.\r\n\r\nUnfortunately, this style of authentication does assume a rich client -- one that is able to execute code instead of present static markup. Thus it does not support browser based apps without JavaScript. GoTrue and Supabase Auth are just not suitable for that type of authentication, and it is probably better to look for an alternative.\r\n\r\n\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T14:02:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1262330867"
                },
                {
                    "id": "IC_kwDOEKipmc5LPtxO",
                    "body": "> Both browser and native mobile apps use the concept of URLs to finish authentication flows. [...]\r\n>\r\n> [... ] does not support browser based apps without JavaScript. GoTrue and Supabase Auth are just not suitable for that type of authentication, and it is probably better to look for an alternative.\r\n\r\nWhile it is your right to write off customers like this if you'd prefer not to have them, I want to make sure that you understand what I think might be a reasonable alternative. Right now the token is being returned to the browser in a url fragment. If the token were instead returned in a querystring it would get to the server, which is owned by the supabase customer, unlocking a host of customization opportunities for them.\r\n\r\nRather than write off customers that wish to lean into progressive enhancement, you may be able to reasonably retain them by permitting switching the `#` to a `?` in the redirect url from Supabase auth. From there, Supabase customers can implement whatever type of crazy schemes they feel so inclined to have, leaving you to focus your energy on those frontend customers that you're wanting to focus your energy on, without locking out those who would like to do something different, but love so much else about what you offer.\r\n\r\nI can imagine further concerns, though I'm not convinced they should stop this possibility. Having it redirect with a single-use token to use to get one with an API from the server would mitigate any of those further concerns that I can see. I can imagine you not wishing to implement that yourself, as its not your focus, but giving a signal of approval on a direction like that might be sufficient to encourage somebody else to pick up that work if they believe in it strongly, rather than only allowing them the possibility of abandoning Supabase entirely. ",
                    "author": {
                        "login": "ryanhiebert"
                    },
                    "createdAt": "2022-09-29T15:02:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1262410830"
                },
                {
                    "id": "IC_kwDOEKipmc5LPwV0",
                    "body": "> While it is your right to write off customers like this if you'd prefer not to have them, I want to make sure that you understand what I think might be a reasonable alternative.\r\n\r\nAgreed. I completely stopped using Supabase Auth and made a custom solution (still using Supabase) to do user authentication. I had to do this as I was moving my app to full SSR for better performance (big app, JS payloads were huge). \r\n\r\n> Rather than write off customers that wish to lean into progressive enhancement, you may be able to reasonably retain them by permitting switching the # to a ? in the redirect url from Supabase auth.\r\n\r\nThis is a _much_ more optimal solution. I had even opened an issue for this (#472) but it was dismissed for security reasons (for good reason). Due to this, even having a warning about security could be optimal (as most users that would do this, would know what they're doing, and likely just using SSR like I was).\r\n\r\nI am really hoping this RFC passes. We've effectively gone full-circle with web-apps, going from \"JS hydration is the future\" back to \"Server-side rendering is the future\". Supabase should be able to adapt to whatever the user case may be.",
                    "author": {
                        "login": "jackmerrill"
                    },
                    "createdAt": "2022-09-29T15:10:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1262421364"
                },
                {
                    "id": "IC_kwDOEKipmc5LP1Ap",
                    "body": "> We originally switched to params but realised that it might not be as secure as # because params are sent to the server and can be modified in transit so we switched it back\r\n\r\n@jackmerrill this is from the ticket you linked. The point about it being modified in transit seems wrong unless the client is compromised (where the fragment would be no better) or the site is not using HTTPS (where the scripts themselves can be compromised on the way to the browser). And strictly speaking, I don't think _modification_ in transit is a security problem (the JWT is signed already and can't be modified), it would be the capture of the token in transit that would be.\r\n\r\nThe further concern that I've heard in the past is that servers will often log URLs, so if they contain a long-lived secret that could be an unnecessary exposure. This seems to me to be a server configuration challenge, not a Supabase vulnerability; but its a common enough one that I can find some utility in a single-use token approach instead of sending the JWT directly in the URL.",
                    "author": {
                        "login": "ryanhiebert"
                    },
                    "createdAt": "2022-09-29T15:24:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1262440489"
                },
                {
                    "id": "IC_kwDOEKipmc5NxENU",
                    "body": "With the recent release of server-side rendering docs, we have [confirmation](https://supabase.com/docs/guides/auth/server-side-rendering#understanding-the-authentication-flow) that the logging concern is their stated concern with merely putting the authentication token in querystring parameters.\r\n\r\nWhat I have done in the past to address this concern is to have a one-time exchange secret that the receiver, whether client or server, could use to obtain the JWT. But once that token is used, any other party attempting to use the same token would fail, addressing the concern of secrets being logged. This mode of operation means that any attempt to re-use a token will either (a) fail or (b) cause loud errors for the legitimate party attempting to use the token.\r\n\r\nWhile I don't expect implementing this suggestion is likely to be very high on the priority list, would the Supabase team be open to considering a pull request implementing this mode of operation? I don't have a good sense of what kind of challenge that would be to implement, but if the Supabase team is willing to encourage that type of contribution, then at least those who care about this can know that there is a potential path to a solution.",
                    "author": {
                        "login": "ryanhiebert"
                    },
                    "createdAt": "2022-11-06T03:44:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1304707924"
                },
                {
                    "id": "IC_kwDOEKipmc5QLRCz",
                    "body": "I've recently done a fair bit of (re-)digging into how OAuth 2 and OpenID connect work. GoTrue has some trappings that connect it to OAuth2 as a provider in additional to being an OAuth client for many other providers. Particularly, it implements a `/token` endpoint that is compatible with OAuth 2, for `refresh_token` and `password` grants.\r\n\r\nFurther, looking at the examples from the server-side rendering docs, it appears that the redirection that is implemented also follows patterns that seem strongly inspired by OAuth 2 [implicit grant](https://www.rfc-editor.org/rfc/rfc6749#section-4.2), but where the oauth flow is not triggered by the client. Of particular note is that implicit grant is specified to use URL fragments to communicate. So contrary to my request, I applaud the Supabase for not doing as I preferred. I was wrong.\r\n\r\nSo where does that leave those of us who would like to see Supabase have a story for sites that might be better served by _avoiding_ client-side Javascript, or at least allowing its absence?\r\n\r\nFirst, I'll note that OAuth 2's Implicit Grant is now [officially discouraged](https://oauth.net/2/grant-types/implicit/) by the OAuth 2 working group. This is not to say its insecure, but that the reasons that motivated this approach exist at all (Javascript clients, primarily) are no longer major consideration, and that the `authorization_code` grant is generally better even for Javascript clients.\r\n\r\nWith that in mind, ISTM that there would be real value in implementing something analogous to the `authorization_code` grant, that would return a single-use authorization code that would be used at the `/token` API endpoint to obtain access and refresh tokens. This _is_ expected to be returned in the URL in the OAuth 2 spec, and therefore could be used by either the server or the client, as appropriate for the individual case, and wouldn't fall prey to the replay attack challenges. An interesting benefit that the OAuth 2 implementers note is that this gives additional confidence that the access and refresh tokens are actually received by the client, where implicit flow does not confirm that.\r\n\r\nThat all seems like a fairly large job, with some significant changes required in GoTrue. A worthwhile direction, but one that I wouldn't know how anybody might wish to prioritize.",
                    "author": {
                        "login": "ryanhiebert"
                    },
                    "createdAt": "2022-12-10T04:39:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1345130675"
                },
                {
                    "id": "IC_kwDOEKipmc5QgTX8",
                    "body": "Hey @ryanhiebert,\r\n\r\nThank you for your suggestion and opinion. It really means a lot to us.\r\n\r\nPKCE (`authorization_code` grant) is very high up on our priority list. Today we're finishing up with [Launch Week 6](https://supabase.com/launch-week) and will start planning our next steps in the coming days. At this time we don't publicly share our roadmaps but we hope to make some progress towards this in the next 2-3 months.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-14T08:43:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1350645244"
                },
                {
                    "id": "IC_kwDOEKipmc5sUOzm",
                    "body": "Hey @hf,\r\n\r\nI'm late to this particular thread. I also read #472 opened by @jackmerrill. \r\n\r\nI am wondering if any material progress has been made here. Particularly, \"something analogous to the `authorization_code` grant, that would return a single-use authorization code that would be used at the /token API endpoint to obtain access and refresh tokens,\" to quote @ryanhiebert.\r\n\r\nIt seems maybe this issue got lost during the holidays last year (or maybe another solution popped up and no one returned to this thread). Either way, I would love to be able to complete an authorization flow (magiclink) without using Javascript to grab URL fragments.",
                    "author": {
                        "login": "dutchdata"
                    },
                    "createdAt": "2023-11-17T23:22:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1817242854"
                },
                {
                    "id": "IC_kwDOEKipmc5sitI5",
                    "body": "@dutchdata yah, the approach has kind of shifted to your server setting their own cookies, see https://supabase.com/docs/guides/auth/server-side-rendering",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2023-11-21T14:31:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1821037113"
                },
                {
                    "id": "IC_kwDOEKipmc5slb6z",
                    "body": "Thanks @thorwebdev. I did in fact end up using a bit of client-side, vanilla Javascript to:\r\n\r\n1. read the URL fragment to get the access token\r\n2. send it to a server endpoint, and finally,\r\n3. set cookies\r\n\r\nFor context, I'm using HTMX and Go and I wanted as little Javascript as possible. But in hindsight that was a lofty (if unrealistic) goal.",
                    "author": {
                        "login": "dutchdata"
                    },
                    "createdAt": "2023-11-21T21:49:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1821753011"
                },
                {
                    "id": "IC_kwDOEKipmc5smySJ",
                    "body": "@dutchdata it is possibly to do without any client-side JS by utilising PKCE: https://supabase.com/docs/guides/auth/server-side/email-based-auth-with-pkce-flow-for-ssr ",
                    "author": {
                        "login": "thorwebdev"
                    },
                    "createdAt": "2023-11-22T04:43:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/279#issuecomment-1822106761"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_DOn3",
            "number": 280,
            "title": "Contributing from M1",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\ngo buffalo's pop CLI doesn't work on M1 stopping contributing from M1 mac's\r\n\r\n## To Reproduce\r\n\r\nFollow Contributing.md install guide\r\n\r\n## Expected behavior\r\n\r\nAble to start contributing.\r\n\r\n## Screenshots\r\n\r\nN/a\r\n\r\n## System information\r\n\r\n- OS: [e.g. macOS, Windows] macOS, M1\r\n- Browser (if applies) [e.g. chrome, safari] N/a\r\n- Version of supabase-js: [e.g. 6.0.2] N/a\r\n- Version of Node.js: [e.g. 10.10.0] N/a\r\n\r\n## Additional context\r\n\r\n- Contributing.md file\r\n",
            "author": {
                "login": "HarryET"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-18T21:20:34Z",
            "closedAt": "2021-11-20T22:45:28Z",
            "url": "https://github.com/supabase/gotrue/issues/280",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46AxeK",
                    "body": "<img width=\"682\" alt=\"Screenshot 2021-11-18 at 21 21 01\" src=\"https://user-images.githubusercontent.com/29015545/142498562-8f9e6bb9-10a7-4030-abce-70ac9927a3ed.png\">\r\n",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-11-18T21:21:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/280#issuecomment-973281162"
                },
                {
                    "id": "IC_kwDOEKipmc46GRQO",
                    "body": "This can be closed, it just requires you to look into work arounds. They can be found on the internet and to my knowledge the contributing document it getting reworked soon too",
                    "author": {
                        "login": "HarryET"
                    },
                    "createdAt": "2021-11-20T22:45:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/280#issuecomment-974722062"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_FEzp",
            "number": 281,
            "title": "Use Supabase with Notion OAuth",
            "body": "# Feature request\r\n\r\nAllow using Supabase with Notion OAuth\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nNeed to allow log in via Notion for Supabase app\r\n\r\n## Describe the solution you'd like\r\n\r\nAdd Notion as an OAuth provider to Supabase\r\n\r\n## Describe alternatives you've considered\r\n\r\nI'm unclear on whether I can build this myself. Have posted to Supabase Discord but no answer yet: https://discord.com/channels/839993398554656828/843999948717555735/910249828053823549. Would be great to be pointed towards any docs that describe how to make a custom auth provider (I couldn't find any).\r\n\r\n## Additional context\r\n\r\nInfo on Notion auth:\r\nhttps://developers.notion.com/docs/authorization",
            "author": {
                "login": "louisbarclay"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-17T13:34:21Z",
            "closedAt": "2022-01-16T16:15:10Z",
            "url": "https://github.com/supabase/gotrue/issues/281",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46DD21",
                    "body": "Thanks for the feature request - I'll move this to our Auth server \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-11-19T08:58:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/281#issuecomment-973880757"
                },
                {
                    "id": "IC_kwDOEKipmc4705dK",
                    "body": "I will take on this challenge!\r\nhttps://github.com/zernonia/gotrue",
                    "author": {
                        "login": "zernonia"
                    },
                    "createdAt": "2022-01-02T14:15:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/281#issuecomment-1003722570"
                },
                {
                    "id": "IC_kwDOEKipmc48bvXR",
                    "body": ":tada: This issue has been resolved in version 2.3.4 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.3.4)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-01-16T16:15:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/281#issuecomment-1013904849"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_O8iT",
            "number": 286,
            "title": "send account recovery email on repeated signup attempt",
            "body": "following up in this issue we need to improve the UX for users who forget that they have an existing account:\r\n\r\nhttps://github.com/supabase/supabase-js/issues/296\r\n\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-23T06:31:52Z",
            "closedAt": "2022-09-20T06:17:43Z",
            "url": "https://github.com/supabase/gotrue/issues/286",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Bw9N9",
                    "body": "Tested this on the latest version of Supabase. \r\nIf there is a repeat signup from an email address, supabase only returns success. \r\nNo recovery email is received.\r\n\r\nHow do we inform users that this email was previously used and account was previously created? \r\n",
                    "author": {
                        "login": "meera"
                    },
                    "createdAt": "2022-04-20T01:43:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/286#issuecomment-1103352701"
                },
                {
                    "id": "IC_kwDOEKipmc5D2Lnh",
                    "body": "@awalias Any plans to implement sending magic link / recovery email for existing user signup? Currently, the DX is unwieldy, as I need to detect the existing user signup and then act accordingly",
                    "author": {
                        "login": "bhvngt"
                    },
                    "createdAt": "2022-05-26T08:06:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/286#issuecomment-1138276833"
                },
                {
                    "id": "IC_kwDOEKipmc5Knk87",
                    "body": "Repeated Signups with the same email address should now return an error stating that the user has already signed up.\r\n\r\nAdditionally, we have introduced a [`resetPasswordForEmail` method](https://github.com/supabase/gotrue-js/blob/rc/src/GoTrueClient.ts#L690) which would allow a developer to detect repeat signups at the application level and send a reset password email as necessary\r\n\r\nGoing to close for now but feel free to comment/reopen if there are unaddressed concerns",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-20T06:17:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/286#issuecomment-1251888955"
                },
                {
                    "id": "IC_kwDOEKipmc5KyQjl",
                    "body": "> Repeated Signups with the same email address should now return an error stating that the user has already signed up.\r\n\r\nThanks @J0. Is this change already rolled out or is it expected to roll out with a particular release of `supabase-js/gotrue-js/gotrue server`",
                    "author": {
                        "login": "bhvngt"
                    },
                    "createdAt": "2022-09-22T08:21:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/286#issuecomment-1254688997"
                },
                {
                    "id": "IC_kwDOEKipmc5KybOo",
                    "body": "The change should be rolled out  in `supabase-js` for signups which make use of the `signUp` method. Is the change not working as expected on your end?",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-22T08:59:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/286#issuecomment-1254732712"
                },
                {
                    "id": "IC_kwDOEKipmc5KyeB9",
                    "body": "I have been using `supabase-js` [v2](https://github.com/supabase/supabase-js/releases/tag/v2.0.0-rc.10) with its latest `rc` release. In one of my test where I signup, confirm signup and then signup once again with the same email, instead of an error I get `faux user` record. \r\n\r\nI am testing this locally with the `gotrue` [v2.16.7](https://hub.docker.com/layers/supabase/gotrue/v2.16.7/images/sha256-d0e6e9b52dde8aed5a10ce2ce79e6cd4b0c99945852b653e70c213026ddcdcad?context=explore) docker image",
                    "author": {
                        "login": "bhvngt"
                    },
                    "createdAt": "2022-09-22T09:09:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/286#issuecomment-1254744189"
                },
                {
                    "id": "IC_kwDOEKipmc5r4TO8",
                    "body": "> Repeated Signups with the same email address should now return an error stating that the user has already signed up.\r\n\r\nThis is only the case if you have autoconfirm enabled in your project config :(\r\nsee https://github.com/supabase/gotrue/blob/6c8a96e39190e1d499ab667fcd24bed2b2fa01c8/internal/api/signup.go#L252\r\n\r\nBut there's a workaround to check whether the user already existed: check the `identities` array, see https://github.com/orgs/supabase/discussions/1282#discussioncomment-5230475",
                    "author": {
                        "login": "mb21"
                    },
                    "createdAt": "2023-11-14T10:17:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/286#issuecomment-1809920956"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_UjUm",
            "number": 288,
            "title": "Response from /signup request might NOT return the values that were actually stored in DB",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen a BEFORE TRIGGER is applied to the data stored in the auth.users table, it's possible to modify some of the values of the new record BEFORE they are stored in the DB. For example, the NEW.raw_user_meta_data value might be changed to include custom values set by the server.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Define a BEFORE INSERT trigger on the auth.users table\r\n2. In the trigger, modify the NEW.raw_user_meta_data value to contain a server-set value\r\n3. Call the /signup REST method\r\n\r\n## Actual behavior\r\n\r\nThe response from the signup call does NOT include the changes to the raw_user_meta_data field\r\n\r\n## Expected behavior\r\n\r\nThe response from the signup call should include the changes to the raw_user_meta_data field\r\n",
            "author": {
                "login": "chipilov"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-24T12:11:52Z",
            "closedAt": "2022-09-29T14:47:08Z",
            "url": "https://github.com/supabase/gotrue/issues/288",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KnkGd",
                    "body": "Hey @chipilov,\r\n\r\nWanted to check in and see if this is still an issue for you.\r\n\r\nLet us know!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-20T06:12:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/288#issuecomment-1251885469"
                },
                {
                    "id": "IC_kwDOEKipmc5KpmTV",
                    "body": "Hey @J0,\r\n\r\nCurrently, this is not a blocker for me because my workflow changed a bit since I opened the issue.\r\n\r\nHowever, I think it would be great if you fixed it because I can still see use cases for it.\r\n\r\nFor example, if users sign up with a specific invite code, you might want the response to include data based on the invite code (e.g. the user might be eligible for a promotion) - it would be nice if you can get that data directly from the response of the ```/signup``` call instead of having to do a second call (after all, in my example the data is generated at the time of the ```/signup``` call so it even makes logical sense to do that, not just for network optimization).",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-09-20T14:14:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/288#issuecomment-1252418773"
                },
                {
                    "id": "IC_kwDOEKipmc5LPo3X",
                    "body": "I've made a fix for this in #712. I'll close this issue and comments can proceed on the PR.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T14:47:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/288#issuecomment-1262390743"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_bQFR",
            "number": 290,
            "title": "Allow OTP sending via email",
            "body": "one user is requesting X digit pin numbers to be sent via email instead of SMS\r\n\r\nuse-case is desktop app (electron), so that users don't get sent to chrome before redirecting back to the app\r\n\r\nwould also be useful for mobile users \r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-26T05:08:28Z",
            "closedAt": "2022-01-07T10:29:36Z",
            "url": "https://github.com/supabase/gotrue/issues/290",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46ZRgu",
                    "body": "Additional use case to support this feature:\r\n\r\nSome of our users browse our site and browse emails with different devices. The current magic link implementation doesn't authenticate the user on the device which the sign in email was requested from.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-11-26T05:19:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-979703854"
                },
                {
                    "id": "IC_kwDOEKipmc47vD10",
                    "body": "Hey\r\n\r\n@liaujianjie, @awalias was just browsing through the open issues when I saw this. Has this issue been resolved or is it being actively worked on?",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2021-12-28T16:46:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1002192244"
                },
                {
                    "id": "IC_kwDOEKipmc47v1eQ",
                    "body": "> Hey\r\n> \r\n> @liaujianjie, @awalias was just browsing through the open issues when I saw this. Has this issue been resolved or is it being actively worked on?\r\n\r\nI'm not working on it. Maybe @awalias or @kangmingtay would know the status of this issue.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2021-12-29T04:45:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1002395536"
                },
                {
                    "id": "IC_kwDOEKipmc47xARe",
                    "body": "I haven't started working on this yet, but i can add this next since there seems to be quite abit of demand for it!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-29T17:30:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1002701918"
                },
                {
                    "id": "IC_kwDOEKipmc47xBb0",
                    "body": "Off the top of my head, there are a few possible ways we can implement this:\r\n1. Add a `sendOtp` param to the signup / magiclink endpoints. If it's set to true, we send an otp instead of a confirmation link.\r\n```bash\r\n# POST /signup\r\n{\r\n  \"email\": \"user@email.com\",\r\n  \"password\": \"test\", \r\n  \"sendOtp\": true\r\n}\r\n```\r\n\r\n2. Make the change within the internal gotrue config such that it can be set via the supabase dashboard (or the gotrue env vars if self-hosted). \r\n\r\nOther considerations:\r\n(1) would be more flexible than (2) since it provides more flexibility for the developer to choose when to send an otp over a confirmation link (although i'm not too sure what are the potential use-cases here). However, if there are additional custom verification steps after entering the otp, then this interface might expose a potential vulnerability since the `sendOtp` flag can easily be changed on the client-side. \r\n\r\nAn attacker can just hit the api directly and set `sendOtp` to false to trigger a link being sent instead. \r\n\r\nFeel free to let me know what you guys think! Or if there's a better way to do it. \r\n\r\nPS: I'm open to renaming the param too, right now, `sendOtp` is the best i can think of :) \r\n\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-29T17:43:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1002706676"
                },
                {
                    "id": "IC_kwDOEKipmc47zJlW",
                    "body": "Hey Kang Ming,\r\n\r\nThanks for the detailed response! Was actually thinking of working on the issue as I'd like to familiarize myself with the GoTrue codebase but it seems like you're on top of things. Will look for other suitable issues instead :)\r\n\r\nIf you'd be okay with it, do you mind tagging me on the PR though? Would love to take a look just to get a better understanding of how things work.\r\n\r\nDon't have any strong opinions about implementation atm but will let you know if anything comes to mind.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2021-12-31T04:25:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1003264342"
                },
                {
                    "id": "IC_kwDOEKipmc470HBb",
                    "body": "Is it possible to have both the confirmation link _and_ the OTP in the same email? I imagine the sudden switch from confirmation links to only OTP would be quite jarring for our end-users. It'll be nice if as a user, I am a able to choose if I want to sign in via the confirmation link or to enter the OTP.\r\n\r\nSuggested new default template for such a scenario:\r\n\r\n```\r\n<h2>Magic Link</h2>\r\n\r\n<p>Click this link to login:</p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">Log In</a></p>\r\n\r\n<p>Or enter this OTP to login: {{ .Code }}</p>\r\n```",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-01-01T06:58:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1003515995"
                },
                {
                    "id": "IC_kwDOEKipmc470Hdn",
                    "body": "Somewhat tangential question:\r\n\r\nIs it possible to also use n-digit pin numbers as confirmation tokens? That way OTPs _are_ confirmation tokens. Then, OTPs and magic links can share an internal implementation. However, I'm not sure how much of security risk that reducing the entropy of the refresh token is considering SMS OTPs are already using it.\r\n\r\nIf the above is possible, we could even expose APIs to allow devs to generate OTPs/confirmation tokens as an admin API. That would allow devs to roll their own OTP channel. For example, sending OTP tokens via Telegram.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-01-01T07:11:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1003517799"
                },
                {
                    "id": "IC_kwDOEKipmc470IF6",
                    "body": "> Is it possible to also use n-digit pin numbers as confirmation tokens? \n\nHmm i think there might be a security concern here. With magic links, gotrue can only identify a user by the confirmation token from the query param. So it has to have a high enough entropy such that a collision is near impossible. \n\nWith OTPs, gotrue requires either an email or phone number to be sent as well in the POST request body so it can identify the user the otp was intended for. The email or phone number acts as a namespace in some sense.\n\nWe can't do the same for magiclinks because they have to be GET requests so we can't send the email / phone number in the query param.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-01T07:39:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1003520378"
                },
                {
                    "id": "IC_kwDOEKipmc470IPw",
                    "body": "> If the above is possible, we could even expose APIs to allow devs to generate OTPs/confirmation tokens as an admin API.\n\nGood idea! I think this is still possible for otps, we currently have a /admin/generateLink endpoint to generate magic / invite / recovery links. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-01T07:49:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1003521008"
                },
                {
                    "id": "IC_kwDOEKipmc470ISq",
                    "body": "> With OTPs, gotrue requires either an email or phone number to be sent as well in the POST request body so it can identify the user the otp was intended for. The email or phone number acts as a namespace in some sense.\r\n\r\nRight, thanks for the explanation! Does this also mean that it would still be possible if the confirmation URL also includes the email or phone number to identify the user? \"Possible\" here means (1) the likelihood of clash is near-zero, and (2) the reduced entropy would not be a security concern.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-01-01T07:52:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1003521194"
                },
                {
                    "id": "IC_kwDOEKipmc470Ifn",
                    "body": "Yup it's still possible if we pass the email / phone in the confirmation url because those fields are unique in the db. \n\nHowever, based on [OWASP](https://owasp.org/www-community/vulnerabilities/Information_exposure_through_query_strings_in_url), it's recommended not to pass sensitive information in the query param. \n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-01T08:02:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1003522023"
                },
                {
                    "id": "IC_kwDOEKipmc48CjWi",
                    "body": "closing as duplicate of https://github.com/supabase/gotrue/issues/264",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-01-07T10:29:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/290#issuecomment-1007302050"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_gFZL",
            "number": 292,
            "title": "Allow org-specific endpoint to be specified for Azure OAuth provider",
            "body": "# Feature request\r\n- See title. \r\n## Is your feature request related to a problem? Please describe.\r\n- The OAuth auth and token URLs are hardcoded to the common endpoint, which requires that an app registration on Azure be set to multi-tenant.\r\n\r\n## Describe the solution you'd like\r\n- A field in the External OAuth Providers -> Azure Enabled options which allows the Azure tenant ID to be specified. This would replace the 'common' in /common/oauth2/v2.0/authorize with a UUID representing a specific tenant.\r\n- Alternatively, could allow user to paste in the whole endpoint URL, but the additional effort may not be worthwhile.\r\n\r\n## Describe alternatives you've considered\r\n- There's not a clear alternative to this in my mind, but I'm certainly open to suggestions!",
            "author": {
                "login": "raganca"
            },
            "state": "OPEN",
            "createdAt": "2021-11-28T16:26:15Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/292",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49HkRC",
                    "body": "There is already a pull request for this issue.\r\n#360\r\n\r\nOnce this is merged, this feature will be accomplished.\r\n\r\ncf. https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/auth-oidc\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-31T05:25:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/292#issuecomment-1025393730"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_hPD6",
            "number": 293,
            "title": "Allow defining extra search path for database actions triggered by auth-specific APIs (e.g. sign-up)",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nSupabase currently allows to declare any extra schemas to search for in the ```Extra search path``` settings in the API settings.\r\n\r\nHowever, this setting has NO effect on APIs that go through the GoTrue server (e.g. sign-in, sign-up, etc).\r\n\r\n## Describe the solution you'd like\r\n\r\nFor consistency, I think it would be best if the ```Extra search path``` was always applied, regardless of the type of API (i.e. regardless of whether the API goes through PostgREST or GoTrue).\r\n\r\nAlternatively, a second config could be exposed, which allows setting the extra search path only for auth-specific APIs.\r\n\r\n## Describe alternatives you've considered\r\n\r\nIt seems that the only use-case for the extra search path for auth-specific APIs are triggers attached to tables that are modified by auth APIs (e.g. ```auth.users```).\r\n\r\nIt is possible that the trigger function itself defines the necessary extra search path in its definition as suggested here: https://github.com/supabase/supabase/issues/4037#issuecomment-981238111\r\n",
            "author": {
                "login": "chipilov"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-29T07:00:59Z",
            "closedAt": "2022-09-29T11:47:00Z",
            "url": "https://github.com/supabase/gotrue/issues/293",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4867DW",
                    "body": "Hi @chipilov, we don't plan on adding the `auth` schema to the extra search path. This is because the `auth` schema is meant to be private and not accessible via postgrest. Anything auth related should go through GoTrue. \r\n\r\nDo you have a specific use-case in mind that cannot be executed via the admin endpoints in gotrue? Feel free to reopen this issue but in the meantime, I'll close it for now.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-26T10:45:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1022079190"
                },
                {
                    "id": "IC_kwDOEKipmc487GTP",
                    "body": "HI @kangmingtay,\r\n\r\nI think there is a misunderstanding here - this issue is NOT about adding the ```auth``` schema to the extra search path.\r\n\r\nThis issue is about the fact that the ```Extra search path``` field in the Supabase dashboard is ignored for any calls that go through the GoTrue server (as opposed to PostgREST), regardless of whether the ```auth``` schema is part of the ```Extra search path``` or not.\r\n\r\nFor example, I could create a ```private``` schema and add it to the ```Extra search path```. I can then define a trigger function in this private schema and attach this trigger function to a trigger on ```auth.users``` (Supabase docs suggest to avoid making any changes to the ```auth``` schema, hence the trigger function is NOT defined in the ```auth``` schema). However, in this scenario the ```Extra search path``` is still ignored, even though I do NOT need the ```auth``` schema to be in the search path - I just need the ```private``` schema to be in the search path.\r\n\r\nI think this should be implemented at least for consistency if NOT for anything else, but since there is a relatively easy workaround (described by @kiwicopple here: https://github.com/supabase/supabase/issues/4037#issuecomment-981238111),  I am fine either way.\r\n\r\n",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-01-26T11:48:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1022125263"
                },
                {
                    "id": "IC_kwDOEKipmc488Qiu",
                    "body": "Ah ok i see, thanks for clarifying @chipilov, wasn't aware of the other thread, the extra context helps! At the top of my head, i think the easiest way would be to change the `NAMESPACE` config to accept a comma-separated list. Not too sure if that maps to the `search_path` and will have to take a deeper look. \r\n\r\n  ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-26T17:33:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1022429358"
                },
                {
                    "id": "IC_kwDOEKipmc48_LFL",
                    "body": "btw @chipilov, does this problem exist if you use fully qualified names instead of unqualified ones in your trigger? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-27T13:14:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1023193419"
                },
                {
                    "id": "IC_kwDOEKipmc49ClkK",
                    "body": "If I use fully qualified names, then the trigger runs just fine - so from that point of view, you could say that using fully qualified name is a way to workaround the problem (just like specifying the search path in the trigger function definition also works around the issue).\r\n\r\nDoes this answer your question?",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-01-28T10:36:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1024088330"
                },
                {
                    "id": "IC_kwDOEKipmc49FvhP",
                    "body": "yup it does, i wouldn't say its a workaround the problem, rather it's probably a better practice to use fully qualified names since its more explicit than having to remember declaring it in the search path. \r\n\r\nWe'll still look to add this into dashboard for consistency sake because it's definitely misleading! Thanks for raising this issue up :) \r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-29T13:50:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1024915535"
                },
                {
                    "id": "IC_kwDOEKipmc5IVm4l",
                    "body": "I'm trying to use a 'set_claim' function from when a user signs up to then set an organisation_id to the app_metadata, and I think this issue is related but still cannot get it to work with suggestions here. \r\n\r\nUsing a function from this package:\r\nhttps://github.com/supabase-community/supabase-custom-claims/blob/main/install.sql\r\n\r\n& trying to use a trigger function like this on the auth.users or public.users INSERT after still gives the same result saying the function does not exist. But I can use the function in the SQL window.\r\n\r\nThis is how the function is set:\r\n```\r\nCREATE OR REPLACE FUNCTION set_claim(uid uuid, claim text, value jsonb) RETURNS \"text\"\r\n    LANGUAGE \"plpgsql\" SECURITY DEFINER SET search_path = public\r\n    AS $$\r\n    BEGIN\r\n      IF NOT is_claims_admin() THEN\r\n          RETURN 'error: access denied';\r\n      ELSE        \r\n        update auth.users set raw_app_meta_data = \r\n          raw_app_meta_data || \r\n            json_build_object(claim, value)::jsonb where id = uid;\r\n        return 'OK';\r\n      END IF;\r\n    END;\r\n$$;\r\n```\r\n\r\n```\r\nbegin\r\n  -- Set claim\r\n  select set_claim(new.id,'organisation_id',new.organisation_id);\r\n  return new;\r\nend;\r\n```\r\n\r\nWhat would a 'fully qualified name' looks like here?\r\n",
                    "author": {
                        "login": "RyannGalea"
                    },
                    "createdAt": "2022-08-13T01:10:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1213623845"
                },
                {
                    "id": "IC_kwDOEKipmc5IXmzL",
                    "body": "@RyannGalea A fully qualified name is the name of the function prepended by the schema where it is defined. For example, if you defined your ```set_claim``` function in a schema named ```private```, the fully qualified name would be ```private.set_claim```. Does that help?",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-08-13T12:18:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1214147787"
                },
                {
                    "id": "IC_kwDOEKipmc5IXnSb",
                    "body": "@chipilov I thought as much, just wanted to clarify. public.set_claim\r\n\r\nWould that be an issue when trying to fire it during the signup() process?",
                    "author": {
                        "login": "RyannGalea"
                    },
                    "createdAt": "2022-08-13T12:34:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1214149787"
                },
                {
                    "id": "IC_kwDOEKipmc5IXprN",
                    "body": "Hm, I thought that ```public``` is always on the path, but maybe I am wrong. If it's NOT in the path, then yes - I expect that calling ```SELECT public.set_claim()``` should resolve your issue.\r\n\r\nOne thing to clarify here is that you have 2 functions - ```public.set_claim``` AND the trigger function itself (you didn't specify its name in your example). Note, that in the code you have provided, you have set the search path ONLY on the definition of ```public.set_claim``` to include ```public```. If you don't want to call ```set_claims``` function from within your trigger using its fully-qualified name, you also need to specify the search path in the definition of the trigger function itself.",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-08-13T13:25:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1214159565"
                },
                {
                    "id": "IC_kwDOEKipmc5LOxWe",
                    "body": "Hey I'll be closing this issue as it's not a direct problem with GoTrue and there is already quite a bit of information in here on how to solve problems with triggers if you run into them.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T11:47:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/293#issuecomment-1262163358"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_lREg",
            "number": 294,
            "title": "Admin password length for password resets",
            "body": "You can reset passwords to a password of length zero. The guardrails which apply to the password creation do not seem to apply to resetting the password.\r\n\r\nSpecifically just the guardrail that prevents zero length passwords. A password length of 1 character is not allowed.\r\n\r\nPasswords of length zero should not be possible",
            "author": {
                "login": "SupaDavid"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-30T03:07:19Z",
            "closedAt": "2021-12-08T07:58:41Z",
            "url": "https://github.com/supabase/gotrue/issues/294",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46uy6U",
                    "body": "Just tried, gotrue doesn't allow a user to update their password to an empty string of 0 length. See [here](https://github.com/supabase/gotrue/blob/master/api/user.go#L83-L91). However, we should make the error explicit because it appears as though an empty password is accepted. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-03T09:13:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/294#issuecomment-985345684"
                },
                {
                    "id": "IC_kwDOEKipmc467JAl",
                    "body": ":tada: This issue has been resolved in version 2.2.12 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.2.12)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2021-12-08T07:59:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/294#issuecomment-988581925"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_w3T5",
            "number": 296,
            "title": "Add ability to modify Additional Redirect URLs list programmatically",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nHi Supabase team \ud83d\udc4b\r\n\r\nOne of the features of [CourseLift](https://courselift.com) is that authors can add custom domains. Their course pages can then resolve to their own domain.\r\n\r\nTo make this work in the semi-sorta-multi-tenant setup I've got using Supabase, I need to be able to modify the Additional Redirect URLs on the fly.\r\n\r\nWhen an author adds a custom domain, I need to be able to send a request to Supabase to modify the Additional Redirect URLs list at that moment.\r\n\r\n## Describe the solution you'd like\r\n\r\nIt would be awesome if Supabase could expose some kind of admin endpoint to modify the list. \r\n\r\nSince it's a comma-separated string, it might get dicey to modify and save it back (I wouldn't want to accidentally nuke the whole list) so bonus points if it there is some way to have individual Additional Redirect URL records instead of just a string.\r\n\r\n## Describe alternatives you've considered\r\n\r\nWithin Supabase, simply modifying the list manually. But that obviously won't work long-term.\r\n\r\n## Additional context\r\n\r\nThanks \ud83d\udd96\r\n",
            "author": {
                "login": "chenkie"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-02T16:54:51Z",
            "closedAt": "2022-08-29T04:46:04Z",
            "url": "https://github.com/supabase/gotrue/issues/296",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JTMRb",
                    "body": "Hey,\r\n\r\nThanks for the feature request! This should now be possible with the [Supabase Admin API](https://github.com/supabase/supabase-admin-api#configs)\r\n\r\nThere's also a corresponding [blog post](https://supabase.com/blog/supabase-cli-v1-and-admin-api-beta)\r\n\r\n> POST /config/gotrue - sets new config - params: { raw_contents: <string-of-file-contents>, restart_services : <bool> }\r\n\r\nGoing to close this for now but feel free to re-open if it doesn't resolve all issues\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-29T04:46:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/296#issuecomment-1229767771"
                },
                {
                    "id": "IC_kwDOEKipmc5JWh3L",
                    "body": "Awesome thanks!",
                    "author": {
                        "login": "chenkie"
                    },
                    "createdAt": "2022-08-29T17:43:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/296#issuecomment-1230642635"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc4_1jwH",
            "number": 299,
            "title": "Generic OpenID Connect auth provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI'd like to use a third-party OpenID Connect provider for auth that isn't currently among those that Supabase supports for login like Twitch, Gitlab, etc.\r\n\r\n## Describe the solution you'd like\r\n\r\nI'd like support for a generic OIDC provider whereby the various required URLs can be configured and a response from the UserInfo endpoint can be parsed from within my JavaScript project where I'm using supabase-js as opposed to gotrue.\r\n\r\n## Additional context\r\n\r\nThe OIDC provider I'd like to use is not a popular one and wouldn't be used by other customers so it wouldn't make sense to add my specific provider to this project.\r\n",
            "author": {
                "login": "lostinpatterns"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-03T22:03:55Z",
            "closedAt": "2022-01-26T02:06:33Z",
            "url": "https://github.com/supabase/gotrue/issues/299",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc47JFdC",
                    "body": "Additionally, if the OIDC provider supports discovery through `/.well-known/openid-configuration/` ([see spec](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig)) the configuration could be as simple as just setting the issuer root. Aside from making it simple to configure, it also lets the OIDC provider configuration to change independently of the supabase configuration.",
                    "author": {
                        "login": "mstade"
                    },
                    "createdAt": "2021-12-13T08:48:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/299#issuecomment-992237378"
                },
                {
                    "id": "IC_kwDOEKipmc478Qvy",
                    "body": "Hey! \r\n\r\nI'd like to check if anyone is actively working on this issue, would be keen to discuss and/or work on this.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-05T12:41:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/299#issuecomment-1005652978"
                },
                {
                    "id": "IC_kwDOEKipmc485sxk",
                    "body": "These issues are essentially the same thing.\r\n\r\nhttps://github.com/supabase/gotrue/issues/159\r\nhttps://github.com/supabase/gotrue/issues/299\r\n\r\nIt is recommended that you keep one of them and close the others.\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-26T01:08:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/299#issuecomment-1021758564"
                },
                {
                    "id": "IC_kwDOEKipmc485vII",
                    "body": "@J0 \r\n> Hey!\r\n> \r\n> I'd like to check if anyone is actively working on this issue, would be keen to discuss and/or work on this.\r\n\r\nCurrently, id_token, nonce, and provider are required parameters in the IdTokenGrant method of gotrue/token.go.\r\n\r\nIt would be better if either \"issuer and ClientID\" or \"provider\" is specified here. (If both are specified, we need to discuss which one should be adopted.)\r\n\r\nAll you have to do is to specify the issuer and ClientID parameter directly in the \"oidc.NewProvider(ctx, issuer)\" part of the getVerifier method in gotrue/token.go.\r\n\r\nOnce the backend is changed to accept issuer and ClientID parameters, gotrue-js will also need to be changed to allow issuer and ClientID parameters to be specified.\r\n\r\nOr, in the future, it may be simpler to remove the provider parameter and specify the issuer and ClientID.",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-26T01:26:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/299#issuecomment-1021768200"
                },
                {
                    "id": "IC_kwDOEKipmc4850Us",
                    "body": "Hey @koba-ninkigumi,\r\n\r\nMakes sense, let's keep #159. Closing this issue in favor of #159 \r\n\r\nFeel free to comment/reopen still has further concerns with respect to this issue. \r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-26T02:06:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/299#issuecomment-1021789484"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5AFQR3",
            "number": 300,
            "title": "Phone Auth with Twilio",
            "body": "So I've been able to setup phone auth with OTP using twilio but I've found out that signin needs to be hit twice before the sms is sent. Once the user is created under Authentication->Users on the first hit there is no OTP sms sent but the second followup hit then sends the sms.  \r\n\r\nI've tried phone signin with Flutter's supabase library and also using the http request, both require two hits to send the OTP. \r\n\r\nCan be reproduced using this tutorial and then creating an http request:\r\nhttps://supabase.com/docs/guides/auth/auth-twilio#using-otp-as-a-passwordless-sign-in-mechanism",
            "author": {
                "login": "solobits-nelson"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-07T21:12:36Z",
            "closedAt": "2022-01-05T09:57:13Z",
            "url": "https://github.com/supabase/gotrue/issues/300",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc46-mio",
                    "body": "thanks for the report @solobits-nelson moving this to the gotrue repo",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2021-12-09T04:03:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/300#issuecomment-989489320"
                },
                {
                    "id": "IC_kwDOEKipmc477069",
                    "body": "hey @solobits-nelson, are you still facing this issue? I'm unable to reproduce it currently but if it's still affecting you, feel free to email support@supabase.io with your project reference so i can take a look.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-05T09:57:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/300#issuecomment-1005539005"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5AN_Pt",
            "number": 301,
            "title": "error in v2.2.13 with admin create user without password",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen trying to create a user without a password, the server closes the connection without sending a response.\r\n\r\n## To Reproduce\r\n\r\n1. Create `docker-compose.yml` file with:\r\n\r\n```yaml\r\nversion: '3'\r\nservices:\r\n  gotrue:\r\n    image: supabase/gotrue:v2.2.13\r\n    ports:\r\n      - '9999:9999'\r\n    environment:\r\n      GOTRUE_MAILER_URLPATHS_CONFIRMATION: '/verify'\r\n      GOTRUE_JWT_SECRET: '37c304f8-51aa-419a-a1af-06154e63707a'\r\n      GOTRUE_JWT_EXP: 3600\r\n      GOTRUE_DB_DRIVER: postgres\r\n      DB_NAMESPACE: auth\r\n      GOTRUE_API_HOST: 0.0.0.0\r\n      PORT: 9999\r\n      GOTRUE_DISABLE_SIGNUP: 'false'\r\n      API_EXTERNAL_URL: http://localhost:9999\r\n      GOTRUE_SITE_URL: http://localhost:9999\r\n      GOTRUE_URI_ALLOW_LIST: https://supabase.io/docs\r\n      GOTRUE_MAILER_AUTOCONFIRM: 'false'\r\n      GOTRUE_LOG_LEVEL: DEBUG\r\n      GOTRUE_OPERATOR_TOKEN: super-secret-operator-token\r\n      DATABASE_URL: 'postgres://postgres:postgres@db:5432/postgres?sslmode=disable'\r\n      GOTRUE_EXTERNAL_GOOGLE_ENABLED: 'true'\r\n      GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID: 53566906701-bmhc1ndue7hild39575gkpimhs06b7ds.apps.googleusercontent.com\r\n      GOTRUE_EXTERNAL_GOOGLE_SECRET: Sm3s8RE85rDcS36iMy8YjrpC\r\n      GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI: http://localhost:9999/callback\r\n      GOTRUE_SMTP_HOST: mail\r\n      GOTRUE_SMTP_PORT: 2500\r\n      GOTRUE_SMTP_USER: GOTRUE_SMTP_USER\r\n      GOTRUE_SMTP_PASS: GOTRUE_SMTP_PASS\r\n      GOTRUE_SMTP_ADMIN_EMAIL: admin@email.com\r\n      GOTRUE_MAILER_SUBJECTS_CONFIRMATION: 'Please confirm'\r\n      GOTRUE_EXTERNAL_PHONE_ENABLED: 'true'\r\n      GOTRUE_SMS_PROVIDER: \"twilio\"\r\n      GOTRUE_SMS_TWILIO_ACCOUNT_SID: \"${GOTRUE_SMS_TWILIO_ACCOUNT_SID}\"\r\n      GOTRUE_SMS_TWILIO_AUTH_TOKEN: \"${GOTRUE_SMS_TWILIO_AUTH_TOKEN}\"\r\n      GOTRUE_SMS_TWILIO_MESSAGE_SERVICE_SID: \"${GOTRUE_SMS_TWILIO_MESSAGE_SERVICE_SID}\"\r\n      GOTRUE_SMS_AUTOCONFIRM: 'false'\r\n    depends_on:\r\n      - db\r\n    restart: on-failure\r\n  mail:\r\n    image: phamhieu/inbucket:latest\r\n    ports:\r\n      - '2500:2500' # SMTP\r\n      - '9000:9000' # web interface\r\n      - '1100:1100' # POP3\r\n  db:\r\n    image: supabase/postgres:latest\r\n    ports:\r\n      - '5432:5432'\r\n    command: postgres -c config_file=/etc/postgresql/postgresql.conf\r\n    volumes:\r\n      - ./db:/docker-entrypoint-initdb.d/\r\n    environment:\r\n      POSTGRES_DB: postgres\r\n      POSTGRES_USER: postgres\r\n      POSTGRES_PASSWORD: postgres\r\n      POSTGRES_PORT: 5432\r\n```\r\n\r\n2. Create `db/00-schema.sql` file with:\r\n\r\n```SQL\r\nCREATE SCHEMA IF NOT EXISTS auth AUTHORIZATION postgres;\r\n-- auth.users definition\r\nCREATE TABLE auth.users (\r\n\tinstance_id uuid NULL,\r\n\tid uuid NOT NULL,\r\n\taud varchar(255) NULL,\r\n\t\"role\" varchar(255) NULL,\r\n\temail varchar(255) NULL,\r\n\tencrypted_password varchar(255) NULL,\r\n\tconfirmed_at timestamptz NULL,\r\n\tinvited_at timestamptz NULL,\r\n\tconfirmation_token varchar(255) NULL,\r\n\tconfirmation_sent_at timestamptz NULL,\r\n\trecovery_token varchar(255) NULL,\r\n\trecovery_sent_at timestamptz NULL,\r\n\temail_change_token varchar(255) NULL,\r\n\temail_change varchar(255) NULL,\r\n\temail_change_sent_at timestamptz NULL,\r\n\tlast_sign_in_at timestamptz NULL,\r\n\traw_app_meta_data jsonb NULL,\r\n\traw_user_meta_data jsonb NULL,\r\n\tis_super_admin bool NULL,\r\n\tcreated_at timestamptz NULL,\r\n\tupdated_at timestamptz NULL,\r\n\tCONSTRAINT users_pkey PRIMARY KEY (id)\r\n);\r\nCREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, email);\r\nCREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id);\r\n-- auth.refresh_tokens definition\r\nCREATE TABLE auth.refresh_tokens (\r\n\tinstance_id uuid NULL,\r\n\tid bigserial NOT NULL,\r\n\t\"token\" varchar(255) NULL,\r\n\tuser_id varchar(255) NULL,\r\n\trevoked bool NULL,\r\n\tcreated_at timestamptz NULL,\r\n\tupdated_at timestamptz NULL,\r\n\tCONSTRAINT refresh_tokens_pkey PRIMARY KEY (id)\r\n);\r\nCREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id);\r\nCREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id);\r\nCREATE INDEX refresh_tokens_token_idx ON auth.refresh_tokens USING btree (token);\r\n-- auth.instances definition\r\nCREATE TABLE auth.instances (\r\n\tid uuid NOT NULL,\r\n\tuuid uuid NULL,\r\n\traw_base_config text NULL,\r\n\tcreated_at timestamptz NULL,\r\n\tupdated_at timestamptz NULL,\r\n\tCONSTRAINT instances_pkey PRIMARY KEY (id)\r\n);\r\n-- auth.audit_log_entries definition\r\nCREATE TABLE auth.audit_log_entries (\r\n\tinstance_id uuid NULL,\r\n\tid uuid NOT NULL,\r\n\tpayload json NULL,\r\n\tcreated_at timestamptz NULL,\r\n\tCONSTRAINT audit_log_entries_pkey PRIMARY KEY (id)\r\n);\r\nCREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id);\r\n-- auth.schema_migrations definition\r\nCREATE TABLE auth.schema_migrations (\r\n\t\"version\" varchar(255) NOT NULL,\r\n\tCONSTRAINT schema_migrations_pkey PRIMARY KEY (\"version\")\r\n);\r\nINSERT INTO auth.schema_migrations (version)\r\nVALUES  ('20171026211738'),\r\n        ('20171026211808'),\r\n        ('20171026211834'),\r\n        ('20180103212743'),\r\n        ('20180108183307'),\r\n        ('20180119214651'),\r\n        ('20180125194653');\r\n-- Gets the User ID from the request cookie\r\ncreate or replace function auth.uid() returns uuid as $$\r\n  select nullif(current_setting('request.jwt.claim.sub', true), '')::uuid;\r\n$$ language sql stable;\r\n-- Gets the User ID from the request cookie\r\ncreate or replace function auth.role() returns text as $$\r\n  select nullif(current_setting('request.jwt.claim.role', true), '')::text;\r\n$$ language sql stable;\r\nGRANT ALL PRIVILEGES ON SCHEMA auth TO postgres;\r\nGRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA auth TO postgres;\r\nGRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA auth TO postgres;\r\nALTER USER postgres SET search_path = \"auth\";\r\n```\r\n\r\n3. Run `docker-compose up -d` and wait 15 seconds\r\n\r\n4. Run\r\n\r\n```bash\r\ncurl --location --request POST 'http://localhost:9999/admin/users' --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwicm9sZSI6InN1cGFiYXNlX2FkbWluIiwiaWF0IjoxNTE2MjM5MDIyfQ.0sOtTSTfPv5oPZxsjvBO249FI4S4p0ymHoIZ6H6z9Y8' --header 'Content-Type: application/json' --data-raw '{\"email\": \"example@gmail.com\"}'\r\n```\r\n\r\n5. Result\r\n\r\n```bash\r\ncurl: (52) Empty reply from server\r\nmake: *** [Makefile:39: curl] Error 52\r\n```\r\n\r\n## Expected behavior\r\n\r\nWith `gotrue:v2.2.11` in the `docker-compose.yml` file the result is:\r\n\r\n```json\r\n{\"id\":\"7c69f41c-338f-46b0-8ff6-ea13d57cd4eb\",\"aud\":\"\",\"role\":\"\",\"email\":\"example@gmail.com\",\"phone\":\"\",\"app_metadata\":{\"provider\":\"email\",\"providers\":[\"email\"]},\"user_metadata\":{},\"identities\":null,\"created_at\":\"2021-12-11T06:06:32.855162Z\",\"updated_at\":\"2021-12-11T06:06:32.856622Z\"}\r\n```\r\n\r\n## System information\r\n\r\n- OS: ubuntu\r\n- Version of gotrue: v2.2.13\r\n\r\n## Additional context\r\n\r\nThe error was introduced in commit #297 \r\n",
            "author": {
                "login": "leynier"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-11T06:10:38Z",
            "closedAt": "2022-01-07T10:09:22Z",
            "url": "https://github.com/supabase/gotrue/issues/301",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc47fQGp",
                    "body": "Hey @leynier, thanks for pointing this out! I've made a PR to fix it. Will be merged and rolled out soon.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-20T15:52:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/301#issuecomment-998048169"
                },
                {
                    "id": "IC_kwDOEKipmc48Cfz2",
                    "body": "fixed in #306 ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-01-07T10:09:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/301#issuecomment-1007287542"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Ah2Nb",
            "number": 303,
            "title": "Chore: update Github description to supabase.com",
            "body": "# Chore\r\n\r\n## Describe the chore\r\n\r\nupdate Github description  from [supabase.io](https://supabase.com) to [supabase.com](https://supabase.com)\r\n\r\n<img width=\"1392\" alt=\"Screen Shot 2021-12-16 at 3 24 58 PM\" src=\"https://user-images.githubusercontent.com/70828596/146444104-74c4de67-7b87-4234-9358-26407084cf34.png\">",
            "author": {
                "login": "Isaiah-Hamilton"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-16T20:26:02Z",
            "closedAt": "2021-12-20T15:32:20Z",
            "url": "https://github.com/supabase/gotrue/issues/303",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc47fLwr",
                    "body": "done! thanks for pointing this out",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-20T15:32:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/303#issuecomment-998030379"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5AnLvm",
            "number": 304,
            "title": "Cannot integrate Postmark API with Supabase",
            "body": "# Improve documentation\r\nI want to integrate [Postmark](https://postmarkapp.com/)(an email service) api with that of Supabase such that any email action from Supabase should trigger the PostMark endpoint and that should finally send the mail to the respective email ids.\r\n\r\nI see some discussion has been done on that regard(#109 and #133)  but the whole discussion is very vague and I cannot find anything in the docs referencing this. What is the way to add that endpoint in Supabase dashboard? any link to documentation is also greatly appreciated.",
            "author": {
                "login": "shivam-51"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-19T04:55:40Z",
            "closedAt": "2023-03-20T08:58:38Z",
            "url": "https://github.com/supabase/gotrue/issues/304",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc47fLlc",
                    "body": "hi @shivam-51, you can use the `/generate_link` endpoint in gotrue or the method [generateLink](https://supabase.com/docs/reference/javascript/auth-api-generatelink) in supabase-js to generate a confirmation, invite, recovery, magic link and send it your users using the postmark api. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2021-12-20T15:31:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-998029660"
                },
                {
                    "id": "IC_kwDOEKipmc477xNm",
                    "body": "hi @shivam-51, let me know if this worked for you, else imma close the issue for now",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-05T09:35:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1005523814"
                },
                {
                    "id": "IC_kwDOEKipmc48VoSG",
                    "body": "@kangmingtay Unless I am missing something, I think this issue should be re-opened because it does NOT address the scenario of the initial sign-up confirmation.\r\n\r\nThe problem is that, currently, if we want e-mail confirmations BEFORE the user can sign-in, Supabase will always send a confirmation e-mail using the template from the Dashboard and NOT a template defined in the custom SMPT service (many such services provide their own templates with rich editors).\r\n\r\nI think there should be a way to enable e-mail confirmations WITHOUT having Supabase send an actual email (this can be done in a trigger). That way, we can still take advantage of GoTrue's logic for generating confirmation tokens and disallowing sign-ins before confirmation, but we can leverage custom templates.\r\n\r\n",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-01-13T16:32:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1012302982"
                },
                {
                    "id": "IC_kwDOEKipmc486uUJ",
                    "body": "@kangmingtay ping - can we re-open this issue or do you think I need to open a new one?",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-01-26T09:40:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1022027017"
                },
                {
                    "id": "IC_kwDOEKipmc4860qV",
                    "body": "Hi @chipilov,\r\n\r\nI just joined the team and will be working on GoTrue with @kangmingtay \r\n\r\nIt's a nit but I think it would be better if you opened a fresh issue. Though the scenarios seems similar, the original request seems to be centered around the documentation while the issue above described seems to be a feature request. \r\n\r\nHappy to re-open instead if you feel strongly about this though. Lmk!\r\nJoel\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-26T10:12:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1022053013"
                },
                {
                    "id": "IC_kwDOEKipmc4864gn",
                    "body": "Hey @chipilov, just to clarify - what is your use case here? It would be great if you could clarify on what you mean by the following statements:\r\n\r\n> ..does NOT address the scenario of the initial sign-up confirmation.\r\n\r\nwhat do you mean by the initial sign-up confirmation? \r\n\r\n> ..enable e-mail confirmations WITHOUT having Supabase send an actual email \r\n\r\nPersonally, I feel that this isn't great from the DX perspective because it seems to account for a very specific edge case and would cause more confusion. \r\n\r\n> That way, we can still take advantage of GoTrue's logic for generating confirmation tokens and disallowing sign-ins before confirmation\r\n\r\nI'm probably missing something here but doesn't the `/generate_link` template handle this for you? It generates a confirmation token, doesn't send an actual email and it disallows sign-ins before confirmation. You can still use your custom template and include the link generated inside the template.\r\n\r\nThe only scenario I can think of is if the user wants to leverage the email sending functionality of gotrue but at the same time, they want to use their custom smtp provider and make use of rich templates. Using the `/generate_link` wouldn't work for them since they prefer not to handle the email sending logic themselves.\r\n\r\nWould be great to hear back from you! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-26T10:31:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1022068775"
                },
                {
                    "id": "IC_kwDOEKipmc487ECP",
                    "body": "Hey @kangmingtay, I think there are 2 specific use cases that I am trying to address:\r\n\r\n1. Re-sending sign-up e-mail confirmation\r\n\r\nFor whatever reason, delivery of signup confirmation e-mails is not the most reliable process, so most apps show a button like \"Resend e-mail confirmation\" to allow the user to trigger another e-mail if they never received the first e-mail in a reasonable time (e.g. a couple of minutes).\r\n\r\nThe problem with this scenario is that while Supabase automatically sends the first e-mail when the user signs-up, any subsequent confirmation e-mails MUST be sent by custom server-side code (via the usage of generate_link). Aside for the fact that the same action (sending e-mail confirmation) is basically handled in 2 different ways, there is also the issue of how to ensure that the e-mail sent by Supabase looks exactly the same as the e-mail sent by the custom server-side code. Unless I am missing something, your best bet is to basically copy-paste the template you have in Supabase to whatever templating engine you use by the custom e-mail provider (or vice-versa).\r\n\r\nThis problem would be solved or at least alleviated by any of these:\r\n  (a) Supabase allows calling parameterized HTTP hooks on signup/password reset/etc instead of forcing you to use templates from the dashboard. That way, one can simply provide the HTTP hooks from their e-mail provider and use a single set of templates defined in the provider (you'd still need custom server-side code for re-sending of the e-mails, but at least you would NOT need to handle 2  sets of templates for the same thing);\r\n\r\n  (b) Supabase introduces a dedicated API for actually sending emails, NOT just generating links - this would improve this particular scenario since you would just use the templates in the Supabase dashboard. However, this would NOT solve the second scenario described below and it would also prevent you from using the templating engine from your custom e-mail provider (which, with all due respect, usually has better authoring experience than the Supabase dashboard);\r\n\r\n  (c) Supabase introduces the option to enforce e-mail confirmations but does NOT send e-mails automatically and instead leaves all that to the developer. I agree with you that this is NOT very good DX, especially given that you run into transactional problems where the trigger and the generate_link code see different data (because the trigger sees data from within the current transaction while the generate_link code does NOT see the data from the transaction);\r\n\r\n2. Maintaining a single set of templates for all of the app's needs\r\n\r\nCurrently, Supabase allows you define e-mail templates ONLY for auth use cases (e.g. sign-up, invite, etc). However, many apps (especially online marketplaces) need other kinds of templates, e.g. payment reminders, order confirmations, etc. With the current Supabase flow, this means that a developer needs to maintain 2 sets of templates (with 2 different authoring experiences) - the Supabase auth templates in the Supabase dashboard and all other templates.\r\n\r\nThis problem would be solved or at least alleviated either by solution (a) above (not sure if there is another approach).\r\n\r\nIMHO, the first scenario is relatively common for any app while the second scenario is dependent on the type of app, but still pretty common for marketplace-type apps.\r\n\r\nI hope this makes things clearer:\r\n  - if so, I would be happy to open a separate ticket (or two) for these scenarios;\r\n  - If not, I would be happy to clarify even further (maybe it would be better to hash it out over Discord, but I don't mind continuing here)",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-01-26T11:35:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1022115983"
                },
                {
                    "id": "IC_kwDOEKipmc488UTW",
                    "body": "Hey @chipilov, thanks for taking the time to explain the cases in detail, i really appreciate it! Yeah, I get what you mean, for (1), i like the option (a) you suggested which is to use webhooks to to send the emails from their email provider. \r\n\r\nAs for (2), i agree that our email templating flow is quite restrictive currently. If we were to go with the webhook approach for (1), we can change the email templating page to allow users to dynamically create their custom email template for specific cases and attach it to a webhook endpoint. When the webhook is triggered on an auth event, the respective template will be sent out depending on which email action is triggered. \r\n\r\nLet's keep this thread open - this is really good feedback for improving the auth email templating experience.\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-26T17:53:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1022444758"
                },
                {
                    "id": "IC_kwDOEKipmc4_KUkh",
                    "body": "I agree with the points @chipilov raises above! Also, if there are cases where the built-in templates are unsuitable (no support for i18n, no way to extend with additional dynamic variables, etc.) there appears to be no straightforward way to replace them with a more robust custom solution. ",
                    "author": {
                        "login": "yowzadave"
                    },
                    "createdAt": "2022-03-05T03:13:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1059670305"
                },
                {
                    "id": "IC_kwDOEKipmc5CmUo0",
                    "body": "100% agree on @chipilov case which i also have. Custom Emails are not an edge case its default for every SaaS system i am aware of. Usage of the provided text templates is an edge case and borderline useless to me. \r\n\r\nAll we need here would be a on/off radio where you can turn of automatic email sending alltogether and code your custom one which most likely uses far better services like mailjet or the likes. There you can craft wonderful transactional emails and use them via simple REST calls.",
                    "author": {
                        "login": "logemann"
                    },
                    "createdAt": "2022-05-04T13:53:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1117342260"
                },
                {
                    "id": "IC_kwDOEKipmc5Gqi6G",
                    "body": "> Hey @chipilov, just to clarify - what is your use case here? It would be great if you could clarify on what you mean by the following statements:\r\n> \r\n> > ..does NOT address the scenario of the initial sign-up confirmation.\r\n> \r\n> what do you mean by the initial sign-up confirmation?\r\n> \r\n> > ..enable e-mail confirmations WITHOUT having Supabase send an actual email\r\n> \r\n> Personally, I feel that this isn't great from the DX perspective because it seems to account for a very specific edge case and would cause more confusion.\r\n> \r\n> > That way, we can still take advantage of GoTrue's logic for generating confirmation tokens and disallowing sign-ins before confirmation\r\n> \r\n> I'm probably missing something here but doesn't the `/generate_link` template handle this for you? It generates a confirmation token, doesn't send an actual email and it disallows sign-ins before confirmation. You can still use your custom template and include the link generated inside the template.\r\n> \r\n> The only scenario I can think of is if the user wants to leverage the email sending functionality of gotrue but at the same time, they want to use their custom smtp provider and make use of rich templates. Using the `/generate_link` wouldn't work for them since they prefer not to handle the email sending logic themselves.\r\n> \r\n> Would be great to hear back from you!\r\n\r\n@kangmingtay I misunderstood you about the usage of the ```/generate_link``` API, but now I understand that you can actually sign-up users (i.e. add them to the ```auth.users```) table with this API and NOT just generate links for existing users. Indeed, this will help my scenarios because Supabase will NOT automatically send sign-up e-mails in this case and I will have complete control over sending of the emails.\r\n\r\nFor anyone interested in using this approach, there are a few important things to keep in mind:\r\n  - unlike the ```signup()``` JS API, the ```/generate_link``` API ONLY works with the ```service_role```, so one would need to create a custom signup API in the app backend and call the API from there;\r\n  - unlike the ```signup()``` JS API, the ```/generate_link``` API returns a 422 HTTP error when trying to signup a user which already exists (the JS API returns fake data);\r\n  - unlike the ```signup()``` JS API, it seems like there is no rate limiting for the ```/generate_link``` API (@kangmingtay please, correct me if I am wrong about this one); \r\n",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-07-15T13:40:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1185558150"
                },
                {
                    "id": "IC_kwDOEKipmc5R7jSO",
                    "body": "@chipilov Thanks for mentioning the service role bit. It's documented that way for admin functions but I completely forgot and was wondering why all my returns were coming back null :)",
                    "author": {
                        "login": "vincentjflorio"
                    },
                    "createdAt": "2023-01-07T18:27:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1374565518"
                },
                {
                    "id": "IC_kwDOEKipmc5X96DA",
                    "body": "Hey all,\r\n\r\nRe-read the thread and it seems like the issue has been resolved (CMIIAW). As for next steps, we will be looking into parameterized HTTP hooks so feel free to follow along on our changelog/newsletter.\r\n\r\nGoing to close for now but feel free to re-open if there are further questions/concerns\r\n\r\nThanks!\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-20T08:58:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/304#issuecomment-1475846336"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5A5Y3B",
            "number": 308,
            "title": "Request to add otp provider for India",
            "body": "# Feature request\r\n\r\nWant to add support for textlocal.in, which is an Indian SMS provider (cost< 1/10 of twillio in India).\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nThe implementation is loosely based on messagebird implementation. Apart from signing up on the website, specific sms templates needs to be approved, only then sms can be sent, so a list can be shared in the docs for the same.\r\n\r\nNote: template approval is a mandate of the indian government and all companies have to follow it for sending SMS in India.\r\n\r\n## Describe the solution you'd like\r\n\r\nNeed help to get https://github.com/supabase/gotrue/pull/305 merged. I can add more details, would also like to know where the sms otp templates are stored, so I can get the same approved for my account and we would need to the add the same in the docs as well.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThere are many alternate cheap sms provider, but textlocal has a good track record and our founders have used the service in the past.\r\n\r\n\r\n",
            "author": {
                "login": "bhanuc"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-26T14:46:04Z",
            "closedAt": "2022-01-16T17:29:12Z",
            "url": "https://github.com/supabase/gotrue/issues/308",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc48bymf",
                    "body": ":tada: This issue has been resolved in version 2.3.5 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.3.5)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-01-16T17:29:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/308#issuecomment-1013918111"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5A9LUc",
            "number": 311,
            "title": "Add \"disableSignUp\" option for magic links",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nA hotly debated topic :)\r\n\r\nhttps://github.com/supabase/supabase/issues/1176#issuecomment-973894582\r\n\r\n## Describe the solution you'd like\r\n\r\nAdd a `disableSignUp` option to the magic link endpoint. If this is `true` then the endpoint should _not_ create a new user.\r\n\r\n",
            "author": {
                "login": "kiwicopple"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-28T10:31:32Z",
            "closedAt": "2022-01-19T17:14:03Z",
            "url": "https://github.com/supabase/gotrue/issues/311",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc47uVU2",
                    "body": "Yes please!",
                    "author": {
                        "login": "aantn"
                    },
                    "createdAt": "2021-12-28T10:35:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/311#issuecomment-1002001718"
                },
                {
                    "id": "IC_kwDOEKipmc47x_jI",
                    "body": "Or perhaps a clearer flag will be `createUser`?\r\n\r\neg: `supabase.auth.signIn({ email: 'me@example.com', createUser: false })`",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-30T10:14:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/311#issuecomment-1002961096"
                },
                {
                    "id": "IC_kwDOEKipmc48mWSV",
                    "body": ":tada: This issue has been resolved in version 2.4.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.4.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-01-19T17:14:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/311#issuecomment-1016685717"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5NzkzMTg1",
            "number": 312,
            "title": "[Feature request] auth.resendConfirmationEmail",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nOccasionally, users don't receive email confirmation emails, or the emails go to spam. Or they may have created an account a week ago and are just now signing in. Or potentially, your site originally did not require email confirmations and now you wish to enforce it.\r\n\r\nIn short, there are many reasons why you may wish to resend the email confirmation email. Currently, there's not an API to do this.\r\n\r\n## Describe the solution you'd like\r\n\r\n```js\r\nsupabase.auth.resendEmailConfirmation(\"email@example.com\")\r\n```\r\n\r\n## Describe alternatives you've considered\r\n\r\nCurrently, there are only two ways to achieve this functionality (neither of which are ideal).\r\n\r\n1. **Send a password reset link**. Of course, many users don't want to immediately reset their password.\r\n2. **Send a magic link**. This will work, though you'll be using a different email template. Instead of sending a confirmation email, you'll be sending a log-in email. Functionally this is the same, but users could be confused because the email's contents are not exactly what they were looking for. You could copy the password confirmation email into the magic link template, but then you can't use the magic link.\r\n\r\n## Additional context\r\n\r\nThis is a low-priority issue, though I have a feeling this will be decently easy to implement.\r\n",
            "author": {
                "login": "Nick-Mazuk"
            },
            "state": "CLOSED",
            "createdAt": "2021-07-03T18:53:03Z",
            "closedAt": "2023-02-13T16:06:09Z",
            "url": "https://github.com/supabase/gotrue/issues/312",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc40tvFs",
                    "body": "If the token is expired, users are redirected to the app's supabase url.  That presents a plain  JSON error message: `{\"code\":410,\"msg\":\"Confirmation token expired\"}`\r\n\r\nIs there a way to redirect users back to the original signin or referring page?",
                    "author": {
                        "login": "libreninja"
                    },
                    "createdAt": "2021-07-21T18:34:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-884404588"
                },
                {
                    "id": "IC_kwDOEKipmc44O98Q",
                    "body": "Opened a discussion #3526 just to find out it's not possible yet. Hope this feature request will gain some traction in the future. :crossed_fingers: ",
                    "author": {
                        "login": "b2m9"
                    },
                    "createdAt": "2021-10-14T15:05:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-943447824"
                },
                {
                    "id": "IC_kwDOEKipmc5AXDzC",
                    "body": "still needs to happen...ran into the issue myself just while testing, and sometimes the confirmation email just doesn't arrive, and if so, you are screwed.  imagine a medium/high traffic website...this issue would be rampant.",
                    "author": {
                        "login": "travisanderson"
                    },
                    "createdAt": "2022-03-26T22:29:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1079786690"
                },
                {
                    "id": "IC_kwDOEKipmc5FQ18k",
                    "body": "It doesnt make sense that a feature so important like that one was not implemented in the email auth. Are there any workarounds for this issue? Talking about a scenario where i use auth.update({email}) but the email does not arrive so i have to send it again.",
                    "author": {
                        "login": "zebaroni"
                    },
                    "createdAt": "2022-06-21T17:22:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1162043172"
                },
                {
                    "id": "IC_kwDOEKipmc5FnDFH",
                    "body": "Would also like to see this implemented ",
                    "author": {
                        "login": "ikapo"
                    },
                    "createdAt": "2022-06-27T20:38:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1167864135"
                },
                {
                    "id": "IC_kwDOEKipmc5JeSPW",
                    "body": "Is this still not implemented? It seems a glaring omission to me, especially as the confirmation link max expiry is 24 hours!",
                    "author": {
                        "login": "cliveportman"
                    },
                    "createdAt": "2022-08-31T09:08:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1232675798"
                },
                {
                    "id": "IC_kwDOEKipmc5J68Pu",
                    "body": "Just went to setup email verification on my beta app and I am dumbfounded such a basic feature is missing. Emails hitting a spam filter or just not getting done within 24hrs by the user is extremely common, not being able to resend it is bonkers",
                    "author": {
                        "login": "madeleineostoja"
                    },
                    "createdAt": "2022-09-08T03:58:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1240187886"
                },
                {
                    "id": "IC_kwDOEKipmc5J8n6v",
                    "body": "I believe if you just send another magic link, that will verify the email.  So if you can't log in because you haven't verified, you can just log in with a magic link.",
                    "author": {
                        "login": "burggraf"
                    },
                    "createdAt": "2022-09-08T12:08:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1240628911"
                },
                {
                    "id": "IC_kwDOEKipmc5J9BDE",
                    "body": "> Just went to setup email verification on my beta app and I am dumbfounded such a basic feature is missing. Emails hitting a spam filter or just not getting done within 24hrs by the user is extremely common, not being able to resend it is bonkers\r\n\r\nExactly my issue. But as @burggraf said, you can resend by creating the user again, which is what I do. If they're already created, it just re-sends the invite email. I'm planning on adding a trigger so when they accept the invite, it updates a column on their profile so I know whether they're confirmed or not. I'll use that to check whether the 'resend invite' button needs to be displayed in my list of users.",
                    "author": {
                        "login": "cliveportman"
                    },
                    "createdAt": "2022-09-08T13:38:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1240731844"
                },
                {
                    "id": "IC_kwDOEKipmc5J_QMp",
                    "body": "Ah okay that's good to know re: recreating the user. I think that's a cleaner approach than a magic link, which has a different goal/messaging to the user than confirming an email. Still weird we have to resort to these hacks for something so basic. It def feels like the auth layer is the most undercooked part of the Supabase platform, the db stuff has all been really solid for me but I've had endless problems with auth.",
                    "author": {
                        "login": "madeleineostoja"
                    },
                    "createdAt": "2022-09-08T23:00:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1241318185"
                },
                {
                    "id": "IC_kwDOEKipmc5J_Tkk",
                    "body": "You need to call again `supabase.auth.signUp` with also the credentials including the password?\nIn my use case I \"redirect\" the user to another page, so I cannot resend the credentials the user originally inserted.\nA function to resend the email (maybe also with a configurable time-to-wait before a new email can be sent) would be really needed.",
                    "author": {
                        "login": "413n"
                    },
                    "createdAt": "2022-09-08T23:24:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1241332004"
                },
                {
                    "id": "IC_kwDOEKipmc5K2KQK",
                    "body": "How can this simple but essential feature be missing for such a platform? I mean supabase is supposed to be a platform that you can write a full application on.",
                    "author": {
                        "login": "mathiasayivor"
                    },
                    "createdAt": "2022-09-23T01:31:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1255711754"
                },
                {
                    "id": "IC_kwDOEKipmc5LPL04",
                    "body": "Hey everyone, we feel your pain and we're doing the best we can. I've added this to our backlog and we'll try to pick it up soon. \r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T13:20:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1262271800"
                },
                {
                    "id": "IC_kwDOEKipmc5Nc0oo",
                    "body": "@hf reiterating here how badly we need this feature. It's a pretty big dealbreaker to ask the user to re-enter in their password just so that I can call .signUp() just so that I can send them another confirmation code.... This is all **ESPECIALLY** important since supabase enforces a max 24hr link expiration. At least let us change it to 14 days or remove the expiration as a short-term hack. ",
                    "author": {
                        "login": "nathaneidelson"
                    },
                    "createdAt": "2022-11-02T00:45:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1299401256"
                },
                {
                    "id": "IC_kwDOEKipmc5NeAo9",
                    "body": "I recommend switching to the v2 version of the API and using the 6-digit OTP. It has solved all of these problems for me, in the absence of an official solution.",
                    "author": {
                        "login": "cliveportman"
                    },
                    "createdAt": "2022-11-02T07:47:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1299712573"
                },
                {
                    "id": "IC_kwDOEKipmc5QM8jF",
                    "body": "+1, would really like to see this. In the meantime:\r\n\r\nhttps://github.com/supabase/supabase/discussions/3526#discussioncomment-4371715",
                    "author": {
                        "login": "madebyfabian"
                    },
                    "createdAt": "2022-12-11T14:35:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1345571013"
                },
                {
                    "id": "IC_kwDOEKipmc5RUSlC",
                    "body": "> I recommend switching to the v2 version of the API and using the 6-digit OTP. It has solved all of these problems for me, in the absence of an official solution.\r\n\r\nBut it won't work with password signup, right? Because `verifyOtp` doesn't send another token if the account already exists.",
                    "author": {
                        "login": "florianwalther-private"
                    },
                    "createdAt": "2022-12-23T19:47:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1364273474"
                },
                {
                    "id": "IC_kwDOEKipmc5Rn91b",
                    "body": "I think to do it, we need additional type in GoTrue generate_link api named 'resend' with email and password as parameter. The only type that can generate new link when user is already signup in generate link api is type 'recovery' but it is not the way to do it since it's for changing the user password.",
                    "author": {
                        "login": "ZhenFTW"
                    },
                    "createdAt": "2023-01-03T06:26:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1369431387"
                },
                {
                    "id": "IC_kwDOEKipmc5R93Dd",
                    "body": "I just tried the 6 code otp via email here is the code  const { error, data } = await supabase.auth.verifyOtp({\r\n      email: email,\r\n      type: \"signup\",\r\n      token,\r\n    }) but I get the token expired message I don't know what I'm doing wrong since the code entered and the code sent to the email address on signup match. Why such a crucial feature as resending new confirmation assuming the token expiry is true is a  deal breaker",
                    "author": {
                        "login": "alphakex2"
                    },
                    "createdAt": "2023-01-09T06:42:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1375170781"
                },
                {
                    "id": "IC_kwDOEKipmc5SChQl",
                    "body": "> I just tried the 6 code otp via email here is the code const { error, data } = await supabase.auth.verifyOtp({ email: email, type: \"signup\", token, }) but I get the token expired message I don't know what I'm doing wrong since the code entered and the code sent to the email address on signup match. Why such a crucial feature as resending new confirmation assuming the token expiry is true is a deal breaker\r\n\r\nMaybe your problem is related to this: https://github.com/supabase/gotrue/issues/876#issuecomment-1368064459",
                    "author": {
                        "login": "florianwalther-private"
                    },
                    "createdAt": "2023-01-09T22:05:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1376392229"
                },
                {
                    "id": "IC_kwDOEKipmc5TiAot",
                    "body": "Hey everyone, apologies for the delay, I've been working on getting this in the upcoming weeks so stay tuned! It seems like there are 2 problems here which I'll attempt to resolve:\r\n\r\n1. Calling the `signInWithOtp` method for a new user sends a confirmation email initially. But if the user isn't confirmed yet, calling `signInWithOtp` subsequently as an attempt to \"resend the confirmation email\" will send the \"Reset Password\" email template instead. This is definitely not ideal since the \"Reset Password\" template could be different from the \"Confirmation signup\" email template. This has been fixed in #889 and should land in all Supabase projects in the upcoming weeks.\r\n2. The ability to resend email confirmations (which is also the main topic on this thread). I've started a PR (#912) to address this and the DX should look like this in the gotrue-js client library:\r\n\r\n```js\r\nawait resendConfirmationEmail({ email })\r\n```\r\n\r\n```bash\r\ncurl -X POST \"http://localhost:9999/resend_confirmation\" -H \"Content-Type: application/json\" -d '{\"email\": \"foo@example.com\"}'\r\n```\r\n\r\nThe endpoint will return an empty object regardless of whether the user exists / is confirmed (similar to requesting for a password recovery email). \r\n\r\nThanks everyone again for your patience and for taking the time to comment on this thread and bring this to our attention.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-01-24T05:44:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1401424429"
                },
                {
                    "id": "IC_kwDOEKipmc5VILs2",
                    "body": "Just merged the PR in, will be looking to add the client library bindings to the supabase-js library soon! We'll need some time to deploy this to all hosted projects on Supabase but I'll update the thread once that's done.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-13T16:07:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1428208438"
                },
                {
                    "id": "IC_kwDOEKipmc5YHSDq",
                    "body": "hi @kangmingtay thanks for the update in Feb. I appreciate this issue is now closed but I wonder if the new API `auth.resendConfirmationEmail` can be used on the JS client or server or at all?\r\n\r\nwe have a little UI link after the user registers with email, e. g. \"didn't receive the confirmation email? resend now.\". I am looking into ways how to implement this resend flow as we are migrating from Firebase. thanks!",
                    "author": {
                        "login": "dmudro"
                    },
                    "createdAt": "2023-03-21T17:23:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1478303978"
                },
                {
                    "id": "IC_kwDOEKipmc5YJBV2",
                    "body": "hey @dmudro, we're in the process of adding it to the JS client lib so stay tuned! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-22T00:27:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1478759798"
                },
                {
                    "id": "IC_kwDOEKipmc5Zi6s_",
                    "body": "Hi @kangmingtay I am at the exact same point state as @dmudro is here. I wanted to know soon this feature will be added to the js library to check whether to leave this feature out of our auth process or keep in the roadmap for our coming sprint. Thank you!",
                    "author": {
                        "login": "tcxcx"
                    },
                    "createdAt": "2023-04-10T21:06:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1502325567"
                },
                {
                    "id": "IC_kwDOEKipmc5bhCFh",
                    "body": "@kangmingtay I do not see this in the JS client lib yet. Any updates here? The OTP work around is sad for us :( ",
                    "author": {
                        "login": "cwierzbicki00"
                    },
                    "createdAt": "2023-05-04T20:42:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1535385953"
                },
                {
                    "id": "IC_kwDOEKipmc5cRrOb",
                    "body": "@cwierzbicki00 seems to be merged now https://github.com/supabase/gotrue-js/pull/631",
                    "author": {
                        "login": "abrakazinga"
                    },
                    "createdAt": "2023-05-15T16:02:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1548137371"
                },
                {
                    "id": "IC_kwDOEKipmc5hi1Fd",
                    "body": "https://pub.dev/documentation/gotrue/latest/gotrue/GoTrueClient/resend.html\r\n\r\nWhat about reutilising this?",
                    "author": {
                        "login": "andrhubb"
                    },
                    "createdAt": "2023-07-14T22:38:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/312#issuecomment-1636520285"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5ODA5NDIz",
            "number": 313,
            "title": "Link Multiple Auth Providers to an Account",
            "body": "https://firebase.google.com/docs/auth/android/account-linking",
            "author": {
                "login": "sandbox-apps"
            },
            "state": "OPEN",
            "createdAt": "2021-07-26T05:09:56Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/313",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc405E25",
                    "body": "I think this would be great as well",
                    "author": {
                        "login": "rodjoseph"
                    },
                    "createdAt": "2021-07-27T09:56:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-887377337"
                },
                {
                    "id": "IC_kwDOEKipmc408YmH",
                    "body": "Hey @sandbox-apps - this is technically possible, as long as the user has the same email for all accounts (since this is the primary login mechanism). \r\n\r\nFor example \r\n\r\n- user logs in with email 'test@email.com'\r\n- user logs in with Facebook OAuth and their facebook account has the email 'test@email.com'\r\n\r\nBoth of these will return the same user `uuid`.\r\n\r\nIs that what you're looking for?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-07-28T11:47:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-888244615"
                },
                {
                    "id": "IC_kwDOEKipmc41pLDE",
                    "body": "Firebase has this setup where\r\nExample:\r\n1. I signed up via email/password then login on app\r\n2. Go to my profile then link social for example **facebook**\r\n3. Even though facebook has different email address it can be linked\r\n\r\nAnother example:\r\n1. I signed up via email/password then login on app\r\n2. Go to my profile then link social for example **twitter**\r\n3. Even though twitter has no email address it can be linked (via uid and providerId) see here: https://github.com/supabase/supabase/issues/2853\r\n\r\nResult:\r\n1. I can sign in via email/password\r\n2. I can sign in via facebook and it will not create another account because it is already connected to a user even though they different email address returned during OAuth\r\n3. I can sign in via twitter and it will not create another account because it is already connected to a user even though twitter has no email address returned during OAuth\r\n\r\nThings also that we can keep in mind that..\r\n1. If a user signed up with email/password with an email of **test@gmail.com**, user can still create an separate account via facebook/twitter if this social has the same email.\r\n2. Unless link or merge, then it will create new account.\r\n3. You can only link account if there is a user that is currently logged in on app/system to determine where would you append the additional data",
                    "author": {
                        "login": "sandbox-apps"
                    },
                    "createdAt": "2021-08-17T04:31:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-899985604"
                },
                {
                    "id": "IC_kwDOEKipmc41pLSH",
                    "body": "Further more you can unlink provider via providerId with the currentUser\r\n```kt\r\nFirebase.auth.currentUser!!.unlink(providerId)\r\n        .addOnCompleteListener(this) { task ->\r\n            if (task.isSuccessful) {\r\n                // Auth provider unlinked from account\r\n                // ...\r\n            }\r\n        }\r\n```",
                    "author": {
                        "login": "sandbox-apps"
                    },
                    "createdAt": "2021-08-17T04:34:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-899986567"
                },
                {
                    "id": "IC_kwDOEKipmc45SlD-",
                    "body": "I would love to have the workflow you describe @sandbox-apps!\r\n\r\nIt seems the \"perfect\" way to manage auth with 3rd party providers. ",
                    "author": {
                        "login": "eMeRiKa13"
                    },
                    "createdAt": "2021-11-04T15:46:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-961171710"
                },
                {
                    "id": "IC_kwDOEKipmc46zfac",
                    "body": "> Hey @sandbox-apps - this is technically possible, as long as the user has the same email for all accounts (since this is the primary login mechanism). \n> \n> For example \n> \n> - user logs in with email 'test@email.com'\n> - user logs in with Facebook OAuth and their facebook account has the email 'test@email.com'\n> \n> Both of these will return the same user `uuid`.\n> \n> Is that what you're looking for?\n\nHi @kiwicopple, thanks for all your teams great work in supabase, lovin' it!\nJust want to mention that it would be great if we can link different provider to same account even if the email is different.\nSometimes user use different email for different providers.\nAnd also able to unlink will be great if user want to have separated accounts event the email is the same.\nThanks :)",
                    "author": {
                        "login": "didavid61202"
                    },
                    "createdAt": "2021-12-06T09:07:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-986576540"
                },
                {
                    "id": "IC_kwDOEKipmc47VfbZ",
                    "body": "For anyone wanting to support this, you'd need to propose to https://github.com/netlify/gotrue as that is where the logic behind users and providers live. I don't know if Supabase runs a fork of it, but this is where the request should be going to",
                    "author": {
                        "login": "firatoezcan"
                    },
                    "createdAt": "2021-12-16T06:47:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-995489497"
                },
                {
                    "id": "IC_kwDOEKipmc5C4nIV",
                    "body": "Adding another use case here, besides multiple auth paths:\r\nI want to store connections to 3rd party apps, e.g. a Twitter connection for retrieving a user's tweets. Else, I need to duplicate a lot of the OAuth logic and store it separately.",
                    "author": {
                        "login": "henningko"
                    },
                    "createdAt": "2022-05-10T09:14:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1122136597"
                },
                {
                    "id": "IC_kwDOEKipmc5IY0br",
                    "body": "Any updates on this ",
                    "author": {
                        "login": "diogoribeirodev"
                    },
                    "createdAt": "2022-08-14T23:00:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1214465771"
                },
                {
                    "id": "IC_kwDOEKipmc5KUEfz",
                    "body": "Hi everyone, we currently don't have plans to support manual linking of accounts in the near future. Currently, gotrue only supports automatic linking of accounts based on the user's email.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:35:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1246775283"
                },
                {
                    "id": "IC_kwDOEKipmc5LKKwx",
                    "body": "This could be done theoretically with a procedure and policies that updates the `auth.users` and `auth.identities` tables.\r\n\r\n* You would basically delete the identity id in `auth.identities`, remove the provider in `auth.users.raw_app_meta_data` and `auth.users.raw_user_meta_data`.\r\n\r\nAdding it would require logging out and back in with the provider assuming the email is the same.  If you wanted to take that a step further, you could create another procedure with an http function that runs the full oAuth 2 protocol, then saves it manually.  You could also theoretically add the missing option for signin with popup.\r\n\r\nOf course, if someone does either of these two options, please share the code here.\r\n\r\nJ\r\n\r\n",
                    "author": {
                        "login": "jdgamble555"
                    },
                    "createdAt": "2022-09-28T13:57:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1260956721"
                },
                {
                    "id": "IC_kwDOEKipmc5LOyx6",
                    "body": "Hey everyone, we're aware of the need to customize the account linking logic and have some plans to make it happen via web hooks / triggers. However, this is not something we're going to be working on in the short term.\r\n\r\nI'll be closing this issue as account linking is supported if the user has the same email in the social login providers.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T11:52:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1262169210"
                },
                {
                    "id": "IC_kwDOEKipmc5VCAZj",
                    "body": "I don't get the point of closing this and stating that account linking is suppoerted when its the same email but the point of this whole thread is to get support for when its NOT THE SAME EMAIL. Its a must have future in auth now and days. This should really be pushed up the priority list.",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2023-02-11T03:13:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1426589283"
                },
                {
                    "id": "IC_kwDOEKipmc5W0l1E",
                    "body": "This is really a necessity for auth to be functional in a lot of cases. Automatic linking is too unpredictable and doesn't address the issues described here.",
                    "author": {
                        "login": "sdaoud"
                    },
                    "createdAt": "2023-03-06T17:46:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1456627012"
                },
                {
                    "id": "IC_kwDOEKipmc5XGMdt",
                    "body": "Hi @rlee1990 and @sdaoud, I've pinned this issue to emphasise that this is definitely one of our top priorities going forward and we're working to make this happen gradually. If you've been keeping up with the updates on Supabase and gotrue, you may already know that automatic linking has always been the default way that gotrue links accounts. While we understand the advantages of manual linking that have been discussed in this thread, it's important to keep in mind that removing automatic linking altogether could create backward compatibility issues for existing users.\r\n\r\nFurthermore, we've received feedback from many developers who appreciate the simplicity of automatic linking for UX purposes. While we recognise the benefits of manual linking, it's not something that we can expect everyone to switch to overnight. \r\n\r\nI also want to reiterate that we'll eventually move to the model of manual linking accounts through a well-designed API. Currently, we are considering a few ideas to implement this:\r\n1. Implement some form of webhooks so users can define the linking behaviour between accounts\r\n2. Provide an API to support the following:\r\n  - link newly created identities to existing users\r\n  - unlink an identity from a user     \r\n  \r\n@hf has already made some progress to simplify the account linking logic in [this PR](https://github.com/supabase/gotrue/pull/829) to make way for the use of webhooks to decide linking behaviour. Please feel free to drop any ideas you may have regarding this topic too as the team will be more than happy to discuss them in detail! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-09T04:03:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1461241709"
                },
                {
                    "id": "IC_kwDOEKipmc5XGPB-",
                    "body": "@kangmingtay using a webhook sounds like a nice approach. I get keeping automatic linking in place also. A webhook to help link an account is a useful option.",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2023-03-09T04:14:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1461252222"
                },
                {
                    "id": "IC_kwDOEKipmc5XGQ0T",
                    "body": "I would say keep the automatic linking as the default option, but add a simple config option `automatic linking: true` that could be set to false.\r\n\r\nThen just copy the ideas of `link` and `unlink` that [Firebase](https://firebase.google.com/docs/auth/web/account-linking) uses or [Auth0](https://auth0.com/docs/manage-users/user-accounts/user-account-linking/unlink-user-accounts). Basic functions seem to be a good idea.\r\n\r\nJ",
                    "author": {
                        "login": "jdgamble555"
                    },
                    "createdAt": "2023-03-09T04:24:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1461259539"
                },
                {
                    "id": "IC_kwDOEKipmc5XGSSO",
                    "body": "@jdgamble555 we thought of that option too but it's not feasible to make it toggle-able since automatic linking requires the email to be unique for the algorithm to know which user to link the new identity to. For example:\r\n\r\n(assuming `automatic linking: false`)\r\n1. User 1 signs up with `foo@example.com` using google\r\n2. User 2 signs up with `foo@example.com` using facebook (not linked to (1)) \r\n3. Toggle `automatic linking: true` \r\n4. User 3 signs up with `foo@example.com` using twitter (no way of knowing whether to link User 3 to (1) or (2)) \r\n\r\nIt has to be a one-way toggle or an option you select before you start building your app. Either you opt-in for automatic linking or resign to a manual linking API for eternity \ud83d\ude43",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-09T04:33:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1461265550"
                },
                {
                    "id": "IC_kwDOEKipmc5XGcmy",
                    "body": "Hmmm, I definitely don\u2019t like the eternity issue. \ud83e\udd37\ud83c\udffb Perhaps the simple answer is to automatically link with the first found profile, in reality the first document id record containing that email.\r\n\r\nAny new profiles going forward would be automatic, but all profiles would have a link and unlink option after sign up. This puts the control back into the developer. So that boolean option is only concerning new signups, and the first found option. This solves any backwards compatible problems.\r\n\r\nLinking is always available. \r\n\r\nI should add this is also relevant for [anonymous logins](https://github.com/supabase/gotrue/issues/68) too, which is an entirely different feature.\r\n\r\n\ud83d\ude03 \r\nJ",
                    "author": {
                        "login": "jdgamble555"
                    },
                    "createdAt": "2023-03-09T05:25:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1461307826"
                },
                {
                    "id": "IC_kwDOEKipmc5bbB3u",
                    "body": " @kangmingtay @hf Can you explain what modifications are needed to be done in the database to link two accounts together?",
                    "author": {
                        "login": "ofekd"
                    },
                    "createdAt": "2023-05-03T22:05:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1533812206"
                },
                {
                    "id": "IC_kwDOEKipmc5c7v8I",
                    "body": "Hello,\r\n\r\nwe need to achieve something similar. We have an app where the users, logged by social logins or not, could add other auth providers accounts with additional scope. The other accounts could be from the same auth provider.\r\n\r\nExample: I'm logged in my Sales CRM as james@gmail.com with access to my contacts, then I want to import contacts from my other gmail account named james.pro@gmail.com without creating another account but linking the latter to the first.\r\n\r\nAs a quick (and dirty?) workaround, we have overriden Gotrue callback URI to point out to our backend. This way, we could either fetch token and do our business or redirect users back to Gotrue for user account creation.\r\n\r\nIs it something planned to implement?\r\n\r\n",
                    "author": {
                        "login": "baderdean"
                    },
                    "createdAt": "2023-05-23T12:12:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1559166728"
                },
                {
                    "id": "IC_kwDOEKipmc5j5Lrv",
                    "body": "this is very important to use as well ... would help cross-device sing-ins ... for ex if i sign up / sign in with apple ... i will not be able to use that account in a non-ios enviroment ",
                    "author": {
                        "login": "empato-limited"
                    },
                    "createdAt": "2023-08-12T14:13:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1675934447"
                },
                {
                    "id": "IC_kwDOEKipmc5j6DmX",
                    "body": "is there an estimation when this will be addressed? ",
                    "author": {
                        "login": "aaroniker"
                    },
                    "createdAt": "2023-08-13T00:42:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1676163479"
                },
                {
                    "id": "IC_kwDOEKipmc5oanRN",
                    "body": "This seems to be a must-have feature for any auth solution. What site nowadays doesn't even let you connect multiple oauth providers with different emails?",
                    "author": {
                        "login": "sebmor"
                    },
                    "createdAt": "2023-10-07T20:04:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1751807053"
                },
                {
                    "id": "IC_kwDOEKipmc5pwnbp",
                    "body": "Ah this just managed to kick me off of using the auth system in Supabase for a project; really wish a `link` function existed :(",
                    "author": {
                        "login": "ARMATAV"
                    },
                    "createdAt": "2023-10-23T02:52:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1774352105"
                },
                {
                    "id": "IC_kwDOEKipmc5r7VYj",
                    "body": "@hf any update on this? \ud83d\ude4f\ud83d\ude42",
                    "author": {
                        "login": "aaroniker"
                    },
                    "createdAt": "2023-11-14T17:10:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1810716195"
                },
                {
                    "id": "IC_kwDOEKipmc5r-WHE",
                    "body": "We are working on it! Sorry for the delay... it's not a simple feat as we need to make sure not to break any existing behavior, while allowing for an API that we won't have to go back to in 5 months time.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-11-14T22:39:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1811505604"
                },
                {
                    "id": "IC_kwDOEKipmc5sW3kf",
                    "body": "> We are working on it! Sorry for the delay... it's not a simple feat as we need to make sure not to break any existing behavior, while allowing for an API that we won't have to go back to in 5 months time.\r\n\r\n@hf Thanks for the update, that's awesome!! \u2728 any rough ETA?",
                    "author": {
                        "login": "aaroniker"
                    },
                    "createdAt": "2023-11-19T18:07:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/313#issuecomment-1817934111"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5ODE2NTcy",
            "number": 314,
            "title": "Allow custom `state` parameter when signing in",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIt seems to me that a consuming application should be possible to leverage oauth's `state` when signing in using an authentication provider.\r\n\r\nI've even tried to add `&state=custom` to the generated URL here:\r\nhttps://github.com/supabase/gotrue-js/blob/797ea09b6188291861b5bed4a488cc74b6f95aaf/src/GoTrueApi.ts#L290\r\n\r\nbut it seems that it's lost along the way - maybe because the provider endpoint is already given a token in the state parameter. \r\n\r\n## Describe the solution you'd like\r\n\r\nBeing able to use this would allow me to bring back the user closer to the state that he was in before the redirect.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThere are alternatives for my use case so it's not a showstopper for me but it would be neat if this would work, working with OAuth in the past I was surprised that this was not supported right now.\r\n",
            "author": {
                "login": "Andarist"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-01T10:24:11Z",
            "closedAt": "2023-02-13T02:42:09Z",
            "url": "https://github.com/supabase/gotrue/issues/314",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KUISC",
                    "body": "Hey @Andarist, you can actually set the query params in the `redirect_url`. Just wondering, does this address your use case here?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:46:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/314#issuecomment-1246790786"
                },
                {
                    "id": "IC_kwDOEKipmc5VEhWS",
                    "body": "Hey all,\r\n\r\nGoing to close this issue to inactivity - please feel free to re-open if there are still concerns\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-13T02:42:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/314#issuecomment-1427248530"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5ODI5ODQx",
            "number": 315,
            "title": "Reusing a Magic Link results in 404 User Not Found",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen using Magic Links, if a user clicks on a Magic Link that has already been used, the error message provided in the URL is a 404 User Not Found error\r\n`http://localhost:3000/#error_code=404&error_description=User+not+found`\r\n\r\n## To Reproduce\r\n\r\n1. Sign a user in/up using a Magic Link\r\n2. Click Magic Link and authenticate the user\r\n3. Click the Magic Link again\r\n\r\n## Expected behavior\r\n\r\nError message provided should state that the Magic Link has already been used or similar\r\n\r\n\r\n## System information\r\n\r\n\r\n- Version of supabase-js: `    \"@supabase/supabase-js\": \"^1.21.0\"`\r\n- Version of Node.js: `v14.15.0`\r\n",
            "author": {
                "login": "greghesp"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-03T09:49:09Z",
            "closedAt": "2022-09-07T13:43:39Z",
            "url": "https://github.com/supabase/gotrue/issues/315",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5CDudN",
                    "body": "Hey @greghesp,\r\n\r\nThanks for taking the time to give a comprehensive report on the issue as well as how to replicate it! We have managed to replicate the issue and will be looking into a fix next.\r\n\r\nJoel",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-25T08:51:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/315#issuecomment-1108272973"
                },
                {
                    "id": "IC_kwDOEKipmc5D5usm",
                    "body": "Note for self reference:\r\n\r\nThis is linked to  https://github.com/supabase/gotrue/issues/190 in that it should be added to the broader RFC around  error messages/error codes\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-27T01:58:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/315#issuecomment-1139206950"
                },
                {
                    "id": "IC_kwDOEKipmc5J3-Ut",
                    "body": "Hey everyone, we've resolved this issue already and reusing a magiclink will result in the following error displayed in the query fragment (`#error=unauthorized_client&error_code=401&error_description=Email+link+is+invalid+or+has+expired`)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:43:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/315#issuecomment-1239409965"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5OTQ5MDYw",
            "number": 317,
            "title": "Supabase auth Google OAuth2 flow 403 disallowed_useragent in browser responsive emulation mode",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen initiating a Google OAuth2 flow via the Supabase web SDK in responsive mode (in my case in MS Edge browser, with iPad responsive emulation), Google blocks the request as a \"403 disallowed_useragent\".\r\nWhen disabling the responsive device emulation, everything works again.\r\n\r\n## To Reproduce\r\n\r\n1. Follow the steps [as described in the documentation](https://supabase.io/docs/guides/auth/auth-google).\r\n2. Open the browser dev tools\r\n3. Enable responsive mode and choose a device (in my case, an iPad Pro 11\")\r\n4. Initiate a Google OAuth2 flow with:\r\n\r\n```javascript\r\nsupabase.auth.signIn({\r\n  provider: 'google',\r\n});\r\n```\r\n\r\n## Expected behavior\r\n\r\nWhen initiating an OAuth flow in a mobile device (as a responsive emulation in the browser), Google should not reject the request, just like it does without responsive device emulation.\r\n\r\n## Screenshots\r\n\r\nThis is the error screen I'm getting from Google.\r\n\r\n![image](https://user-images.githubusercontent.com/22414709/128671268-7b45b344-8827-4ef5-b815-1dfe22982b74.png)\r\n\r\n## System information\r\n\r\n- OS: Windows 10\r\n- Browser (if applies): Microsoft Edge\r\n- Version of supabase-js: 1.21.0\r\n- Version of Node.js: 16.6.1\r\n\r\n## Additional context\r\n\r\n### Leads \r\n\r\nThis seems to be related to [recent changes in the Google OAuth2 policy](https://developers.googleblog.com/2021/06/upcoming-security-changes-to-googles-oauth-2.0-authorization-endpoint.html) that disallow webview user agents to perform OAuth2 requests. \r\n\r\n\r\n###  Workarounds\r\n\r\nI have none in that case, I am developing a PWA that must be installed on an iPad but must also be available in the browser.\r\nIf you aren't developing a PWA, disabling responsive device emulation works fine.\r\n",
            "author": {
                "login": "AmiralBl3ndic"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-09T07:23:07Z",
            "closedAt": "2021-12-28T23:28:37Z",
            "url": "https://github.com/supabase/gotrue/issues/317",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc47vjT_",
                    "body": "Closing since I don't think there's anything we can do about an auth provider imposing such restrictions.",
                    "author": {
                        "login": "darora"
                    },
                    "createdAt": "2021-12-28T23:28:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/317#issuecomment-1002321151"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5OTU4MjU4",
            "number": 319,
            "title": "Reset password email auth token can be used multiple times",
            "body": "# Feature request\r\n\r\nAfter resetting the password, the same auth token can be used to reset the users password multiple times. Is there an option to invalidate the token after it has been used once?",
            "author": {
                "login": "nuurcodes"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-02T20:03:19Z",
            "closedAt": "2022-01-05T10:01:27Z",
            "url": "https://github.com/supabase/gotrue/issues/319",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4771sk",
                    "body": "hey @nuurcodes, are you still experiencing this issue? we actually do delete the recovery token after the password reset link is clicked. \r\n\r\nSee [here](https://github.com/supabase/gotrue/blob/master/api/verify.go#L230-L232) and [here](https://github.com/supabase/gotrue/blob/master/models/user.go#L323-L326). ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-05T10:01:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/319#issuecomment-1005542180"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5OTU4NTg5",
            "number": 320,
            "title": "Disabling phone confirmation doesn't work",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIn the console I already disabled phone confirmations but it is still trying to send them.\r\n\r\n## Expected behavior\r\n\r\nShould just register the users with phone and password without requiring a verification\r\n\r\n\r\n## Additional details:\r\nit returns `\r\n  message: 'Error sending confirmation sms: json: cannot unmarshal number into Go struct field SmsStatus.status of type string',\r\n  status: 400\r\n}`\r\n",
            "author": {
                "login": "loama"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-02T20:06:31Z",
            "closedAt": "2022-05-06T06:29:18Z",
            "url": "https://github.com/supabase/gotrue/issues/320",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5CDWsP",
                    "body": "Hey! \r\n\r\nThank you for taking the time to post this issue. I'm currently looking into the issue and have made attempts to replicate with the end goal of creating a patch. Could I trouble you for more information about replicating the issue? \r\n\r\nHere's what I've tried so far:\r\n\r\n**Case One: With just phone number**\r\n1. `signUp({phone_number: '12345678'})`\r\n2. disable\r\n3. `signIn({phone_number:'12345678'})`\r\n\r\nVerification SMS is sent to confirm phone number\r\n\r\n**Case Two: With phone number and password**\r\n1. `signUp({phone_number:'12345678', password:'some-password'})`\r\n2. disable confirmation\r\n3. `signIn({phone_number:'123456', password:'some-password'})`\r\n\r\nConfirmation is not sent as expected\r\n\r\nCan I trouble you to verify if the issue reported above is the same as that observed in case 1? We'd love to know if there's another bug/case that we're missing.\r\n\r\nThanks so much!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-25T07:25:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/320#issuecomment-1108175631"
                },
                {
                    "id": "IC_kwDOEKipmc5CtyhK",
                    "body": "Duplicate of #469 , continuing the discussion there",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-06T06:29:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/320#issuecomment-1119299658"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMDg5OTY2NzQ5",
            "number": 321,
            "title": "Token isn't refreshing when \"Enable Email Signup\" is disabled.",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nBug is appearing after disabling \"Enable Email Signup\" in dashboard.\r\nI'm using Discord as provider for OAuth.\r\nWhen supabase-js client is trying to refresh token in react-app instead of getting new token I'm getting this response:\r\n\r\nHTTP Code 400 with body:\r\n`{\r\n  \"code\": 400,\r\n  \"msg\": \"Email logins are disabled\"\r\n}`\r\n\r\nAfter enabling \"Enable Email Signup\" I'm getting token with response.\r\n\r\n## To Reproduce\r\n\r\n1. Setup via discord sign in\r\n2. Disable \"Enable Email Signup\" in supabase dashboard\r\n3. Sign in with discord in your app\r\n4. Wait for request\r\n\r\n## Expected behavior\r\n\r\nGetting new token with request.\r\n\r\n## System information\r\n\r\n- Version of @supabase/supabase-js: 1.22.5\r\n",
            "author": {
                "login": "PaganMuffin"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-06T03:42:40Z",
            "closedAt": "2022-04-19T07:09:20Z",
            "url": "https://github.com/supabase/gotrue/issues/321",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Bsc5D",
                    "body": "Hey! \r\n\r\nThanks for reporting this issue -- there seem to be a few issues related to OAuth providers and enabling signups. We're going to close this issue and manage it at #193 as there seem to be many overlapping ponits.\r\n\r\nFeel to re-open if you have any urgent questions or concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T07:09:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/321#issuecomment-1102171715"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5A98K_",
            "number": 322,
            "title": "Signing in using phone auth returns user: null",
            "body": "# Bug report\r\n\r\nI am trying to \"Using OTP as a passwordless sign-in mechanism\", as follows:\r\n\r\nconst { error } = await supabase.auth.signIn({\r\n        phone,\r\n      });\r\n\r\nconst { user, session, error } = await supabase.auth.verifyOTP({\r\n        phone,\r\n        token: otp,\r\n      });\r\n\r\nhowever the session returned has user: null. \r\nsupabase.auth.onAuthStateChange callback, which is registered, is also called after sign in but supabase.auth.user() is returning null\r\n\r\nMy app is working correctly when I try to signup/signin using email, password\r\n",
            "author": {
                "login": "meghaboggaram"
            },
            "state": "CLOSED",
            "createdAt": "2021-09-30T10:34:07Z",
            "closedAt": "2022-01-05T09:51:19Z",
            "url": "https://github.com/supabase/gotrue/issues/322",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc43_PUe",
                    "body": "calling \n\n```jsx\nsupabase.auth.refreshSession()\n```\n\nAfter the phone signin works for me.",
                    "author": {
                        "login": "vbylen"
                    },
                    "createdAt": "2021-10-09T16:38:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/322#issuecomment-939324702"
                },
                {
                    "id": "IC_kwDOEKipmc44dHaW",
                    "body": "What worked for me was using \r\n`supabase.auth.setSession(session.refresh_token)`\r\nIt will update the localStorage, but not the cookies. I have to make a call to the backend and ensure it does `  supabase.auth.api.setAuthCookie(req, res)`",
                    "author": {
                        "login": "darlanjunior"
                    },
                    "createdAt": "2021-10-19T22:36:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/322#issuecomment-947156630"
                },
                {
                    "id": "IC_kwDOEKipmc477z7T",
                    "body": "hi @meghaboggaram, let me know if this issue is still a blocker for you, else i'll close this one for now. Feel free to re-open it though!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-05T09:51:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/322#issuecomment-1005534931"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5A-CQR",
            "number": 323,
            "title": "signUp error not returning both email and password error",
            "body": "# Feature request\r\n\r\nFor signUp error if both email and password are invalid, then the error should contain some useful data that both email and password are invalid, currently only shows password that is invalid.\r\n\r\n## Example\r\n\r\n```\r\nconst { user, session, error } = await supabase.auth.signUp({ email: '', password: '' });\r\n```\r\n\r\n## Expected behavior\r\nEither error message property contains both password and email `message: 'Signup requires a valid password and email'` or error has different properties to map to specific errors such as passwordError or emailError.\r\n\r\n## Actual behavior\r\nError message just contains password error even though both email and password are both invalid.\r\n\r\n## Why\r\nThis makes it easier to display the error UI in the form and leads to better experience. Currently when user just submits with empty form where email and password inputs are empty, only the password error can be displayed which is odd visually.\r\n\r\n",
            "author": {
                "login": "aquaductape"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-27T20:43:32Z",
            "closedAt": "2022-01-05T09:45:50Z",
            "url": "https://github.com/supabase/gotrue/issues/323",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc47uCYT",
                    "body": "Hey @aquaductape - this one is for security reasons, we don't want to leak email addresses. I understand it's a bit frustrating from a UX perspective, but it's important that we don't expose your userbase in any way\r\n\r\nHope that makes sense! Let me know if you have any more questions",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-28T07:58:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/323#issuecomment-1001924115"
                },
                {
                    "id": "IC_kwDOEKipmc47uLdu",
                    "body": "Hey @kiwicopple thanks for the quick response.\r\n\r\nI don't think my use case could cause a security issue, because I'm just interested in whether the email formatted correctly, not if it is already taken in supabase, therefore no email addresses are getting leaked because it only returns invalid format errors\r\n\r\nCorrect me, but in this scenario where email => josh.com and password => 123, when supabase receives those values, it sees that email is invalid because it doesn't have `@` and password is too short, so it returns error response such as `{message: 'Unable to validate email address: invalid format. Password should be at least 6 characters', status: 422}`. \r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "aquaductape"
                    },
                    "createdAt": "2021-12-28T09:24:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/323#issuecomment-1001961326"
                },
                {
                    "id": "IC_kwDOEKipmc47uPS_",
                    "body": "Aha - I see. Thanks for clarifying @aquaductape . \r\n\r\nEmail validation is that it's surprisingly difficult:\r\n\r\nhttps://stackoverflow.com/questions/201323/how-can-i-validate-an-email-address-using-a-regular-expression\r\n\r\nIf we attempt validation, we will undoubtedly return some false negatives - blocking signups. Perhaps you'd like to add your own client-side validation? \r\n\r\nI guess we could do something simple (eg, determine if there is an `@` character) - I'll raise this with the team",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-28T10:00:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/323#issuecomment-1001977023"
                },
                {
                    "id": "IC_kwDOEKipmc47uT09",
                    "body": "supabase already does some form of email validation (I'm guessing it's using a very non-strict regex where it checks simple errors such as missing `@`, because as you already mention email validation on regex alone is nigh impossible), because it returns this error when email is invalid such as `foobar.com` (as long as password is valid).\r\n```\r\n{message: 'Unable to validate email address: invalid format', status: 422}\r\n```",
                    "author": {
                        "login": "aquaductape"
                    },
                    "createdAt": "2021-12-28T10:25:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/323#issuecomment-1001995581"
                },
                {
                    "id": "IC_kwDOEKipmc47vCDu",
                    "body": "OK cool - I'll transfer to the Auth server to return both errors!",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-28T16:27:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/323#issuecomment-1002184942"
                },
                {
                    "id": "IC_kwDOEKipmc477y9p",
                    "body": "Hey @aquaductape, this isn't really an issue IMO, this is because the password is being checked before the email. Like @kiwicopple mentioned, we still do some minimal validation in gotrue but the client-side should be responsible for sanitising the form inputs before sending them to the API. \r\n\r\nImplementing this for other endpoints with more parameters isn't trivial as we have to have custom error messages for each permutation of query parameters sent in the request. \r\n\r\nIf I didn't miss out anything else, i'll be closing this issue for now - but feel free to let me know what you think!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-05T09:45:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/323#issuecomment-1005530985"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5BDF4y",
            "number": 325,
            "title": "Add Foursquare/Swarm OAuth Provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWould love to be able to authenticate users with Foursquare/Swarm\r\n\r\n## Describe alternatives you've considered\r\n\r\nCurrently using [passport-foursquare](https://github.com/jaredhanson/passport-foursquare)\r\n",
            "author": {
                "login": "alaq"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-30T22:29:58Z",
            "closedAt": "2022-04-19T02:07:16Z",
            "url": "https://github.com/supabase/gotrue/issues/325",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5BrfsN",
                    "body": "Hey all,\r\n\r\nWe plan on tracking all OAuth provider requests on https://github.com/supabase/gotrue/issues/451 so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:07:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/325#issuecomment-1101921037"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5BK43v",
            "number": 330,
            "title": "Email + password login not allowed due to email signup being disabled",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIt is possible to sign up a new user using the `supabase.auth.signUp` method. Once they are signed up, disabling the below pictured option prevents other users from signing up to the service:\r\n<img width=\"806\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6831144/147787314-a20d18b9-7657-43e8-8b9f-e47979ce6936.png\">\r\n\r\nThis is great as it allows service administrators to keep the service open to a limited set of users. They may even choose to never open any option of external signup and only manually invite users through the dashboard.\r\n\r\nHowever, with this option disabled, logging in of existing users ceases to work. Both in case of magic link and a password based token grant flow. The endpoint being called by supabase-js fails with a 400:\r\n<img width=\"183\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6831144/147787404-749ed5b2-a371-497b-9aad-fd26b0ac5da6.png\">\r\n\r\nThis response is the same for both magic link (endpoint is `auth/v1/magiclink`) and password based token auth (endpoint is `auth/v1/token?grant_type=password`).\r\n\r\n## To Reproduce\r\n\r\n1. Enable email signup in the dashboard\r\n2. Call `supabase.auth.signUp({ email, password })` and click the verification link in the email\r\n3. Disable email signup in the dashboard\r\n4. Call `supabase.auth.signIn({ email, password })`\r\n5. Observe a 400 non-OK response and `supabase.auth.user()` returning `null`\r\n6. Enable email signup in the dashboard\r\n7. Call `supabase.auth.signIn({ email, password })`\r\n8. Observe a 200 OK response and `supabase.auth.user()` returning an authorized user object\r\n\r\n## Expected behavior\r\n\r\nUser sign in should work regardless of the ability of new users to sign up. Site operators may choose to cease accepting registrations while still providing service to existing accounts.\r\n\r\n## System information\r\n\r\n- Version of supabase-js: 1.25.2\r\n\r\n## Additional context\r\n\r\nRelated discussion: https://github.com/supabase/supabase/discussions/4296\r\n\r\nThis is the problematic line: https://github.com/supabase/gotrue/blob/fa4b7e6435d4e88b19575a5e8b681fd6e6ef1794/api/token.go#L174\r\n\r\nI believe the fix might be to just yeet the whole condition, but I am not able to determine whether that might break something else? if anyone can confirm this condition can be safely removed without any adverse effects, I will be more than happy to PR.\r\n\r\nI opened the issue here as from the PoV of the Supabase user this is the SDK misbehaving, but an argument could be made this is an issue better suited for supabase/gotrue, so please move it as appropriate.",
            "author": {
                "login": "TomasHubelbauer"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-30T21:02:25Z",
            "closedAt": "2022-09-21T03:28:07Z",
            "url": "https://github.com/supabase/gotrue/issues/330",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc475G1W",
                    "body": "Yeah I would not have expected this to block logins too. I'll transfer this over to GoTrue - thanks for reporting @TomasHubelbauer ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-01-04T13:48:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/330#issuecomment-1004825942"
                },
                {
                    "id": "IC_kwDOEKipmc5KsbJH",
                    "body": "Closing since it's related to #190 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-21T03:28:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/330#issuecomment-1253159495"
                },
                {
                    "id": "IC_kwDOEKipmc5KsvfI",
                    "body": "@kangmingtay let me answer your question from the referenced issue here as it relates to this issue specifically. You asked me what the use case is for enabling email sign in but not email sign up. I've provided an example in the original issue description but I'm happy to expand.\n\nImagine you're working on an application that's meant for a limited audience, like an internal tool for a company or an invite only site. In this scenario, it is desirable to seed the database with the allowed users by hand or to temporarily allow sign ups and have everyone make their account normally, then review the accounts in the database and close sign ups. From this point on sign ins should still work so existing users can use the site, but new sign ups should be closed so no uninvited people can join and no malicious actors can disrupt the service by finding a way to make an account.\n\nThis is a real world use case I'm hoping to solve by having the sign up and sign in logic split as suggested in my original issue description. I ask that you reconsider closing this issue or at the very least please offer a suggestion for an alternative. One thing that comes to my mind is that there probably is a way to use Postgres RLS to effectively prevent sign ups somehow once the service administrator decides that's what they want to do. However, I'm less keen on doing it this way because it seems more error prone. A mistake in such a policy means an attacker can join the site and exfiltrate data. Shutting down email sign ups at \"Supabase level\" seems much more solid and final.\n\nI believe this ask while niche is useful enough to be reconsidered. It is an essential kit of functionality for any internal or invite based community website.",
                    "author": {
                        "login": "TomasHubelbauer"
                    },
                    "createdAt": "2022-09-21T06:01:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/330#issuecomment-1253242824"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5BSwEv",
            "number": 331,
            "title": "Add Quickbooks as an OAuth provider",
            "body": "feature request from a user",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-06T15:36:09Z",
            "closedAt": "2022-04-19T02:01:10Z",
            "url": "https://github.com/supabase/gotrue/issues/331",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5BrfDq",
                    "body": "Hey all, \r\n\r\nWe plan on tracking all OAuth provider requests on #451  so please feel free to follow along there instead.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:01:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/331#issuecomment-1101918442"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Blxcp",
            "number": 337,
            "title": "Enable \"select account\" in Microsoft OAuth flow",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\n(Using the JS supabase client)\r\nWhen signing in with Microsoft, the OAuth flow defaults to logging in with the last active Microsoft account.\r\nThis is a problem if the last active user is in a Microsoft directory that has not whitelisted the application, as they will simply be greeted with an error screen on the Microsoft login page.\r\nIt might also cause users to log in to the wrong account if they have multiple Microsoft accounts.\r\n\r\n## Describe the solution you'd like\r\n\r\nSupport for the `prompt` parameter that is documented [here](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow). A solution would be to enable additional per-provider configuration in the auth settings page when these kinds of parameters are relevant.\r\n\r\n\r\n## Additional context\r\n![image](https://user-images.githubusercontent.com/5922571/148638563-ee62c79c-0782-4910-bbe3-1794c3c9a1cc.png)\r\n",
            "author": {
                "login": "jarle"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-08T09:06:31Z",
            "closedAt": "2022-09-29T09:53:05Z",
            "url": "https://github.com/supabase/gotrue/issues/337",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LOUZj",
                    "body": "This issue is related to https://github.com/supabase/gotrue/issues/357. Please continue any discussion there.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T09:53:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/337#issuecomment-1262044771"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Bm7NM",
            "number": 338,
            "title": "Don't throw 'User not found' in resetPasswordForEmail",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nLess of a bug and more of a security concern. Right now `supabase.auth.api.resetPasswordForEmail` throws a \"User not found\" error when auth account doesn't exists in db. This can be abused to test list of emails agains auth db in order to figure out if particular email is a user of the app and launch phishing attacks against them.\r\n\r\nA clear and concise description of what the bug is.\r\n\r\n## To Reproduce\r\nJust call `supabase.auth.api.resetPasswordForEmail` with email that was never used to authenticate with your app.\r\n\r\n## Expected behavior\r\n\r\nShould return success even with invalid email and not send reset password email in user does not exist.\r\n\r\n## System information\r\n\r\n- OS: all\r\n- Browser: all\r\n- Version of supabase-js: 1.29.1\r\n- Version of Node.js: all",
            "author": {
                "login": "0xAsimetriq"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-10T11:46:49Z",
            "closedAt": "2022-02-24T04:49:01Z",
            "url": "https://github.com/supabase/gotrue/issues/338",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc48Mm2O",
                    "body": "This is a security defect and not only returning success anyway, the API should response in constant time to mitigate [user enumeration attack](https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account.html). The source code https://github.com/supabase/gotrue/blob/master/api/recover.go probably need some refactoring.\r\n\r\nRef: some best practices for password recovery: https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html",
                    "author": {
                        "login": "burmecia"
                    },
                    "createdAt": "2022-01-11T12:55:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/338#issuecomment-1009937806"
                },
                {
                    "id": "IC_kwDOEKipmc48SJjx",
                    "body": "Tranferring this to the Auth repo \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-01-12T19:42:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/338#issuecomment-1011390705"
                },
                {
                    "id": "IC_kwDOEKipmc4-jf9j",
                    "body": ":tada: This issue has been resolved in version 2.5.13 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.5.13)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-02-24T04:52:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/338#issuecomment-1049493347"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Bm8gI",
            "number": 339,
            "title": "New Auth provider: Orcid",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/4915\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **michi-zuri** January 10, 2022</sup>\r\nHi\r\n\r\nI'd like to publish an app that other researchers can contribute to without signing up to anything, just using the orcid credentials they have for publishing to journals. Could you please add Orcid to the OAuth providers?\r\n\r\nhttps://info.orcid.org/documentation/features/public-api/orcid-as-a-sign-in-option-to-your-system/\r\n\r\nAll the best and many thanks for the great work!</div>",
            "author": {
                "login": "michi-zuri"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-11T21:43:55Z",
            "closedAt": "2022-04-19T02:02:30Z",
            "url": "https://github.com/supabase/gotrue/issues/339",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc48SKsX",
                    "body": "Moving to the Auth repo!",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-01-12T19:49:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/339#issuecomment-1011395351"
                },
                {
                    "id": "IC_kwDOEKipmc5BrfMJ",
                    "body": "Hey all, \r\n\r\nWe plan on tracking all OAuth provider requests on #451  so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead. \r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:02:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/339#issuecomment-1101918985"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Bowtk",
            "number": 340,
            "title": "New OAuth Provider: Sign-in with Singpass",
            "body": "# Feature request\r\n* Sign-in with Singpass \r\n* https://api.singpass.gov.sg/library/identiface/developers/backend-oauth2-jws\r\n",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-13T04:52:05Z",
            "closedAt": "2022-04-19T02:05:54Z",
            "url": "https://github.com/supabase/gotrue/issues/340",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc481wWk",
                    "body": "@kangmingtay was on the supabase hangout with @thorwebdev and @awalias and I think we might want to hold off since the Gov might move to use [SGID](https://www.id.gov.sg/)",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-25T01:45:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/340#issuecomment-1020724644"
                },
                {
                    "id": "IC_kwDOEKipmc5BrfjI",
                    "body": "Hey all,\r\n\r\nWe plan on tracking all OAuth provider requests on https://github.com/supabase/gotrue/issues/451 so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:05:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/340#issuecomment-1101920456"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5BpvYv",
            "number": 341,
            "title": "Enable Google sign in with credentials to enable use of One Tap",
            "body": "\r\nCurrently Google login is only supported with a pop up provider. If you could pass optionally pass in a credential instead you could enable google one tap https://developers.google.com/identity/gsi/web/guides/overview",
            "author": {
                "login": "noahKind"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-12T16:24:39Z",
            "closedAt": "2022-09-29T09:50:51Z",
            "url": "https://github.com/supabase/gotrue/issues/341",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc483dpy",
                    "body": "@kiwicopple @J0 @noahKind\r\n\r\nSign In With Google - One Tap\r\nhttps://developers.google.com/identity/gsi/web/guides/overview\r\n\r\nThere is no need to modify the backend goture to make this work.\r\n\r\nThis issue is actually the same as this issue.\r\nhttps://github.com/supabase/gotrue-js/issues/169\r\n\r\nAnd there is already a pull request for it.\r\nhttps://github.com/supabase/gotrue-js/pull/207\r\n\r\nOnce this is merged, the Google One-Tap login functionality will be achieved.\r\n(A sample script is also available on this pull request page.)\r\n\r\nHowever, as you can see, we are facing unreasonable requests to create tests, and no progress is being made.\r\n\r\nWe would appreciate any help from anyone with merge privileges.\r\n\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-25T13:15:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/341#issuecomment-1021172338"
                },
                {
                    "id": "IC_kwDOEKipmc483g1J",
                    "body": "Heya @koba-ninkigumi \r\n\r\nThanks for the PR and note! Your contribution is important to us and I'm sorry to hear that progress has not been advancing at the rate that you would like. It can be frustrating to wait on a feature to be released when it seems like it's done especially after you have put substantial effort into it.  At the same time, I'm glad to hear that the two issues are actually one. Perhaps we can kill two birds with one PR :)\r\n\r\nDon't have context with respect to the PR but I'll take a look at the PR once a slot frees up. I will also table this for discussion during our Auth meeting tomorrow so that we can get back to you ASAP.\r\n\r\nIf you have immediate concerns, feel free to reach me at @J0 on Discord.\r\n\r\nThanks for your patience!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-25T13:31:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/341#issuecomment-1021185353"
                },
                {
                    "id": "IC_kwDOEKipmc483sTx",
                    "body": "@J0 \r\nThanks for the reply.\r\nI look forward to the progress of tomorrow's meeting.",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-01-25T14:22:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/341#issuecomment-1021232369"
                },
                {
                    "id": "IC_kwDOEKipmc49hWIy",
                    "body": "Seems like the [credential response](https://developers.google.com/identity/gsi/web/reference/js-reference#CredentialResponse) used in [One Tap](https://developers.google.com/identity/gsi/web/guides/overview#google_account_sign-in) doesn't include a nonce value. Unless there is a way for the nonce value to be included in the id token, the current `POST /token?grant_type=id_token` endpoint wouldn't work.\r\n\r\n@koba-ninkigumi any ideas?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-02-08T02:35:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/341#issuecomment-1032151602"
                },
                {
                    "id": "IC_kwDOEKipmc49hfqG",
                    "body": "@kangmingtay \r\n\r\nI've been using Google sign-in for a long time.\r\nMy PR is exactly what I wrote to solve this problem for myself.\r\n\r\nYou can find it at https://github.com/supabase/gotrue-js/pull/207\r\n\r\nAs already mentioned in this PR discussion, Google sign-in supports nonce.\r\n\r\nPlease refer to the following document.\r\n\r\nhttps://developers.google.com/identity/gsi/web/reference/html-reference#data-nonce\r\nhttps://developers.google.com/identity/gsi/web/reference/js-reference#nonce\r\n\r\n",
                    "author": {
                        "login": "koba-ninkigumi"
                    },
                    "createdAt": "2022-02-08T04:02:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/341#issuecomment-1032190598"
                },
                {
                    "id": "IC_kwDOEKipmc5LOTvg",
                    "body": "Since this has been fixed thanks to @koba-ninkigumi in https://github.com/supabase/gotrue-js/pull/207 I'll be closing this issue.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T09:50:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/341#issuecomment-1262042080"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5BztB2",
            "number": 344,
            "title": "Sending `appHash` to `signIn` for twilio based phone login.",
            "body": "# Feature request\r\n\r\nI am using [react-native-otp-verify](https://www.npmjs.com/package/react-native-otp-verify) package for automatic sms verification. I need to pass the app hash for it to work for twilio based on the documentation here https://www.twilio.com/docs/verify/api/verification. \r\n\r\n## Describe the solution you'd like\r\n\r\nAdding `appHash` parameter along with  `phone` in signIn method for twilio.",
            "author": {
                "login": "YajanaRao"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-14T18:06:55Z",
            "closedAt": "2022-05-31T02:14:30Z",
            "url": "https://github.com/supabase/gotrue/issues/344",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5EC2bj",
                    "body": "Duplicate of #357 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-31T02:14:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/344#issuecomment-1141597923"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5B7Ohh",
            "number": 348,
            "title": "Latest Release of `supabase/gotrue` returns a `null` session on `/token?grant_type=refresh_token`",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen POSTing to the `/token?grant_type=refresh_token` endpoint it now returns `null` instead of a session.\r\n\r\n## To Reproduce\r\n\r\nUsing the following `docker-compose.yml`:\r\n\r\n```yml\r\nversion: \"3\"\r\nservices:\r\n\r\n  gotrue:\r\n    image: supabase/gotrue:latest\r\n    ports:\r\n      - \"9999:9999\"\r\n    environment:\r\n      DATABASE_URL: \"postgres://postgres:postgres@db:5432/postgres?sslmode=disable\"\r\n      GOTRUE_JWT_SECRET: \"37c304f8-51aa-419a-a1af-06154e63707a\"\r\n      GOTRUE_JWT_EXP: 3600\r\n      GOTRUE_DB_DRIVER: postgres\r\n      DB_NAMESPACE: auth\r\n      API_EXTERNAL_URL: http://localhost\r\n      GOTRUE_API_HOST: 0.0.0.0\r\n      PORT: 9999\r\n      GOTRUE_DISABLE_SIGNUP: \"false\"\r\n      GOTRUE_SITE_URL: http://localhost\r\n      GOTRUE_LOG_LEVEL: DEBUG\r\n      GOTRUE_OPERATOR_TOKEN: super-secret-operator-token\r\n      GOTRUE_EXTERNAL_PHONE_ENABLED: 'true'\r\n      GOTRUE_MAILER_AUTOCONFIRM: \"true\"\r\n      GOTRUE_SMS_AUTOCONFIRM: 'true'\r\n      GOTRUE_SMS_PROVIDER: \"twilio\"\r\n\r\n    depends_on:\r\n      - db\r\n    restart: unless-stopped\r\n\r\n  db:\r\n    image: postgres:13\r\n    restart: unless-stopped\r\n    ports:\r\n      - \"5432:5432\"\r\n    volumes:\r\n      - ./GotrueTests/db:/docker-entrypoint-initdb.d/\r\n    environment:\r\n      POSTGRES_DB: postgres\r\n      POSTGRES_USER: postgres\r\n      POSTGRES_PASSWORD: postgres\r\n      POSTGRES_PORT: 5432\r\n```\r\n\r\nRunning:\r\n\r\n```bash\r\ncurl --location --request POST 'http://localhost:9999/signup' \\\r\n--header 'Content-Type: application/json' \\\r\n--data-raw '{\r\n    \"email\": \"testing@supabase.io\",\r\n    \"password\": \"super-secure-password\"\r\n}'\r\n```\r\n\r\nProduces:\r\n```json\r\n{\r\n    \"token_type\": \"bearer\",\r\n    \"expires_in\": 3600,\r\n    \"refresh_token\": \"08OhZcnl0ep_i1HbUVMyMQ\",\r\n   // ....\r\n}\r\n```\r\n\r\nThen taking the `refresh_token` from above:\r\n\r\n```bash\r\ncurl --location --request POST 'http://localhost:9999/token?grant_type=refresh_token' \\\r\n--header 'Content-Type: application/json' \\\r\n--data-raw '{\r\n    \"refresh_token\": \"08OhZcnl0ep_i1HbUVMyMQ\"\r\n}'\r\n```\r\n\r\nProduces:\r\n```json\r\nnull\r\n```\r\n\r\n## Expected behavior\r\n\r\nEndpoint should return a session\r\n\r\n## System information\r\n\r\n- Gotrue 2.3.7 (latest)\r\n- OS: Docker\r\n\r\n## Additional context\r\n\r\nRef: supabase-community/gotrue-csharp#25\r\n",
            "author": {
                "login": "acupofjose"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-17T16:17:27Z",
            "closedAt": "2022-01-19T02:15:49Z",
            "url": "https://github.com/supabase/gotrue/issues/348",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc48jyJp",
                    "body": "fixed in #349 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-19T02:15:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/348#issuecomment-1016013417"
                },
                {
                    "id": "IC_kwDOEKipmc48lfAW",
                    "body": "Thanks @kangmingtay!",
                    "author": {
                        "login": "acupofjose"
                    },
                    "createdAt": "2022-01-19T13:20:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/348#issuecomment-1016459286"
                },
                {
                    "id": "IC_kwDOEKipmc49GssK",
                    "body": "I'm still observing the issue in `v2.3.8`\r\n\r\n<img width=\"1195\" alt=\"Screen Shot 2022-01-30 at 6 18 43 PM\" src=\"https://user-images.githubusercontent.com/46427323/151705739-736e8422-e67d-4c85-b795-dc41fc8b98c1.png\">\r\n ",
                    "author": {
                        "login": "osaxma"
                    },
                    "createdAt": "2022-01-30T15:22:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/348#issuecomment-1025166090"
                },
                {
                    "id": "IC_kwDOEKipmc49G-qT",
                    "body": "My bad for the noise -- i just realized the cli isn't using the latest image. ",
                    "author": {
                        "login": "osaxma"
                    },
                    "createdAt": "2022-01-30T21:50:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/348#issuecomment-1025239699"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5B_sse",
            "number": 350,
            "title": "Adding Global.Id as OAuth Provider",
            "body": "# Feature request\r\nWould it be possible to add global.id as OAuth Provider?\r\n[Link to homepage](https://global.id)\r\n[Link to docs](https://developer.global.id/documentation/index.html)\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nLetting users in with a privacy-friendly OAuth Provider while accessing/verifying user data in a privacy-friendly manner if required.\r\nFor (at least currently) no cost.\r\n\r\n## Describe the solution you'd like\r\n\r\nAdding global.id as sign-in/up option and storing requested data in the user metadata.\r\n\r\n## Describe alternatives you've considered\r\n\r\nDidn't really find a good alternative to this provider.\r\n\r\n## Additional context\r\n\r\nI would like to implement that but I have never used go before, nor do I have a clue on how to integrate it in the existing codebase.\r\nAlso, the global.id docs are somewhat odd and I've never really dealt with implementing OAuth.\r\nMaybe it can be done similar to using Auth0 but instead, use global.id but idk. [Article about Supabase with Auth0](https://supabase.com/docs/guides/integrations/auth0)\r\n",
            "author": {
                "login": "Flajt"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-18T18:13:41Z",
            "closedAt": "2022-04-19T02:05:05Z",
            "url": "https://github.com/supabase/gotrue/issues/350",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5BrfdA",
                    "body": "Hey all,\r\n\r\nWe plan on tracking all OAuth provider requests on https://github.com/supabase/gotrue/issues/451 so we'll be closing this issue in favor of the thread instead. Please feel free to follow along there instead.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:05:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/350#issuecomment-1101920064"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5CM-iJ",
            "number": 354,
            "title": "Auth password allowed characters",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/5065\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **b14ckkn19ht** January 19, 2022</sup>\r\nHello,\r\n\r\nI've made the observation that e.g. registering with a \"+\" in the password will lead to an successfull signup, but later the user can not sign in with his password.\r\nI've tried to look for a list of characters in the documentation, however I only found such a list for the postgres password.\r\n\r\nWhich characters are allowed in a user password?\r\nWhere is this information documented?\r\nOr do I have a problem with the usage of the supabase-js client?\r\n\r\n\r\nBest regards </div>",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-21T17:03:16Z",
            "closedAt": "2022-04-19T06:58:08Z",
            "url": "https://github.com/supabase/gotrue/issues/354",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49Kq00",
                    "body": "I couldn't reproduce this issue at my local",
                    "author": {
                        "login": "mustafaTokmak"
                    },
                    "createdAt": "2022-01-31T21:03:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/354#issuecomment-1026207028"
                },
                {
                    "id": "IC_kwDOEKipmc5Bsa0r",
                    "body": "I couldn't quite reproduce this issue when testing on a Supabase instance with the password: `example+password` the audit log and the browser both seem to indicate that the sign up went through. It's possible that the user is using a keyboard with a different character set where '+' is slightly different(much like how \" is different on english and chinese keyboards)\r\n\r\nNeed more information though. Going to close this for now -- feel free to re-open if there are further issues.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T06:58:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/354#issuecomment-1102163243"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5CSTkp",
            "number": 356,
            "title": "Add Coinbase OAuth",
            "body": "# Feature request\r\n- Sign in with Coinbase\r\n- See: https://developers.coinbase.com/docs/wallet/coinbase-connect/integrating",
            "author": {
                "login": "J0"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-24T02:30:52Z",
            "closedAt": "2022-04-19T02:03:53Z",
            "url": "https://github.com/supabase/gotrue/issues/356",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5CY9iF",
            "number": 357,
            "title": "Ability to pass additional URL params to OAuth providers",
            "body": "# Feature request\r\n\r\nAbility to send additional parameters to OAuth providers (e.g. would love to use &hd=domain.tld and &hint=example@domain.tld parameters with Google OAuth. Simple passthrough of parameters would suffice (namespaced or not).\r\n",
            "author": {
                "login": "lauri865"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-23T00:29:16Z",
            "closedAt": "2022-10-21T03:52:08Z",
            "url": "https://github.com/supabase/gotrue/issues/357",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc483Wyr",
                    "body": "thanks @lauri865 - I'll shift this one over to the Auth repo",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-01-25T12:38:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1021144235"
                },
                {
                    "id": "IC_kwDOEKipmc489qoi",
                    "body": "Hi @lauri865, have you tried passing query parameters via the redirect url? IIRC this should work `https://project_ref.supabase.co/auth/v1/authorize?provider=google&redirect_to=my_redirect_url.com?query_param=1` \r\n\r\nYou will have to add `my_redirect_url.com` to the \"Additional Redirect URLs\" list but you dont have to include the query params. \r\n\r\nLet me know if this works for you!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-27T02:56:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1022798370"
                },
                {
                    "id": "IC_kwDOEKipmc49BLav",
                    "body": "That wouldn\u2019t really pass params to the oauth provider, would it? Just the redirect/callback.",
                    "author": {
                        "login": "lauri865"
                    },
                    "createdAt": "2022-01-27T23:00:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1023719087"
                },
                {
                    "id": "IC_kwDOEKipmc49FvU7",
                    "body": "oh i see what you mean, yeah it wouldn't. Unfortunately, we only allow passing of scopes as query params to the oauth provider for now",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-29T13:45:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1024914747"
                },
                {
                    "id": "IC_kwDOEKipmc5CCJGq",
                    "body": "@kangmingtay, I really love Supabase and have been testing it for use in my app. However this issue is currently my biggest holdup.\r\n\r\nCertain query params are quite a basic need when using specific providers (other than just redirectUri and scopes)\r\n\r\nConsider my use case:\r\n\r\nI really need the user signing in using Google on Chrome Android to be able to choose from existing logged-in Google accts or add a different one if not exists (even when there is only one acct currently logged in), this is currently only possible when passing a `prompt=select_account` query string in the authorization URL, otherwise the one logged-in Google acct gets immediately authenticated, which is unwanted behavior (see [here](https://developers.google.com/identity/protocols/oauth2/javascript-implicit-flow#oauth-2.0-endpoints_1)).\r\n\r\nAdditionally - and this is maybe not as important - Google recommends using the `state` queryParam which is also currently impossible. \r\n\r\nBesides my specific case - in general - the ergonomics of locking-in use of myriad auth providers each with a wide array of different options to just 2 params sounds neat, but in reality - to be useful - there needs to be a way to use the auth providers' respective features fully.\r\n",
                    "author": {
                        "login": "roseMix"
                    },
                    "createdAt": "2022-04-24T14:57:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1107857834"
                },
                {
                    "id": "IC_kwDOEKipmc5CaVbQ",
                    "body": "Passing through URL query parameters is possible (and is currently being done for the WorkOS provider). The question is whether GoTrue should always attempt to pass through all query parameters automatically (apart from those that GoTrue uses), or hardcode a list of query parameters for each provider to pass through (which can be more troublesome, but avoids sending invalid requests to the providers).\r\n\r\nThe `state` query parameter is currently being used by GoTrue itself to store its own state, so it might need a bit of tweaking if client's state should be persisted as well.",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2022-05-01T10:49:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1114199760"
                },
                {
                    "id": "IC_kwDOEKipmc5CbVek",
                    "body": "> hardcode a list of query parameters for each provider to pass through (which can be more troublesome\r\n\r\nI understand you mean because it will need to be constantly validated against the auth providers accepted params. Given that it's currently not possible to use most of the auth providers to their fullest I believe this is not a significant tradeoff, most providers are quite straightforward about these and mostly they don't get changed very often. Additionally, not all providers need to offer it (at least not immediately).\r\n\r\nMaybe an alternative solution would be to add and optional flag to pass through all query params to auth provider (at your own risk of getting rejected by the provider).",
                    "author": {
                        "login": "roseMix"
                    },
                    "createdAt": "2022-05-02T03:29:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1114462116"
                },
                {
                    "id": "IC_kwDOEKipmc5HNkVc",
                    "body": "Any news? \ud83d\ude4f",
                    "author": {
                        "login": "lauri865"
                    },
                    "createdAt": "2022-07-25T22:55:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1194739036"
                },
                {
                    "id": "IC_kwDOEKipmc5HRTa8",
                    "body": "Also interested in hearing if there are any news regarding this! I'm myself planning to use Discord login, however not being able to pass in `prompt=none` is kind of a turn off (among with other stuff, e.g. no access to provider refresh tokens).",
                    "author": {
                        "login": "laznic"
                    },
                    "createdAt": "2022-07-26T16:38:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1195718332"
                },
                {
                    "id": "IC_kwDOEKipmc5HWXc5",
                    "body": "This is also a blocker for me. Specifically, I really need to pass `prompt: select_account` to the Google OAuth provider.",
                    "author": {
                        "login": "ralrom"
                    },
                    "createdAt": "2022-07-27T16:58:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1197045561"
                },
                {
                    "id": "IC_kwDOEKipmc5HYgBj",
                    "body": "> hardcode a list of query parameters for each provider to pass through (which can be more troublesome, but avoids sending invalid requests to the providers)\r\n\r\nIMO this would work best since it is cheap to implement. Plus, the community can easily keep the list of parameters up to date since it'll just be an array of strings.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-07-28T03:13:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1197604963"
                },
                {
                    "id": "IC_kwDOEKipmc5LOUCp",
                    "body": "Please take a look at https://github.com/supabase/gotrue/issues/341 for some similar logic with Google as a provider.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T09:51:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1262043305"
                },
                {
                    "id": "IC_kwDOEKipmc5MrUNH",
                    "body": "hey everyone, this should now be possible since https://github.com/supabase/gotrue/pull/757! thanks for everyone's patience! \r\n\r\ndisclaimer: it will be rolled out to all hosted supabase projects over the coming week or so ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-10-21T03:52:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/357#issuecomment-1286423367"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Cb8j8",
            "number": 361,
            "title": "Generate custom link for change email confirmation",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/5125\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **haydn** January 24, 2022</sup>\r\nWe're generating all our own emails and injecting links created with the `generateLink()` function. (This is so we can fully personalise the emails and so they match the other emails we send out.) However, I'm not sure how to get this working for the confirmation emails sent when a user's email address is changed. It seems like those emails are only ever sent as a side-effect of changing a user's email with `updateUser()` and the only way to customise those emails is via config.\r\n\r\nSo, my questions are:\r\n\r\n1. How do we generate the custom links for email change confirmations?\r\n2. How do we prevent the default emails from being sent out when a user is updated?</div>",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-26T04:40:39Z",
            "closedAt": "2022-09-28T08:47:49Z",
            "url": "https://github.com/supabase/gotrue/issues/361",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4898Ut",
                    "body": "@kangmingtay Thanks for getting this onto the backlog. I've put some context and ideas below.\r\n\r\n# Our use case\r\n\r\nWe (@WorkniceHR) are using the `POST /admin/generate_link` endpoint (via the [gotrue-js client](https://github.com/supabase/gotrue-js)) to populate links in custom emails we send out when inviting users, resetting passwords, confirming account creation etc. The templates for these emails are part of our codebase (not configuration) so that we can fully personalise them with the user's name, organisation, branding etc.\r\n\r\nThe one scenario where we can't send out fully custom emails is when a user updates their email address and need to confirm their old and new addresses. We'd like to be able to use the `POST /admin/generate_link` endpoint (or similar) for this too instead of relying on configured email templates.\r\n\r\n# Problems to solve\r\n\r\n## Disable the automatically sent emails\r\n\r\nThe confirmation emails are currently sent out as a side-effect of editing the user. If we're generating our own link and sending them ourselves we don't won't confirmations email getting sent automatically.\r\n\r\nThis change seems fairly straightforward. Either a config variable can be added (something like `MAILER_DISABLE_AUTO_CONFIRM_ON_EMAIL_CHANGE`) or an `options` field can be added to the `PUT /user` endpoint:\r\n\r\n```\r\n# PUT /user\r\n{\r\n  \"email\": \"new-email@example.com\",\r\n  \"options\": {\r\n    \"sendConfirmationEmails\": false,\r\n  }\r\n}\r\n```\r\n\r\nI think I prefer the addition of an `option` field as it feels closer to the existing API design.\r\n\r\n## Generate links for email confirmation\r\n\r\nThe exisiting `POST /admin/generate_link` endpoint doesn't lend itself naturally to this use. The biggest difference seems to be the need to generate multiple links (one to confirm the old address and one for the new address). I'm not familiar enough with GoTrue to understand all the trade-offs, but intuitively it feels like a separate `PUT /user/email` endpoint for changing email addresses makes sense (and can be backwards compatible).\r\n",
                    "author": {
                        "login": "haydn"
                    },
                    "createdAt": "2022-01-27T05:50:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1022870829"
                },
                {
                    "id": "IC_kwDOEKipmc49Fwgd",
                    "body": "For anyone who's keen on attempting this, else we'll get to fixing / adding this soon:\r\n\r\n1. Need an additional `type=email_change` for the `POST /admin/generate_link` endpoint to allow developers to generate their own email change links\r\n     a. Need to include the secure option where 2 links are generated (one for the old email, and one for the new email)\r\n2. `PUT /user/email` should accept a query param (`shouldSendEmail`) to allow disabling sending of email confirmation links if the email is updated. (Note that this doesn't imply that the user should be automatically confirmed - it just prevents gotrue from sending out the email confirmation link and (1) needs to be carried out else the user's new email will remain unconfirmed) \r\n\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-29T14:12:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1024919581"
                },
                {
                    "id": "IC_kwDOEKipmc49HKPw",
                    "body": "> For anyone who's keen on attempting this, else we'll get to fixing / adding this soon:\r\n> \r\n> 1. Need an additional `type=email_change` for the `POST /admin/generate_link` endpoint to allow developers to generate their own email change links\r\n>    a. Need to include the secure option where 2 links are generated (one for the old email, and one for the new email)\r\n> 2. `PUT /user/email` should accept a query param (`shouldSendEmail`) to allow disabling sending of email confirmation links if the email is updated. (Note that this doesn't imply that the user should be automatically confirmed - it just prevents gotrue from sending out the email confirmation link and (1) needs to be carried out else the user's new email will remain unconfirmed)\r\n\r\nI opened a PR(#365) for this issue, but that is not exactly like this, but I will modify again.",
                    "author": {
                        "login": "mustafaTokmak"
                    },
                    "createdAt": "2022-01-31T01:08:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1025287152"
                },
                {
                    "id": "IC_kwDOEKipmc49KGic",
                    "body": "PR is ready for review \r\n\r\n> > For anyone who's keen on attempting this, else we'll get to fixing / adding this soon:\r\n> > \r\n> > 1. Need an additional `type=email_change` for the `POST /admin/generate_link` endpoint to allow developers to generate their own email change links\r\n> >    a. Need to include the secure option where 2 links are generated (one for the old email, and one for the new email)\r\n> > 2. `PUT /user/email` should accept a query param (`shouldSendEmail`) to allow disabling sending of email confirmation links if the email is updated. (Note that this doesn't imply that the user should be automatically confirmed - it just prevents gotrue from sending out the email confirmation link and (1) needs to be carried out else the user's new email will remain unconfirmed)\r\n> \r\n> I opened a PR(#365) for this issue, but that is not exactly like this, but I will modify again.\r\n\r\n",
                    "author": {
                        "login": "mustafaTokmak"
                    },
                    "createdAt": "2022-01-31T18:04:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1026058396"
                },
                {
                    "id": "IC_kwDOEKipmc5LIwrw",
                    "body": "Hey support for this was added in #560.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T08:47:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1260587760"
                },
                {
                    "id": "IC_kwDOEKipmc5OXGly",
                    "body": "@haydn not sure if this is the right place for this but what is the email provider / setup that you are using to do this? I would love to do the same.",
                    "author": {
                        "login": "ForgeSolutions-JBrenner"
                    },
                    "createdAt": "2022-11-15T02:34:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1314679154"
                },
                {
                    "id": "IC_kwDOEKipmc5OXOpb",
                    "body": "Hey @ForgeSolutions-JBrenner, no problem!\r\n\r\nIt's a [Next.js](https://nextjs.org/) app hosted on [Vercel](https://vercel.com/). We're using [Postmark](https://postmarkapp.com/) for email delivery and [MJML](https://mjml.io/) to generate the email HTML.\r\n\r\nHere's what an \"invite\" email looks like with this setup:\r\n\r\n```jsx\r\nconst InviteEmail = ({\r\n  accountName,\r\n  accountLogo,\r\n  recipientName,\r\n  acceptUrl,\r\n  color = \"#90116e\",\r\n}: Props) => (\r\n  <Mjml>\r\n    <MjmlHead>\r\n      <MjmlTitle>{`You've been invited to ${accountName}`}</MjmlTitle>\r\n      <MjmlAttributes>\r\n        <MjmlButton\r\n          backgroundColor={color}\r\n          borderRadius={6}\r\n          padding={20}\r\n        />\r\n        <MjmlText align=\"center\" />\r\n      </MjmlAttributes>\r\n    </MjmlHead>\r\n    <MjmlBody>\r\n      <MjmlSection>\r\n        <MjmlColumn>\r\n          {accountLogo ? (\r\n            <MjmlImage\r\n              src={accountLogo}\r\n              width={360}\r\n              alt={accountName}\r\n              href=\"https://worknice.com\"\r\n            />\r\n          ) : null}\r\n          <MjmlText>\r\n            <h1>\r\n              You&apos;ve been invited to\r\n              <br />\r\n              {accountName}\r\n            </h1>\r\n          </MjmlText>\r\n          <MjmlText>\r\n            <p>\r\n              Hi {recipientName}, {accountName} uses Worknice to manage its HR. You&apos;ve been\r\n              invited to create an account.\r\n            </p>\r\n          </MjmlText>\r\n          <MjmlButton href={acceptUrl}>Create Your Account</MjmlButton>\r\n        </MjmlColumn>\r\n      </MjmlSection>\r\n    </MjmlBody>\r\n  </Mjml>\r\n);\r\n```\r\n\r\nSending an invite email is along these lines:\r\n\r\n```js\r\nimport { ServerClient } from \"postmark\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { render } from \"mjml-react\";\r\n\r\nconst postmark = new ServerClient(POSTMARK_TOKEN);\r\nconst supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nconst email = \"jane.doe@example.com\";\r\n\r\nawait supabase.auth.api.createUser({ email });\r\nconst { data: linkData } = await supabase.auth.api.generateLink(\r\n  \"invite\",\r\n  email\r\n);\r\n\r\nconst { html } = render(\r\n  <InviteEmail\r\n    accountName=\"Example\"\r\n    accountLogo=\"https://www.placecage.com/360/270\"\r\n    recipientName=\"Jane Doe\"\r\n    acceptUrl={`${BASE_URL}/accept-invite#otp=${\r\n      linkData.email_otp\r\n    }&email=${encodeURIComponent(email)}`}\r\n  />,\r\n  { validationLevel: \"strict\" }\r\n);\r\n\r\nawait postmark.sendEmail({\r\n  From: \"noreply@worknice.com\",\r\n  To: email,\r\n  Subject: \"You've been invited to Example\",\r\n  HtmlBody: html,\r\n  MessageStream: \"outbound\",\r\n});\r\n```\r\n\r\nVerifying the OTP once the user has followed the link in the email is like this:\r\n\r\n```js\r\nawait supabase.auth.api.verifyOTP({\r\n  email,\r\n  token: otp,\r\n  type: \"invite\",\r\n});\r\n```\r\n\r\n(NB: This is using `supabase-js` v1, I'm assuming the API has changed a bit in v2.)",
                    "author": {
                        "login": "haydn"
                    },
                    "createdAt": "2022-11-15T03:27:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1314712155"
                },
                {
                    "id": "IC_kwDOEKipmc5OXTri",
                    "body": "@haydn Thank you so much for this! You are the absolute best \ud83e\udd13",
                    "author": {
                        "login": "ForgeSolutions-JBrenner"
                    },
                    "createdAt": "2022-11-15T03:53:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/361#issuecomment-1314732770"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ClKkM",
            "number": 363,
            "title": "Add Kakao Oauth",
            "body": "Requested on: https://github.com/supabase/supabase/discussions/5200\r\n\r\nDeveloper docs: https://developers.kakao.com/product/kakaoLogin",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-28T06:12:18Z",
            "closedAt": "2022-04-19T02:22:42Z",
            "url": "https://github.com/supabase/gotrue/issues/363",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49Hz-t",
                    "body": "Corresponding PR: #366 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-01-31T07:42:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/363#issuecomment-1025458093"
                },
                {
                    "id": "IC_kwDOEKipmc5Brhby",
                    "body": "Tracking on #451 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:22:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/363#issuecomment-1101928178"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5CqFyV",
            "number": 364,
            "title": "Implement Patreon as an external provider ",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nSupport Patreon oauth.\r\n\r\n## Describe the solution you'd like\r\n\r\nSee feature request <https://github.com/netlify/gotrue/issues/312>\r\n",
            "author": {
                "login": "millette"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-29T21:21:31Z",
            "closedAt": "2022-04-19T01:59:52Z",
            "url": "https://github.com/supabase/gotrue/issues/364",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Bre6w",
                    "body": "Hey all,\r\n\r\nWe're going to track all provider requests on #451 so we'll be closing this issue for now -- feel free to follow along there instead.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T01:59:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/364#issuecomment-1101917872"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5CyQID",
            "number": 367,
            "title": "Using Supabase as an OAuth Provider/Authenticate with 3rd Parties",
            "body": "# Feature request\r\n\r\nI am working on a project that gives users the ability to programmatically add and retrieve user-specific content, and integrate with the API in third-party tools like Zapier (or their own applications). \r\nAs an example, I have the table `user_content` with fields `user_id, title, content`. The user now should be able to use Zapier to write a row into `user_content`. \r\nA developer may also want to offer my user the ability to retrieve the user's content in the developer's app. \r\n\r\n## Describe the solution you'd like\r\n\r\nIdeally, Supabase is able to act as an OAuth provider. Then, users can authenticate apps like Zapier using a normal OAuth flow.\r\n\r\n## Describe alternatives you've considered\r\n\r\n* Generating an API Key\u2014users can generate an API key, perhaps with restrictions to specific domains\r\n\r\nCurrently, users would need to provide the apps with username and password, which would need to be stored verbatim(ish)\u2014too much of a security risk.\r\n\r\n## Additional context\r\n\r\nA rudimentary example of the app can be found on [Discord](https://discord.com/channels/839993398554656828/932929319049781259/936558887241388043)\r\n",
            "author": {
                "login": "henningko"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-01T10:13:10Z",
            "closedAt": "2022-09-29T10:10:12Z",
            "url": "https://github.com/supabase/gotrue/issues/367",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49i7CG",
                    "body": "Would be interested in this option as well.",
                    "author": {
                        "login": "tourbillonlabs"
                    },
                    "createdAt": "2022-02-08T12:39:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/367#issuecomment-1032564870"
                },
                {
                    "id": "IC_kwDOEKipmc5LIxRx",
                    "body": "At this time we're not planning on making GoTrue a compatible identity provider both for OAuth, OIDC or SAML. It is a long-term aspiration for GoTrue to have features like this.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T08:50:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/367#issuecomment-1260590193"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5C2wIl",
            "number": 368,
            "title": "Email client previewing links expires confirmation/reset/invite tokens",
            "body": "report from a user that some email clients are doing link scanning/preview and consuming the verification tokens - rendering them stale for the users\r\n\r\n~one approach is to check the UA for bots, scanners, and crawlers to GET requests to `/verify` to prevent this~\r\n[checking UA doesn't work for Mac mail client](https://github.com/supabase/gotrue/pull/369#issuecomment-1027945404)",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-02T08:41:36Z",
            "closedAt": "2022-03-22T20:44:57Z",
            "url": "https://github.com/supabase/gotrue/issues/368",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49T-n7",
                    "body": "one workaround I thought of is change the email template to point to a new page in your app with a big button \u201cAccept Invite\u201d and pass the ConfirmationURL as a query param.\r\n\r\ne.g.\r\n```html\r\n<h2>You have been invited</h2>\r\n\r\n<p>You have been invited to create a user on {{ .SiteURL }}. Follow this link to accept the invite:</p>\r\n<p><a href=\"{{ .SiteURL }}/accept-invite?invite_link={{ .ConfirmationURL }}\">Accept the invite</a></p>\r\n```\r\n\r\nThen the button takes the url from the query param as it\u2019s href\r\n\r\n**WARNING**: the code in your app that plucks the ConfirmationURL out of the query param should validate it before setting it as the href of the button (otherwise it\u2019s vulnerable to [CSRF](https://portswigger.net/web-security/csrf))\r\n\r\nalso validate that the url from the query matches the https scheme and it is the supabase domain. else you might also be exposed to dom-based xss attacks (where someone sends ?[https://app?confirmationURL=javascript:alert(1)](https://app/?confirmationURL=javascript:alert(1)) for example",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-02-03T06:37:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1028647419"
                },
                {
                    "id": "IC_kwDOEKipmc49ckiM",
                    "body": "This error is happening to me, maybe the workaround works well, but the user experience will be not the best. Is there an idea about what way follow to solve the issue? Thanks in advance.",
                    "author": {
                        "login": "leynier"
                    },
                    "createdAt": "2022-02-06T19:41:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1030899852"
                },
                {
                    "id": "IC_kwDOEKipmc49hiR0",
                    "body": "Hey @leynier, we're currently working on sending both the confirmation url and an OTP for all links. That way, you can choose to omit the `ConfirmationURL` from the template and use the OTP to verify your users instead. This would work similar to the phone auth verification. \r\n\r\nThe default template will be something like the following: \r\n```\r\n<h2>Confirm your email</h2>\r\n\r\n<p>Follow this link to confirm your email:</p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">Confirm your email address</a></p>\r\n<p>Alternatively, enter the code: {{ .Token }}</p>\r\n\r\n```\r\n\r\nLet know me know if this helps!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-02-08T04:24:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1032201332"
                },
                {
                    "id": "IC_kwDOEKipmc49lupP",
                    "body": "> Hey @leynier, we're currently working on sending both the confirmation url and an OTP for all links. That way, you can choose to omit the `ConfirmationURL` from the template and use the OTP to verify your users instead. This would work similar to the phone auth verification.\r\n> \r\n> The default template will be something like the following:\r\n> \r\n> ```\r\n> <h2>Confirm your email</h2>\r\n> \r\n> <p>Follow this link to confirm your email:</p>\r\n> <p><a href=\"{{ .ConfirmationURL }}\">Confirm your email address</a></p>\r\n> <p>Alternatively, enter the code: {{ .Token }}</p>\r\n> ```\r\n> \r\n> Let know me know if this helps!\r\n\r\nYes, that will help. Thanks a lot.",
                    "author": {
                        "login": "leynier"
                    },
                    "createdAt": "2022-02-09T03:14:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1033300559"
                },
                {
                    "id": "IC_kwDOEKipmc5AHKno",
                    "body": "just an update, we've added [this functionality](https://github.com/supabase/gotrue-js/pull/251) to the latest version of gotrue-js as well, gonna close issue for now and feel free to let me know if there are any issues!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-03-22T20:44:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1075620328"
                },
                {
                    "id": "IC_kwDOEKipmc5BO71H",
                    "body": "@kangmingtay We've hit this problem (the customer has some kind of security in place that accesses all the links in an email before it even makes it to their inbox). The solution here sounds great, however, we're using `POST /admin/generate_link` and sending our own emails instead of using the built-in emailing. Is there a way we can access the `{{ .Token }}` when using `POST /admin/generate_link`? That endpoint appears to only return the `{{ .ConfirmationURL }}` as `action_link`.",
                    "author": {
                        "login": "haydn"
                    },
                    "createdAt": "2022-04-11T00:55:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1094434119"
                },
                {
                    "id": "IC_kwDOEKipmc5Bmxvs",
                    "body": "Hey @haydn, right now, there isn't an easy way to get the `{{ .Token }}` when using `POST /admin/generate_link` but you can extract it from the url link returned by parsing the `token` query param",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-04-16T15:04:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1100684268"
                },
                {
                    "id": "IC_kwDOEKipmc5BofCl",
                    "body": "@kangmingtay Thanks for the info! What is that token in the database? Could I grab it directly from there? I guess I'm wondering if I even need to be using the `POST /admin/generate_link` endpoint for this setup.",
                    "author": {
                        "login": "haydn"
                    },
                    "createdAt": "2022-04-18T06:16:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1101131941"
                },
                {
                    "id": "IC_kwDOEKipmc5BqI_J",
                    "body": "@haydn yup you could\r\n\r\nsignup / invite -> confirmation_token\r\nrecovery / magiclink -> recovery_token\r\nemail change -> email_change_token_current / email_change_token_new\r\nphone change -> phone_change_token\r\nreauthentication for password updates -> reauthentication_token",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-04-18T16:59:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/368#issuecomment-1101565897"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5C82H1",
            "number": 370,
            "title": "Keycloak OAuth Provider",
            "body": "# Feature request\r\n\r\n## Describe the solution you'd like\r\n\r\nWould like to use Keycloak as an OAuth provider.\r\n\r\n## Describe alternatives you've considered\r\n\r\nTried using SAML but ran into issues/bugs in combination with Keycloak\r\n\r\n",
            "author": {
                "login": "fspijkerman"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-03T15:46:58Z",
            "closedAt": "2022-03-08T14:18:46Z",
            "url": "https://github.com/supabase/gotrue/issues/370",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4_Sjx2",
                    "body": ":tada: This issue has been resolved in version 2.6.3 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.6.3)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-03-08T14:21:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/370#issuecomment-1061829750"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5DCL1z",
            "number": 374,
            "title": "Facebook OAuth not working",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen using Facebook OAuth to login with a test user (someone other than the admin who created the Facebook App), I am getting an error and unable to login. \r\n\r\nEither I receive:\r\n`\r\n{\r\n  \"message\":\"An invalid response was received from the upstream server\"\r\n}`\r\n\r\nOr: \"error=server_error&error_description=Error+getting+user+email+from+external+provider\"\r\n\r\nI know that the the issue with the latter error is a user not having an email address (#214 ), but if you create a test user in Facebook, they do have email addresses.\r\n\r\nI have tested this with another Facebook account I have created that wasn't a \"test user\" per se, and same thing happened. \r\n\r\n## To Reproduce\r\n\r\nYou will have to create your own Facebook App. *You can see the error locally, so no need to deploy it yourself.\r\n\r\nI just followed these guides to create a quick app and Facebook Login:\r\n[Next.js App](https://supabase.com/docs/guides/with-nextjs)\r\n[Facebook Login](https://supabase.com/docs/guides/auth/auth-facebook)\r\n\r\nSo the steps would be...\r\n1. Create an app (I created a Next js one)\r\n2. Implement Facebook Login\r\n3. Login with your admin user. Everything should be fine.\r\n4. Try logging in with a test user by going to Roles > Test users > Create Test Users. Then try logging into your app with that test user. \r\n5. Should see an error. \r\n\r\nHeres a loom [video](https://www.loom.com/share/ec7e3632c42e40c59b1c3229b72720bd)\r\n\r\n## Expected behavior\r\nShould not see error and should redirect you to /accounts page. And when you revisit the home page, it should remember your session and not prompt you to login.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS:  macOS\r\n- Browser: chrome\r\n- Version of supabase-js: `@supabase/supabase-js\": \"^1.30.0`\r\n- Version of Node.js: v16.13.0\r\n\r\n## Additional context\r\n\r\n",
            "author": {
                "login": "adrianhorning08"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-04T21:47:44Z",
            "closedAt": "2022-05-06T07:36:45Z",
            "url": "https://github.com/supabase/gotrue/issues/374",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49ceD5",
                    "body": "hey! same happens with Google provider in my case.",
                    "author": {
                        "login": "matepapp"
                    },
                    "createdAt": "2022-02-06T17:06:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1030873337"
                },
                {
                    "id": "IC_kwDOEKipmc49dKYq",
                    "body": "taking a look, thanks for the great repro steps and vid @adrianhorning08 ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-02-07T04:14:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1031054890"
                },
                {
                    "id": "IC_kwDOEKipmc49nHwI",
                    "body": "hey @matepapp and @adrianhorning08, we have investigated the issue with this error `{ \"message\":\"An invalid response was received from the upstream server\" }` and I am able to reproduce this error with Facebook logins using a test user, but it seems to work fine with the admin user as you suggested.\r\n\r\nThe reason this happens is because we started setting the tokens in the cookies as of [this PR](https://github.com/supabase/gotrue/pull/351) which resulted in the header size exceeding the limits enforced by the API gateway. We're working on a fix for this and will notify you guys once it's out!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-02-09T11:35:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1033665544"
                },
                {
                    "id": "IC_kwDOEKipmc49og0O",
                    "body": "hey @kangmingtay, \r\n\r\nthanks for the quick and detailed response and also for the investigation. take your time and let us know how it goes \ud83d\udcaa ",
                    "author": {
                        "login": "matepapp"
                    },
                    "createdAt": "2022-02-09T17:45:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1034030350"
                },
                {
                    "id": "IC_kwDOEKipmc49vty3",
                    "body": "hey @matepapp and @adrianhorning08, could you please email `support@supabase.com` with your project reference and I'll fix the issue for your projects, thanks! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-02-11T06:33:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1035918519"
                },
                {
                    "id": "IC_kwDOEKipmc49xyhE",
                    "body": "@kangmingtay I actually switched to firebase for the auth \ud83d\ude05  Project was time sensitive. Thanks so much for investigating this.",
                    "author": {
                        "login": "adrianhorning08"
                    },
                    "createdAt": "2022-02-11T17:50:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1036462148"
                },
                {
                    "id": "IC_kwDOEKipmc4-WYvN",
                    "body": "hey @kangmingtay, I didn't have a lot of time since my latest comment but I just checked in my side project, and seems like the issue got resolved \ud83d\udc4d I could log in & log out with Google without any issue. thanks for the help! I'll make sure to send an email in case it happens again.",
                    "author": {
                        "login": "matepapp"
                    },
                    "createdAt": "2022-02-19T16:34:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1046055885"
                },
                {
                    "id": "IC_kwDOEKipmc5Ct8hV",
                    "body": "Hey all,\r\n\r\nIt seems like this issue has been resolved for now so we're going to close this issue. Feel free to let us know if you have any concerns or if you run into this issue again.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-06T07:36:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/374#issuecomment-1119340629"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5DKAKS",
            "number": 377,
            "title": "Return Discord discriminator in user_metadata",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nThe discriminator is needed with the username to visually identify Discord users. I see that it's already made available in the struct [here](https://github.com/supabase/gotrue/blob/c507d091724e51b4ae5a228ee6be71c03cc76b0d/api/provider/discord.go#L24), and even referenced [here](https://github.com/supabase/gotrue/blob/c507d091724e51b4ae5a228ee6be71c03cc76b0d/api/provider/discord.go#L83), it's just [not included in the `user_metadata`](https://github.com/supabase/gotrue/blob/c507d091724e51b4ae5a228ee6be71c03cc76b0d/api/provider/discord.go#L95-L107).\r\n\r\n## Describe the solution you'd like\r\n\r\nI'm not sure if it makes sense to create a new property in `user_metadata` as a generic solution for other providers, but just modifying Discord's `name` field to include the discriminator could suffice (would just mean if you only want the username, you would have to split the string on the front-end). \r\n```\r\nuser_metadata: {\r\n  name: \"username#1234\"\r\n}\r\n```\r\n\r\n## Describe alternatives you've considered\r\n\r\nI'm sure you could use the Discord ID that is already returned to fetch the user's discriminator, but that's unnecessary when the OAuth is already providing it.\r\n",
            "author": {
                "login": "itsnewtjam"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-08T01:46:55Z",
            "closedAt": "2022-02-09T11:59:56Z",
            "url": "https://github.com/supabase/gotrue/issues/377",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49hUVK",
                    "body": "hi @itsnewtjam, let's add it to the name field and leave it to the users to split it if they want to retrieve the discriminator - that way, we won't need to include a specific discord term in the generic oauth interface. \r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-02-08T02:20:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/377#issuecomment-1032144202"
                },
                {
                    "id": "IC_kwDOEKipmc49nMzy",
                    "body": ":tada: This issue has been resolved in version 2.5.6 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.5.6)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-02-09T12:00:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/377#issuecomment-1033686258"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5DKEX8",
            "number": 378,
            "title": "Whether issues related to oidc should be closed or not",
            "body": "# Chore\r\n\r\n## Describe the chore\r\n\r\nhttps://github.com/supabase/gotrue-js/pull/207\r\nhttps://github.com/supabase/gotrue/pull/360\r\n\r\nWith the above two PRs merged, I believe the following issue has already been resolved.\r\nDoes anyone think it should not be closed yet?\r\n\r\n@J0 @kangmingtay @awalias @kiwicopple \r\n\r\nhttps://github.com/supabase/gotrue/issues/94\r\nhttps://github.com/supabase/gotrue/issues/146\r\nclosed https://github.com/supabase/gotrue/issues/159\r\nclosed https://github.com/supabase/gotrue/issues/171\r\nhttps://github.com/supabase/gotrue/issues/292\r\nclosed https://github.com/supabase/gotrue/issues/299\r\nhttps://github.com/supabase/gotrue/issues/341\r\nhttps://github.com/supabase/gotrue-js/issues/169\r\n\r\n## Additional context\r\n\r\nAdd any other context or screenshots that help clarify the task.\r\n",
            "author": {
                "login": "koba-ninkigumi"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-08T02:20:18Z",
            "closedAt": "2022-02-08T02:38:17Z",
            "url": "https://github.com/supabase/gotrue/issues/378",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc49hWaZ",
                    "body": "#341, #292, #94 aren't directly solved by this PR. It seems like a good alternative for now but will need to investigate further before concluding.\r\n\r\nGonna close this issue for now since it's more of a consolidation of issues to be closed rather than an actual issue.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-02-08T02:38:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/378#issuecomment-1032152729"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5DVDL4",
            "number": 383,
            "title": "Send a human-readable hash / slug instead of an email OTP",
            "body": "# Feature request\r\n* Currently, the email otp sent isn't very user friendly. A better option would be to send a human readable hash instead of a randomly generated string.\r\n",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-10T07:51:27Z",
            "closedAt": "2022-09-19T06:34:25Z",
            "url": "https://github.com/supabase/gotrue/issues/383",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5DCB1V",
                    "body": "Is this already fixed by #446?\r\n\r\nEdit: I guess this isn't fully supported until the email otp is supported in `gotrue-js`",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-05-12T06:58:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/383#issuecomment-1124605269"
                },
                {
                    "id": "IC_kwDOEKipmc5DEzIE",
                    "body": "@liaujianjie we've made it such that the email otp returned is more user-friendly but not a human-readable hash yet.\r\n\r\nAlso, `gotrue-js` supports email otp now with [verifyOTP](https://github.com/supabase/gotrue-js/blob/master/src/GoTrueClient.ts#L274) and [VerifyOTPParams](https://github.com/supabase/gotrue-js/blob/master/src/lib/types.ts#L191-L203) ! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-05-12T19:07:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/383#issuecomment-1125331460"
                },
                {
                    "id": "IC_kwDOEKipmc5KivnY",
                    "body": "Hey! Going to close this now as @kangmingtay has kindly modified the  OTP to return 6-10 digits. We might revisit in the future but probably won't be looking at this anytime soon.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-19T06:34:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/383#issuecomment-1250621912"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5D1Z5s",
            "number": 385,
            "title": "Using custom (Unlimited) SMS Provider for sending OTP ",
            "body": "# Feature request\r\n\r\nCurrently, there is just a few SMS Provider, Twilio and Messagebird but they are **expensive** for my country, and there is a local SMS Provider that is **500%++ cheaper.** \r\n\r\nAnd I believe there is a lot of SMS Provider that cheaper in every country.\r\n\r\nhttps://github.com/supabase/gotrue-js/issues/356\r\n\r\n## Describe the solution you'd like\r\n\r\nAdd option in body request that `gotrue` didn't send the OTP and just give back the OTP code after saving it on the database.  \r\n\r\nBy that, I can use any SMS Provider to send the OTP code, or even I don't send it via SMS, maybe Whatsapp, or anything else. \r\n\r\n### For example:\r\n\r\n```\r\ncurl -X POST 'https://tqfkjdmpohkqylveukuhsy.supabase.net/auth/v1/otp' \\\r\n-H \"apikey: <SERVICE_KEY>\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-d '{\r\n  \"phone\": \"123123123123\", \r\n  \"send_otp\": \"false\"\r\n}'\r\n\r\n{\"otp_code\":\"897514\"}\r\n```\r\n\r\n## Describe alternatives you've considered\r\n\r\nMaybe the API that can write the `confirmation_token` \r\n\r\n```\r\ncurl -X POST 'https://tqfkjdmpohkqylveukuhsy.supabase.net/auth/v1/confirmation_token' \\\r\n-H \"apikey: <SERVICE_KEY>\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-d '{\r\n  \"phone\": \"123123123123\", \r\n  \"otp\":\"<RANDOM>\"\r\n}'\r\n\r\n{\"success\":\"true\"}\r\n```\r\n\r\nNo need to return an OTP code, since the OTP is created on my end.\r\n\r\n## Additional context\r\n\r\n\r\n",
            "author": {
                "login": "novanda1"
            },
            "state": "OPEN",
            "createdAt": "2022-02-15T01:53:59Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/385",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5IrQm9",
                    "body": "Hi, is there a progress here? Really need this feature. Twilio costs 0.2 usd for single sms in my country",
                    "author": {
                        "login": "myemuk"
                    },
                    "createdAt": "2022-08-18T10:05:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/385#issuecomment-1219299773"
                },
                {
                    "id": "IC_kwDOEKipmc5IwN5O",
                    "body": "Hey @myemuk, I've already created a PR for this (#558). In the meantime if you're self-hosting you can use [my fork](https://github.com/mamousavi/gotrue/tree/custom_sms_provider) which supports using a custom SMS gateway.",
                    "author": {
                        "login": "mamousavi"
                    },
                    "createdAt": "2022-08-19T12:08:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/385#issuecomment-1220599374"
                },
                {
                    "id": "IC_kwDOEKipmc5IwOkd",
                    "body": "@mamousavi , thanks. Hopefully it will be soon merged",
                    "author": {
                        "login": "myemuk"
                    },
                    "createdAt": "2022-08-19T12:11:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/385#issuecomment-1220602141"
                },
                {
                    "id": "IC_kwDOEKipmc5Iwdcy",
                    "body": "If you need a quick fix just create psql function to duplicate `auth.users` to `public.user` and create psql trigger to run the function each new user `signup`. \n\nthen use RLS (Row Level Security) on your `public.users`.",
                    "author": {
                        "login": "novanda1"
                    },
                    "createdAt": "2022-08-19T13:11:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/385#issuecomment-1220663090"
                },
                {
                    "id": "IC_kwDOEKipmc5RZrya",
                    "body": "Any progress here?",
                    "author": {
                        "login": "myemuk"
                    },
                    "createdAt": "2022-12-27T07:52:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/385#issuecomment-1365687450"
                },
                {
                    "id": "IC_kwDOEKipmc5Zug-Q",
                    "body": "A suggestion we choose the provider that best serves us, in my case I want to be able to send the code via whatsapp api.\r\n\r\nAn example is that the subbase generates the token and returns it to us and we send the token via the whatsApp API, sms or whichever provider we want, and the user inserting the right token validates the subbase\r\n",
                    "author": {
                        "login": "eduardohr-muniz"
                    },
                    "createdAt": "2023-04-12T14:20:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/385#issuecomment-1505365904"
                },
                {
                    "id": "IC_kwDOEKipmc5bdsYs",
                    "body": "It would be nice to be able to send SMS via Google Cloud's provider.  You get 10,000 successful auths/month for free and it's pretty much the only viable option for many indie developers. I believe many developer decide to stay in Firebase because of that.",
                    "author": {
                        "login": "angelprzz"
                    },
                    "createdAt": "2023-05-04T10:31:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/385#issuecomment-1534510636"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5EaiXV",
            "number": 390,
            "title": "PUT /user should allow update of phone field ",
            "body": "# Bug report\r\n* Currently, the `PUT /user` endpoint doesn't allow a user to update the phone field.\r\n\r\n# Solution\r\n* The `PUT /user` endpoint should update the phone field and also trigger sending out an OTP to verify the phone number used. \r\n* If `GOTRUE_SMS_AUTOCONFIRM` is enabled, then the `PUT /user` endpoint should update the phone field without sending out an OTP.",
            "author": {
                "login": "kangmingtay"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-23T08:40:45Z",
            "closedAt": "2022-03-22T19:12:35Z",
            "url": "https://github.com/supabase/gotrue/issues/390",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5AG1nD",
                    "body": ":tada: This issue has been resolved in version 2.6.6 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.6.6)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-03-22T19:15:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/390#issuecomment-1075534275"
                },
                {
                    "id": "IC_kwDOEKipmc5DiNQL",
                    "body": "After registered with email and password, wanted to update phone in same account but it update as secondary number i.e new_phone field in user auth. Help me to update number as primary i.e phone field in User Auth.",
                    "author": {
                        "login": "akshayindianpix"
                    },
                    "createdAt": "2022-05-20T15:31:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/390#issuecomment-1133040651"
                },
                {
                    "id": "IC_kwDOEKipmc5mzcYV",
                    "body": "I have a nextjs app and when I set `GOTRUE_SMS_AUTOCONFIRM=true`, this doesn't seem to do anything.\r\n\r\nWhere should I set this value?",
                    "author": {
                        "login": "shawnmclean"
                    },
                    "createdAt": "2023-09-19T03:00:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/390#issuecomment-1724761621"
                },
                {
                    "id": "IC_kwDOEKipmc5mz0mR",
                    "body": "@shawnmclean are you self-hosting gotrue or using supabase? if you're self-hosting, then `GOTRUE_SMS_AUTOCONFIRM=true` should be set in the `.env` file of the root dir that gotrue is built in",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-09-19T05:39:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/390#issuecomment-1724860817"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5EjZ0g",
            "number": 398,
            "title": "Limit number of active connections and/or maximum connection time to the database",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nGoTrue does not set a limit to the number of active connections on the database. This can lead to taking up too many Postgres connections, which prevents other services from connecting.\r\n\r\nOn a hosted instance on the platform, Gotrue took up nearly all of the Postgres connections, and didn't seem to be releasing any connections for some reason.\r\n\r\n## To Reproduce\r\n\r\nI don't have clear steps to reproduce this as of right now.\r\n\r\n## Expected behavior\r\n\r\nLimit the number of active connections, and set a connection timeout to prevent long-running transactions from locking up connections.\r\n\r\n## Additional context\r\nhttps://pkg.go.dev/github.com/gobuffalo/pop/v5#ConnectionDetails shows some relevant settings:\r\n\r\n```\r\n// Defaults to 0 \"unlimited\". See https://golang.org/pkg/database/sql/#DB.SetMaxOpenConns\r\nPool int\r\n// Defaults to 2. See https://golang.org/pkg/database/sql/#DB.SetMaxIdleConns\r\nIdlePool int\r\n// Defaults to 0 \"unlimited\". See https://golang.org/pkg/database/sql/#DB.SetConnMaxLifetime\r\nConnMaxLife time.Duration\r\n// Defaults to 0 \"unlimited\". See https://golang.org/pkg/database/sql/#DB.SetConnMaxIdleTime\r\nConnMaxIdleTime time.Duration\r\n```\r\n\r\nHowever, I found this issue which might be need to be investigated to determine if adding pooling settings will affect operations: https://github.com/gobuffalo/pop/issues/364.",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-25T07:29:40Z",
            "closedAt": "2022-03-08T14:01:45Z",
            "url": "https://github.com/supabase/gotrue/issues/398",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4_SfAu",
                    "body": "Closed by https://github.com/supabase/gotrue/pull/409.",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2022-03-08T14:01:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/398#issuecomment-1061810222"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ElMWc",
            "number": 400,
            "title": "Revoking a refresh token does NOT update the updated_at field in the auth.refresh_tokens table",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nThe ```auth.refresh_tokens``` table contains an ```updated_at``` field. It seems that this field is initialized when a new refresh token is created and is NOT updated when the token is revoked.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Using Supabase e-mail auth, log-in with a user - notice that a new refresh token is created whose ```created_at``` and ```updated_at``` fields have the same value\r\n2. Wait for the user's JWT to be refreshed\r\n\r\n## Expected behavior\r\nThe original refresh token is marked as revoked and its ```updated_at``` field is updated\r\n\r\n## Actual behavior\r\nThe original refresh token is marked as revoked but the ```updated_at``` field is NOT updated.",
            "author": {
                "login": "chipilov"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-25T15:48:43Z",
            "closedAt": "2023-05-22T08:36:39Z",
            "url": "https://github.com/supabase/gotrue/issues/400",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5cyqfH",
                    "body": "Hey @chipilov,\r\n\r\nThanks for patiently waiting. This took a while to get back to. I've just done a quick test and it looks like the `updated_at` field is updated now. Here are the steps I took to reproduce:\r\n\r\n1. Shorten JWT duration to 120 seconds\r\n2. sign up with <myemail>@supabase.io\r\n3. Confirm email\r\n4. Wait for refresh token to update\r\n5. Repeat with sign in\r\n\r\n![CleanShot 2023-05-22 at 16 30 59@2x](https://github.com/supabase/gotrue/assets/8011761/26e9a199-eecd-47c3-8d0a-a0fb26557be8)\r\n\r\nPerhaps it could have been a bug which has been fixed between the reporting date and now. Am going to close this issue for now but feel free to re-open the issue if you see this again.\r\n\r\nOnce again, thanks for taking the time to report an issue!\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-22T08:36:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/400#issuecomment-1556785095"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5FNeMY",
            "number": 410,
            "title": "GoTrue server does NOT handle NULL values in raw_user_meta_data column in auth.users",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIf the ```raw_user_meta_data``` field in ```auth.users``` table is set to ```NULL```, auth actions via the GoTrue server fail. \r\n\r\nFor example, if an ```AFTER INSERT``` trigger on the ```auth.users``` table sets the ```raw_user_meta_data``` to ```NULL```, the confirmation link sent to the user does NOT work (i.e. it returns 200 but does NOT confirm the user, so the user cannot log in after clicking on the confirmation link).\r\n\r\nThe scenario is useful if an app wants to record some data about the user's sign up (e.g. an invite code) but does NOT want to keep it in the ```raw_user_meta_data``` column since it does NOT need to send it to the client with the JWT.\r\n\r\nAn easy workaround is to set the ```raw_user_meta_data``` field to the empty JSON object (i.e. ```{}```). \r\n\r\nHowever, the schema of ```auth.users``` allows ```NULL``` for ```raw_user_meta_data``` and it's not easy to figure out that the auth issues are related to that field especially given that for some actions GoTrue throws confusing errors such as ```Database error finding user``` even though the user is present in the table.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create an AFTER INSERT trigger on the auth.users table which sets the raw_user_meta_data field to NULL\r\n2. Click on the email confirmation link sent by Supabase's GoTrue server\r\n\r\nEXPECTED\r\nThe user is marked as confirmed in the ```auth.users``` table and the user is automatically signed in.\r\n\r\nACTUAL\r\nThe user is NOT signed in AND if you inspect the record for the user in ```auth.users``` you will notice that the email has NOT been marked as confirmed.\r\n\r\n\r\n## System information\r\n\r\n- PostgreSQL 14;\r\n- Don't know how to find out the version of the GoTrue server for my project;\r\n",
            "author": {
                "login": "chipilov"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-07T09:53:04Z",
            "closedAt": "2022-03-23T12:21:21Z",
            "url": "https://github.com/supabase/gotrue/issues/410",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5AJ0k1",
                    "body": ":tada: This issue has been resolved in version 2.6.9 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.6.9)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-03-23T12:24:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/410#issuecomment-1076316469"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5FRRCT",
            "number": 411,
            "title": "Feature: Custom IDs when creating new users",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nIt's a problem I have but I'm not sure it's applicable to most people. I use Supabase as a \"SaaS\" tool. Meaning, I use Supabase for auth and a chat service. We are planning to add more services on top of Supabase, such as a notification (in-app) service and any other realtime services we'll need in the future.\r\n\r\nOur stack consists of Prisma + Node + GraphQL on the backend, and Supabase as described above. Because Supabase is a service-only thing for us, there's one minor flaw between Prisma + Suapbase; IDs. In our Prisma `users` table, we of course have an `id` column, which is UUID v4 and auto-generated, as you'd expect. On the Supabase side, we also have a `users` table with the same `id` column. However, it's currently not possible to dictate the ID of a new user when we create them. This leads to an extra column in both databases; `supabaseId` in our Prisma database and `prismaId` in our Supabase database. We need this because when we fetch conversations, we need to determine if a conversation already exists with both the currently logged in user and the user of the listing the logged in user is trying to communicate with. When we fetch conversations from Supabase, it has the supabase user id (what supabase generates) but we have to verify that's our internal user's `id` to prevent obvious bugs.\r\n\r\n## Describe the solution you'd like\r\nWhen creating the user, I would like to determine the `id` of the user instead of Supabase. Essentially:\r\n\r\n```ts\r\nconst user = await prisma.users.create({ ... })\r\nawait supabase.auth.signUp(email, user.id);\r\n```\r\n\r\n## Describe alternatives you've considered\r\nSee above for the implementation I did. I couldn't think of a better way to handle this use-case.\r\n\r\n## Additional context\r\nN/A",
            "author": {
                "login": "iamclaytonray"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-06T23:00:13Z",
            "closedAt": "2022-09-29T09:48:31Z",
            "url": "https://github.com/supabase/gotrue/issues/411",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4_Qux6",
                    "body": "Hi @iamclaytonray Can you assign this to me as there are no good first issues left, either some of them are being picked up by someone or there are Open PRs  in others.\r\n\r\nAlso, if you are assigning this to me, can you please tell me what things I should know, learn or go before developing this feature?\r\n\r\nThanks,\r\nHritik",
                    "author": {
                        "login": "devnamrits"
                    },
                    "createdAt": "2022-03-07T05:17:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1061350522"
                },
                {
                    "id": "IC_kwDOEKipmc4_Qux9",
                    "body": "@kangmingtay should we move this to go-true repo ?",
                    "author": {
                        "login": "MildTomato"
                    },
                    "createdAt": "2022-03-07T20:00:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1061350525"
                },
                {
                    "id": "IC_kwDOEKipmc4_Qux_",
                    "body": "Oops, sorry @MildTomato. Sometimes I'm unsure what repo is the correct one but GoTrue makes sense. If you'd like, I don't mind closing this and reopening in that repo",
                    "author": {
                        "login": "iamclaytonray"
                    },
                    "createdAt": "2022-03-07T20:02:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1061350527"
                },
                {
                    "id": "IC_kwDOEKipmc4_QuyA",
                    "body": "@iamclaytonray nope, not a problem! There's a lot of repos here. \r\nI'm not even sure if this is even supported in gotrue myself.",
                    "author": {
                        "login": "MildTomato"
                    },
                    "createdAt": "2022-03-07T20:08:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1061350528"
                },
                {
                    "id": "IC_kwDOEKipmc4_QuyC",
                    "body": "So, should I pick this up?\r\ncc: @iamclaytonray @MildTomato @kangmingtay ",
                    "author": {
                        "login": "devnamrits"
                    },
                    "createdAt": "2022-03-08T01:46:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1061350530"
                },
                {
                    "id": "IC_kwDOEKipmc5AvsCo",
                    "body": "@kangmingtay - i see the issue was transferred but not where it was transferred. Mind dropping a link so I can follow along?",
                    "author": {
                        "login": "iamclaytonray"
                    },
                    "createdAt": "2022-04-01T19:14:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1086242984"
                },
                {
                    "id": "IC_kwDOEKipmc5BmuEG",
                    "body": "Pinging this again. Where can I go to follow the progress on this?",
                    "author": {
                        "login": "iamclaytonray"
                    },
                    "createdAt": "2022-04-16T13:51:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1100669190"
                },
                {
                    "id": "IC_kwDOEKipmc5BmxUM",
                    "body": "@iamclaytonray its already been transferred to the gotrue repo which is where it will be tracked. \n\nAlso, could you please explain why creating an additional table that maps the prisma user id and the supabase user id doesn't work for you? It also helps to have an additional layer of abstraction to reduce potential breaking changes.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-04-16T14:57:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1100682508"
                },
                {
                    "id": "IC_kwDOEKipmc5Knlvj",
                    "body": "Hey @iamclaytonray can we check if this is still an issue for you?\r\n\r\nLet us know!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-20T06:21:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1251892195"
                },
                {
                    "id": "IC_kwDOEKipmc5LOTCt",
                    "body": "@iamclaytonray GoTrue can't support externally generated UUIDs. There are many good reasons why this is the case. A major one is avoiding [Insecure Direct Object Reference](https://cheatsheetseries.owasp.org/cheatsheets/Insecure_Direct_Object_Reference_Prevention_Cheat_Sheet.html) security issues. \r\n\r\n[You can add metadata to the user's profile using the `data` property of the `signUp` function.](https://supabase.com/docs/reference/javascript/auth-signup)",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T09:48:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/411#issuecomment-1262039213"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5FSO3y",
            "number": 412,
            "title": "Known issues with the id token grant type endpoint",
            "body": "# Bug report\r\nThe following thread aims to describe the issues with the `/token?grant_type=id_token` endpoint:\r\n1. [Google] IdToken returned by google does not contain a hashed nonce but currently, gotrue [hashes the nonce in the request and checks if it matches the nonce in the id token payload](https://github.com/supabase/gotrue/blob/master/api/token.go#L384).\r\n2. [Google] Does not require a nonce for the id_token flow based on the [firebase-flutter integration guide](https://firebase.flutter.dev/docs/auth/social#google). \r\n  - nonce might not be required for mobile because we can check the app package name (appId) and the signature\r\n3. [Apple] Does not work if existing users were using \"sign-in with apple\" on the web initially (`/authorize?provider=apple`). Sign-in with apple using an id_token should sign users into the same account regardless of which flow is used.",
            "author": {
                "login": "kangmingtay"
            },
            "state": "OPEN",
            "createdAt": "2022-03-08T09:15:00Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/412",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc4_9XMV",
                    "body": "Things we should double check.\r\n1. Is there a nonce in the returned idtoken? If so, can we use that nonce?\r\n2. Is it acceptable to remove a nonce requirement from the tokens endpoint?\r\n3. Is it worth trying to make a PR for the native Google sign in to return a nonce? (Probably not?)",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-03-19T17:35:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1073050389"
                },
                {
                    "id": "IC_kwDOEKipmc5ATlyF",
                    "body": "After some days trying some ways like decode and encode jwt to add nonce in payload (which is impossible since the signature already signed by Google...), I found out that nonce is not returned by default even in the native android google sign in code:\r\nhttps://github.com/flutter/plugins/blob/main/packages/google_sign_in/google_sign_in/android/src/main/java/io/flutter/plugins/googlesignin/GoogleSignInPlugin.java \r\n\r\nThe idToken wasn't built by map but it was built by getIdToken() method. I think what we can do (if we want to edit the native code to return nonce), we can change that code on line 401 by set the nonce inside the getSignInIntent(), which is documented in this link:\r\n[GetSignInIntentRequestBuilder](https://developers.google.com/android/reference/com/google/android/gms/auth/api/identity/GetSignInIntentRequest.Builder?hl=en)\r\n[SignInClient](https://developers.google.com/android/reference/com/google/android/gms/auth/api/identity/SignInClient?hl=en#getSignInIntent(com.google.android.gms.auth.api.identity.GetSignInIntentRequest))\r\n\r\nThat is from me, I've never done a PR, but I'm so interested with this topic xD. So maybe I can take some times to learn and help if there is any new suggestion or plan about this issue.\r\n\r\n(The nonce issue on Android quite similar to iOS afaik)",
                    "author": {
                        "login": "anggoran"
                    },
                    "createdAt": "2022-03-25T10:24:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1078877317"
                },
                {
                    "id": "IC_kwDOEKipmc5AW9Re",
                    "body": "@anggoran Great research!\r\n\r\nI found this \r\nhttps://github.com/flutter/flutter/issues/85439\r\nAnd the fact that it's been marked as a new feature and p5 makes me feel like this is something that Google wants added eventually\r\n\r\nLol we might have to actually update the Google plugin",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-03-26T19:29:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1079759966"
                },
                {
                    "id": "IC_kwDOEKipmc5AXbMr",
                    "body": "Sorry I think I mentioned a different api. The google_sign_in package uses gms.auth.api.signin instead of gms.auth.api.identity. It means that if we want to insert nonce, we need to change the whole code and sacrifice some methods, since both api have very different approaches (in terms of methods availability). Maybe we have to choose one of these options:\r\n\r\n\u2022 Change the whole google_sign_in Java code to utilize identity api\r\n\u2022 Fork and create a new google_sign_in package that implement the identity api either from [googleapis](https://pub.dev/packages/googleapis) or  [google_sign_in](https://pub.dev/packages/google_sign_in) Dart package or [native](https://developers.google.com/android/reference/com/google/android/gms/auth/api/identity/package-summary) Java package like what this unofficial package did :\r\n[Google One Tap Sign In Unofficial Package](https://pub.dev/packages/google_one_tap_sign_in)\r\n\u2022 Use the above package which is unofficial\r\n\u2022 Change nonce as nullable\r\n\r\nThe identity api provides two options, which are SignInWithGoogle for mobile and OneTapSignIn for web:\r\n[Google Identity Preview](https://youtu.be/Ys9N_pCFRDg)\r\n\r\n(note: either flutter or react native package use signin api instead of identity api for Android and iOS)\r\n\r\nFor Web, there is a news regarding api migration:\r\n[Web Migration](https://developers.googleblog.com/2021/08/gsi-jsweb-deprecation.html?m=1)\r\nhttps://github.com/flutter/flutter/issues/88084",
                    "author": {
                        "login": "anggoran"
                    },
                    "createdAt": "2022-03-27T08:36:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1079882539"
                },
                {
                    "id": "IC_kwDOEKipmc5AXvZb",
                    "body": "1. Migrating the official sign in with Google plugin is definitely the best way, but I'm not sure if it's something I can/really want to try and do. The end of life is March 31st 2023 so it needs to be updated by then but I'd like to think someone else will have worked on it before then.\r\n\r\n2. It doesn't look like nonce is required for open id. You can see that in the spec. https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest but it's recommended from a security standpoint.\r\n\r\n\r\nMy thoughts on this are that we change nonce to optional since it's not a required field and it's incorrect for it to be required.\r\nIf you want to use a nonce, you can either use the third party package or wait for the official sign in with Google package to be updated.\r\n\r\nI can start working on PRs to make nonce optional",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-03-27T16:29:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1079965275"
                },
                {
                    "id": "IC_kwDOEKipmc5AYAKk",
                    "body": "Fix for this here!\r\nhttps://github.com/supabase/gotrue/pull/430",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-03-27T22:38:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1080033956"
                },
                {
                    "id": "IC_kwDOEKipmc5CaTmV",
                    "body": "going deeper into this, google SignIn on iOS returns a nonce unfortunately but we can't access this nonce to verify it on backend.  \r\n\r\nI receive this: Passed nonce and nonce in id_token should either both exist or not. \r\n\r\n\r\nI tried passing the nonce from the jwt before sending the request but I got this msg: \r\n\r\ninvalid nonce",
                    "author": {
                        "login": "k0shk0sh"
                    },
                    "createdAt": "2022-05-01T10:10:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1114192277"
                },
                {
                    "id": "IC_kwDOEKipmc5CaT09",
                    "body": "on the other hand: apple signin: gives me this error msg: oidc: invalid configuration, clientID must be provided or SkipClientIDCheck must be set<\u2026>",
                    "author": {
                        "login": "k0shk0sh"
                    },
                    "createdAt": "2022-05-01T10:12:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1114193213"
                },
                {
                    "id": "IC_kwDOEKipmc5CaW09",
                    "body": "@k0shk0sh: I have exactly the same issue and I wrote @kangmingtay about that via support. His answer was\r\n\r\n\"Hi,\r\n\r\nCould you describe the errors you're currently facing? We have opened up a thread on the gotrue repo github issues here to document the known errors currently with this endpoint (https://github.com/supabase/gotrue/issues/412). \r\n\r\nRegarding your question on the OIDC providers supported, you can find them here: https://github.com/supabase/gotrue/blob/master/api/token.go#L83-L103\r\n\r\nHope this helps!\"\r\n\r\nI understand the error with Google Signin, because google hashes the nonce itself, so it's optional but i don't understand the Apple Auth error either.",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2022-05-01T11:10:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1114205501"
                },
                {
                    "id": "IC_kwDOEKipmc5CaX0s",
                    "body": "> @k0shk0sh: I have exactly the same issue and I wrote @kangmingtay about that via support. His answer was\n> \n> \"Hi,\n> \n> Could you describe the errors you're currently facing? We have opened up a thread on the gotrue repo github issues here to document the known errors currently with this endpoint (https://github.com/supabase/gotrue/issues/412). \n> \n> Regarding your question on the OIDC providers supported, you can find them here: https://github.com/supabase/gotrue/blob/master/api/token.go#L83-L103\n> \n> Hope this helps!\"\n> \n> I understand the error with Google Signin, because google hashes the nonce itself, so it's optional but i don't understand the Apple Auth error either.\n\nI gave up for now tbh. Its been 9 months of wait and after getting some hopes up, they are demolished now \ud83d\ude05. ",
                    "author": {
                        "login": "k0shk0sh"
                    },
                    "createdAt": "2022-05-01T11:27:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1114209580"
                },
                {
                    "id": "IC_kwDOEKipmc5D8y7s",
                    "body": "@kangmingtay anything new? :/",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2022-05-27T20:29:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1140010732"
                },
                {
                    "id": "IC_kwDOEKipmc5EBWL4",
                    "body": "Hey @megacherry,\r\n\r\nThanks for your patience with the issue so far. Appreciate it! Am aware that it can be frustrating to wait but we're doing our best to find an effective solution to the issue. We'll raise the issue in a team meeting.\r\n\r\nIn the meantime, it'd be really helpful if you could let us know what the ideal behavior of the id_token grant type endpoint would be as well as any alternatives(in addition to the ones by @DanMossa and @anggoran) that might work for you.\r\n\r\nThis would help us lay a path forward and best convey the issue to the other stakeholders so that we can resolve existing issues.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-30T14:09:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1141203704"
                },
                {
                    "id": "IC_kwDOEKipmc5EBqog",
                    "body": "@J0 \n\nThere are currently 2 problems that exist. One is an issue with Google and the other is an issue with Supabase \n\n### The Google issue:\n\nThe issue is that the official Sign in With Google package for Flutter is doing things incorrectly for iOS. The package is using Google's deprecated APIs.\n\nA hashed nonce is being returned even though a raw nonce is not being provided. This does not follow the openID specification.\n\nThere are discussions going on about migrating the package to the newer APIs that don't have this issue.\n\n### The Supabase issue:\n\nWhen using native sign in, you need to create different client IDs for each device on Google Cloud Platform.\n\nYou have the option of selecting web, android, iOS, and a few more.\n\nIf you're using Google sign in on a website you have to select web.\nIf you're using Google sign in on an iOS device, you have to select iOS.\n\nLuckily for Android, you can select web or android.\n\nThis means that I can select web, put that client id inside the Supabase dashboard, and I can now use Google sign in with for Android and Web.\n\nBut if I want to also use iOS then I'm out of luck, because Supabase only supports 1 clientID.\n\nSupabase needs to be able to support multiple clientIDs.\n",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-05-30T15:35:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1141287456"
                },
                {
                    "id": "IC_kwDOEKipmc5HKLJ7",
                    "body": "@J0 \r\n\r\nUnfortunately, I can't give any technical input on this, but do you have anything new about this issue?",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2022-07-25T10:11:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1193849467"
                },
                {
                    "id": "IC_kwDOEKipmc5KwF-C",
                    "body": "@J0 @kangmingtay \r\n\r\nI have to ask again here. When do you think we can expect a solution for native Apple and Google Sign-in?",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2022-09-21T19:13:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1254121346"
                },
                {
                    "id": "IC_kwDOEKipmc5LIUl7",
                    "body": "Ok i'm officially at a point where I need to use Native sign in with Apple and I'm getting \r\n`oidc: invalid configuration, clientID must be provided or SkipClientIDCheck must be set` Even thought I'm passing in a clientId. I'll look into it and see what's happening",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-09-28T07:00:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1260472699"
                },
                {
                    "id": "IC_kwDOEKipmc5LIfcw",
                    "body": "I looked into it a bit and it's this part that's failing.\r\n\r\nhttps://github.com/supabase/gotrue/blob/293cc415c5cbe97df0ddf5fa6f27c2c31652e549/api/token.go#L394\r\n\r\nThat lines calls this which isn't correctly setting the clientId\r\n\r\nhttps://github.com/jetstack/okta-kubectl-auth/blob/d731ef2fc883b14bf2b04fb16812708fb0727e76/vendor/github.com/coreos/go-oidc/verify.go#L141",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-09-28T07:45:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1260517168"
                },
                {
                    "id": "IC_kwDOEKipmc5LIh4s",
                    "body": "https://github.com/supabase/gotrue/pull/689\r\n@k0shk0sh @kangmingtay @dshukertjr \r\nThis will fix broken native login for iOS.",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-09-28T07:55:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1260527148"
                },
                {
                    "id": "IC_kwDOEKipmc5LToH3",
                    "body": "I know you guys are hard at work with the MFA and whatnot so this might not be exactly in the scope, but the change in #689 is effectively a single line and unlocks the native Apple login; the PR has been up for 2 weeks now.\r\n\r\nDo you think we could squeeze that in a subsequent release? :pray: ",
                    "author": {
                        "login": "Xanewok"
                    },
                    "createdAt": "2022-09-30T11:07:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1263436279"
                },
                {
                    "id": "IC_kwDOEKipmc5MlpnG",
                    "body": "Just wanted to cross post this for visibility, but it seems like the current OAuth signin flow using web version of Oauth that we provide got rejected by Apple during the app's review process. \r\nhttps://github.com/supabase-community/supabase-flutter/issues/5#issuecomment-1284531203",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2022-10-20T05:12:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1284938182"
                },
                {
                    "id": "IC_kwDOEKipmc5MoxBc",
                    "body": "> Just wanted to cross post this for visibility, but it seems like the current OAuth signin flow using web version of Oauth that we provide got rejected by Apple during the app's review process. [supabase-community/supabase-flutter#5 (comment)](https://github.com/supabase-community/supabase-flutter/issues/5#issuecomment-1284531203)\r\n\r\nYeah, that's because it's not using native sign in. But #689  fixes that.",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-10-20T15:33:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1285754972"
                },
                {
                    "id": "IC_kwDOEKipmc5Qrf95",
                    "body": "For what it's worth, I don't think the third point from the OP applies anymore or I couldn't reproduce it:\r\n\r\n> 3. [Apple] Does not work if existing users were using \"sign-in with apple\" on the web initially (`/authorize?provider=apple`).\r\n\r\nI had previous users signed in using the web version and they can properly log in using the now-unlocked native variant. Spitballing here, but maybe it's becase of the new account linking algorithm? https://github.com/supabase/gotrue/commit/c709ed5f1bb21b2c971bd08f402932423291477a\r\n\r\nIn case it's useful, here's an example React Native native iOS sign in code that I've been using successfully: https://github.com/supabase/gotrue/pull/689#issuecomment-1353559228",
                    "author": {
                        "login": "Xanewok"
                    },
                    "createdAt": "2022-12-15T19:11:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1353580409"
                },
                {
                    "id": "IC_kwDOEKipmc5nQrOH",
                    "body": "> going deeper into this, google SignIn on iOS returns a nonce unfortunately but we can't access this nonce to verify it on backend.\r\n> \r\n> I receive this: Passed nonce and nonce in id_token should either both exist or not.\r\n> \r\n> I tried passing the nonce from the jwt before sending the request but I got this msg:\r\n> \r\n> invalid nonce\r\n\r\nHi @k0shk0sh, I am facing the similar issue, would be great if you could point me in some direction how should I resolve this!\r\n\r\nI am facing the issue with google sign in, apple sign in works as I am able to pass in the nonce but I can't pass a nonce while making sign in request to google. \r\n\r\nRelated issue: https://github.com/react-native-google-signin/google-signin/issues/1176",
                    "author": {
                        "login": "sonipranjal"
                    },
                    "createdAt": "2023-09-23T22:39:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/412#issuecomment-1732424583"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5FSf4r",
            "number": 413,
            "title": "\"Email not confirmed\" error even though \"Enable email confirmations\" is disabled",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI am getting the error \"Email not confirmed\" when trying to sign in, even though the setting \"Enable email confirmations\" is disabled in the admin.\r\n\r\nIf the admin flag is not intended to disable the confirmation gating and merely disables sending the emails, it should be described a little better to prevent confusion.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Enable \"Enable Email Signup\" and disable \"Enable email confirmations\" in the admin\r\n2. create an account via supabase.auth.api.createUser() with an email and password\r\n3. attempt to login via supabase.auth.signIn()\r\n4. error \"Email not confirmed\"\r\n\r\n## Expected behavior\r\n\r\nShould be able to sign in without confirming if the confirmation setting is off\r\n\r\n## Workaround\r\n\r\nSend `email_confirm: true` into supabase.auth.api.createUser() to confirm the user\r\n",
            "author": {
                "login": "jnorris441"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-08T10:22:30Z",
            "closedAt": "2022-03-27T18:44:18Z",
            "url": "https://github.com/supabase/gotrue/issues/413",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5AHEe_",
                    "body": "hey @jnorris441, `supabase.auth.api.createUser()` actually calls the `/admin` api endpoint in gotrue. Since it's the admin user who usually calls these endpoints, they should have the ability to overwrite the admin configuration set on the dashboard. \r\n\r\nAlso, as you mentioned, `api.createUser()` now supports taking in [`AdminUserAttributes`](https://github.com/supabase/gotrue-js/blob/c272277d0572b53ff3ae277fcb7b8e095b6d1134/src/lib/types.ts#L142-L149) which allows you to specify whether you want `email_confirm` or `phone_confirm`. \r\n\r\nYeah we should describe this better on the docs, but thanks for raising this up!\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-03-22T20:14:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/413#issuecomment-1075595199"
                },
                {
                    "id": "IC_kwDOEKipmc5AX25E",
                    "body": "fixed by https://github.com/supabase/supabase/pull/6010",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-03-27T18:44:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/413#issuecomment-1079995972"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5FnfMe",
            "number": 416,
            "title": "Add metadata on passwordless phone signup",
            "body": "# Feature request\r\nSimilar to email signup it would be good to pass meta data on phone signup (without password) to allow for example to pass usernames.\r\n\r\n## Describe the solution you'd like\r\n\r\nAllow meta data on passwordless phone signup.\r\n\r\n## Additional context\r\n\r\nTo add usernames to users, a valid approach is to create a profile entry with a trigger on signup. This works for email signups, but there is not way to do this with passwordless phone signup. Setting usernames on runtime can cause issues, as any savy user can just mitigate username creation alerts.",
            "author": {
                "login": "maxcodefaster"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-14T07:14:36Z",
            "closedAt": "2022-07-20T09:53:32Z",
            "url": "https://github.com/supabase/gotrue/issues/416",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5DfZV6",
                    "body": "+1 for this",
                    "author": {
                        "login": "wernst"
                    },
                    "createdAt": "2022-05-19T23:44:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/416#issuecomment-1132303738"
                },
                {
                    "id": "IC_kwDOEKipmc5G7xS8",
                    "body": ":tada: This issue has been resolved in version 2.9.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.9.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-07-20T09:56:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/416#issuecomment-1190073532"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5FxKl8",
            "number": 417,
            "title": "Feature request: Add Steam as an external OAuth provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nCurrently, Supabase does not support Steam as an external OAuth provider.\r\n\r\n## Describe the solution you'd like\r\n\r\nSupport Steam as an external OAuth Provider. https://partner.steamgames.com/doc/features/auth\r\n\r\n## Describe alternatives you've considered\r\n\r\nN/A\r\n\r\n## Additional context\r\n\r\nThis [article](https://owlspace.xyz/cybersec/steam-login/) describes how Steam's login method works.\r\n\r\n",
            "author": {
                "login": "law-lin"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-16T04:10:45Z",
            "closedAt": "2022-04-19T01:59:31Z",
            "url": "https://github.com/supabase/gotrue/issues/417",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Bre4l",
                    "body": "Hey all,\r\n\r\nWe're going to track all provider requests on #451 so we'll be closing this issue for now -- feel free to follow along there instead.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T01:59:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/417#issuecomment-1101917733"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5GDkBc",
            "number": 420,
            "title": "Disable users",
            "body": "![Screenshot from 2022-03-11 12-51-39](https://user-images.githubusercontent.com/96174573/157810803-a26505d5-6a84-4475-a929-2a06daf5d397.png)\r\n\r\nwith firebase we can disable users,\r\nhttps://firebase.google.com/docs/auth/admin/manage-users?hl=en&authuser=0#update_a_user",
            "author": {
                "login": "Deliana90"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-11T05:58:50Z",
            "closedAt": "2022-05-06T06:52:11Z",
            "url": "https://github.com/supabase/gotrue/issues/420",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5AAbYX",
                    "body": "\ud83d\udc4d Transferring this one to the Auth server ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-03-21T12:49:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/420#issuecomment-1073853975"
                },
                {
                    "id": "IC_kwDOEKipmc5AAfsT",
                    "body": "Dropping in a potential use-case for this feature request:\r\n\r\nSome IdPs support users states where we may want to disable the user account. For example, [Okta](https://developer.okta.com/docs/reference/api/users/#user-properties) has these states: `STAGED`, `PROVISIONED`, `ACTIVE`, `RECOVERY`, `LOCKED_OUT`, `PASSWORD_EXPIRED`, `SUSPENDED`, or `DEPROVISIONED`. In an SCIM integration, we may want to disable the user if the Okta user state isn't `ACTIVE`.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-03-21T13:06:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/420#issuecomment-1073871635"
                },
                {
                    "id": "IC_kwDOEKipmc5ATxt-",
                    "body": "hey @Deliana90, you can disable a user via the `/admin` endpoint - see https://github.com/supabase/gotrue#post-put-adminusersuser_id",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-03-25T11:24:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/420#issuecomment-1078926206"
                },
                {
                    "id": "IC_kwDOEKipmc5Ct1ir",
                    "body": "Hey,\r\n\r\nGoing to close this issue for now as it seems like it has been resolved. Do feel free to reopen/let us know if there are still any remaining concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-06T06:52:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/420#issuecomment-1119312043"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5GwaG8",
            "number": 434,
            "title": "Unable to signIn with OpenIDConnect when already signed Up with email and password",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI am unable to link/sign in with OpenID using the same email as an account signed up with email and password.\r\nWhen looking at supabase logs I see,\r\n`duplicate key value violates unique constraint \"users_email_key\"`\r\n\r\n## To Reproduce\r\n\r\n1. I sign up with email and password and I then click the verification email. I verify that the row looks good in `auth.users`.\r\n2. I then create an account using OpenIDConnect. The error I get back is `GotrueError(message: Database error saving new user)`\r\n\r\n```javascript\r\nlet response = await supabase.auth.signUp({\r\n  email: 'someone@email.com',\r\n  password: 'RQTFSUtvkVqRfzemYsPI'\r\n})\r\n```\r\n\r\n```javascript\r\nlet response = await supabase.auth.signIn({\r\n  oidc:{\r\n      id_token: 'valid_id_token',\r\n      nonce: 'valid_nonce',\r\n      provider: 'google'\r\n  }\r\n})\r\n```\r\n\r\nThey work separately, but they fail when called after each other.\r\n\r\n## Expected behavior\r\n\r\nI expect that I can sign in with oidc when the email is the same as an account that has already same up with email and password.\r\n",
            "author": {
                "login": "DanMossa"
            },
            "state": "OPEN",
            "createdAt": "2022-03-30T22:46:44Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/434",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5K99WF",
                    "body": "Hey, due to issues with the quality of implementation for OIDC we've decided to stop supporting it and removed it from the v2 version of the client library all together. \r\n\r\nIt's been a while, but if you could attach some logs from the failing operation we may be able to look into this issue further. Until then, I'll close it.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-26T09:30:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1257756037"
                },
                {
                    "id": "IC_kwDOEKipmc5LIeYs",
                    "body": "@hf Wait really? What about my and other's production apps that are currently using OIDC? This seems very bizarre to just get rid of. I was working on making a PR to fix the issue with it involving iOS. \r\n\r\nWhat does this mean for\r\nhttps://github.com/supabase/gotrue/issues/412\r\n?",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-09-28T07:41:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1260512812"
                },
                {
                    "id": "IC_kwDOEKipmc5LUTkA",
                    "body": "Forgive my ignorance, but if OIDC is removed what happens to users who've created their account using Apple/Google auth? How will they sign in to the app if they can't use their email and password? And, how will we do native sign-in?",
                    "author": {
                        "login": "WJimmyCook"
                    },
                    "createdAt": "2022-09-30T14:00:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1263614208"
                },
                {
                    "id": "IC_kwDOEKipmc5LWcF5",
                    "body": "Exactly. It seems like not much thought may have gone into the decision to remove OIDC. There's also not that many bugs that exist. Adding OIDC was a long process but we're slowly getting there. Most things are fixed and all that's left is a little bug fixing.\r\nPLEASE don't remove code for this.",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-10-01T00:42:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1264173433"
                },
                {
                    "id": "IC_kwDOEKipmc5MjgNv",
                    "body": "@DanMossa \r\n#689 is now fixed, but in v2 the possibility to log in with oidc is now missing. How to enable native Apple/Google login? (react native)",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2022-10-19T17:54:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1284375407"
                },
                {
                    "id": "IC_kwDOEKipmc5MkMl6",
                    "body": "I will actually be very upset if the endpoint to support oidc is removed. I and many others have spent a lot of time to support OIDC. It's required for native auth and I really hope we get clarification on what's happening.\r\n@hf @kangmingtay ",
                    "author": {
                        "login": "DanMossa"
                    },
                    "createdAt": "2022-10-19T20:49:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1284557178"
                },
                {
                    "id": "IC_kwDOEKipmc5MkNKQ",
                    "body": "Hey, this was maybe prematurely communicated. We'll discuss with the team tomorrow and give an update. You're right about supporting existing use cases.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-10-19T20:51:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1284559504"
                },
                {
                    "id": "IC_kwDOEKipmc5MwZUp",
                    "body": "Hey everyone, the team and I discussed this at length. Here's our conclusions:\r\n\r\n- We recognize this is being used in the wild and is a hard requirement on iOS.\r\n- The current implementation [has some (serious) known issues](https://github.com/supabase/gotrue/issues/412) and we don't want to encourage people to be using something that is of low quality.\r\n- Mid-term we do want to add official support for an OIDC login flow (that uses ID tokens), but this is unlikely to be backward compatible with what we have today.\r\n\r\nThus we decided to do the following:\r\n\r\n- Add back support for this flow in v2 of gotrue-js, but under an `@experimental` annotation. We're going to be allocating some time to do this in the next 2 to 3 weeks.\r\n- Since Sign-in with Apple is a hard requirement in mobile apps on iOS, we'll try to address some of the known issues in that flow only. Since we're busy with some other priorities, we can't promise a timeline on addressing this.\r\n- Any PRs from the community on this topic will be considered closely, in an effort to unblock you.\r\n- Once we address OIDC ID token login flows properly, the existing flow will be deprecated and the existing API is likely to be removed with some prior notice. Prepare your codebase for such an eventuality in the future.\r\n\r\nFeel free to let us know how you feel about this or if we should reconsider something. Thank you for your dedication so far!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-10-22T10:29:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1287755049"
                },
                {
                    "id": "IC_kwDOEKipmc5MwZdj",
                    "body": "that sounds promising. thank you very much for the transparent communication.",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2022-10-22T10:32:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1287755619"
                },
                {
                    "id": "IC_kwDOEKipmc5OcDyz",
                    "body": "So - I\u2019m not familiar with oidc - but I\u2019ve done apple sign in flows a few times. I\u2019ll avoid bloating this ticket with findings - there\u2019s a sample repo I have with nodejs that I\u2019m working on here / it has the official apple sign in sample code bundled together - there\u2019s few tickets that have suggested oidc but it seems obsolete - https://github.com/supabase-community/gotrue-swift/issues/4\r\nMy sign in almost sort of works - I\u2019d drop this effort in a heart beat if there was a native sign in flow. But I\u2019m yet to see anything working beyond web flow.\r\n\r\nhow can I sign in natively using swift code - authorization.code I get back from apple (offical sample code for apple login)?\r\n\r\n\r\nThere\u2019s another ticket which is around using jwt of authorised user to access database with RLS. \r\nUPDATE - jwt via signed in session resolved using latest release_candidate branch.\r\nhttps://github.com/supabase-community/supabase-swift/issues/49",
                    "author": {
                        "login": "johndpope"
                    },
                    "createdAt": "2022-11-15T22:57:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1315978419"
                },
                {
                    "id": "IC_kwDOEKipmc5OwCmS",
                    "body": "I think adding OIDC in v2 is important. Especially for google one tap login",
                    "author": {
                        "login": "planktonrobo"
                    },
                    "createdAt": "2022-11-20T19:07:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1321216402"
                },
                {
                    "id": "IC_kwDOEKipmc5P0f7t",
                    "body": "@hf: any news on this? :)",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2022-12-06T11:12:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1339162349"
                },
                {
                    "id": "IC_kwDOEKipmc5P1ZNa",
                    "body": "@megacherry Hey not yet since we've been busy preparing stuff for Launch Week 6. https://supabase.com/launch-week\n\nWe're going to start planning our next steps in January and this (OIDC support) is high up on our list.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-06T13:33:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1339396954"
                },
                {
                    "id": "IC_kwDOEKipmc5R7EVp",
                    "body": "> @megacherry Hey not yet since we've been busy preparing stuff for Launch Week 6. https://supabase.com/launch-week\r\n> \r\n> We're going to start planning our next steps in January and this (OIDC support) is high up on our list.\r\n\r\nHi glad to hear that. I want to implement OIDC for my application but don't want to migrate back to supabase v1 to implement OIDC. It is now January, I just want to remind and hope if the team is working on it. ",
                    "author": {
                        "login": "ZhenFTW"
                    },
                    "createdAt": "2023-01-07T10:59:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1374438761"
                },
                {
                    "id": "IC_kwDOEKipmc5R8D7Q",
                    "body": "also we need some swift / java code examples (not react-native).",
                    "author": {
                        "login": "johndpope"
                    },
                    "createdAt": "2023-01-08T03:36:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1374699216"
                },
                {
                    "id": "IC_kwDOEKipmc5Smw_f",
                    "body": "This bug appears to also affect OAuth. (Tested with Google and Azure Specifically)\r\n\r\nIf you signup with OAuth, and then set a password or use a magic link, everything works as expected, but if you do things the other way around you get the same error (ERROR: duplicate key value violates unique constraint \"users_email_partial_key\" (SQLSTATE 23505)).\r\n\r\nFor clarity:\r\nSign Up with Google or Microsoft OAuth -> Add Password/Use Magic Link -> User logs in correctly\r\nSign up with Google OAuth -> Try to Sign-in with Microsoft OAuth (same email) -> User logs in correctly\r\nSign up with Password/Magic Link -> Try to Sign-In with OAuth -> 500: Database error saving new user\r\n\r\nEdit:\r\nStarted issue #911 to track these separately",
                    "author": {
                        "login": "mchappeldev"
                    },
                    "createdAt": "2023-01-17T18:53:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1385893855"
                },
                {
                    "id": "IC_kwDOEKipmc5T0YR9",
                    "body": "@hf: It is now almost the end of January and I would like to politely ask if you have made any progress in the matter? Is there anything we can do to support you? :)",
                    "author": {
                        "login": "megacherry"
                    },
                    "createdAt": "2023-01-27T09:26:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1406239869"
                },
                {
                    "id": "IC_kwDOEKipmc5USCt0",
                    "body": "Hey everyone! Here's the PR: https://github.com/supabase/gotrue-js/pull/603\r\n\r\nSorry this took so incredibly long!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-02-02T16:25:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/434#issuecomment-1414015860"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HGuSA",
            "number": 436,
            "title": "Add Snapchat as  External OAuth Providers",
            "body": "",
            "author": {
                "login": "Shiba-Kar"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-31T06:03:16Z",
            "closedAt": "2022-04-19T02:30:47Z",
            "url": "https://github.com/supabase/gotrue/issues/436",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5BriQE",
                    "body": "Tracking on #451 instead. Closing for now",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:30:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/436#issuecomment-1101931524"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HHF9W",
            "number": 437,
            "title": "Make hcaptcha timeout configurable",
            "body": "# Chore\r\n\r\n## Describe the chore\r\n\r\nSee line 43 of `hcaptcha.go`\r\n\r\n## Additional context\r\n\r\nNA\r\n",
            "author": {
                "login": "J0"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-05T11:53:06Z",
            "closedAt": "2022-06-08T13:12:00Z",
            "url": "https://github.com/supabase/gotrue/issues/437",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Eigu9",
                    "body": "fixed by #441 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-08T13:12:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/437#issuecomment-1149897661"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HHXhw",
            "number": 438,
            "title": "Send confirm signup and change email address emails when user is created or updated through the bankend",
            "body": "# Feature request\r\n\r\n## Describe the solution you'd like\r\n\r\nAdd ability to send user confirm signup and change email address emails when user is created with supabase.auth.api.createUser and user data is updated with supabase.auth.api.updateUserById\r\n",
            "author": {
                "login": "pico-project"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-04T02:06:57Z",
            "closedAt": "2022-09-28T08:56:05Z",
            "url": "https://github.com/supabase/gotrue/issues/438",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LIy6z",
                    "body": "Hey this is somewhat out of scope, as the admin API is intended to be as flexible as possible. Different projects will have different requirements. Some may want to send an email, others not. Thus, it is unlikely we'll add support for this in GoTrue. \r\n\r\nSince the admin APIs are intended to be used in a server environment which you fully trust, it is trivial to add email sending functionality when you need it.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T08:56:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/438#issuecomment-1260596915"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HHYuF",
            "number": 439,
            "title": "Welcome Email Message",
            "body": "# Feature request\r\nAfter successful email confirmation and sign-in, send a 'welcome' e-mail message.\r\n \r\n## Is your feature request related to a problem? Please describe.\r\n\r\nA clear and concise description of what you want and what your use case is.\r\n\r\n## Describe the solution you'd like\r\nAdd a welcome message email template.\r\n\r\nA clear and concise description of what you want to happen.\r\n\r\n## Describe alternatives you've considered\r\n\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n## Additional context\r\n\r\nAdd any other context or screenshots about the feature request here.\r\n",
            "author": {
                "login": "meera-datey"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-04T19:40:13Z",
            "closedAt": "2022-05-04T15:34:29Z",
            "url": "https://github.com/supabase/gotrue/issues/439",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5CYKjc",
                    "body": "Can I work on this one?",
                    "author": {
                        "login": "w0wka91"
                    },
                    "createdAt": "2022-04-29T18:59:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/439#issuecomment-1113630940"
                },
                {
                    "id": "IC_kwDOEKipmc5CZgTz",
                    "body": "Would such an email be considered a marketing email or a transactional email? IMO this distinction is important as I don't think we should be sending non-transactional emails from Supabase.",
                    "author": {
                        "login": "liaujianjie"
                    },
                    "createdAt": "2022-04-30T12:39:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/439#issuecomment-1113982195"
                },
                {
                    "id": "IC_kwDOEKipmc5Cm6z2",
                    "body": "Hey @meera-datey,\r\n\r\nThanks for opening the issue. We've discussed as a team and unfortunately, as @liaujianjie pointed out this seems more like a marketing email rather than a transactional email and would fit better on the application level.\r\n\r\n@w0wka91 apologies, I think we'll have to close this issue. If you're interested at other good first issues, feel free to take a look at [this issue](https://github.com/supabase/gotrue/issues/469) instead\r\n\r\n\r\nAlternatively, [this issue involving sign in with Azure](https://github.com/supabase/gotrue/issues/337) would be a good start too.\r\n\r\nLet me know if any of these interest you and I'd be happy to provide more details.\r\n\r\nThanks!\r\n\r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-04T15:34:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/439#issuecomment-1117498614"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HKEHK",
            "number": 440,
            "title": "Keycloak Auth - Unable to exchange external code",
            "body": "Hi, \r\n\r\nApologies for the long post.\r\n\r\nI am having the same issue with other providers, (e.g. azure). Today I was glad to see Keycloak in the supported providers (much appreciated!). The issue is the same as written before in this issue: [#106](https://github.com/supabase/gotrue/issues/106)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/10290865/161862584-551d00fe-2a3e-499f-a568-d993227c26ed.png)\r\n\r\nUpon inspecting the state on jwt.io\r\n\r\n![image](https://user-images.githubusercontent.com/10290865/161862648-196901e9-0dd8-4a0e-aa65-68454b58e51a.png)\r\n\r\nPerhaps the fact that the id is set to 00000000-0000-0000-0000-000000000000 is a clue\r\n\r\nAfter entering my user credentials I am being redirected to the frontend\r\n\r\n![image](https://user-images.githubusercontent.com/10290865/161863101-21951e85-5f0f-48b6-a31b-8096d5850874.png)\r\n\r\nThe response headers from the Keycloak endpoint do contain valid JWT tokens, with email and user-id, Albeit inside cookie headers.\r\n\r\n![image](https://user-images.githubusercontent.com/10290865/161862948-faab10a0-86d5-4d0c-bc26-431e8bc7820c.png)\r\n\r\nThe final redirection is to the redirect endpoint,\r\n\r\nhttps://myprojectid.supabase.co/auth/v1/callback?state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NDkxOTg4MjAsInNpdGVfdXJsIjoiaHR0cHM6Ly92aGMuaXEtbW90aXZlLmNvbS8iLCJpZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsIm5ldGxpZnlfaWQiOiIiLCJmdW5jdGlvbl9ob29rcyI6bnVsbCwicHJvdmlkZXIiOiJrZXljbG9hayIsInJlZmVycmVyIjoiaHR0cHM6Ly92aGMuaXEtbW90aXZlLmNvbS8ifQ.CkUcJ0GTqpteEoQynTmywg9OMWOkpqgcTDXq7s0I338&session_state=cbb586d9-6fcf-454a-9f32-5479dc78c9f4&code=789d6ba4-85e8-4671-a9a1-f46012e3e696.cbb586d9-6fcf-454a-9f32-5479dc78c9f4.223ea6fc-1d5e-4f50-9a66-1a096bff98c8\r\n\r\nThis last redirect has the following response header:\r\n\r\nlocation: https://mypublicurl.com/?error=server_error&error_description=Unable+to+exchange+external+code%3A+789d6ba4-85e8-4671-a9a1-f46012e3e696.cbb586d9-6fcf-454a-9f32-5479dc78c9f4.223ea6fc-1d5e-4f50-9a66-1a096bff98c8\r\n\r\n```\r\nerror: server_error\r\nerror_description: Unable to exchange external code: <CODE>\r\n```\r\n\r\n\r\nThe client id and secret are correctly entered, the sign-in also leaves a cookie around for other apps, and those are logged in after this session.",
            "author": {
                "login": "108174"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-05T22:59:47Z",
            "closedAt": "2023-02-26T08:48:33Z",
            "url": "https://github.com/supabase/gotrue/issues/440",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5BRTXP",
                    "body": "This is a demo project, connected to supabase and everything\r\n\r\nhttps://github.com/108174/supabase-keycloak-demo-issues",
                    "author": {
                        "login": "108174"
                    },
                    "createdAt": "2022-04-11T13:29:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1095054799"
                },
                {
                    "id": "IC_kwDOEKipmc5CZD2V",
                    "body": "Hi @108174, based on your project logs, it seems like gotrue is returning an error from keycloak with the following message: `x509: certificate signed by unknown authority` - have you taken a look at [our guide](https://supabase.com/docs/guides/auth/auth-keycloak) for setting up the keycloak provider? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-04-29T23:51:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1113865621"
                },
                {
                    "id": "IC_kwDOEKipmc5CZsJr",
                    "body": "Yes I have, to the letter",
                    "author": {
                        "login": "108174"
                    },
                    "createdAt": "2022-04-30T18:13:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1114030699"
                },
                {
                    "id": "IC_kwDOEKipmc5CZsTT",
                    "body": "Upon further inspection, I have used this docker image: ```quay.io/keycloak/keycloak:latest```\r\n\r\ninstead of ```jboss/keycloak:latest```.\r\n\r\nAs this was the listed image on the official keycloak website. Well, the images are identical (```docker history --no-trunc jboss/keycloak```). Seems to be mirrored.\r\n\r\nCould it have something to do with my SSL certificate?",
                    "author": {
                        "login": "108174"
                    },
                    "createdAt": "2022-04-30T18:17:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1114031315"
                },
                {
                    "id": "IC_kwDOEKipmc5FPhil",
                    "body": "I am having the same issue. I've detailed the steps to reproduce it here: https://github.com/supabase/gotrue/issues/516",
                    "author": {
                        "login": "valerius21"
                    },
                    "createdAt": "2022-06-21T12:42:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1161697445"
                },
                {
                    "id": "IC_kwDOEKipmc5GJUv7",
                    "body": "I have the same problem using [app.supabase.com](https://github.com/supabase/gotrue/issues/app.supabase.com)\r\n\r\nredirect url with failure \"Unable to exchange external code\"\r\n\r\n```\r\nhttp://localhost:3000/?error=server_error&error_description=Unable+to+exchange+external+code%3A+a95bcaef-bb46-4c04-9ec6-2a81877a68f0.be71884e-2598-4dea-9d0f-61766b30e403.dfae8b4b-e82d-466c-ac57-d112d9b92d7c\r\n```\r\n\r\nI try many things but I don't a clue how to override this problem\r\n\r\nI post here too [#516](https://github.com/supabase/gotrue/issues/516)",
                    "author": {
                        "login": "koakh"
                    },
                    "createdAt": "2022-07-06T23:20:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1176849403"
                },
                {
                    "id": "IC_kwDOEKipmc5JosUo",
                    "body": "I have the same problem using Self Hosting\r\n\r\nFixed \r\n\r\nI added \r\n`EXTERNAL_KEYCLOAK_URL= http://host.docker.internal:8080/realms/supabase`\r\nto .env and this to /etc/hosts\r\n`127.0.0.1 host.docker.internal`\r\n",
                    "author": {
                        "login": "wiwatsrt"
                    },
                    "createdAt": "2022-09-02T11:50:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1235404072"
                },
                {
                    "id": "IC_kwDOEKipmc5LOQyW",
                    "body": "Hey there is a common issue with Keycloak and leading space characters, as described in this discussion: https://github.com/supabase/supabase/discussions/1192#discussioncomment-848941\r\n\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T09:40:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1262029974"
                },
                {
                    "id": "IC_kwDOEKipmc5V58US",
                    "body": "Hey  @108174,\r\n\r\nThanks for your patience. Can I check if this is still an active issue after checking for leading spaces and special characters?\r\n\r\nLet us know!\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-23T06:03:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1441252626"
                },
                {
                    "id": "IC_kwDOEKipmc5WJYo9",
                    "body": "Hey,\r\n\r\nI'm going to close this issue for now as it seems to have gone stale but feel free to let us know if there are still remaining issues.\r\n\r\nThanks!\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-26T08:48:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/440#issuecomment-1445300797"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HU0Zv",
            "number": 442,
            "title": "Discord discriminator base length isn't respected if it's #0999 or less.",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIf you have a Discord discriminator that is `#0999` or lower, the metadata stored doesn't respect the 4 int/string length and will show up as `#999`. In my case it just shows up as `#1`.\r\n\r\n## To Reproduce\r\n\r\n1. Have a Discord account that has a discriminator no higher than `#0999`\r\n2. Sign in using Discord as the provider\r\n3. Check the user metadata, it should only show `{username}#999` or the respective discriminator.\r\n\r\n## Expected behavior\r\n\r\nDiscriminator base length should be respected and show `{username}#0999` so that it contains the correct information for the user.\r\n\r\n## Screenshots\r\n\r\nI changed my discriminator for this one to be in line with what's written above.\r\n![Screenshot 2022-04-08 at 00 35 04](https://user-images.githubusercontent.com/323222/162330715-64288117-ce21-46b5-bd0a-72361165eb31.png)\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Version of supabase-js: 1.33.3\r\n- Version of Node.js: v16.14.2\r\n\r\n## Additional\r\nLooking at the `discord.go` file, I believe the Discriminator should be a string and not int, as that's what Discord is providing via the API.\r\nBut I'm not familiar with Go, so not sure what the *standards* are.\r\n",
            "author": {
                "login": "PhaxeNor"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-07T22:44:23Z",
            "closedAt": "2022-04-26T23:43:46Z",
            "url": "https://github.com/supabase/gotrue/issues/442",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5CI4nA",
                    "body": "Hi @kangmingtay @J0, can I take on this issue? Thanks",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2022-04-26T10:27:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/442#issuecomment-1109625280"
                },
                {
                    "id": "IC_kwDOEKipmc5CI705",
                    "body": "Hey @bariqhibat,\r\n\r\nYup feel free to go for it!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-26T10:41:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/442#issuecomment-1109638457"
                },
                {
                    "id": "IC_kwDOEKipmc5CLqZK",
                    "body": ":tada: This issue has been resolved in version 2.6.23 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.6.23)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-04-26T23:46:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/442#issuecomment-1110353482"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HW0vA",
            "number": 443,
            "title": "The OTP generated and verified, either via mail, sms or third party authenticator should be HMAC based TOTP  ",
            "body": "I came to know about Supabase while I worked on developing Passwordless authentication backend for one for my client. I used @pyauth 's [PyOtp](https://github.com/pyauth/pyotp) for generating time based OTP's, which basically depended on a randomly generated string and current time for the random OTP. This method is as per [rfc6238](https://datatracker.ietf.org/doc/html/rfc6238). So instead of storing randomly generated otp in the database, we store the random string. Then During verification, we instantiate, the object with same store key, now if the otp being verified is being verified within valid amount of time, it will be valid, but if it isn't then it will be invalid. This will also make the workflow for MFA using third party TOTP authenticators like Google Authenticator and Microsoft Authenticator easier to integrate.",
            "author": {
                "login": "rnbokade"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-08T10:52:19Z",
            "closedAt": "2022-04-18T09:37:00Z",
            "url": "https://github.com/supabase/gotrue/issues/443",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Bo_Kt",
                    "body": "Hey @rnbokade,\r\n\r\nThanks for highlighting this\u2014 we\u2019re hoping to use TOTP for MFA and will eventually aim to incorporate TOTP into the OTP flow. We will take this into consideration as we build out MFA support. \r\n\r\nGoing to close this now but feel free to post any concerns [on the MFA thread](https://github.com/supabase/gotrue/issues/14)\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-18T09:37:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/443#issuecomment-1101263533"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HeaDr",
            "number": 444,
            "title": "Unfork this repo and update README",
            "body": "# Improve documentation\r\n\r\n## Describe the problem\r\n\r\nCurrently this project is a \"fork\" of the netlify version, but it has diverged so much that it more of a standalone project now. It is cumbersome for a number of reasons:\r\n* The README still documents netlify's version (e.x. it says the database driver \"Must be mysql\", etc.)\r\n* New features of this fork are not documented on the README\r\n* By sharing the \"gotrue\" name, it's hard to search the internet for other resources and know whether they're talking about this fork or the original\r\n* Gitlab doesn't allow searching this repo's code\r\n\r\n## Describe the improvement\r\n\r\n* Unfork this repo\r\n* Change the name of the project slightly (I propose \"gotruman\")\r\n* Update the README to reflect this project\r\n",
            "author": {
                "login": "lukecyca"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-10T19:44:44Z",
            "closedAt": "2022-09-19T06:08:35Z",
            "url": "https://github.com/supabase/gotrue/issues/444",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5BsK2Z",
                    "body": "Relevant RFC: https://github.com/supabase/rfcs/pull/2",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T05:36:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/444#issuecomment-1102097817"
                },
                {
                    "id": "IC_kwDOEKipmc5KirkR",
                    "body": "Hey! \r\n\r\nThanks for the request. Unfortunately, we're a little swamped with the rest of the features we're working on(e.g. SAML, MFA, Multi-tenancy and more). We're going to close this for now but will revisit the issue when a slot frees up.\r\n\r\nWe will be updating the documentation/features this week though so feel free to let us know if there are areas that are severely lacking.\r\n\r\nAppreciate your understanding on this!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-19T06:08:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/444#issuecomment-1250605329"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5HznrY",
            "number": 447,
            "title": "Invalid login credentials when sign-up with provider",
            "body": "Following the basic auth sign-in use\r\n```ts \r\nconst { user, session, error } = await supabase.auth.signIn({ email, password })\r\n```\r\n\r\nI was able to identify some of the most common auth errors\r\n```json\r\n[\r\n  { \"message\": \"Unable to validate email address: invalid format\", \"status\": 422 },\r\n  { \"message\": \"Signup requires a valid password\", \"status\": 422 },\r\n  { \"message\": \"Invalid login credentials\", \"status\": 400 },\r\n  { \"message\": \"Email not confirmed\", \"status\": 400 },\r\n]\r\n```\r\nbut found that some errors share the same `status`, don't have an unique error code and some cases triggers the same error making it hard to debug and show useful info to the user in the UI\r\n\r\n\r\nIf a user signed up using a provider like google, will have a `Invalid login credentials` error when try to sign-in using his email and a password, that have sense since doesn't have a password set, but since is the same error when the email and the password are invalid is little hard to debug and diffirentiate between both cases\r\n\r\n\r\nit would be awesome to have access to a comprehensive and explicit list of auth errors like\r\nhttps://firebase.google.com/docs/auth/admin/errors\r\nhttps://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-managing-errors.html",
            "author": {
                "login": "salazarr-js"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-12T20:48:08Z",
            "closedAt": "2022-09-28T13:28:29Z",
            "url": "https://github.com/supabase/gotrue/issues/447",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Bhoe4",
                    "body": "related to supabase/gotrue#915 ",
                    "author": {
                        "login": "salazarr-js"
                    },
                    "createdAt": "2022-04-12T20:57:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/447#issuecomment-1099335608"
                },
                {
                    "id": "IC_kwDOEKipmc5I96QX",
                    "body": "Any update on this?",
                    "author": {
                        "login": "mghizzo"
                    },
                    "createdAt": "2022-08-23T14:53:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/447#issuecomment-1224188951"
                },
                {
                    "id": "IC_kwDOEKipmc5LKBHl",
                    "body": "Hey @salazarr-js @atzmanuel, this is a great suggestion and is something we'll definitely want to include in v2. We don't have a definite timeline for this yet as we are focusing on other auth features like MFA, SAML and multi-tenancy. Will be moving this to our internal backlog to keep track of.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-28T13:28:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/447#issuecomment-1260917221"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5H-tpv",
            "number": 451,
            "title": "External OAuth Provider Requests",
            "body": "This issue is for tracking requests/demand for integration with External OAuth Providers. Give a comment a thumbs up if you want the connector built or drop a comment if you wish to work on any of the providers below.\r\n\r\nWe will prioritise providers based on the number of upvotes/thumbs up so do upvote your favourite providers\r\n\r\n",
            "author": {
                "login": "J0"
            },
            "state": "OPEN",
            "createdAt": "2022-04-19T01:56:02Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/451",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5BrezU",
                    "body": "## Support Steam as an external OAuth Provider\r\n\r\nCurrently, Supabase does not support Steam as an external OAuth provider.\r\n\r\n## Describe the solution you'd like\r\n\r\nSupport Steam as an external OAuth Provider. https://partner.steamgames.com/doc/features/auth\r\n\r\n## Describe alternatives you've considered\r\n\r\nN/A\r\n\r\n## Additional context\r\n\r\nThis [article](https://owlspace.xyz/cybersec/steam-login/) describes how Steam's login method works.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T01:58:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101917396"
                },
                {
                    "id": "IC_kwDOEKipmc5Bre7Y",
                    "body": "## Add Patreon as OAuth provider\r\n\r\n\r\n\r\nSupport Patreon oauth.\r\n\r\n## Describe the solution you'd like\r\n\r\nSee feature request <https://github.com/netlify/gotrue/issues/312>",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T01:59:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101917912"
                },
                {
                    "id": "IC_kwDOEKipmc5BrfG0",
                    "body": "Add Quickbooks as an OAuth provider",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:01:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101918644"
                },
                {
                    "id": "IC_kwDOEKipmc5BrfQJ",
                    "body": "## Add Orcid as an OAuth provider\r\n\r\nHi\r\n\r\nI'd like to publish an app that other researchers can contribute to without signing up to anything, just using the orcid credentials they have for publishing to journals. Could you please add Orcid to the OAuth providers?\r\n\r\nhttps://info.orcid.org/documentation/features/public-api/orcid-as-a-sign-in-option-to-your-system/\r\n\r\nAll the best and many thanks for the great work!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:03:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101919241"
                },
                {
                    "id": "IC_kwDOEKipmc5Brfam",
                    "body": "## Add global.id as OAuth Provider\r\n\r\n[Link to homepage](https://global.id)\r\n[Link to docs](https://developer.global.id/documentation/index.html)\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nLetting users in with a privacy-friendly OAuth Provider while accessing/verifying user data in a privacy-friendly manner if required.\r\nFor (at least currently) no cost.\r\n\r\n## Describe the solution you'd like\r\n\r\nAdding global.id as sign-in/up option and storing requested data in the user metadata.\r\n\r\n## Describe alternatives you've considered\r\n\r\nDidn't really find a good alternative to this provider.\r\n\r\n## Additional context\r\n\r\nI would like to implement that but I have never used go before, nor do I have a clue on how to integrate it in the existing codebase.\r\nAlso, the global.id docs are somewhat odd and I've never really dealt with implementing OAuth.\r\nMaybe it can be done similar to using Auth0 but instead, use global.id but idk. [Article about Supabase with Auth0](https://supabase.com/docs/guides/integrations/auth0)\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:04:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101919910"
                },
                {
                    "id": "IC_kwDOEKipmc5Brfnu",
                    "body": "## Singpass login\r\n\r\n* Sign-in with Singpass \r\n* https://api.singpass.gov.sg/library/identiface/developers/backend-oauth2-jws\r\n\r\nNote: Singapore government might move to use [SGID](https://www.id.gov.sg/)",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:06:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101920750"
                },
                {
                    "id": "IC_kwDOEKipmc5Brfqo",
                    "body": "## Foursquare/Swam login\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWould love to be able to authenticate users with Foursquare/Swarm\r\n\r\n## Describe alternatives you've considered\r\n\r\nCurrently using [passport-foursquare](https://github.com/jaredhanson/passport-foursquare)\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:07:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101920936"
                },
                {
                    "id": "IC_kwDOEKipmc5Brf6A",
                    "body": "## SoundCloud Login\r\n\r\nPlease add SoundCloud OAuth provider.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nTo extend music streaming platform authentication.\r\n\r\n## Additional context\r\nhttps://developers.soundcloud.com/docs/api/guide#authentication\r\n\r\nNote: there is an existing PR -- #269 which contains an initial implementation",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:09:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101921920"
                },
                {
                    "id": "IC_kwDOEKipmc5BrgHC",
                    "body": "## Ethereum Login\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI'd like to let my users log in with their Eth wallet (Metamask, etc)\r\n\r\n## Describe the solution you'd like\r\n\r\nJust like Uniswap does.\r\n\r\n## Describe alternatives you've considered\r\n\r\nLooks like [Redwood has an Eth login](https://github.com/oneclickdapp/ethereum-auth).\r\n\r\n## Additional context\r\n\r\nn/a\r\n\r\nNote: there is an existing PR -- https://github.com/supabase/gotrue/pull/269 which contains an initial implementation",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:11:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101922754"
                },
                {
                    "id": "IC_kwDOEKipmc5BrgJk",
                    "body": "## Auth0\r\n\r\nWould it be possible to include Auth0 as a login provider. Would like transition over to Supabase however this is preventing me from doing so.\r\n\r\n## Describe alternatives you've considered\r\n\r\nTutorial on importing users from Auth0.\r\n\r\nRelevant resources:\r\n-  https://github.com/nextauthjs/next-auth/blob/main/src/providers/auth0.js\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:11:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101922916"
                },
                {
                    "id": "IC_kwDOEKipmc5BrgZP",
                    "body": "## Tik Tok\r\n\r\nTikTok recently published their OAuth flow\r\nhttps://developers.tiktok.com/doc/login-kit-web\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nFor the application that I am working on, we convert users from TikTok.  Currently, we plan to authenticate them from  using Phone authentication, but TikTok support could drastically improve our conversion.\r\n\r\n## Describe the solution you'd like\r\n\r\nSocial login with TikTok is supported similar to existing 3rd party providers.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThe only other alternative would be to host our own authentication server and use it in tandem with Supabase.  Not particularly ideal.\r\n\r\n## Additional context\r\n\r\nNote: there is an existing PR -- https://github.com/supabase/gotrue/pull/269 which contains an initial implementation",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:13:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101923919"
                },
                {
                    "id": "IC_kwDOEKipmc5Brgpj",
                    "body": "## Netlify\r\n\r\n## Additional context\r\n\r\nhttps://twitter.com/jlengstorf/status/1429611357356187652\r\n\r\n<img width=\"595\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10214025/130551483-e83c85db-62e9-471f-bb37-5dea9e139959.png\">\r\n\r\nhttps://app.netlify.com/user/applications\r\n\r\n\r\nRelevant Comments:\r\n> Might need to hold off on this one until some of the security issues here are covered: https://community.redwoodjs.com/t/i-implemented-a-netlify-oauth-not-identity-auth-provider-but-im-not-sure-i-should-have-and-why/903",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:15:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101924963"
                },
                {
                    "id": "IC_kwDOEKipmc5BrhfA",
                    "body": "## Kakao [ Completed ]\r\n\r\nRequested on: https://github.com/supabase/supabase/discussions/5200\r\n\r\nDeveloper docs: https://developers.kakao.com/product/kakaoLogin\r\n\r\nCorresponding PR: #366 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:23:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101928384"
                },
                {
                    "id": "IC_kwDOEKipmc5BriSL",
                    "body": " ## Add Snapchat as External OAuth Providers #436 \r\n\r\nRelevant PR: #449 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T02:31:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1101931659"
                },
                {
                    "id": "IC_kwDOEKipmc5BsHOK",
                    "body": "# Telegram\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nFor [dip.chat](https://dip.chat), we use Telegram groups. I eventually like to add login with Telegram so users can sign in to the web app and edit their profile, credit card info, etc.\r\n\r\n## Describe the solution you'd like\r\n\r\nAs a user of supabase, I would like to be able to use [Telegram](https://telegram.org/) as an authentication provider. \r\n\r\n## Describe alternatives you've considered\r\n\r\nI've requested it on NextAuth.js: https://github.com/nextauthjs/next-auth/issues/2406\r\n\r\nI've also considered contributing it there ^ or just writing it myself in my app.\r\n\r\n## Additional context\r\n\r\nI am not sure where I would start, but I would considering implementing this myself with some guidance/pointers.\r\n\r\n### Links from Telegram\r\n\r\n- [User Authorization](https://core.telegram.org/api/auth#sign-insign-up)\r\n- [Telegram Login Widget](https://core.telegram.org/widgets/login)\r\n- [Telegram Login for Websites](https://telegram.org/blog/login)\r\n\r\nOther relevant content:\r\n\r\n> Looked at including this in #245 but as this [reply ](https://github.com/nextauthjs/next-auth/issues/2406#issuecomment-913238005) said its not standard 0Auth so the Supabase team might need to look at this one\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-04-19T05:27:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1102082954"
                },
                {
                    "id": "IC_kwDOEKipmc5CXvkg",
                    "body": "Hi @J0, are we looking to implement OAuth for Yandex? ",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2022-04-29T16:49:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1113520416"
                },
                {
                    "id": "IC_kwDOEKipmc5Calig",
                    "body": "Hi, we'd like to implement the Instagram oauth provider. Is the team open to this? Are contributers also expected to help on the frontend? I'd prefer to just focus on the provider side.",
                    "author": {
                        "login": "dangdennis"
                    },
                    "createdAt": "2022-05-01T15:28:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1114265760"
                },
                {
                    "id": "IC_kwDOEKipmc5Ckpjx",
                    "body": "Hey @dangdennis, \r\n\r\nSorry for the delayed reply -- was a bank holiday for us over the past two days. Yes we are accepting contributions! And no worries about the frontend we will take care of it.\r\n\r\nWe'd also greatly appreciate it if you'd be able to add a short guide on how to use the provider: https://github.com/supabase/supabase/pull/5398/files after finishing the PR. This is so that developers can best figure out how to use the provider in their application. \r\n\r\nFeel free to let us know if you have any questions or if you run into any issues! \r\n\r\nThanks so much!\r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-04T03:58:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1116903665"
                },
                {
                    "id": "IC_kwDOEKipmc5Ckps1",
                    "body": "@bariqhibat \r\n\r\nYup, we are accepting contributions for Yandex provider. Just saw your PR -- the team will review shortly.\r\n\r\nThanks much!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-04T04:00:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1116904245"
                },
                {
                    "id": "IC_kwDOEKipmc5GBXTQ",
                    "body": "Transferred: IMDb OAuth request  from #528",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-05T08:20:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1174762704"
                },
                {
                    "id": "IC_kwDOEKipmc5J30HT",
                    "body": "# Roblox\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nRoblox recently opened up a private alpha for their new OAuth2 system, and should become public in a few months. I can keep this issue updated with any news, so that once it becomes public it can be implemented into Supabase.\r\n\r\nUntil then, I will come up with a basic draft and see if I can get it functioning properly locally.\r\n\r\nRoblox is what my app is based around, but I am currently using Discord OAuth through Supabase and authenticating them using other means afterwards. Adding this OAuth would make my lif etc.\r\n\r\n## Describe the solution you'd like\r\n\r\nAs a user of supabase, I would like to be able to use Roblox as an authentication provider. \r\n\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:09:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1239368147"
                },
                {
                    "id": "IC_kwDOEKipmc5J30Q5",
                    "body": "## Reddit\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nNo.\r\n\r\n## Describe the solution you'd like\r\n\r\nIt would be cool if Reddit OAuth could be used in Supabase.\r\n\r\n## Describe alternatives you've considered\r\n\r\nMaking my own. \ud83d\udc80\r\n\r\n## Additional context\r\n\r\nN/A",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-07T13:09:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1239368761"
                },
                {
                    "id": "IC_kwDOEKipmc5J30sJ",
                    "body": "## Ory\r\n\r\nI want a new Ory Hydra OAuth2 Provider Integration\r\n\r\n## Describe the solution you'd like\r\n\r\nWaiting for someone/team/community integrate Ory Hydra OAuth2 Provider\r\n\r\n## Describe alternatives you've considered\r\n\r\nThe alternative is integrate it, and contribute with PR of the Integration with some info how to setup and a online demo of everything working, and a deployed OryHydra server if supabase members wants to test integration without deploy it\r\n\r\n## Additional context\r\n\r\nThis same feature request will be in repos supabase-js and supabase gotrue repos\r\n\r\n- [related issue](https://github.com/supabase/gotrue-js/issues/316)",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-07T13:11:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1239370505"
                },
                {
                    "id": "IC_kwDOEKipmc5KEXA-",
                    "body": "Having Nextcloud would be great.\r\n\r\n[Documentation](https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/oauth2.html)\r\n[Example client in PHP](https://github.com/bahuma20/oauth2-nextcloud)",
                    "author": {
                        "login": "AaronDewes"
                    },
                    "createdAt": "2022-09-10T07:29:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1242656830"
                },
                {
                    "id": "IC_kwDOEKipmc5KdMOQ",
                    "body": "# Zoho  \r\nHi, would be nice to have [Zoho](https://www.zoho.com/) as an OAuth provider.  \r\nWilling to submit a PR too, please let me know if I can :)\r\n\r\n[Documentation](https://www.zoho.com/accounts/protocol/oauth.html)",
                    "author": {
                        "login": "CatalanCabbage"
                    },
                    "createdAt": "2022-09-16T09:52:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1249166224"
                },
                {
                    "id": "IC_kwDOEKipmc5KirIE",
                    "body": "## Feature request\r\n\r\nSupport Game Center OAuth\r\n\r\n## Additional context\r\n\r\nhttps://github.com/supabase-community/supabase-flutter/issues/156\r\nhttps://developers.google.com/games/services",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-19T06:06:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1250603524"
                },
                {
                    "id": "IC_kwDOEKipmc5NPbZN",
                    "body": "# LINE\r\n\r\nHi, would be nice to have [LINE](https://developers.line.biz/en/reference/line-login/) as an OAuth provider.\r\nGonna try submitting a PR \ud83d\udcaa ",
                    "author": {
                        "login": "nerixim"
                    },
                    "createdAt": "2022-10-29T16:22:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1295889997"
                },
                {
                    "id": "IC_kwDOEKipmc5OM6D3",
                    "body": "## Battle.net\r\nI'd like to have [Battle.net](https://www.battle.net) as an OAuth provider.\r\nThank you!\r\n\r\n\r\n[Documentation](https://develop.battle.net/documentation/guides/using-oauth)",
                    "author": {
                        "login": "yuta-51"
                    },
                    "createdAt": "2022-11-11T18:01:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1312006391"
                },
                {
                    "id": "IC_kwDOEKipmc5O8opA",
                    "body": "# Amazon.com\r\n\r\nIt would be great to have sign in with Amazon as I have a client waiting on support before purchasing. Happy to sponsor an effort to get this done.\r\n\r\n[Here is the documentation.](https://developer.amazon.com/apps-and-games/login-with-amazon)",
                    "author": {
                        "login": "point-source"
                    },
                    "createdAt": "2022-11-23T03:58:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1324517952"
                },
                {
                    "id": "IC_kwDOEKipmc5RzEVv",
                    "body": "# Strava\r\n\r\nVery important integrations for any sport-related applications.\r\n\r\nStrava Docs: https://developers.strava.com/docs/authentication/\r\n",
                    "author": {
                        "login": "pythonicode"
                    },
                    "createdAt": "2023-01-05T15:10:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1372341615"
                },
                {
                    "id": "IC_kwDOEKipmc5RzEuc",
                    "body": "# Garmin Connect\r\n\r\nOptionally, another important connection for sport-related apps. I don't know it it supports OAuth2 but seems to support OAuth1 but it looks more complicated to get setup than Strava.\r\n\r\nDocs: https://developer.garmin.com/gc-developer-program/program-faq/",
                    "author": {
                        "login": "pythonicode"
                    },
                    "createdAt": "2023-01-05T15:11:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1372343196"
                },
                {
                    "id": "IC_kwDOEKipmc5Tq0ot",
                    "body": "## Provider request: Mastodon\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nMastodon is growing in popularity and could be very useful to add as an auth provider.\r\n\r\n## Additional context\r\n\r\nDue to the federated nature of mastodon, I think login can be setup per-server instance.\r\n\r\nI'm not exactly sure how to reflect that.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-25T14:46:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1403734573"
                },
                {
                    "id": "IC_kwDOEKipmc5VSASp",
                    "body": "----------\r\n### **Yandex ID and VK ID**\r\n----------\r\nPlease add the possibility of OAuth via Yandex ID and VK ID\r\n\r\n- Yandex ID: [click](https://yandex.ru/id/business?utm_source=yandex&utm_medium=yandex-id&utm_campaign=link-owners-sites)\r\n- VK ID: [click](https://platform.vk.com/vkid)\r\n\r\nThese services are the largest authorization providers in the CIS countries",
                    "author": {
                        "login": "AinurY300"
                    },
                    "createdAt": "2023-02-15T05:37:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1430783145"
                },
                {
                    "id": "IC_kwDOEKipmc5WgNum",
                    "body": "## Provider Request: Huawei\r\nIt would be nice if users could authenticate with Huawei Auth. Huawei has many users in Asia-Pacific countries.\r\nThank you.\r\n\r\n## Additional context\r\nDocumentation: [Huawei Auth](https://developer.huawei.com/consumer/en/agconnect/auth-service/)",
                    "author": {
                        "login": "keepant"
                    },
                    "createdAt": "2023-03-02T04:32:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1451285414"
                },
                {
                    "id": "IC_kwDOEKipmc5h2cGw",
                    "body": "# Add generic OAuth2/OIDC provider\r\n\r\nA generic OAuth2/OIDC provider similar to what [Auth0 offers](https://auth0.com/docs/authenticate/identity-providers/social-identity-providers/oauth2) would cover most (if not all) of the provider requests in this thread in one hit.\r\n\r\nThis would enable developers to simply provide, at a minimum:\r\n* Authorisation Server URL (which provides a `.well-known/openid-configuration` endpoint to discover token URLs etc).\r\n* Client ID\r\n* Client Secret\r\n* Callback URL\r\n* (maybe) a mapping for claims?\r\n\r\nI'm surprised this hasn't already been suggested. Is there some complexity that I'm missing?",
                    "author": {
                        "login": "rohanliston"
                    },
                    "createdAt": "2023-07-19T08:34:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1641660848"
                },
                {
                    "id": "IC_kwDOEKipmc5i34kH",
                    "body": "Hey @rohanliston, great question! not all social providers comply to the OIDC spec and might not have an authorization server URL. As for the mapping for claims, not all the social providers return the user data the same way (take linkedin vs workos for e.g.). Also, gotrue currently follows an automatic linking model to link 2 identities with the same email to the same user. This means that having an insecure oauth provider added could compromise logins for a user. This is also why we currently enforce the email returned from the oauth provider to be verified. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:18:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1658816775"
                },
                {
                    "id": "IC_kwDOEKipmc5i35w3",
                    "body": "## Add Yahoo as OAuth provider\r\n\r\n\r\n\r\nSupport Yahoo oauth.\r\n\r\n## Describe the solution you'd like\r\n\r\nSee feature request <https://github.com/supabase/gotrue/issues/1191>",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:19:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1658821687"
                },
                {
                    "id": "IC_kwDOEKipmc5jIS2c",
                    "body": "@kangmingtay Thanks for your response! To address your points:\r\n\r\n> not all social providers comply to the OIDC spec and might not have an authorization server URL.\r\n\r\nThat's fine, there are still countless providers that are OIDC-compliant. The ones that aren't compliant would require a dedicated provider as they do now. I don't think this is a reason not to implement a generic provider.\r\n\r\n> As for the mapping for claims, not all the social providers return the user data the same way (take linkedin vs workos for e.g.). \r\n\r\nYep, we'd definitely need a mapper of some sort. A simple approach would be to have the user define a JSON object to define the mapping. Dot notation could be used to map nested fields.\r\n\r\n> Also, gotrue currently follows an automatic linking model to link 2 identities with the same email to the same user. This means that having an insecure oauth provider added could compromise logins for a user. This is also why we currently enforce the email returned from the oauth provider to be verified.\r\n\r\nDoes gotrue require the user to authenticate to both accounts before linking? Relying on email verification alone isn't totally secure, because the account can still be compromised later on. Email verification only proves that the user had control of the account when it was created.\r\n\r\nAuth0 highlights this in their [docs](https://auth0.com/docs/manage-users/user-accounts/user-account-linking#precautions) and has a secure approach to account linking in their [Account Link Extension](https://auth0.com/docs/customize/extensions/account-link-extension#how-does-the-extension-work-):\r\n\r\n```\r\nThe extension does not automatically link users with the same email, even if emails are verified,\r\nbecause verified emails are not enough evidence to prove that the user can currently authenticate\r\nto both accounts.\r\n\r\n...\r\n\r\nThis process [of authenticating to both accounts at link time] ensures that the user has the credentials\r\nto authenticate to both accounts, which allows the accounts to be linked safely and correctly.\r\n```\r\n\r\nRegardless, I think whether or not an external provider is 'secure' should be a concern of the application developer setting up the integration. Gotrue should merely provide the means to support the integration itself in a secure way within its own sphere of control.\r\n\r\n",
                    "author": {
                        "login": "rohanliston"
                    },
                    "createdAt": "2023-08-03T00:09:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1663118748"
                },
                {
                    "id": "IC_kwDOEKipmc5n1lLr",
                    "body": "# Support Salesforce as an OAuth Provider\r\nCurrently, Supabase does not support Salesforce as an external OAuth provider.\r\n\r\n# Describe the solution you'd like\r\nSuport Salesforce as an OAuth provider https://login.salesforce.com/.well-known/openid-configuration\r\n\r\n# Describe alternatives you've considered\r\nN/A\r\n\r\n# Additional context\r\nWell-known config: https://login.salesforce.com/.well-known/openid-configuration\r\nDocs: https://help.salesforce.com/s/articleView?id=sf.remoteaccess_oauth_web_server_flow.htm&type=5\r\n\r\n**NOTE**: Salesforce allows users to configure custom subdomains for their environments, but support for this would not be required as the user can go to the standard login page (login.salesforce.com and login their, unless explicitly disallowed, in which case they can choose \"Use Custom Domain\".\r\n\r\nIn order to test this flow:\r\n1. Get a free developer edition org - https://developer.salesforce.com/signup\r\n2. In setup menu, go to \"App Manager\" and choose \"New Connected App\"\r\n3. Enter required fields and select \"Enable OAuth Settings\"\r\n4. Specify callback URL and choose some default scopes (scopes can be overridden at runtime) and save\r\n5. Click Manage Consumer Details to see the client id and client secret\r\n\r\n![image](https://github.com/supabase/gotrue/assets/5461649/1eebc812-809d-47ba-8964-0862048b44a2)\r\n\r\n![image](https://github.com/supabase/gotrue/assets/5461649/5d71da82-f560-4d5b-b965-da8926c91917)\r\n\r\n",
                    "author": {
                        "login": "paustint"
                    },
                    "createdAt": "2023-10-01T14:29:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1742099179"
                },
                {
                    "id": "IC_kwDOEKipmc5ob3Ur",
                    "body": "> # Add generic OAuth2/OIDC provider\r\n\r\nhttps://github.com/supabase/gotrue/issues/451#issuecomment-1641660848\r\n\r\nI'd like to work on a generic OAuth2 provider. Since the comments of @rohanliston in August, @kangmingtay has [updated the CONTRIBUTING.md text](https://github.com/supabase/gotrue/commit/52d9df7156fa1430d84b3496b67e8df566f5c30b) to suggest that such a generic provider is officially regarded as a possible way forward.\r\n\r\nBy default, I would go for a generic OAuth2 client, similar to the one described by the [auth0 docs](https://auth0.com/docs/authenticate/identity-providers/social-identity-providers/oauth2). This is as opposed to a generic OIDC flow, which was previously present in gotrue but was then removed in #927, for reasons which are explained [here](https://github.com/supabase/gotrue/issues/434#issuecomment-1287755049), and which sound like the Supabase team needs to resolve things internally first. If the generic OAuth2 client is the wrong direction to head in, please let me know.",
                    "author": {
                        "login": "carlobeltrame"
                    },
                    "createdAt": "2023-10-08T19:08:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1752134955"
                },
                {
                    "id": "IC_kwDOEKipmc5ogcor",
                    "body": "@J0 any updates on the Telegram provider? It has been more than a year now since its request, and as far as I can see it is one of the most requested providers in this thread.",
                    "author": {
                        "login": "MonsterDeveloper"
                    },
                    "createdAt": "2023-10-09T16:41:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1753336363"
                },
                {
                    "id": "IC_kwDOEKipmc5pw8ay",
                    "body": "> # Add generic OAuth2/OIDC provider\r\n> A generic OAuth2/OIDC provider similar to what [Auth0 offers](https://auth0.com/docs/authenticate/identity-providers/social-identity-providers/oauth2) would cover most (if not all) of the provider requests in this thread in one hit.\r\n> \r\n> This would enable developers to simply provide, at a minimum:\r\n> \r\n> * Authorisation Server URL (which provides a `.well-known/openid-configuration` endpoint to discover token URLs etc).\r\n> * Client ID\r\n> * Client Secret\r\n> * Callback URL\r\n> * (maybe) a mapping for claims?\r\n> \r\n> I'm surprised this hasn't already been suggested. Is there some complexity that I'm missing?\r\n\r\nIs there any progress on this? ",
                    "author": {
                        "login": "Mutondi"
                    },
                    "createdAt": "2023-10-23T04:58:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1774438066"
                },
                {
                    "id": "IC_kwDOEKipmc5p5Gyt",
                    "body": "## Linear\r\nI would like [Linear](https://linear.app/) as an OAuth Provider\r\n\r\nDocumentation: https://developers.linear.app/docs/oauth/authentication",
                    "author": {
                        "login": "stripuramallu3"
                    },
                    "createdAt": "2023-10-24T05:54:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1776577709"
                },
                {
                    "id": "IC_kwDOEKipmc5p5_ek",
                    "body": "> Is there any progress on this?\r\n\r\n@Mutondi I have started working on it, currently I am looking into how I can extend the database schema in order to store the additional information required for genericity, such as the field mapping.\r\n\r\nI could use this extension myself in February 2024. So if you have the time to test the feature with your own provider once I open the PR, that would be great news.",
                    "author": {
                        "login": "carlobeltrame"
                    },
                    "createdAt": "2023-10-24T09:03:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1776809892"
                },
                {
                    "id": "IC_kwDOEKipmc5smiQ6",
                    "body": "> ## Support Steam as an external OAuth Provider\r\n> Currently, Supabase does not support Steam as an external OAuth provider.\r\n> \r\n> ## Describe the solution you'd like\r\n> Support Steam as an external OAuth Provider. https://partner.steamgames.com/doc/features/auth\r\n> \r\n> ## Describe alternatives you've considered\r\n> N/A\r\n> \r\n> ## Additional context\r\n> This [article](https://owlspace.xyz/cybersec/steam-login/) describes how Steam's login method works.\r\n\r\nIs there an ETA for Steam as an Auth Provider? Or even a Custom Provider option? ",
                    "author": {
                        "login": "Whats-A-MattR"
                    },
                    "createdAt": "2023-11-22T03:42:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/451#issuecomment-1822041146"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5H_0T3",
            "number": 452,
            "title": "Missing 00-init-schema migration",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen trying to start a GoTrue instance with an external database the first migration `00_init_auth_schema.up.sql` fails because the `auth` schema is not defined. In the supabase documentation and repo a volume is mounted with a sql script `00-initial-schema.sql` responsible for creating the user `supabase_admin`, roles and extensions. While the first script `01-auth-schema.sql` has as its first instruction the creation of the `auth` schema. It might be useful to bring it into the GoTrue repo as well to allow instances to be launched without manual intervention.\r\n\r\n## Expected behavior\r\n\r\nMigrations should have everything needed.\r\n\r\n",
            "author": {
                "login": "claudioquaglia"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-19T07:51:01Z",
            "closedAt": "2022-05-17T06:43:08Z",
            "url": "https://github.com/supabase/gotrue/issues/452",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5CI8mr",
                    "body": "Hi @claudioquaglia, does it mean we'd just need to add a line to create the schema if it doesn't exists?",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2022-04-26T10:44:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/452#issuecomment-1109641643"
                },
                {
                    "id": "IC_kwDOEKipmc5CJNnD",
                    "body": "Hi @bariqhibat yup like it's done [here](https://github.com/supabase/supabase/blob/9db54c2269f5ceaba7588a823bbdac42b18ce06b/docker/volumes/db/init/01-auth-schema.sql#L2). Btw I think it's needed an initial migration like is done [here](https://github.com/supabase/supabase/blob/master/docker/volumes/db/init/00-initial-schema.sql) to create the user as well and enable needed extensions. This allow to have a full up and running instance without need to run scripts.",
                    "author": {
                        "login": "claudioquaglia"
                    },
                    "createdAt": "2022-04-26T12:04:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/452#issuecomment-1109711299"
                },
                {
                    "id": "IC_kwDOEKipmc5CJzkw",
                    "body": "Hi @claudioquaglia, thanks for the prompt reply. Sounds good, I'll make a PR on this additions",
                    "author": {
                        "login": "bariqhibat"
                    },
                    "createdAt": "2022-04-26T14:27:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/452#issuecomment-1109866800"
                },
                {
                    "id": "IC_kwDOEKipmc5DQyxD",
                    "body": "Hey all,\r\n\r\nApologies on the confusion -- going to go ahead and close this issue for now.\r\n\r\nGoing to close the issue as per: https://github.com/supabase/gotrue/pull/458#issuecomment-1111585758\r\n\r\nAs documentation improves hopefully this will be less of an issue. Feel free to reopen if you have any questions/concerns though.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-17T06:43:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/452#issuecomment-1128475715"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5IAtip",
            "number": 453,
            "title": "Flexible email verification logic",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nOn authentication settings, if I select\r\n\r\n**\"Enable email confirmations\" // true**\r\n\r\nThe user does not get logged in on [`signUp`](https://supabase.com/docs/reference/javascript/auth-signup), I would like the user to be able to upload an avatar on signup but security policies block it because they're not logged in.\r\n\r\n**\"Enable email confirmations\" // false**\r\n\r\nEmail is automatically confirmed, `email_confirmed_at` etc on `auth.users` is set as confirmed, no email confirmations are sent.\r\n\r\n## Describe the solution you'd like\r\n\r\nSplit the option into 2, e.g.\r\n\"Enable email confirmations\" - allows signin, but email is not confirmed, I as the developer handle this state of unverified users myself in my app\r\n\"Require email confirmation for signin\" - if not checked, signup logs user in, but email is not confirmed, and if \"Enable email confirmations\" the email verification email still gets sent out\r\n\r\nAlso, in postgres an `auth.emailVerified()` function or something would be nice to check if user is verified :)\r\n\r\n\r\n## Describe alternatives you've considered\r\n\r\n## Additional context\r\n\r\n",
            "author": {
                "login": "wadclapp"
            },
            "state": "OPEN",
            "createdAt": "2022-04-15T17:15:00Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/453",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LJFiN",
                    "body": "Thank you for this issue. This is something we're going to look into fixing and I've added it in our backlog. We can't promise any timelines yet.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:58:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/453#issuecomment-1260673165"
                },
                {
                    "id": "IC_kwDOEKipmc5cOibC",
                    "body": "Added as potential use case for triggers",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-15T07:17:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/453#issuecomment-1547314882"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5IHf08",
            "number": 456,
            "title": "Custom SMS Provider",
            "body": "# Feature request\n\n## Is your feature request related to a problem?\n\nYes. i current building app that require SMS OTP authentication. \n\nDue my SMS API provider not available in current Supabase supported SMS provider so i can't provide SMS OTP in my app.\n\n## Describe the solution you'd like\n\nGive option to use external SMS provider through webhook. \n\nSo **when SMS OTP requested through Supabase API, then Supabase will send request to configured URL and check the condition (that will configured on dashboard)**\n\n## Describe alternatives you've considered\n\nCurrently i not provide SMS OTP on my app, but the plan is self-hosting and add my SMS provider logic\n\n\n## Additional context\n\nNone.\n",
            "author": {
                "login": "ardyfeb"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-20T16:28:07Z",
            "closedAt": "2022-05-14T17:29:53Z",
            "url": "https://github.com/supabase/gotrue/issues/456",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5CZC8b",
                    "body": "hi, just wondering, which sms provider are you using currently?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-04-29T23:35:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/456#issuecomment-1113861915"
                },
                {
                    "id": "IC_kwDOEKipmc5CZW38",
                    "body": "@kangmingtay currently using local sms provider https://nusasms.com/",
                    "author": {
                        "login": "ardyfeb"
                    },
                    "createdAt": "2022-04-30T07:50:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/456#issuecomment-1113943548"
                },
                {
                    "id": "IC_kwDOEKipmc5DKJio",
                    "body": "I guess this is an duplicate of https://github.com/supabase/gotrue/issues/385",
                    "author": {
                        "login": "w0wka91"
                    },
                    "createdAt": "2022-05-14T15:10:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/456#issuecomment-1126733992"
                },
                {
                    "id": "IC_kwDOEKipmc5DKVAB",
                    "body": "okay, closing this",
                    "author": {
                        "login": "ardyfeb"
                    },
                    "createdAt": "2022-05-14T17:29:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/456#issuecomment-1126780929"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Iz9gu",
            "number": 464,
            "title": "Telegram as an Auth Provider",
            "body": "# Feature request\r\nAS there are many people who use Telegram and in the last update 8.7 they provide Web Bots, a way to open web apps inside Telegram. I suggest supporting Telegram as an Auth Provider\r\n\r\n## Links\r\nhttps://core.telegram.org/widgets/login\r\nhttps://core.telegram.org/bots/api#telegram-passport\r\nhttps://core.telegram.org/bots/webapps\r\n\r\n",
            "author": {
                "login": "Mi3liX9"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-22T14:30:51Z",
            "closedAt": "2022-04-29T21:51:51Z",
            "url": "https://github.com/supabase/gotrue/issues/464",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5CYswH",
                    "body": "Would love to work on this one",
                    "author": {
                        "login": "w0wka91"
                    },
                    "createdAt": "2022-04-27T20:38:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/464#issuecomment-1113771015"
                },
                {
                    "id": "IC_kwDOEKipmc5CYswR",
                    "body": "@kangmingtay can we just transfer this to gotrue repo?",
                    "author": {
                        "login": "MildTomato"
                    },
                    "createdAt": "2022-04-29T16:23:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/464#issuecomment-1113771025"
                },
                {
                    "id": "IC_kwDOEKipmc5CYvU7",
                    "body": "merged into megathread (https://github.com/supabase/gotrue/issues/451#issuecomment-1102082954), please upvote it if you'd like it to be implemented and prioritized :) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-04-29T21:51:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/464#issuecomment-1113781563"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMjIzNjY5NjA1",
            "number": 467,
            "title": "Auth token gap between token refresh",
            "body": "# Bug report\r\n\r\nNot sure what is happening but it seems like there is a time gap between the token refresh of a logged in user. I am getting a couple of minutes of \"JWT expired\" error then everithing returns to normal.\r\n\r\n## To Reproduce\r\n\r\nNot sure.\r\n\r\n## Expected behavior\r\n\r\nUser should persist without errors.\r\n\r\n## System information\r\n\r\ncreate-react-app\r\n",
            "author": {
                "login": "Skil3e"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-23T09:20:23Z",
            "closedAt": "2022-09-07T13:59:45Z",
            "url": "https://github.com/supabase/gotrue/issues/467",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5J4Da_",
                    "body": "Hey @Skil3e, will be closing this issue since I can't seem to reproduce it at this point.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:59:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/467#issuecomment-1239430847"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5JBWDy",
            "number": 469,
            "title": "Problem sending SMS for OPT in Twillio ",
            "body": "# Bug report\r\nProblem sending SMS for OPT verification with twillio service\r\n\r\n## Describe the bug\r\nWhen the service is activated to authenticate with Twilio activating the OPT verification will generate an error saying: `Error sending confirmation sms: json: cannot unmarshal number into Go struct field SmsStatus.status of type string`\r\n\r\n## To Reproduce\r\n\r\n1. Configure Twillio Integration in Settings\r\n2. Disable `Enable phone confirmations`\r\n3. Try to register with phone and password\r\n4. Go to Settings -> Authentication -> User and send OTP for user registered in previous step\r\n5. Get the error:\r\n ` \"code\": 400,\r\n    \"msg\": \"Error sending confirmation sms: json: cannot unmarshal number into Go struct field SmsStatus.status of type string\"`\r\n\r\n## Expected behavior\r\nThis should allow the confirmation to be sent, even if the \"Enable phone confirmations\" option is activated, it does not allow registration, throwing the same error\r\n\r\n## Screenshots\r\n![image](https://user-images.githubusercontent.com/10134910/166628028-29e23fea-abde-4121-b5f4-66a8221a59d2.png)\r\n\r\n## System information\r\n\r\n Ionic CLI                     : 6.19.0 (/usr/lib/node_modules/@ionic/cli)\r\n   Ionic Framework               : @ionic/angular 6.1.3\r\n   @angular-devkit/build-angular : 13.2.6\r\n   @angular-devkit/schematics    : 13.2.6\r\n   @angular/cli                  : 13.2.6\r\n   @ionic/angular-toolkit        : 6.1.0\r\n\r\nCapacitor:\r\n\r\n   Capacitor CLI      : 3.5.0\r\n   @capacitor/android : not installed\r\n   @capacitor/core    : 3.5.0\r\n   @capacitor/ios     : not installed\r\n\r\nUtility:\r\n\r\n   cordova-res : not installed globally\r\n   native-run  : 1.5.0\r\n\r\nSystem:\r\n\r\n   NodeJS : v16.14.2 (/usr/bin/node)\r\n   npm    : 8.7.0\r\n   OS     : Linux 5.10\r\n",
            "author": {
                "login": "dmorfav"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-04T05:53:14Z",
            "closedAt": "2022-06-29T01:25:12Z",
            "url": "https://github.com/supabase/gotrue/issues/469",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Crbje",
                    "body": "I will have a look at this one if thats okay",
                    "author": {
                        "login": "w0wka91"
                    },
                    "createdAt": "2022-05-05T15:15:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1118681310"
                },
                {
                    "id": "IC_kwDOEKipmc5Ctmp5",
                    "body": "@w0wka91  \r\n\r\nGo for it! Feel free to let us know if you need any help :)",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-06T04:31:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1119251065"
                },
                {
                    "id": "IC_kwDOEKipmc5Cv0vS",
                    "body": " Is there any way to test or debug this locally?",
                    "author": {
                        "login": "w0wka91"
                    },
                    "createdAt": "2022-05-06T17:22:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1119833042"
                },
                {
                    "id": "IC_kwDOEKipmc5Cw-XX",
                    "body": "Hi, i test the send a SMS with curl and this is the structure of response:\r\n```json\r\n{\"sid\": \"SM83c95095a2464122a90418b9765f65fc\", \"date_created\": \"Sat, 07 May 2022 04:45:11 +0000\", \"date_updated\": \"Sat, 07 May 2022 04:45:11 +0000\", \"date_sent\": null, \"account_sid\": \"$ACCOUNT_SID\", \"to\": \"$TO_NUMBER\", \"from\": \"$FROM_NUMBER\", \"messaging_service_sid\": null, \"body\": \"Sent from your Twilio trial account - This will be the body of the new message!\", \"status\": \"queued\", \"num_segments\": \"1\", \"num_media\": \"0\", \"direction\": \"outbound-api\", \"api_version\": \"2010-04-01\", \"price\": null, \"price_unit\": \"USD\", \"error_code\": null, \"error_message\": null, \"uri\": \"URL.json\", \"subresource_uris\": {\"media\": \"URL.json\"}}\r\n```\r\n> I change the personal values with $VAR\r\n\r\nI follow this [example](https://www.twilio.com/docs/usage/requests-to-twilio)",
                    "author": {
                        "login": "dmorfav"
                    },
                    "createdAt": "2022-05-07T04:58:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1120134615"
                },
                {
                    "id": "IC_kwDOEKipmc5CyJko",
                    "body": "I was able to reproduce the error message the following way:\r\n\r\n1. Configure Twillio Integration with **INVALID credentials** in Settings\r\n2. Disable Enable phone confirmations\r\n3. Register with phone and password\r\n4. Settings -> Authentication -> User - Send OTP for user registered in previous step\r\n\r\nThis will trigger an HTTP-Call to a non existent Twilio Endpoint and according to the Twilio Docs the API returns exceptions in the HTTP response body when something goes wrong. https://www.twilio.com/docs/usage/twilios-response#response-formats-exceptions.\r\nAt the moment we are only handling 400 responses: https://github.com/supabase/gotrue/blob/master/api/sms_provider/twilio.go#L76\r\nWhat are your thoughts about that?\r\n\r\n@dmorfav Are you sure you supplied correct credentials?\r\n\r\n",
                    "author": {
                        "login": "w0wka91"
                    },
                    "createdAt": "2022-05-08T15:52:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1120442664"
                },
                {
                    "id": "IC_kwDOEKipmc5C6Hb3",
                    "body": "@w0wka91 I have recreated the credentials in twilio and if everything has worked correctly, I apologize for the inconvenience and thanks for the collaboration.",
                    "author": {
                        "login": "dmorfav"
                    },
                    "createdAt": "2022-05-10T15:16:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1122531063"
                },
                {
                    "id": "IC_kwDOEKipmc5C6LXO",
                    "body": "I think we shouldnt just close this bug but rather deal with these exceptions correctly. \r\nMaybe we could display an error if we get an 404:\r\n\"Cannot find Twilio Endpoint. Please check credentials.\"\r\nWhat do you think @J0 ?",
                    "author": {
                        "login": "w0wka91"
                    },
                    "createdAt": "2022-05-10T15:29:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1122547150"
                },
                {
                    "id": "IC_kwDOEKipmc5DM1wb",
                    "body": "Hey @w0wka91,\r\n\r\nApologies for the delayed reply -- missed this. I'm open to the idea of supporting 404 errors but would like to consider other options as well. Let me check with the team and get back to you. Will reopen the issue for now\r\n\r\ncc @kangmingtay  @thorwebdev ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-16T09:26:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1127439387"
                },
                {
                    "id": "IC_kwDOEKipmc5Di0dy",
                    "body": "@w0wka91 i think we can just treat any non-2xx status codes as an error and return the error message that twilio sends to the end user rather than coming up with our own error messages for each error code. But yeah, the fix [here](https://github.com/supabase/gotrue/blob/8689fd206f2c5d678880c2254ddf85b53fa22485/api/sms_provider/twilio.go#L76) should be simple, we can just change it to `if res.StatusCode/100 != 2`",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-05-20T18:38:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1133201266"
                },
                {
                    "id": "IC_kwDOEKipmc5FtDIK",
                    "body": "Fixed by #515 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-29T01:25:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/469#issuecomment-1169437194"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5JIE2l",
            "number": 472,
            "title": "Use query params instead of fragments for callback",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nUsing a Go backend (with [supabase-go](https://github.com/nedpals/supabase-go)), I can't access the `#` fragment that holds the access token on successful authentication. The [server can't access the fragment](https://stackoverflow.com/questions/25489843/http-server-get-url-fragment).\r\n\r\n## Describe the solution you'd like\r\n\r\nChange the callback function back* to using query params, or allow the client to select which they'd like (likely unnecessary)\r\n\r\n\\* This seems like this was changed in #16, could be worth reverting again.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThere are no possible alternatives in my case, as I want to use little to no JavaScript for my authentication (and use cookies, etc)\r\n\r\n## Additional context\r\n\r\nN/A\r\n",
            "author": {
                "login": "jackmerrill"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-05T15:42:48Z",
            "closedAt": "2022-05-31T16:51:01Z",
            "url": "https://github.com/supabase/gotrue/issues/472",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5EDLpb",
                    "body": "Hey @jackmerrill,\r\n\r\nWe originally switched to params but realised that it might not be as secure as # because params are sent to the server and can be modified in transit so we switched it back\r\n\r\nWe're looking into a stable and secure server side auth flow and will keep you posted this issue once out.\r\n\r\nThanks!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-31T05:33:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/472#issuecomment-1141684827"
                },
                {
                    "id": "IC_kwDOEKipmc5EHAyP",
                    "body": "> Hey @jackmerrill,\r\n> \r\n> We originally switched to params but realised that it might not be as secure as # because params are sent to the server and can be modified in transit so we switched it back\r\n> \r\n> We're looking into a stable and secure server side auth flow and will keep you posted this issue once out.\r\n> \r\n> Thanks!\r\n\r\nYeah, I saw #279, hoping it gets fixed soon! Thanks though!",
                    "author": {
                        "login": "jackmerrill"
                    },
                    "createdAt": "2022-05-31T22:14:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/472#issuecomment-1142688911"
                },
                {
                    "id": "IC_kwDOEKipmc5sUKjm",
                    "body": "I realize this is closed, but I basically have the same issue @jackmerrill described. I'm using Go+HTMX and am trying to set a cookie without using Javascript just to grab a URL fragment.",
                    "author": {
                        "login": "dutchdata"
                    },
                    "createdAt": "2023-11-17T22:58:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/472#issuecomment-1817225446"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5J2-Re",
            "number": 474,
            "title": "Server panics when operating in multi-instance mode",
            "body": "# Bug report\r\n\r\nWhen running the server under multi-tenancy using `gotrue multi` all requests to the server fail with a nil reference panic. This is most likely occurring here:\r\n\r\nhttps://github.com/supabase/gotrue/blob/8689fd206f2c5d678880c2254ddf85b53fa22485/api/middleware.go#L97-L101\r\n\r\nThe panic is triggered because in this case, config is always null because the `withInstanceConfig` method (which updates the config) isn't called until the end of the function here:\r\n\r\nhttps://github.com/supabase/gotrue/blob/8689fd206f2c5d678880c2254ddf85b53fa22485/api/middleware.go#L137\r\n\r\nThis is kind of a chicken or egg problem in acquiring the instance specific JWT Token. In the Netlify version of the service, the operator token is used to verify the JWS, which is non-ideal since the my understanding is that he client is supposed to posses this token.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Run the server in multi-tenancy mode using: `gotrue multi`\r\n3. Create an instance by sending a POST request to the `/settings` endpoint.\r\n4. Send a request to the API using a signature in the `x-nf-sign` header with the following claims: `{\r\n  \"site_url\": \"https://example.netlify.com\",\r\n  \"netlify_id\": \"2c2db737-649f-4572-9740-e8691d57806a\",\r\n  \"id\": \"db6a5e12-c314-4b6b-8f35-d87709cdf32c\"\r\n}`\r\n5. The server will now panic when the `config` variable (which is always nil) is accessed.\r\n\r\n## Expected behavior\r\n\r\nThe API should respond without a panic when the request is called.\r\n\r\n## System information\r\n\r\n- OS: Ubuntu\r\n- Server: supabase/gotrue v2.6.30\r\n\r\n## Additional context\r\n\r\nIt seems the issue was introduced in https://github.com/supabase/gotrue/pull/124 (commit: https://github.com/supabase/gotrue/commit/0574ddcb7651232ed68cb1144c3b788636e4cd0e)\r\n\r\n## Potential Solutions\r\n\r\nOne approach could be to use the unverified signature to lookup the instance configuration (and the instance specific JWT Secret) and using that to verify the signature. Another option could be to require that users provide the instance id in the header.\r\n\r\nI think at the minimum, this error should be handled correctly and the behavior documented.\r\n\r\nI tried both these solutions locally and am happy to send a PR to address this if you could provide some guidance on what the expected behavior here would be.",
            "author": {
                "login": "pratheekrebala"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-17T20:54:36Z",
            "closedAt": "2022-08-29T05:53:17Z",
            "url": "https://github.com/supabase/gotrue/issues/474",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JTWXs",
                    "body": "Hey @pratheekrebala,\r\n\r\nWe have unfortunately decided to deprecate the `multi` command together with references to `instanceID` for now.  We will review this decision again when we expand as a team.\r\n\r\nFeel free to let us know if you have any further questions! ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-29T05:53:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/474#issuecomment-1229809132"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5KMf_F",
            "number": 476,
            "title": "Link email provide after login with Github",
            "body": "Hi\r\nI want to link logged user with email after signing up from external OAuth provider.\r\nfor example this create new user account\r\n```dart\r\nawait supabase.client.auth.signInWithProvider(Provider.github);\r\n```\r\n\r\naccording to the doc using same email will link to existing account\r\n```dart\r\nfinal res = await supabase.client.auth.signUp(\r\n   'rebazrauf@gmail.com',\r\n   'rebaz12345678',\r\n);\r\nprint(res.error);\r\nprint(res.user?.id)\r\n```\r\n\r\nbut after doing this, anytime this code executed it will create new user but if you check ```users``` table the row for that user id not exist!\r\n\r\nafter checking the log it say it repeated signup but it does not link to existing account and also return fake user which not exist.\r\n\r\nhere the log\r\n```\r\n{\"action\":\"user_repeated_signup\",\"actor_id\":\"f509ed4d-3842-47ee-bbe7-56e258bbb92a\",\"actor_name\":\"Rebaz Raouf\",\"actor_username\":\"rebazrauf@gmail.com\",\"log_type\":\"user\",\"timestamp\":\"2022-05-09T10:15:19Z\",\"traits\":{\"provider\":\"email\"}}\r\n```\r\n\r\nif you try login with same info it will say invalid credential.\r\n\r\nPlease could anyone explain this is a bug or how works\r\n",
            "author": {
                "login": "rebaz94"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-09T10:34:08Z",
            "closedAt": "2022-06-15T17:25:28Z",
            "url": "https://github.com/supabase/gotrue/issues/476",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5DnQ5q",
                    "body": "Need command\n",
                    "author": {
                        "login": "HackerPH122"
                    },
                    "createdAt": "2022-05-12T13:40:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/476#issuecomment-1134366314"
                },
                {
                    "id": "IC_kwDOEKipmc5DnQ5t",
                    "body": "> Need command\n> \n\nSorry, what you mean?",
                    "author": {
                        "login": "rebaz94"
                    },
                    "createdAt": "2022-05-12T14:09:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/476#issuecomment-1134366317"
                },
                {
                    "id": "IC_kwDOEKipmc5DnQ5x",
                    "body": "More info here https://github.com/supabase/supabase/discussions/6811",
                    "author": {
                        "login": "rebaz94"
                    },
                    "createdAt": "2022-05-12T19:06:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/476#issuecomment-1134366321"
                },
                {
                    "id": "IC_kwDOEKipmc5DnQ50",
                    "body": "Hey @rebaz94 - I'm going to transfer this one over to the auth repo \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-05-23T08:41:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/476#issuecomment-1134366324"
                },
                {
                    "id": "IC_kwDOEKipmc5E8ndA",
                    "body": "hey @rebaz94, automatic linking only works if you're signing in with different oauth providers but using the same email address across them. If you want to add an email-password sign in method to an existing user with oauth sign-in, you'll need to use the [`update`](https://github.com/supabase/gotrue-js/blob/master/src/GoTrueClient.ts#L359) method instead ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-06-15T17:25:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/476#issuecomment-1156740928"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5KM-s3",
            "number": 477,
            "title": "Add the posibility to use wildcard paths in the \"Additional redirect URLs\" Setting",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI have an application with non-enumerated deep-links, think of something like `https://eventmanager.example/signup/[UUID]`. Every page allows people to register or login via magic-link. And I must say, what an amazingly convenient feature. I love it and integration with Vue3 was a bliss.\r\n\r\nUnfortunately, once a user gets the magic mail, clicking on the link will send the user back to the root page of my application. This breaks the user flow since they can not easily reach the UUID Page they clicked log-in on.\r\n\r\nThere is also no 1:1 relation between sub-pages and users, which means, I have no way to find out where the user came from, once they are logged in on the root page.\r\n\r\nAdding all possible UUIDs to the allowed-list is not feasibly, they are user-managed and potentially changing frequently.\r\n\r\n## Describe the solution you'd like\r\n\r\nLike other de-facto standard SSO solutions (Keycloak, Okta, a.s.o.), it would be extremely helpful, if a path-wildcard could be specified, like: 'https://example.org/foo/*', which would allow all paths below https://example.org/foo/''.\r\n\r\n## Describe alternatives you've considered\r\n\r\nAn alternative would be to have the possibility to attach context to a magic-link mail. If I could add a payload that is encoded in the access_token which is sent in the mail, the website entry point could theoretically handle the redirect after login.\r\n\r\nBut I think it would be preferable to support wildcard redirects, like Keycloak does as well. I love supabase and really want to base my current product on your service, but this missing feature feels like a major deal-breaker right now. I am super interested in the perspective of the supabase team, maybe I am missing an obvious solution to my problem :grin: \r\n\r\nAll the best\r\nJakob\r\n",
            "author": {
                "login": "holderbaum"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-20T23:08:04Z",
            "closedAt": "2022-06-01T01:52:27Z",
            "url": "https://github.com/supabase/gotrue/issues/477",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Dwjn1",
                    "body": "Hey \r\n\r\n@holderbaum thanks for the query!  I may be misunderstanding the problem but as per: https://github.com/supabase/gotrue/pull/334  we do have support for wildcards on the redirectURIs field. The feature is not too easily surfaced within the documentation but it's something we're hoping to make clearer.\r\n\r\nLet me know if there are any questions/concerns or anything that I've missed!\r\n\r\nJL \r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-25T06:37:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1136802293"
                },
                {
                    "id": "IC_kwDOEKipmc5Dw8Sj",
                    "body": "Hey JL,\r\n\r\nthank you for the super fast reply! :partying_face: \r\n\r\nI saw the issue you mentioned and understood it like this: Wildcards only match for subdomains. Did I misunderstood? Let me quickly test it on the prototype...\r\n\r\nI just tested and it did not work with the wildcard path.\r\n\r\nUsing the following path in the supabase settings:\r\n\r\n```\r\nhttps://myproduct.org/*\r\n```\r\n\r\nAnd using `https://myproduct.org/7c84922c-b811-4122-ba82-fbd9241ce02c` as redirect URL, I get the following error: `https://myproduct.org/#error=invalid_request&error_code=400&error_description=Verify+requires+a+token`.\r\n\r\nWithout wildcard, by specifying the full path ion the settings, login and redirect works.\r\n\r\nI am a bit lost :smile: \r\n",
                    "author": {
                        "login": "holderbaum"
                    },
                    "createdAt": "2022-05-25T07:43:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1136903331"
                },
                {
                    "id": "IC_kwDOEKipmc5D2C7n",
                    "body": "`Verify+requires+a+token` is the token missing from the request? Can you share with us an example of the url that gets sent inside the email?\r\n\r\nTrying to determine if the error is legit or if this error message being sent by mistake?",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-05-26T07:17:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1138241255"
                },
                {
                    "id": "IC_kwDOEKipmc5D3LyN",
                    "body": "Yeah sure. As mentioned before, the only difference between working and getting this error is that I used the wildcard notation in the supabase settings. Here is the URL I got via Mail:\r\n\r\n```\r\nhttps://[....].supabase.co/auth/v1/verify?token=okiviuqkjqrhhfatzxwj&type=signup&redirect_to=https://myproduct.org/7c84922c-b811-4122-ba82-fbd9241ce02c?\r\n```\r\n\r\nCompared to previous links I got via mail, this looks legit, I think.",
                    "author": {
                        "login": "holderbaum"
                    },
                    "createdAt": "2022-05-26T12:46:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1138539661"
                },
                {
                    "id": "IC_kwDOEKipmc5D3S-l",
                    "body": "Hey @holderbaum,\r\n\r\nThanks for reporting this! Let me test it out and get back to you in a bit.  \r\n\r\nI've tested it with the following configuration: \r\n\r\nSite URL: https://www.somesite.org\r\nAdditional Redirect URLs: https://mysite.com/*\r\n\r\nAnd initiated email sign up via\r\n\r\n```\r\n supabase.auth.signIn({\r\n    email: \"myemail+testsupabase@gmail.com\",\r\n    password: \"somegenericpassword\"\r\n  },\r\n  {\r\n      redirectTo: \"https://mysite.com/notes\"\r\n    });\r\n```\r\nas well as via provider like\r\n```\r\nsupabase.auth.signIn({\r\n  provider: 'github'\r\n  },\r\n  {\r\n      redirectTo: \"https://mysite.com/notes\"\r\n    });\r\n```\r\nand I can't seem to replicate the issue. The [tests](https://github.com/supabase/gotrue/blob/master/api/verify_test.go#L492) seem to suggest that wildcard paths are supported as well. Could we trouble you to file a ticket with support@supabase.io so that we can investigate further?\r\n\r\nThanks for your patience so far!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-26T13:19:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1138569125"
                },
                {
                    "id": "IC_kwDOEKipmc5EIUFZ",
                    "body": "Hey,\r\n\r\nI'm going to close this issue for now but do feel free to re-open or send in a ticket if you are still facing issues.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-01T01:52:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1143030105"
                },
                {
                    "id": "IC_kwDOEKipmc5EJF-s",
                    "body": "Hey @J0 , thanks for the reply. I am sure that I missed a specific thing, I will try again as soon as I can spare the time (still a hobby project, unfortunately).\r\n\r\nYour tests are replicating the exact behavior I am looking for, so it is definitely supported. I am sure that I will figure out what part is missing on my side :slightly_smiling_face: \r\n\r\nThank you so much!",
                    "author": {
                        "login": "holderbaum"
                    },
                    "createdAt": "2022-06-01T07:47:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1143234476"
                },
                {
                    "id": "IC_kwDOEKipmc5EJsOJ",
                    "body": "No worries @holderbaum, feel free to reach out again if you end up stuck. We're always looking to improve our documentation and developer experience and I'll make sure this gets raised during the team meeting so we can better document the feature.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-01T09:58:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/477#issuecomment-1143391113"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Kjk4n",
            "number": 481,
            "title": "Enable Discussions",
            "body": "I don't know what \"JAM projects\" means, was hoping to ask in the discussions... but it doesn't look like it's set up. Would you consider enabling discussions for these kinds of questions?",
            "author": {
                "login": "captDaylight"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-27T14:32:42Z",
            "closedAt": "2022-06-01T01:35:59Z",
            "url": "https://github.com/supabase/gotrue/issues/481",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5D-_sE",
                    "body": "Hey @captDaylight,\r\n\r\nThanks for the query! We actually have a discussions forum [on the main Supabase repo]( https://github.com/supabase/supabase/discussions) so do feel free to fire away with any questions that you might have over there.\r\n\r\nJust wondering, at which part of our docs/site/repos did you come across the term \"JAM projects\"? We'd love to clean the section up and make it clearer",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-05-30T01:31:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/481#issuecomment-1140587268"
                },
                {
                    "id": "IC_kwDOEKipmc5EIPiY",
                    "body": "Going to close this for now but let me know if there are any further questions/concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-01T01:35:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/481#issuecomment-1143011480"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5KmUIq",
            "number": 482,
            "title": "GoTrue hides Oauth error from Twitter",
            "body": "# Bug report\r\n\r\nSorry, not sure if this is really a bug, but this is also not a feature request.\r\n\r\nWhen Twitter Oauth is misconfigured, GoTrue will simply redirect to / on performing sign-in by Twitter, with no message in the logs to explain why. \r\n\r\n## Describe the bug\r\n\r\nUsing a debugger it turns out that Twitter provider, when it fails to get an \"auth url\" from Twitter api, will simply return \"\" quietly:\r\nhttps://github.com/supabase/gotrue/blob/master/api/provider/twitter.go#L127\r\n\r\nThis makes it really hard to troubleshoot, and would be great if there would be at least a debug-level message here.\r\nI am not sure how to add it - I see that in GoTrue log is created for a Request object, but Request is not available in that function.\r\n\r\nI added the log in a naive way (but I am not a Go programmer):\r\n\r\n```\r\ndiff --git a/api/provider/twitter.go b/api/provider/twitter.go\r\nindex 005f6b5..e9f16ee 100644\r\n--- a/api/provider/twitter.go\r\n+++ b/api/provider/twitter.go\r\n@@ -10,6 +10,7 @@ import (\r\n        \"net/http\"\r\n        \"strings\"\r\n \r\n+       \"github.com/sirupsen/logrus\"\r\n        \"github.com/mrjones/oauth\"\r\n        \"github.com/netlify/gotrue/conf\"\r\n        \"golang.org/x/oauth2\"\r\n@@ -125,6 +126,8 @@ func (t *TwitterProvider) AuthCodeURL(state string, args ...oauth2.AuthCodeOptio\r\n        // we do nothing with the state here as the state is passed in the requestURL step\r\n        requestToken, url, err := t.Consumer.GetRequestTokenAndUrl(t.CallbackURL + \"?state=\" + state)\r\n        if err != nil {\r\n+               log := logrus.New()\r\n+               log.Error(\"Twitter OAuth request failed: \"+err.Error())\r\n                return \"\"\r\n        }\r\n        t.RequestToken = requestToken\r\n```\r\n\r\nPerhaps in situation of error, GoTrue should actually return an error in JSON payload (like it does for other error conditions).\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Set up external Twitter auth \r\n2. do not add the auth callback to Twitter allowed list (to make it return 403 error).\r\n3. Try to sign in using GoTrue Twitter mechanism.\r\n4. You will be redirected to base url (/) of gotrue server.\r\n\r\n## Expected behavior\r\nGoTrue returns error payload - like in case of missing callback url configuration for twitter. Or at least gotrue should log the problem returned from Twitter.\r\n## System information\r\n- OS: Ubuntu\r\n- Version of @supabase/gotrue-js@1.22.15\r\n- Version of Node.js: v14.17\r\n",
            "author": {
                "login": "marcinkoziej"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-28T09:13:21Z",
            "closedAt": "2022-06-15T17:16:28Z",
            "url": "https://github.com/supabase/gotrue/issues/482",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5E8ldH",
                    "body": "Hey @marcinkoziej, this problem is related to twitter specifically, their API actually doesn't return a good error message when the twitter oauth is incorrectly configured.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-06-15T17:16:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/482#issuecomment-1156732743"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5KpsuP",
            "number": 483,
            "title": "Test phone number auth with predictable OTP",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? \r\n\r\nSubmitting to an app store requires developer to provide apple/google with credentials. There's no way to do this if your app does login with phone number unless you can create a test phone number with a predefined OTP verification code.\r\n\r\n## Describe the solution you'd like\r\n\r\nCreate a test phone number with a predefined OTP verification code.\r\n\r\n## Describe alternatives you've considered\r\n\r\nProvide an additional field where you enter Twilio/MB credentials to enter a phone number with a OTP.\r\nWhen a user tries to login with that phone number no sms is sent and when ask to enter OTP you enter the test verification code and the test user is able to authenticate.\r\n\r\n## Additional context\r\n\r\nFirebase has a similar feature.\r\n",
            "author": {
                "login": "zzzej"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-25T21:55:45Z",
            "closedAt": "2023-05-03T14:25:51Z",
            "url": "https://github.com/supabase/gotrue/issues/483",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5EAPsE",
                    "body": "Possible alternative in the meantime.\r\n\r\nhttps://github.com/supabase/supabase/discussions/5358#discussioncomment-2833568",
                    "author": {
                        "login": "zzzej"
                    },
                    "createdAt": "2022-05-27T15:50:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/483#issuecomment-1140914948"
                },
                {
                    "id": "IC_kwDOEKipmc5G2k-F",
                    "body": "Reference Firebase feature: https://firebase.google.com/docs/auth/web/phone-auth",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-19T07:43:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/483#issuecomment-1188712325"
                },
                {
                    "id": "IC_kwDOEKipmc5bYZ0A",
                    "body": "Closing since this is similar to #901 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:25:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/483#issuecomment-1533123840"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5K4IEi",
            "number": 485,
            "title": "Make Dev command fails with \"Error decoding 'Command': invalid command line string\"",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIf I try to run the gotrue dev environment on my machine with docker (following the steps provided in the [Quick Start section](https://github.com/supabase/gotrue#quick-start)) I get the following error:\r\n\r\n\r\n```Bash\r\n$ make dev\r\ndocker-compose -f docker-compose-dev.yml up\r\n1 error(s) decoding:\r\n\r\n* error decoding 'Command': invalid command line string\r\nmake: *** [Makefile:36: dev] Error 15\r\n```\r\n\r\n## To Reproduce\r\n\r\n1. `make build`\r\n2. `make dev`\r\n3. The error raises..\r\n\r\n## Expected behavior\r\n\r\nBoth, the PostgreSQL and GoTrue containers start up without any error.\r\n\r\n```Bash\r\n$ make dev\r\ndocker-compose -f docker-compose-dev.yml up\r\n[+] Running 2/0\r\n \u283f Container postgres  Created                                                                                                                                                                                                                          0.0s   \r\n \u283f Container gotrue    Created                                                                                                                                                                                                                          0.0s   \r\nAttaching to gotrue, postgres\r\n```\r\n\r\n## System information\r\n\r\n- OS: Windows 11 with WSL (Debian)\r\n- Docker Engine v20.10.14\r\n\r\n## Propsed Solution\r\n\r\nIn my case it works if I add double quotes to the `-pattern=(.+\\.go|.+\\.env)` parameter in the build command of `docker-compose-dev.yml`:\r\n```Bash\r\nversion: \"3.9\"\r\nservices:\r\n  gotrue:\r\n    # ... Some other settings ...\r\n    command: CompileDaemon --build=\"make build\" --directory=/go/src/github.com/netlify/gotrue --recursive=true -pattern=\"(.+\\.go|.+\\.env)\" -exclude=gotrue -exclude=gotrue-arm64 -exclude=.env --command=\"/go/src/github.com/netlify/gotrue/gotrue -c=.env.docker\"\r\n```",
            "author": {
                "login": "pieveee"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-01T15:01:33Z",
            "closedAt": "2022-06-02T03:58:50Z",
            "url": "https://github.com/supabase/gotrue/issues/485",
            "comments": []
        },
        {
            "id": "MDU6SXNzdWUxMjYwODExMTU2",
            "number": 490,
            "title": "Return access token and secret for Twitter login",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nNot exactly a problem, I'm building a full-fledged Twitter app for web and using Supabase as database right now. The issue is I'm not using Supabase's auth for Twitter login, so basically there's loophole to writing to the tables with bearer token in my app. I want to use Supabase's auth with auth policy to fix this situation.\r\n\r\nThe issue with Twitter sign-in with Supabase is that it doesn't return user's access token and secret in session or anything. I want these user credentials so I can load their feed and make tweets in their behalf. \r\n\r\n## Describe the solution you'd like\r\n\r\nIt would be great if we can Twitter oauth can return user's access token and secret as well.\r\n\r\n## Describe alternatives you've considered\r\n\r\n--\r\n\r\n## Additional context\r\n\r\nI have tried Supabase Twitter auth, I've checked it returns the bearer token and access token, but it doesn't return access secret. Both user's access secret and token are needed to make request on user's behalf, I hope it's something Supabase can add to Twitter auth. Thanks,\r\n",
            "author": {
                "login": "rishimohan"
            },
            "state": "CLOSED",
            "createdAt": "2021-08-13T00:15:04Z",
            "closedAt": "2022-09-14T13:47:14Z",
            "url": "https://github.com/supabase/gotrue/issues/490",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5EWEuP",
                    "body": "Is this related to https://github.com/supabase/gotrue-js/issues/406",
                    "author": {
                        "login": "adam-beck"
                    },
                    "createdAt": "2021-09-16T04:56:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637199"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEuT",
                    "body": "@adam-beck I suppose no, this issue is a proposal if we can return the user's access keys when logged in through Twitter so that requests can be made to Twitter API on user's behalf.",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2021-09-16T08:03:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637203"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEuU",
                    "body": "Yeah, sorry. After reading supabase/gotrue-js#406 closer, I realize they are asking for something different. In that ticket, the access token for the OAuth Provider is already in possession, and they want to use it directly with Supabase. Here, you're asking for somewhat of the opposite.\r\n\r\nMy bad ",
                    "author": {
                        "login": "adam-beck"
                    },
                    "createdAt": "2021-09-16T14:04:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637204"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEuW",
                    "body": "@adam-beck No issues :)",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2021-09-16T15:43:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637206"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEuX",
                    "body": "Yoo this is the exact issue I'm running into. This would be a great addition to the sdk",
                    "author": {
                        "login": "DarrylBrooks97"
                    },
                    "createdAt": "2021-11-24T05:11:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637207"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEub",
                    "body": "I could really use this too. Does anyone know of a possible workaround? \ud83d\ude05 ",
                    "author": {
                        "login": "eramdam"
                    },
                    "createdAt": "2021-11-29T05:21:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637211"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEuc",
                    "body": "@eramdam I had to fall back to using Next auth for my Next.js project(https://kizie.co). I had a call with one of Supabase members some time back and he mentioned that they'll be working on this issue.",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2021-11-29T05:43:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637212"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEue",
                    "body": "> @eramdam I had to fall back to using Next auth for my Next.js project(https://kizie.co). I had a call with one of Supabase members some time back and he mentioned that they'll be working on this issue.\r\n\r\n\"Next auth\" as in [NextAuth.js](https://next-auth.js.org/providers/twitter) or are you referring to something else?",
                    "author": {
                        "login": "eramdam"
                    },
                    "createdAt": "2021-11-29T06:14:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637214"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEuf",
                    "body": "@eramdam Yep :)",
                    "author": {
                        "login": "rishimohan"
                    },
                    "createdAt": "2021-11-29T06:15:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637215"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEug",
                    "body": "Are there any updates on this issue? Is it possible to return the access secret in the meantime?",
                    "author": {
                        "login": "kirillinoz"
                    },
                    "createdAt": "2022-03-08T16:28:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637216"
                },
                {
                    "id": "IC_kwDOEKipmc5EWEuh",
                    "body": "I'm going to transfer this to the auth repo",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-06-04T15:39:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146637217"
                },
                {
                    "id": "IC_kwDOEKipmc5EXGqh",
                    "body": "Hey everyone, just an update, we have not forgotten about this issue and are still working to make this happen. \r\n\r\nImplementing twitter oauth2 would help to solve this issue but unfortunately, the twitter oauth2 api doesn't return the user's email or phone number. I understand that oauth shouldn't be dependent on a user's email or phone number but currently, gotrue only associates a \"confirmed\" user as a user with a verified email address or verified phone number. We're working on removing this association for oauth and will update this thread once that's done so we can start working on this.\r\n\r\nThanks for the patience and we hope to improve the oauth experience for everyone soon!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-06-05T23:36:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1146907297"
                },
                {
                    "id": "IC_kwDOEKipmc5KUIeb",
                    "body": "Duplicate of #105 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T13:47:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/490#issuecomment-1246791579"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5LLMsI",
            "number": 492,
            "title": "Confirmation emails not sending.",
            "body": "Hello! I'm having problems with confirmation emails when I register accounts. Basically, when I send the data through my project API to handleSignUp function, the user is created and keeps waiting for verification, but the email does not reach destination.\r\n\r\n## To Reproduce\r\n\r\n1 - Register an user with a valid email and password calling the following method: \r\n```\r\nconst { data: user, error } = await supabase.auth.api.createUser({\r\n      password,\r\n      email,\r\n      data: {\r\n        rol: Rol.GUEST,\r\n      },\r\n    });\r\n```\r\n2 - Go to either your email or another you have and check if the confirmation message is there.\r\n3 - No message is there, and the accounts stays on waiting for verification.\r\n\r\n\r\n## Expected behavior\r\n\r\nThe user is created and the email confirmation reaches destination.\r\n\r\n## System information\r\n\r\n- Version of supabase-js: ^1.35.3\r\n- Version of Node.js: 14.17.6\r\n\r\n## Additional context\r\n\r\nThis procedure was working normally until yesterday, I think: I don't know if anybody else is having this issue or if it's just me. Any feedback is appreciated.\r\n\r\nThank you for your attention!\r\n",
            "author": {
                "login": "EnzoPujol"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-27T18:50:31Z",
            "closedAt": "2022-08-24T11:44:48Z",
            "url": "https://github.com/supabase/gotrue/issues/492",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5EXOHY",
                    "body": "Hey @EnzoPujol - can I please check if this is still an issue? There was a large DNS issue with our service provider a few days ago, and I want to double-check that wasn't the root cause",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-05-30T09:31:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1146937816"
                },
                {
                    "id": "IC_kwDOEKipmc5EXOHb",
                    "body": "> Hey @EnzoPujol - can I please check if this is still an issue? There was a large DNS issue with our service provider a few days ago, and I want to double-check that wasn't the root cause\r\n\r\nHello, I've tried a few times yesterday and just tried again now, and it's still not working as intended. I have other projects created before the DNS issue and those are working well; neither do this one that was created almost at the same time the problems with supabase started.\r\n\r\nMaybe it's something involved with the database setup? \r\n\r\nThank you again for answering.",
                    "author": {
                        "login": "EnzoPujol"
                    },
                    "createdAt": "2022-05-31T11:20:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1146937819"
                },
                {
                    "id": "IC_kwDOEKipmc5EXOHd",
                    "body": "Hey @kiwicopple, I've had problems with the popular in Poland `@wp.pl` domain. I've checked yesterday and it still does not work. Moreover yesterday the email did not come to MS Office 365 based email `@metropoliagzm.pl`. Do you have a list of unsupported email domains?",
                    "author": {
                        "login": "mzalevski"
                    },
                    "createdAt": "2022-06-02T07:47:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1146937821"
                },
                {
                    "id": "IC_kwDOEKipmc5EXOHg",
                    "body": "OK - moving this to the auth repo for the team to investigate \ud83d\udc4d ",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-06-06T01:20:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1146937824"
                },
                {
                    "id": "IC_kwDOEKipmc5Eid72",
                    "body": "An update: I tried to do the same with a new project and default configuration, and I didn't work either; is there any updates from this issue? ",
                    "author": {
                        "login": "EnzoPujol"
                    },
                    "createdAt": "2022-06-08T13:01:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1149886198"
                },
                {
                    "id": "IC_kwDOEKipmc5E8l8e",
                    "body": "hey everyone (@mzalevski, @EnzoPujol), can you please file a support ticket via https://app.supabase.com/support/new so we can investigate the issue? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-06-15T17:18:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1156734750"
                },
                {
                    "id": "IC_kwDOEKipmc5E8ndq",
                    "body": "@kangmingtay done :)",
                    "author": {
                        "login": "mzalevski"
                    },
                    "createdAt": "2022-06-15T17:25:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1156740970"
                },
                {
                    "id": "IC_kwDOEKipmc5FjXMj",
                    "body": "Hey @mzalevski @EnzoPujol wanted to check in and see if this is still an issue for you.\r\n\r\nLet me know!\r\nJoel",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-27T05:46:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1166897955"
                },
                {
                    "id": "IC_kwDOEKipmc5JDUal",
                    "body": "Hey, please make sure you read our [Production Readiness](https://supabase.com/docs/going-into-prod) document. The basic SMTP sending feature is best effort only and there to get you started, but it is definitely not meant for production. You should bring your own SMTP server which is configured properly.\r\n\r\nEmail deliverability is a complex topic, and often there's no easy way to figure out why some emails are not reaching their destinations. It's always a good idea to setup DKIM, DMARC and SPF rules on your domains which significantly increases deliverability.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T11:44:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/492#issuecomment-1225606821"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5LeTnO",
            "number": 494,
            "title": "Disable auto send of the \"confirm mail\"",
            "body": "# Feature request\r\n\r\n\r\nSupabase template email does not let a lot of space to make complex email for email confirmation, password change, ...\r\n\r\nIt's possible to take control of it with `supabase.auth.api.generateLink`, generate a link, then use a mail service like Sendgrid to create confirm mail by yourself. This works perfectly.\r\n\r\nUnfortunally, it's not possible to disable the automatic mail from Supabase, resulting on a 2 mail sent to a customer - the custom Sendgrid one, and the auto Supabase one.\r\n\r\nThe feature would simply consist of an option on the Supabase UI to distinguish \"confirm mail required\" and \"auto send confirmation mail\", or simply add an argument option on the signup method to disable the auto sent mail.\r\n",
            "author": {
                "login": "lerayj"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-09T14:37:04Z",
            "closedAt": "2022-07-27T08:53:49Z",
            "url": "https://github.com/supabase/gotrue/issues/494",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5E8mfK",
                    "body": "hey @lerayj, just to confirm, you're getting 2 mails sent to a customer only when you're sending email change emails right? iirc this isn't a problem with the other email methods (e.g. signup, invite, recovery, magiclink)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-06-15T17:21:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/494#issuecomment-1156736970"
                },
                {
                    "id": "IC_kwDOEKipmc5HMuL1",
                    "body": "@kangmingtay  Sorry I missed your answer.\r\n\r\nDepends, if I setup nothing manually on my side, the customer used to received only the Supabase one. I setup template email for other case, I would have them in double (mine + supabase one)\r\n\r\nUntil now I managed to bypass this issue by setting up a dummy custom SMTP. Like this I was able to \"lose\" the automatic Supabase email. Then by using \" supabase.auth.api.generateLink\" , I was able to manually get a token to create a link, send it to my template and proceed to a confirmation this way.\r\n\r\nWorked fine until some update on supabase side I guess. Right now, I get a \"'A user with this email address has already been registered\" on \r\n` const { data: userGenerateLink, error: errorGenerateLink } = await supabase.auth.api.generateLink(\r\n      'signup', email)`\r\n\r\nI guess it's because a token has been send previously automaticaly by a `supabase.auth.signUp`, and supabase is now checking if a token has been generated already?\r\n\r\nCannot see a way to make it works again now... ",
                    "author": {
                        "login": "lerayj"
                    },
                    "createdAt": "2022-07-25T19:24:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/494#issuecomment-1194517237"
                },
                {
                    "id": "IC_kwDOEKipmc5HN1V4",
                    "body": "hi @lerayj, that error message means that you have a user who previously signed up and has already verified their email address by clicking on the confirmation link sent to their email.\n\nIf you are using `supabase.auth.api.generateLink`, you shouldn't need to use `supabase.auth.signUp` at all. The `generateLink` method will take care of signing up the user for you and returning the confirmation link which you can send using your own email provider.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-07-26T00:20:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/494#issuecomment-1194808696"
                },
                {
                    "id": "IC_kwDOEKipmc5HT9-5",
                    "body": "@kangmingtay Thanks! It works perfectly now. Was it always intended this way or do you make change on the api? ",
                    "author": {
                        "login": "lerayj"
                    },
                    "createdAt": "2022-07-27T08:26:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/494#issuecomment-1196416953"
                },
                {
                    "id": "IC_kwDOEKipmc5HUFYM",
                    "body": "we didn't make any change to the api actually and it was intended to work this way - we should defo make this clearer in the docs though!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-07-27T08:53:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/494#issuecomment-1196447244"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5LwCV7",
            "number": 498,
            "title": "Expose HTTP headers from auth APIs to database triggers",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nDevelopers would like to be able to restrict sign-ups and/or sign-ins ONLY to specific domains (see https://stackoverflow.com/questions/71591949/restrict-supabase-sign-up-to-a-specific-domain).\r\n\r\n## Describe the solution you'd like\r\n\r\nIt seems that this can be easily implemented if database triggers that were fired in response to auth changes (e.g. adding a new user to the ```auth.users``` table) could access the HTTP headers from the request. That way, the trigger can inspect the ```Origin``` header  (or ```Referer```) and abort the transaction if the ```Origin``` are NOT in the allowed list.\r\n\r\n## Describe alternatives you've considered\r\n\r\nIt seems like there are 2 existing options:\r\n\r\n1. Re-define the sign-up/sign-in APIs in a custom server app which then call the Supabase APIs. The drawback is having to re-implement the APIs only to check the ```Origin``` header.\r\n\r\n2. Another option is to add an additional db table with some triggers and an additional call from the client to the server which would generate and return a nonce ONLY if the ```Origin``` of the first request is allowed. For example, here is how this can work for the sign-up flow:\r\n   - define a table which will store nonces - e.g. ```auth_nonce``` - with a single UUID auto-generated column; \r\n   - define a ```BEFORE INSERT``` trigger on the ```auth_nonce``` table. If the ```Origin``` HTTP header inside the trigger is NOT allowed, abort the transaction;\r\n   - define a ```BEFORE INSERT``` trigger on the ```auth.users``` table and inspect the ```raw_user_meta_data``` - if it does NOT contain a valid nonce (i.e. a nonce present in the ```auth_nonce``` table), abort the transaction; if it contains a valid nonce - allow the insertion into ```auth.users``` and remove the nonce from the ```auth_nonce``` table (so it cannot be re-used);\r\n   - before sending a sign-up client request, send a client request to insert a new record inside the auth_nonce table. This call will succeed ONLY if the domain is allowed and should return the generated nonce (because of the second step above);\r\n   - the client sends a sign-up request by including the nonce returned from the previous call;\r\n\r\nThis second option involves multiple steps and additional calls, so it's also not a convenient workaround for the task;\r\n",
            "author": {
                "login": "chipilov"
            },
            "state": "OPEN",
            "createdAt": "2022-06-14T14:19:01Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/498",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LI5mL",
                    "body": "Hey this is a great suggestion. We are planning to introduce proper webhook and trigger support in GoTrue which will enable you to customize the account creation and other behaviors. \r\n\r\nThere is no clear timeline for this yet.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:17:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/498#issuecomment-1260624267"
                },
                {
                    "id": "IC_kwDOEKipmc5bYXMI",
                    "body": "Hey Circling back on this,\r\n\r\nWe're looking into webhooks soon and we'll keep this ticket in mind - do let us know if theres anything else you feel that's worth noting or any other related use cases you'd like to see supported.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-03T14:19:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/498#issuecomment-1533113096"
                },
                {
                    "id": "IC_kwDOEKipmc5opLc0",
                    "body": "Any update on this? Major hindrance for e.g. implementing multi-account sign-in, etc. I could implement it myself server-side, but not being able to limit auth to a server leaves me security issues. Alternatively, if we had #861, it would also resolve some issues.",
                    "author": {
                        "login": "lauri865"
                    },
                    "createdAt": "2023-10-10T14:54:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/498#issuecomment-1755625268"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5MDCAn",
            "number": 505,
            "title": "Add wildcard for any number of subroutes for auth redirect urls",
            "body": "With the actual implementation of auth redirect url wildcards, we can set this kind of url https://domain.com/sub1/sub2/*/*, so any pair of subroutes of https://domain.com/sub1/sub2 are valid redirect urls, but it would be nice to have a wildcard (for instance, `**`) to handle any number of subroutes, so we could use it like https://domain.com/sub1/sub2/**. This would englobe:\r\n- https://domain.com/sub1/sub2/*\r\n- https://domain.com/sub1/sub2/*/*\r\n- https://domain.com/sub1/sub2/*/*/*\r\n- etc.\r\n\r\nHope I explained myself and please, feel free to ping me in case the feature is not well explained.",
            "author": {
                "login": "dreinon"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-18T19:12:48Z",
            "closedAt": "2022-06-28T10:23:38Z",
            "url": "https://github.com/supabase/gotrue/issues/505",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5FjWIH",
                    "body": "Hey @dreinon,\r\n\r\nNice to hear from you. To make sure I'm understanding correctly would the feature request be for something like `https://google.com/sub1/sub2/**` and have it match `https://google.com/sub1/sub2/sub3/sub4` or similar patterns with `https://google.com/sub1/sub2/` as base.\r\n\r\nWe actually use Go globbing under the hood for matching so you should be able to use the `**` wildcard operator like:\r\n\r\n<img width=\"910\" alt=\"CleanShot 2022-06-27 at 13 37 16@2x\" src=\"https://user-images.githubusercontent.com/8011761/175867153-74210963-ec89-4269-bfba-044df7b466ee.png\">\r\n\r\n\r\nSo any URL with `https://google.com/sub1/sub2/`  as base but with '.' or '/' as separator thereafter should match.\r\n\r\nLet me know if this covers your use case!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-27T05:38:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/505#issuecomment-1166893575"
                },
                {
                    "id": "IC_kwDOEKipmc5FjwP7",
                    "body": "@j0 yeah that's the case, but somehow it didn't work for me in supabase. Could you test it in production, please?",
                    "author": {
                        "login": "dreinon"
                    },
                    "createdAt": "2022-06-27T07:44:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/505#issuecomment-1167000571"
                },
                {
                    "id": "IC_kwDOEKipmc5FpE0g",
                    "body": "Hey,\r\n\r\nTested this on a [fresh supabase instance](https://supabasetest.aceofspade.repl.co) with the following settings:\r\n\r\n<img width=\"970\" alt=\"CleanShot 2022-06-28 at 16 17 25@2x\" src=\"https://user-images.githubusercontent.com/8011761/176129909-69ca9b44-6e91-43d5-b29d-6e34765c4d70.png\">\r\n\r\nand it seems to work for the following URL: \r\n![CleanShot 2022-06-28 at 16 18 51@2x](https://user-images.githubusercontent.com/8011761/176130283-5c7f0870-2fe2-407a-9383-bccabb21f668.png)\r\n\r\nCould I trouble you to try again on your instance? Also feel free to open a support ticket at support@supabase.io if there are still persistent issues\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-28T08:20:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/505#issuecomment-1168395552"
                },
                {
                    "id": "IC_kwDOEKipmc5Fpm57",
                    "body": "It works now! Thanks Joel \ud83d\ude42",
                    "author": {
                        "login": "dreinon"
                    },
                    "createdAt": "2022-06-28T10:23:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/505#issuecomment-1168535163"
                },
                {
                    "id": "IC_kwDOEKipmc5Fqcpi",
                    "body": " No worries, feel free to let us know if you run into any further issues",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-28T13:51:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/505#issuecomment-1168755298"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5MJ5tk",
            "number": 507,
            "title": "ReadME documentation on migrations may be misleading",
            "body": "# Improve documentation\r\n\r\n## Link \r\n\r\nhttps://github.com/supabase/gotrue/blob/c9f1ed5731b102a40bae113e972c0e7674a9195b/README.md?plain=1#L136\r\n\r\n## Describe the problem\r\n\r\nI believe that migrations are run automatically whenever gotrue is started. I am basing this believe on the fact that the root command calls migrate before calling any other command. See here:\r\nhttps://github.com/supabase/gotrue/blob/c9f1ed5731b102a40bae113e972c0e7674a9195b/cmd/root_cmd.go#L15\r\n\r\n## Describe the improvement\r\n\r\nThis section should specify that migrations are run automatically when `gotrue` is called and do not need to be run with `gotrue migrate` at the start. \r\n\r\n## Additional context\r\n\r\nI am just getting into go, and I am reading over the source of `gotrue` to get a feel for the language. All statements in this issue may be totally false, because I could be totally misunderstanding the code I am reading. If this is the case, please show some patience in the replies.\r\n\r\n## Final Note\r\n\r\nIt might also be helpful to add a branch so that migrations are not run twice when `gotrue migrate` is called. Because currently, when `gotrue migrate` is called, migrations are run once here: https://github.com/supabase/gotrue/blob/c9f1ed5731b102a40bae113e972c0e7674a9195b/cmd/root_cmd.go#L15\r\nand then run again here https://github.com/supabase/gotrue/blob/c9f1ed5731b102a40bae113e972c0e7674a9195b/cmd/migrate_cmd.go#L19\r\n\r\nBut I don't think that this double-run isn't really doing any harm so no need to special-case it if y'all think it's fine.",
            "author": {
                "login": "msdrigg"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-21T02:10:47Z",
            "closedAt": "2022-06-29T02:02:51Z",
            "url": "https://github.com/supabase/gotrue/issues/507",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5FNbeA",
                    "body": "Hey @msdrigg,\r\n\r\nThanks for the comprehensive description on the issue. The documentation does seem to be a little dated -- migrations are applied on startup and we now have a docker workflow for development. PRs are welcome!\r\n\r\n\r\nWith regards to the comment about the migrate command -- I think the main command does not run when the  user chooses to run the sub command (e.g. only commands associated with `./gotrue migrate` will be called and not both the main command( `./gotrue`) and `./gotrue migrate`",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-21T02:44:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/507#issuecomment-1161148288"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Mj08W",
            "number": 512,
            "title": "`samesite` option to set it to `none` to allow cross domain server to read cookies during oAuth call back",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nCurrently, after the oAuth callback [setCookie](https://github.com/supabase/gotrue/blob/c9f1ed5731b102a40bae113e972c0e7674a9195b/api/token.go#L600) code leaves `sameSite` option blank. As per the recent browser [changes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite#lax), `lax` has replaced `none` as the default value for `sameSite` option when it is blank.\r\n\r\nWithout `sameSite` set to `none`, server is not able to read the cookies sent during the callback. Hence, an additional client-side call is required to sent the `access-token` to the server to allow for server-side calls `authenticated` user.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\nDuring a typical oAuth call, following cookie is sent to the browser\r\n\r\n![image](https://user-images.githubusercontent.com/79074469/175759888-50a5772f-d2d7-469b-b123-b036e23987f0.png)\r\n\r\n## Expected behavior\r\n\r\n`gotrue` should allow an option to set `sameSite` cookie option for `oAuth` callbacks. \r\n\r\nWith this change, cross domain server should be able to read cookies during the callback. This will save an extra trip from client side to send the access token to the server. \r\n\r\nAs a side-effect it also leads to a much better dev experience to protect private pages on the client-side. Currently, client-side can ascertain oAuth `success` only after the page is loaded. \r\n\r\n## System information\r\n\r\n- Browser (if applies) chrome\r\n- Version of supabase-js: latest\r\n\r\n",
            "author": {
                "login": "bhvngt"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-25T05:43:53Z",
            "closedAt": "2022-09-28T09:35:06Z",
            "url": "https://github.com/supabase/gotrue/issues/512",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LI-1k",
                    "body": "We are not planning on supporting the `SameSite=none` cookie option for cookies issued by Supabase Auth. This is because those cookies are for internal Supabase Auth / GoTrue use and are not meant to be used by third parties. There are no guarantees that those cookies represent a valid user session (though they likely do). We also can't guarantee backward and future compatibility of those cookies.\r\n\r\nWe do suggest using only the concept of access and refresh token to identify a user's session on a particular web browser. Your single-page app does not have to fire a request to transfer cookies on the origin it runs on. Here's a snippet you can use to set cookies for a server-side application running on the domain your application is running on:\r\n\r\n```typescript\r\nsupabase.auth.onAuthStateChange((event, session) => {\r\n  if (event === \"SIGNED_OUT\" || event === \"USER_DELETED\") {\r\n    // delete cookies on sign out\r\n    const expires = new Date(0).toUTCString();\r\n    document.cookie = `my-access-token=; path=/; expires=${expires}; SameSite=Lax; secure`;\r\n    document.cookie = `my-refresh-token=; path=/; expires=${expires}; SameSite=Lax; secure`;\r\n  } else if (event === \"SIGNED_IN\" || event === \"TOKEN_REFRESHED\") {\r\n    const maxAge = 100 * 365 * 24 * 60 * 60; // 100 years, never expires\r\n    document.cookie = `my-access-token=${session.access_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;\r\n    document.cookie = `my-refresh-token=${session.refresh_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;\r\n  }\r\n})\r\n```\r\n\r\nHere you can customize the cookies for your application as you wish.\r\n\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:35:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/512#issuecomment-1260645732"
                },
                {
                    "id": "IC_kwDOEKipmc5m0ejw",
                    "body": "~@hf do you have a recommendation for authorizing an SPA that is run on a 3rd party's domain? The use case is as an extension/plugin for a 3rd party application.~\r\n\r\n~My naive attempt to embed an iframe with my domain and then pass the access and refresh tokens across with `window.parent.postMessage` works in Firefox but not Chrome due to the cookie SameSite restrictions.~\r\n\r\nRe-reading the comment above - there's a perfectly good suggestion already: Create your own cookie that is available cross-site and read that.\r\n\r\nI'm looking for some more information on how to treat the `access-token` and `refresh-token`. The `refresh-token` is single-use, so if I use it to `supabase.auth.setSession` in another context, does that impact the original session, or is there any conflict between these two sessions?\r\n",
                    "author": {
                        "login": "tomelliot"
                    },
                    "createdAt": "2023-09-19T08:13:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/512#issuecomment-1725032688"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5MkvTM",
            "number": 514,
            "title": "Disable auto send of the \"confirm mail\"",
            "body": "# Feature request\r\n\r\n\r\nSupabase template email does not let a lot of space to make complex email for email confirmation, password change, ...\r\n\r\nIt's possible to take control of it with `supabase.auth.api.generateLink`, generate a link, then use a mail service like Sendgrid to create confirm mail by yourself. This works perfectly.\r\n\r\nUnfortunally, it's not possible to disable the automatic mail from Supabase, resulting on a 2 mail sent to a customer - the custom Sendgrid one, and the auto Supabase one.\r\n\r\nThe feature would simply consist of an option on the Supabase UI to distinguish \"confirm mail required\" and \"auto send confirmation mail\", or simply add an argument option on the signup method to disable the auto sent mail.\r\n",
            "author": {
                "login": "lerayj"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-06T07:25:38Z",
            "closedAt": "2022-06-27T05:22:12Z",
            "url": "https://github.com/supabase/gotrue/issues/514",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5FjTsh",
                    "body": "Duplicate of #494 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-06-27T05:22:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/514#issuecomment-1166883617"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5MnF0M",
            "number": 516,
            "title": "Keycloak Login results in Error: \"Unable to exchange external code\"",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nAfter setting up an instance of Keycloak and using current examples with their latest versions, logging in via. the thrid-party-service Keycloak on a local instance results in an error, which message is \"Unable to exchange external code\", found in the redirect URL.\r\n\r\n## To Reproduce\r\n\r\n1. Follow the documentation on setting up Keycloak for Supabase, https://supabase.com/docs/guides/auth/auth-keycloak.\r\n2. Initialize a new project with `npx create-next-app --example \"https://github.com/valerius21/auth-helpers/tree/main/examples/nextjs\"`\r\n    1. Enter the corresponding credentials in a `.env.local` file (`NEXT_PUBLIC_SUPABASE_URL` and `NEXT_PUBLIC_SUPABASE_ANON_KEY`)\r\n    2. Change `pages/index.tsx:38` from `providers={[\"google\", \"github\"]}` to `providers={[\"google\", \"github\", \"keycloak\"]}`\r\n    3. Start the Dev Server with `yarn dev`\r\n    4. (This Step is also reproducible with the official supabase-js client)\r\n3. The site at `http://localhost:3000` should have three buttons, one of which has no icon inside.  ![image](https://user-images.githubusercontent.com/10323945/174764138-a96add9d-f017-423d-9b7c-9f9227290171.png)\r\n5. Click the button and login on to the local Keycloak instance\r\n6. Redirected back to the authentication form, no session is established and an error code in the URL is present.\r\n```\r\nhttp://localhost:3000/?error=server_error&error_description=Unable+to+exchange+external+code%3A+392cabd5-b422-446a-8497-e4f184453157.0887172c-5c95-44a4-944b-d975911a9563.46e8656a-f404-41c8-ab90-baa7ffb0d727\r\n```\r\n\r\n## Expected behavior\r\n\r\nA user session, similar to other OAuth2 providers, like Google, GitHub, etc., where querying DB content and one's user profile is possible.\r\n\r\n## Screenshots\r\n\r\nhttps://user-images.githubusercontent.com/10323945/174766209-12eec916-b964-402a-b6ec-bf1da962c164.mp4\r\n\r\n## System information\r\n\r\n- OS: Ubuntu Linux\r\n- Browser: Chrome, Brave\r\n- Version of supabase-js: latest\r\n- Version of Node.js: 16.15.x\r\n\r\n## Previous attempts to resolve the issue\r\n- Checking the Keycloak credentials of whitespaces\r\n- Adding SSL did not resolve the issue\r\n- Inspecting the supabase instance logs of errors, but only, as intended, finding `302` requests.\r\n- Using the supabase client in other frameworks and in other contexts to attempt an authentication request. ",
            "author": {
                "login": "valerius21"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-21T09:27:24Z",
            "closedAt": "2022-09-28T09:24:43Z",
            "url": "https://github.com/supabase/gotrue/issues/516",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Fjfzs",
                    "body": "Doing some more inspection, the Auth Logs show the following error:\r\n\r\n```\r\ntime=\"2022-06-21T09:23:11Z\" level=error msg=\"500: Unable to exchange external code: e3e63f45-6be0-4b58-a4ab-180bcd28f0b9.02187b20-0342-4ac6-b341-e218ba88dc74.46e8656a-f404-41c8-ab90-baa7ffb0d727\" component=api error=\"Post \\\"http://localhost:8081/auth/realms/kind/protocol/openid-connect/token\\\": dial tcp 127.0.0.1:8081: connect: connection refused\" method=GET path=/callback referer= remote_addr=\"95.90.186.196:35661\" request_id=63b28020-76a1-4047-98d6-afc06994e40d\r\n```\r\n\r\n```js\r\n[\r\n  {\r\n    \"_LINE_BREAK\": null,\r\n    \"_EXE\": null,\r\n    \"status\": null,\r\n    \"_MACHINE_ID\": null,\r\n    \"SYSLOG_FACILITY\": null,\r\n    \"request_id\": null,\r\n    \"project\": \"mrkpghsoraiqyrxtoqkl\",\r\n    \"_UID\": null,\r\n    \"remote_addr\": null,\r\n    \"_CAP_EFFECTIVE\": null,\r\n    \"_PID\": null,\r\n    \"SYSLOG_IDENTIFIER\": null,\r\n    \"__REALTIME_TIMESTAMP\": null,\r\n    \"_TRANSPORT\": null,\r\n    \"_COMM\": null,\r\n    \"CODE_FUNC\": null,\r\n    \"_SYSTEMD_UNIT\": null,\r\n    \"__MONOTONIC_TIMESTAMP\": null,\r\n    \"_STREAM_ID\": null,\r\n    \"host\": \"mrkpghsoraiqyrxtoqkl\",\r\n    \"source_type\": \"journald\",\r\n    \"UNIT\": null,\r\n    \"_BOOT_ID\": null,\r\n    \"_SYSTEMD_CGROUP\": null,\r\n    \"MESSAGE_ID\": null,\r\n    \"_SYSTEMD_SLICE\": null,\r\n    \"CODE_LINE\": null,\r\n    \"EXECUTABLE\": null,\r\n    \"level\": null,\r\n    \"_SYSTEMD_INVOCATION_ID\": null,\r\n    \"INVOCATION_ID\": null,\r\n    \"referer\": null,\r\n    \"path\": null,\r\n    \"CODE_FILE\": null,\r\n    \"_GID\": null,\r\n    \"PRIORITY\": null,\r\n    \"method\": null,\r\n    \"_SOURCE_REALTIME_TIMESTAMP\": null,\r\n    \"duration\": null,\r\n    \"_CMDLINE\": null,\r\n    \"component\": null,\r\n    \"_SELINUX_CONTEXT\": null\r\n  }\r\n]\r\n```",
                    "author": {
                        "login": "valerius21"
                    },
                    "createdAt": "2022-06-21T12:49:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1166933228"
                },
                {
                    "id": "IC_kwDOEKipmc5Fjfzv",
                    "body": "After further inspection, I've tried to use a self-hosted instance of supabase. The error disappears; Keycloak sets a session and I'll get redirected to the origin. However, a s**ession cookie is not set**. The response from Keycloak looks like this:\r\n\r\nURL after redirect \r\n```\r\nhttp://localhost:3001/?state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTU4MTk4ODQsInNpdGVfdXJsIjoiaHR0cDovL2xvY2FsaG9zdDozMDAwIiwiaWQiOiIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDAiLCJuZXRsaWZ5X2lkIjoiIiwiZnVuY3Rpb25faG9va3MiOm51bGwsInByb3ZpZGVyIjoia2V5Y2xvYWsiLCJyZWZlcnJlciI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMS8ifQ.u7kyq_uhqp9ERkV_-kF1Qsv8E_SWoWidVJHyogTMBgY&session_state=04f353f9-0850-4544-bd1b-fca8d3735cd8&code=f51f1ec0-a382-4655-abaf-f9c1e07dee36.04f353f9-0850-4544-bd1b-fca8d3735cd8.27e32ec1-4723-43ec-a076-6e7ffa018c47\r\n```",
                    "author": {
                        "login": "valerius21"
                    },
                    "createdAt": "2022-06-21T14:48:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1166933231"
                },
                {
                    "id": "IC_kwDOEKipmc5GJRGq",
                    "body": "Hello\r\nI have the same problem using [app.supabase.com](app.supabase.com)\r\n\r\nredirect url with failure **\"Unable to exchange external code\"**\r\n\r\n```\r\nhttp://localhost:3000/?error=server_error&error_description=Unable+to+exchange+external+code%3A+a95bcaef-bb46-4c04-9ec6-2a81877a68f0.be71884e-2598-4dea-9d0f-61766b30e403.dfae8b4b-e82d-466c-ac57-d112d9b92d7c\r\n```\r\n\r\nanother unrelated strange thing is\r\nwhen I use a **self hosted supabase** using this guide [Self Hosting With Docker](https://supabase.com/docs/guides/hosting/docker)\r\n**I don't see the auth providers**, its like a **incomplete supabase**, without many functions, like oauth2 auth providers\r\nwe can see it in bellow image\r\n\r\n![image](https://user-images.githubusercontent.com/6191096/177656043-4a17566b-a14b-4abf-a381-c432d77014ac.png)\r\n\r\nHow can I use self hosted supabase with oauth2 providers to test it with keycloak, like @valerius21 ",
                    "author": {
                        "login": "koakh"
                    },
                    "createdAt": "2022-07-06T22:54:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1176834474"
                },
                {
                    "id": "IC_kwDOEKipmc5GR4Ws",
                    "body": "@koakh When starting a local instance, add the following lines [here](https://github.com/supabase/supabase/blob/b749be5c1eacb4ad80b6d7fb334ea16a123720b4/docker/docker-compose.yml#L78) to your `docker-compose.yml` \r\n\r\n```\r\n      GOTRUE_EXTERNAL_KEYCLOAK_ENABLED: \"true\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_CLIENT_ID: \"<client id>\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_SECRET: \"<client secret>\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:<PORT of your webapp>/\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_URL: \"http://<keycloak instance>/auth/realms/<realm>\"\r\n```\r\n",
                    "author": {
                        "login": "valerius21"
                    },
                    "createdAt": "2022-07-08T15:06:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1179092396"
                },
                {
                    "id": "IC_kwDOEKipmc5GSG-K",
                    "body": "I will try it later (asap) and update my reply with feedback, maybe will be useful for others\r\n\r\nthanks @valerius21\r\n\r\nupdate #1\r\n\r\ntesting with both **supabase hosted** and **supabase self host** with docker instructions here <https://supabase.com/docs/guides/hosting/docker>\r\n\r\nand suggested env\r\n\r\n```shell\r\nGOTRUE_EXTERNAL_KEYCLOAK_ENABLED: \"true\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_CLIENT_ID: \"<client id>\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_SECRET: \"<client secret>\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:<PORT of your webapp>/\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_URL: \"http://<keycloak instance>/auth/realms/<realm>\"\r\n```\r\n\r\nex\r\n\r\n```shell\r\nGOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:8000/auth/v1/callback\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_URL: \"http://localhost:8080/auth/realms/SupaBase\"\r\n```\r\n\r\nfirst error\r\n\r\n**beware one of the problems that I have was the `docker-compose.yml` have a old version of gotrue without keycloak provider**\r\n\r\nin `docker-compose.yml` we have `supabase/gotrue:v2.5.21` we need to change `supabase/gotrue:v2.7.2` or `supabase/gotrue:latest` in this case is the same version\r\nwith that, we fix the problem of **missing keycloak keycloak provider**\r\n\r\nlets focus in the super annoying problem with hosted and self hosted `error_description | Unable  to exchange external code:  38891947-e2c2-4a03-ad26-6f25e9b51e9d.ea289a44-b80e-4c24-b48c-1d0747266cfe.234c8eb6-706a-4083-814e-56a1a514e557` \r\n\r\nI try with both images and is the same\r\n- quay.io/keycloak/keycloak:legacy\r\n- jboss/keycloak:latest\r\n\r\nupdate #2 : **using keycloak in supabase docker stack** and start debug\r\n\r\n```shell\r\n# check gotrue logs\r\n$ docker-compose logs -f auth\r\n\r\nsupabase-auth | time=\"2022-07-09T00:15:25Z\" level=info msg=\"request started\" component=api method=GET path=/authorize referer=\"http://localhost:3030/\" remote_addr=\"192.168.96.1:45942\" request_id=39397c7b-01e3-4dbb-919a-191c0c5dce8c\r\nsupabase-auth | time=\"2022-07-09T00:15:25Z\" level=info msg=\"Redirecting to external provider\" component=api method=GET path=/authorize provider=keycloak referer=\"http://localhost:3030/\" remote_addr=\"192.168.96.1:45942\" request_id=39397c7b-01e3-4dbb-919a-191c0c5dce8c\r\nsupabase-auth | time=\"2022-07-09T00:15:25Z\" level=info msg=\"request completed\" component=api duration=159963 method=GET path=/authorize referer=\"http://localhost:3030/\" remote_addr=\"192.168.96.1:45942\" request_id=39397c7b-01e3-4dbb-919a-191c0c5dce8c status=302\r\nsupabase-auth | time=\"2022-07-09T00:15:25Z\" level=info msg=\"request started\" component=api method=GET path=/callback referer= remote_addr=\"192.168.96.1:45942\" request_id=4428c95b-3513-494f-82ab-c6b1c554b31b\r\nsupabase-auth | time=\"2022-07-09T00:15:25Z\" level=error msg=\"500: Unable to exchange external code: dd4c2c81-f956-40a3-860a-764eaede02fb.fa0ff490-0ea9-4277-bf20-df339d7ec938.8a75907e-7b0d-4a2a-87ef-68c46447a957\" component=api error=\"Post \\\"http://localhost:8080/auth/realms/SupaBase/protocol/openid-connect/token\\\": dial tcp 127.0.0.1:8080: connect: connection refused\" method=GET path=/callback referer= remote_addr=\"192.168.96.1:45942\" request_id=4428c95b-3513-494f-82ab-c6b1c554b31b\r\nsupabase-auth | time=\"2022-07-09T00:15:25Z\" level=info msg=\"request completed\" component=api duration=5801455 method=GET path=/callback referer= remote_addr=\"192.168.96.1:45942\" request_id=4428c95b-3513-494f-82ab-c6b1c554b31b status=302\r\n```\r\n\r\nseems clear that the error is here `api error=\"Post \\\"http://localhost:8080/auth/realms/SupaBase/protocol/openid-connect/token\\\": dial tcp 127.0.0.1:8080: connect: connection refused\"\r\nrelated to `GOTRUE_EXTERNAL_KEYCLOAK_URL`\r\n\r\n```shell\r\n# test keycloak endpoint\r\n$ curl -X POST http://localhost:8080/auth/realms/SupaBase/protocol/openid-connect/token\r\n{\"error\":\"invalid_request\",\"error_description\":\"Missing form parameter: grant_type\"}\r\n```\r\n\r\nenter inside gotrue container we can see that we can't have connection in localhost:8080 and 127.0.0.1:8080 only with keycloak:8080 works\r\n\r\n```shell\r\n$ docker exec -it supabase-auth sh\r\n\r\n/ $ wget localhost:8080\r\nConnecting to localhost:8080 (127.0.0.1:8080)\r\nwget: can't connect to remote host (127.0.0.1): Connection refused\r\n\r\n/ $ wget 127.0.0.1:8080\r\nConnecting to 127.0.0.1:8080 (127.0.0.1:8080)\r\nwget: can't connect to remote host (127.0.0.1): Connection refused\r\n\r\n/ $ wget keycloak:8080\r\nConnecting to keycloak:8080 (192.168.96.6:8080)\r\n# works here\r\nwget: can't open 'index.html': Permission denied\r\n```\r\n\r\nthe question is why gotrue can connect to keycloak ?\r\nanswear is because we cant connect to localhost:8080, localhost is the gotrue container and there is no 8080 service running on gotrue container, this 8080 belongs to keycloak, \r\nto override this we can use `keycloak` hostname ex `keycloak:8080`, and add to host file `127.0.0.1 keycloak`, to test frontend work, ok it works\r\n\r\nupdate #3: at last I find how to put it to work after more 4h digging in the shit hole\r\nIt work flawless with nextjs frontend\r\n\r\nthe trick for inter container communication is using \r\n\r\n1. keycloak:8080\r\n(required add to host files `127.0.0.1 keycloak`, just for test purposes)\r\n\r\n```yml\r\nGOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:8000/auth/v1/callback\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_URL: \"http://keycloak:8080/auth/realms/SupaBase\"\r\n```\r\n\r\n2. docker host ip (just for test purposes)\r\n```shell\r\nip addr show docker0 | grep -Po 'inet \\K[\\d.]+'\r\n172.17.0.1\r\n```\r\n\r\n```yml\r\nGOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:8000/auth/v1/callback\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_URL: \"http://172.17.0.1:8080/auth/realms/SupaBase\"\r\n```\r\n\r\n3. public domain (production)\r\n\r\n```yml\r\nGOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:8000/auth/v1/callback\"\r\nGOTRUE_EXTERNAL_KEYCLOAK_URL: \"https://keycloak.mydomain.com/auth/realms/SupaBase\"\r\n```\r\n\r\n> `keycloak.mydomain.com` is a ronline domain with everse proxy behind caddy with http/tls\r\n\r\nin keycloak `supabase` client  **Valid Redirect URIs**\r\n(same working for hosted and self hosted, and for local self hosted (localhost) and with my public doamain)\r\n\r\n![image](https://user-images.githubusercontent.com/6191096/178124002-fd13d996-7684-4465-b56f-a8d3d263c720.png)\r\n\r\nKeycloak URL for hosted version: <https://keycloak.mydomain.com/auth/realms/SupaBase>\r\n\r\nother tricks than may trigger the error \"Unable to exchange external code\"\r\n\r\n1. keycloak users required **valid mail,** and that **mail must be verified**\r\n\r\n2 .(self hosted only with smtp enabled and connection problems like inside gotrue try to connect to port 53/smtp, same inter container problem)\r\n`ENABLE_EMAIL_AUTOCONFIRM=true`\r\n\r\nnow I have local and online nextjs, supabase and keycloak working, if anyone needs help feel free to ask\r\n\r\nthanks\r\n\r\nPS: in my opinion <https://supabase.com/docs/guides/auth/auth-keycloak> don't help when it says \r\n\r\nquote=\"Obtain the issuer from the \"OpenID Endpoint Configuration\". This will be used as the Keycloak URL.\"\r\n\r\ndepends if its from a localhost don't help, only create confusion, how **supabase hosted** and **self hosted** deals with localhost:8080? yes don't deal.....even if all services are running in a local machine with docker, I don't try running binaries in host machine but that will work because gotrue will reach localhost:8080\r\n\r\nin that link maybe a note saying that the service must a public ip or domain with port 8080 exposing keycloak service helps",
                    "author": {
                        "login": "koakh"
                    },
                    "createdAt": "2022-07-08T16:06:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1179152266"
                },
                {
                    "id": "IC_kwDOEKipmc5GUoMc",
                    "body": "@koakh, thank you very much for your write-up! I'll try to replicate everything once I find time to do it. IMO the documentation needs some updating before someone gets into the rabbit hole of trying to find out how it works.",
                    "author": {
                        "login": "valerius21"
                    },
                    "createdAt": "2022-07-10T22:32:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1179812636"
                },
                {
                    "id": "IC_kwDOEKipmc5LI7xC",
                    "body": "Thank you @koakh for the write up. I'll try to summarize it for others.\r\n\r\nWhen running both Keycloak and GoTrue locally, you need to make sure that both of them can actually talk to each other over the operating system's network layer. There is no one way to fix the problem, depending on how you have set up the Keycloak or GoTrue instance to run.\r\n\r\nNote that typically things running within a docker container can't talk to things running outside of it, especially on localhost. I believe this to be the cause of the errors with the form of:\r\n\r\n```\r\nPost \\\"http://localhost:8080/auth/realms/SupaBase/protocol/openid-connect/token\\\": dial tcp 127.0.0.1:8080: connect: connection refused\r\n```\r\n\r\nIt may be just easier to host Keycloak on a public web server with a correct URL to avoid dealing with complex docker networking issues especially if you don't have sufficient knowledge or experience in dealing with them.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:24:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1260633154"
                },
                {
                    "id": "IC_kwDOEKipmc5jB8x1",
                    "body": "@koakh Hey, I'm having the same issue with auth not being able to reach keycloak because it is running in another container:\r\n```json\r\n{\r\n    \"component\": \"api\",\r\n    \"error\": \"Post \\\"http://localhost:8085/realms/app/protocol/openid-connect/token\\\": dial tcp 127.0.0.1:8085: connect: connection refused\",\r\n    \"level\": \"error\",\r\n    \"method\": \"GET\",\r\n    \"msg\": \"500: Unable to exchange external code: 330d1058-fb86-45e7-9f7a-609276ee801e.daeeb333-2aa6-440f-9598-4bbf132a530f.bda8d7d3-8395-4429-aed6-74e07b7efd64\",\r\n    \"path\": \"/callback\"\r\n}\r\n```\r\n\r\nHow did you solve this issue in the end then? When I set `GOTRUE_EXTERNAL_KEYCLOAK_URL: http://keycloak:8085/realms/app` the redirect to keycloak in the browser just gets broken.\r\n\r\n-----\r\n\r\n**EDIT: For anyone else looking for a solution on how to get this running when both containers are running on the same machine on windows, I found a solution:**\r\n\r\n* Add an env var with your machine's LAN IP address like `KEYCLOAK_HOSTNAME=192.168.178.60`\r\n* Set Keycloak hostname to this address `KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}`\r\n* Set Keycloak URL for gotrue also to this address `GOTRUE_EXTERNAL_KEYCLOAK_URL: 'http://${KEYCLOAK_HOSTNAME}:8080/realms/${KEYCLOAK_REALM}'`\r\n* Finally, you will have to add a port forwarding from your windows host to the wsl container\r\n  * First, get the IP address of your wsl machine by entering a shell (eg. for me it's podman so I used `wsl -d podman-machine-default`)\r\n  * Run `ifconfig` to get the address of the wsl machine\r\n  * In windows, run `netsh interface portproxy add v4tov4 listenport=8085 listenaddress=0.0.0.0 connectport=8085 connectaddress=<WSL-IP-ADDRESS>` to add a port forwarding\r\n\r\nAfter doing these steps, the authentication process worked for me \ud83d\udc4d ",
                    "author": {
                        "login": "olee"
                    },
                    "createdAt": "2023-08-02T04:02:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1661455477"
                },
                {
                    "id": "IC_kwDOEKipmc5jLLMh",
                    "body": "Hello @olee \r\n\r\nSorry for late answear, \r\nCurrently I'm not at home, and I don't remember the solution from my memory right now\r\nLet me see it in my project, and I update here asap\r\n\r\nUPDATE:\r\n\r\nmy lines of `docker-compose.yml` > read comment\r\n\r\nkeyclock env vars\r\n\r\n```yml\r\n  auth:\r\n    container_name: supabase-auth\r\n    ...\r\n    image: koakh-supabase-gotrue:latest\r\n    environment:\r\n      ...\r\n      # keycloak\r\n      GOTRUE_EXTERNAL_KEYCLOAK_ENABLED: \"true\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_CLIENT_ID: \"supabase\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_SECRET: \"sgTbz86zgZgdL8x7YtPzthZUlkDo0Wup\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:8000/auth/v1/callback\"\r\n      # this url must be accessed from client/browser url, use docker or a online public ip\r\n      # local: ip addr show docker0 | grep -Po 'inet \\K[\\d.]+' or use keycloak in url but required add to hosts `172.17.0.1 keycloak`, 172.17.0.1 works without need to add to hosts\r\n      GOTRUE_EXTERNAL_KEYCLOAK_URL: \"http://172.17.0.1:8080/auth/realms/SupaBase\"\r\n```\r\n\r\n> the trick is using the docker0 network ip ex 172.17.0.1\r\n\r\nplease let me know if it works for you buddie\r\n",
                    "author": {
                        "login": "koakh"
                    },
                    "createdAt": "2023-08-03T12:14:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1663873825"
                },
                {
                    "id": "IC_kwDOEKipmc5jLnf4",
                    "body": "I already found a quite simlar solution based on what you had and added it to my comment above.\r\nFor me it was slightly different, because I was executing the whole thing on windows.\r\n\r\nThanks anyways and also for all the investigation you did above which helped me find the solution \ud83d\udc4d ",
                    "author": {
                        "login": "olee"
                    },
                    "createdAt": "2023-08-03T13:30:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/516#issuecomment-1663989752"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5MnWJe",
            "number": 517,
            "title": "Support use of WhatsApp with Twilio API",
            "body": "# Feature request\r\n\r\nSupport [Twilio API for WhatsApp](https://www.twilio.com/docs/whatsapp/tutorial). It seems like there's a \"whatsapp:\" prefix which needs to be added to the number or the Channel needs to be set to `WhatsApp`. Currently it seems like it's not possible [due to the way SendSms is configured](https://github.com/supabase/gotrue/blob/master/api/sms_provider/twilio.go#L59)\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nAs a developer, one might wish to sign in via WhatsApp number etc.\r\n\r\nChanges to be made: \r\n- Update Twilio Endpoint provider endpoint on GoTrue\r\n- Allow user to either pass in channel or number with given prefix\r\n\r\n## Additional context\r\n\r\nFeature request via support ticket",
            "author": {
                "login": "J0"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-27T07:39:07Z",
            "closedAt": "2022-07-20T15:25:23Z",
            "url": "https://github.com/supabase/gotrue/issues/517",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5G9HmK",
                    "body": "Closing for now as per catchup",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-20T15:25:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/517#issuecomment-1190427018"
                },
                {
                    "id": "IC_kwDOEKipmc5JdEje",
                    "body": "Whats the resolution of this feature request? Any plans to implement it?",
                    "author": {
                        "login": "ferpintado"
                    },
                    "createdAt": "2022-08-31T01:54:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/517#issuecomment-1232357598"
                },
                {
                    "id": "IC_kwDOEKipmc5ZZYjx",
                    "body": "Hey @ferpintado,\r\n\r\nThe feature is now in prod, feel free to give it a try and let us know if there are any issues",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-04-07T01:34:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/517#issuecomment-1499826417"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5M1DMF",
            "number": 523,
            "title": "Support multiple Google OAuth platforms",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nDeveloping apps that work across platforms necessitates having the OAuth work across those platforms.  When setting up the Google provider in the console, the client ID field only allows one single client ID which limits you to one platform. More specifically, if say one has a website and iOS app and Android app you will have a specific client ID for each platform. With the great work that @kangmingtay, @koba-ninkigumi and others have done with the recent support of OIDC id_token support in these PRs #189 & [#207](https://github.com/supabase/gotrue-js/pull/207), this has now become a problem.\r\n\r\n## Describe the solution you'd like\r\n\r\nSupport for multiple client IDs for Google (and maybe others, not sure) would solve the problem.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThe alternative up to this point has been to use the web-based flow on all platforms which is not ideal as it does not support a fully native feel on mobile platforms.\r\n\r\n## Additional context\r\n\r\nWhen using the OIDC sign in method on iOS for example with a web client ID in the Supabase portal results in the following error: \r\n```\r\n{\"message\": \"oidc: expected audience \"_redacted Google web client ID_\" got [\"_redacted Google iOS client ID_\"]\", \"status\": 400}\r\n```\r\n",
            "author": {
                "login": "He1nr1chK"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-29T16:29:03Z",
            "closedAt": "2022-08-24T11:41:55Z",
            "url": "https://github.com/supabase/gotrue/issues/523",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GqoFF",
                    "body": "This is definitely something we'll be looking to add for the next major version. Thanks for the feedback and suggestion.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-07-15T14:04:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/523#issuecomment-1185579333"
                },
                {
                    "id": "IC_kwDOEKipmc5G54HH",
                    "body": "I have the same issue - but for the Keycloak provider. Currently it's impossible to configure multiple Keycloak realms, since only one client id and client secret can be provided. \r\n\r\nI can add another issue - but the author mentioned that it might apply to other providers too, so I figured the solution to both issues will be very similar.",
                    "author": {
                        "login": "ath88"
                    },
                    "createdAt": "2022-07-19T21:39:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/523#issuecomment-1189577159"
                },
                {
                    "id": "IC_kwDOEKipmc5JDTtE",
                    "body": "At this time we don't support multiple providers, and we're definitely having this in mind for the future. Thank you for the suggestion!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T11:41:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/523#issuecomment-1225603908"
                },
                {
                    "id": "IC_kwDOEKipmc5JKRDs",
                    "body": "@hf Do you have a solution for tracking interest into different features? May I suggest using [Canny](https://canny.io)?",
                    "author": {
                        "login": "ath88"
                    },
                    "createdAt": "2022-08-25T15:32:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/523#issuecomment-1227428076"
                },
                {
                    "id": "IC_kwDOEKipmc5OV2Am",
                    "body": "Experiencing the same issue with Sign in with Apple",
                    "author": {
                        "login": "connorlindsey"
                    },
                    "createdAt": "2022-11-14T20:36:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/523#issuecomment-1314349094"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5M_zRK",
            "number": 526,
            "title": "Invalid token returns a 404/ \"User not found\" hash",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIf a magic link token has already been used, the error message provided in the redirect hash is a 404/ \"User not found.\" This was confusing for our user--a more accurate message would be something like, \"Invalid/expired token\".",
            "author": {
                "login": "yowzadave"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-01T20:10:52Z",
            "closedAt": "2022-07-05T08:23:32Z",
            "url": "https://github.com/supabase/gotrue/issues/526",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GBYBB",
                    "body": "Thanks for reporting the issue! We're going to merge this into #315  as it concerns a broader issue around better error messages.\r\n\r\nFeel free to reopen if you have concerns though",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-05T08:23:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/526#issuecomment-1174765633"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5NCmCE",
            "number": 528,
            "title": "IMDb OAuth request",
            "body": "",
            "author": {
                "login": "Shiba-Kar"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-03T03:58:21Z",
            "closedAt": "2022-07-05T08:20:17Z",
            "url": "https://github.com/supabase/gotrue/issues/528",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GBXKV",
                    "body": "Closing this to track in favour of tracking in the main thread in #451 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-05T08:20:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/528#issuecomment-1174762133"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5NDUe1",
            "number": 529,
            "title": "Dart auth stating If \"Email Confirmations\" is turned on, both a user and a session will be null",
            "body": "# Improve documentation\r\n\r\n## Link \r\n\r\nhttps://supabase.com/docs/reference/dart/auth-signup\r\n\r\n## Describe the problem\r\n\r\nThe document states:\r\nIf \"Email Confirmations\" is turned on, both a user and a session will be null.\r\nThis is not true as I can get a user.id returned from the signUp with Email Confirmations turned on. \r\n\r\n## Describe the improvement\r\n\r\nIf \"Email Confirmations\" is turned on, a user will be returned.\r\n\r\n## Additional context\r\n\r\nMaybe the docs are correct and the behavior is wrong.",
            "author": {
                "login": "wanttobuyaboat"
            },
            "state": "CLOSED",
            "createdAt": "2022-06-17T18:46:03Z",
            "closedAt": "2022-07-08T06:07:08Z",
            "url": "https://github.com/supabase/gotrue/issues/529",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GPfaG",
                    "body": "Hey!\r\n\r\n Not too familiar with the Dart lib but in the [JavaScript SDK](https://supabase.com/docs/reference/javascript/auth-signup) if email confirmation is enabled a user will be returned and session will be null. \r\n\r\ncc: @dshukertjr ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-08T02:20:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/529#issuecomment-1178465926"
                },
                {
                    "id": "IC_kwDOEKipmc5GP4em",
                    "body": "@wanttobuyaboat \r\nThank you for spotting this. The behavior on the documentation is the behavior until version 0.2.0 of gotrue-dart, but it was fixed on v0.2.0 to align the behavior with js client. I will update the docs now!",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2022-07-08T05:28:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/529#issuecomment-1178568614"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5NDUqi",
            "number": 530,
            "title": "Integrated Zanzibar-style AuthZ system",
            "body": "# Feature request\r\n\r\nThe addition of a [Zanzibar-style](https://zanzibar.academy/) AuthZ system for modeling relationship that can then be queried and updated via Postgres helpers.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWhile Row Level Security is incredibly powerful, it can get very complex and intimidating very quickly to setup effective and performant policies. There's been a recent wave of OSS and SaaS Zanzibar providers whose whole goal is to simplify and make scalable AuthZ systems. It'd be great to be able to model and work with a system built specifically for AuthZ, which still being able to take advantage of the power of RLS and Supabase.\r\n\r\n## Describe the solution you'd like\r\n\r\nIntegrating a solution like https://docs.authzed.com/ or https://www.ory.sh/docs/keto, and exposing (via the SDK and Postgres functions) the ability to write to and query from these systems.\r\n\r\n## Describe alternatives you've considered\r\n\r\nAlternatively adding something like https://age.apache.org/?l=overview# to model these graph-like relationships manually.\r\n\r\n## Additional context\r\n\r\nThis is probably a pretty big ask, but would (hopefully) greatly simplify setting up effective AuthZ.",
            "author": {
                "login": "RichiCoder1"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-01T20:38:13Z",
            "closedAt": "2022-07-15T14:01:13Z",
            "url": "https://github.com/supabase/gotrue/issues/530",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Gqnan",
                    "body": "Hey this is an interesting suggestion, but right now our focus is to make it easy to build apps with Postgres and PostgREST in the Supabase platform. Adding Zanzibar support, although a great idea, only adds unnecessary complexity to our system. The great thing about Supabase is that you can bring your own solutions if you think they can help you more. \r\n\r\nI'll be marking this as Close as not planned, but we'll definitely keep it in mind for any future major versions.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-07-15T14:01:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/530#issuecomment-1185576615"
                },
                {
                    "id": "IC_kwDOEKipmc5JoE-L",
                    "body": "I think a list of Authorization solutions for supabase would be nice",
                    "author": {
                        "login": "joshxyzhimself"
                    },
                    "createdAt": "2022-09-02T08:51:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/530#issuecomment-1235242891"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N2O4F",
            "number": 538,
            "title": "Add token info to the response of the /admin/generate_link API",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWhen sending custom sign-up emails with a mail provider via a REST API (e.g. via MailJet), it's important to provide the confirmation token inside the email. This way, the confirmation email can contain a link the the app's domain (e.g. ```myapp.com```) and used a redirect on the server side to redirect to Supabase's ```/verify``` API. The token can then be passed through in the redirect - the benefit of this is that the user will only see app links in the email and not some random looking link to a Supabase project. \r\n\r\n## Describe the solution you'd like\r\n\r\nCurrently, this is possible by parsing the link returned by ```/admin/generate_link``` API. However, it would be great if the response (which is already formatted as JSON) already included the sematic parts of the link in separate fields in the returned JSON so the dev does NOT need to parse the link in order to extract them (e.g. return the token, redirect url, etc).\r\n\r\n## Describe alternatives you've considered\r\n\r\nParsing the url using regex or a URL parser library (depending on the environment).\r\n\r\n",
            "author": {
                "login": "chipilov"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-15T13:49:32Z",
            "closedAt": "2022-08-02T15:24:41Z",
            "url": "https://github.com/supabase/gotrue/issues/538",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Gqm4x",
                    "body": "Interesting, we'll take it into consideration for the next major version of the library.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-07-15T13:58:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/538#issuecomment-1185574449"
                },
                {
                    "id": "IC_kwDOEKipmc5HsPWv",
                    "body": "@hf It seems that @kangmingtay has already implemented this in [2.8.1](https://github.com/supabase/gotrue/releases/tag/v2.8.1) with https://github.com/supabase/gotrue/pull/537\r\n\r\nIf so:\r\n - this issue can be closed;\r\n - I have created a PR with an update to the docs: https://github.com/supabase/gotrue/pull/583 - it would be great if someone can review it so it can be merged;\r\n\r\n",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-08-02T15:08:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/538#issuecomment-1202779567"
                },
                {
                    "id": "IC_kwDOEKipmc5HsZEi",
                    "body": "hey @chipilov, thanks for the feedback to help make this possible! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-08-02T15:25:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/538#issuecomment-1202819362"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N2QPu",
            "number": 539,
            "title": "Verify password validity before existence of a user during /admin/generate_link calls of type 'signup'",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI would like to use the ```/admin/generate_link``` API to sign-up new users. In order to prevent leaking information about registered users, it's important to be able to return no error if someone tries to sign-up with an email which already exists. Currently, this is problematic because the ```/admin/generate_link``` uses the same error code for weak password and existing user (HTTP 422) but prioritizes the user existence error first. This means that a rogue user can check the existence of a user if they supply a weak password - if the user already exists they will get no error but if the user does NOT exist they will get a weak password error.\r\n\r\n## Describe the solution you'd like\r\n\r\nPrioritize the weak password error when returning the result for ```/admin/generate_link``` OR return a list of errors codes instead of a single error message.\r\n\r\n## Describe alternatives you've considered\r\n\r\nCurrently, I am manually checking the strength of the password before calling the API.\r\n",
            "author": {
                "login": "chipilov"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-15T13:54:34Z",
            "closedAt": "2022-08-24T11:38:23Z",
            "url": "https://github.com/supabase/gotrue/issues/539",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JDS1b",
                    "body": "Hey thanks for this issue.\r\n\r\nDo have in mind that you're calling an `/admin` endpoint which is meant to be used _only_ by those who have access to an admin JWT. By extension, then, anyone with access to that token already has access to the list of users in the system.\r\n\r\nPlease make sure you're using calling the `/admin/generate_link` API from a secure location like a server you control that is not open to the public at large (e.g. has some authentication to be used).",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T11:38:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/539#issuecomment-1225600347"
                },
                {
                    "id": "IC_kwDOEKipmc5JDibC",
                    "body": "@hf I understand that and I do call it from a server environment. I guess I did NOT explain it well enough - the fact that a user cannot call this admin API directly does NOT mean they cannot call my custom sign-up API directly (if they can't, my own UI app would not be able to either). Basically, my public API acts as a proxy to the admin API. So the problem is that in my API implementation, I call this admin endpoint but I still need to return something to the client.\r\n\r\nThe workaround I have right now is that I manually check for the password length BEFORE I make a call to the admin API.\r\n\r\nDoes that make sense?\r\n\r\n",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-08-24T12:35:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/539#issuecomment-1225664194"
                },
                {
                    "id": "IC_kwDOEKipmc5JDkwU",
                    "body": "Hey @chipilov it does make sense. The password strength check in this API call is just a basic length check. You are encouraged to use a better password strength checking strategy, such as ZXCVBN or HaveIBeenPwned.org.\n\nEven if we did reorder the response errors, it would be up to your API to properly mask any information about the existence of a user. (This is very hard - practically impossible - to do well, though.)",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T12:45:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/539#issuecomment-1225673748"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N5evu",
            "number": 540,
            "title": "Feature Request - New Ory Hydra OAuth2 Provider Integration",
            "body": "# Feature request\r\n\r\nI want a new Ory Hydra OAuth2 Provider Integration\r\n\r\n## Describe the solution you'd like\r\n\r\nWaiting for someone/team/community integrate Ory Hydra OAuth2 Provider\r\n\r\n## Describe alternatives you've considered\r\n\r\nThe alternative is integrate it, and contribute with PR of the Integration with some info how to setup and a online demo of everything working, and a deployed OryHydra server if supabase members wants to test integration without deploy it\r\n\r\n## Additional context\r\n\r\nThis same feature request will be in repos supabase-js and supabase gotrue repos\r\n\r\n- [related issue](https://github.com/supabase/gotrue-js/issues/316)",
            "author": {
                "login": "koakh"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-16T22:04:41Z",
            "closedAt": "2022-09-07T13:10:39Z",
            "url": "https://github.com/supabase/gotrue/issues/540",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5J30kJ",
                    "body": "Hey we're going to move this to the mega thread(#451 ), please do upvote it there if you'd like it implemented.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-07T13:10:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/540#issuecomment-1239369993"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMzA3NDU3OTIy",
            "number": 541,
            "title": "\"Database error granting user\" on sign up/sign in",
            "body": "I have been very inconsistently getting a this error \"Database error granting user\" with a 500 HTTP status code.\r\n\r\nSometimes I try it a bit more and then it starts working again.\r\n\r\nHas anyone had that before?\r\n\r\n",
            "author": {
                "login": "nstrelow"
            },
            "state": "CLOSED",
            "createdAt": "2021-06-07T18:36:25Z",
            "closedAt": "2022-09-07T13:58:49Z",
            "url": "https://github.com/supabase/gotrue/issues/541",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MDA=",
                    "body": "Hey @nstrelow - i know you said that it's inconsistent, but is there any way that you think we can reproduce this? Is it happening with one of the examples that we recommend in our documentation?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-06-08T11:55:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809800"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MDI=",
                    "body": "Sorry, I have no way of reproducing, I will try and write down what happened, the next time I have it.\r\n\r\nFeel free to close this for more clarity and I'll reopen if I come across it again.\r\n\r\nLeft this here to gather reports of similar problems, so we can gather more info.",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-06-08T13:29:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809802"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MDQ=",
                    "body": "OK sure! I'll close but feel free to drop comments and I can reopen to debug once we have more info",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-06-09T04:21:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809804"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MDU=",
                    "body": "It is happening again and it is happening on every auth actions, such as sign up/in with provider or not.\r\n\r\nAny idea what could cause this and how I can fix it?\r\n\r\nAlso happening from different domains.\r\n\r\nCould I have unwillingly messed up something in the database?",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-06-11T11:40:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809805"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MDc=",
                    "body": "OMG, it was not going away until I dropped the auth.email() function I created (copied from supabase/supabase#1857).\r\nBut when I recreated it, the bug does not reappear. This is so weird.\r\n\r\nCommands\r\n```\r\ncreate or replace function auth.email() returns text as $$\r\n  select nullif(current_setting('request.jwt.claim.email', true), '')::text;\r\n$$ language sql;\r\n```\r\n```\r\ndrop function auth.email\r\n```",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-06-11T22:02:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809807"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MDk=",
                    "body": "Hey @nstrelow - is it possible you're modifying this function somehow? Or do you have any triggers on your tables which could be blocking the function from working correctly?\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-06-13T06:37:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809809"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MTI=",
                    "body": "Hmm it is still happening.\r\n\r\nJust now it failed with said error. After trying to login (via Gitlab) 5 times it worked.\r\n\r\nI still had the auth.email function, but was not using it. Will leave it deleted and see if it has to do with that function or if it's something else.",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-06-28T14:05:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809812"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MTU=",
                    "body": "This has now costed me a reject in the apple app store \ud83d\ude22 \r\n\r\nThey said login is not working, but it was that error again.\r\n\r\nI still have this 1-2 times a day, where I need to logging around 5 times until it finally accepts my login\r\n\r\nAny idea? \r\nStill using the dart SDK in a Flutter Web application.\r\nIt is happening for normal and provider logins.\r\n\r\nSomething with the JTW token or so?\r\nOr some race condition?",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-07-05T10:45:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809815"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MTc=",
                    "body": "Hi @nstrelow - I will reopen this, but we'll need more help to debug this with you. We aren't seeing this issue with other projects (as far as we can determine). \r\n\r\n- > \"some race condition.\" Is there something in your code that is logging the client out before it has a chance to log in?\r\n- > \"using the dart SDK in a Flutter Web application.\" Are you seeing the same thing when you call the URLs directly, or using the supabase-js library?\r\n- > \"Database error granting user\". Have you modified the `auth` schema? Are you using any triggers?\r\n- If you run this on a brand-new project, do you get the same error?\r\n- can you share your full schema?\r\n\r\nIt's very hard to determine where the error is without a way to replicate the error on our side - I _suspect_ it's a code issue (the dart SDK, your application code, schema changes) rather than an infra issue, but that's just a hunch since we aren't seeing the problem occur with other users. \r\n\r\nIf we can narrow-down the problem landscape, we can dig a lot deeper.",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-07-06T04:25:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809817"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDExODY4MDk4MjA=",
                    "body": "I migrated to a new database yesterday and hope that fixed it.\r\nI am currently short on time so if that fixed it I will not pursue this issue anymore.\r\n\r\nIf it reoccurs, I'll try some additional steps.\r\n\r\nI have a trigger function, which creates an entry inside a public.users schema, when a new user is created. That should be the only thing running, when I sign in.\r\nCodewise I am just using `client.auth.signIn(...)`, so I don't know where something could go wrong here.\r\n\r\nI just published the schema sql to Github under https://github.com/hpi-studyu/studyu (the cleaned one for the new database).\r\n\r\nOtherwise, a while ago, I accidentally restored a backup of Supabase back to Supabase using pgAdmin (and user `postgres`). This might have caused the problem.\r\n\r\n\r\n@kiwicopple I really appreciate your help, but I would agree, that a single user having some problem is probably the users problem and not one of supabase. So please focus on the more generally helpful features and issues \ud83d\ude01 \r\n\r\nE.g. I am very interested in a complete and easy self hosted setup, since my app handles medical data and a lot of institutions want to self host.\r\nWould also offer my help, but I am sandwiched between finishing my master thesis and my job start in August \ud83d\ude48 ",
                    "author": {
                        "login": "nstrelow"
                    },
                    "createdAt": "2021-07-06T08:13:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809820"
                },
                {
                    "id": "IC_kwDOEKipmc5GvUfg",
                    "body": "Hi @kiwicopple, @nstrelow - your issue could well be down to the trigger you have on the ```auth.users``` table, or more specifically a privileges issue on that trigger being able to fire.\r\n\r\nI've started seeing similar errors, initially it was the same as you - ```Database error granting user``` - but since I've tried to rule out issues with my supabase project (I've been messing around with privileges while trying out the alpha release of function hooks), I've moved to a fresh project with no existing users, and I now can't register. The error being thrown is ```Database error saving new user```\r\n\r\nIt's definitely the hook I have cloning users from the ```auth``` to ```public``` schema, as if I disable it everything works perfectly. I suspect my issue is that I'm creating my database structure using the ```node-pg-migrate``` tool, including the trigger on the auth schema. The function the trigger invokes is created using ```SECURITY DEFINER```, which in this case is the ```postgres``` role that the migrations tool uses to authenticate, and I guess although that role can create the trigger, there's an issue when it comes to running it. I also can't delete the trigger in the ```down``` method of my migration, as when I try to run it I get a permissions error that ```postgres``` isn't the owner of the table.\r\n\r\n@kiwicopple any ideas on how to resolve? Should I / we be using a different user for running migrations? I guess it would be best to use the same user the dashboard uses, but I can't find the password for it anywhere.\r\n\r\nCheers.\r\n",
                    "author": {
                        "login": "sturatcliffe"
                    },
                    "createdAt": "2021-08-10T08:42:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809824"
                },
                {
                    "id": "IC_kwDOEKipmc5GvUfh",
                    "body": "Some further info on my issue:\r\n\r\nI've stripped my migration right back to the bare minimum to get my auth flow working, and generated a SQL script that I can run from the dashboard to rule out the ```postgres``` role being the issue.\r\n\r\nThis is the script I'm running:\r\n\r\n```\r\nCREATE TABLE public.audits\r\n(\r\n    id SERIAL PRIMARY KEY,\r\n    tbl text COLLATE pg_catalog.\"default\" NOT NULL,\r\n    row_id text COLLATE pg_catalog.\"default\" NOT NULL,\r\n    before jsonb,\r\n    after jsonb,\r\n    \"timestamp\" timestamp with time zone DEFAULT now(),\r\n    user_id uuid\r\n);\r\n\r\nCREATE TABLE public.users\r\n(\r\n    id uuid NOT NULL,\r\n    email_verified boolean NOT NULL DEFAULT false,\r\n    email_verification_code text COLLATE pg_catalog.\"default\",\r\n    phone_verified boolean NOT NULL DEFAULT false,\r\n    phone_verification_code text COLLATE pg_catalog.\"default\",\r\n    id_verified boolean NOT NULL DEFAULT false,\r\n    qualification_verified boolean NOT NULL DEFAULT false,\r\n    role text COLLATE pg_catalog.\"default\" DEFAULT 'user'::text,\r\n    CONSTRAINT users_pkey PRIMARY KEY (id),\r\n    CONSTRAINT users_id_fkey FOREIGN KEY (id)\r\n        REFERENCES auth.users (id) MATCH SIMPLE\r\n        ON UPDATE NO ACTION\r\n        ON DELETE CASCADE\r\n);\r\n\r\n\r\nCREATE FUNCTION public.clone_user()\r\n    RETURNS trigger\r\nAS $$\r\n    begin\r\n        insert into public.users (id)\r\n        values (new.id);\r\n        return new;\r\n    end;\r\n    $$ language plpgsql security definer;\r\n\t\r\n\t\r\nCREATE FUNCTION public.audit()\r\n    RETURNS trigger\r\nAS $$\r\n    begin\r\n        insert into audits (tbl, row_id, before, after, user_id)\r\n        values (TG_TABLE_NAME, new.id, row_to_json(old), row_to_json(new), auth.uid());\r\n        return new;\r\n    end;\r\n    $$ language plpgsql security definer;\r\n\r\n\r\nCREATE TRIGGER audit\r\n    AFTER INSERT OR DELETE OR UPDATE \r\n    ON public.users\r\n    FOR EACH ROW\r\n    EXECUTE PROCEDURE public.audit();\r\n\r\n\r\nCREATE TRIGGER clone_user\r\n    AFTER INSERT\r\n    ON auth.users\r\n    FOR EACH ROW\r\n    EXECUTE PROCEDURE public.clone_user();\r\n```\r\n\r\nHowever, it still doesn't work even running from the dashboard. I've narrowed it down to the audit trigger, as when I disable/remove it, I can register new users again.\r\n\r\nSo my flow is: User arrives in ```auth.users``` and a trigger clones them to ```public.users```. A trigger should then log that change to the ```audits``` table, but as that's somehow failing it's blocking the entire flow and throwing the ```Database error saving new user``` message out.\r\n\r\nIf I disable the audit trigger to allow a user to sign up, then delete the corresponding cloned row from my ```public.users``` table, enable the audit trigger again and manually clone the auth user as a public user, the audit logic works perfectly. So this must be something permissions related?\r\n\r\n",
                    "author": {
                        "login": "sturatcliffe"
                    },
                    "createdAt": "2021-08-10T09:53:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809825"
                },
                {
                    "id": "IC_kwDOEKipmc5GvUfk",
                    "body": "Sorry @nstrelow, @kiwicopple,\r\n\r\nI've just found the logs section at the bottom of the authentication settings screen, and this has highlighted what my issue with the audit trigger outlined above is - I wasn't specifying the schema in which the audits table belonged. Somehow when the user is first cloned from ```auth.users``` to ```public.users```, it can't find the ```audits``` table as it must only be looking in the ```auth``` schema. From that point forwards the triggers are all invoked from within the ```public``` schema so there's no issue finding where to write the audit rows to.\r\n\r\nHowever, this may help you diagnose your issue @nstrelow. Especially if you can get it to fail more reliably, you can check the logs here: https://app.supabase.io/project/{YOUR_APP}/auth/settings and you'll see a more details explanation of why the operation is failing. I'm not sure how long the logs are visible for though, so you may need to check pretty soon after a failure which may prove difficult if it's still only failing very infrequently for you.",
                    "author": {
                        "login": "sturatcliffe"
                    },
                    "createdAt": "2021-08-12T14:22:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809828"
                },
                {
                    "id": "IC_kwDOEKipmc5GvUfo",
                    "body": "I have the same issue running locally with supabase cli. Let me know what I can do to provide sufficient information. My issue happens when I click a magic link, e.g. `http://localhost:54321/auth/v1/verify?redirect_to=http%3A%2F%2Flocalhost%3A3000&token=gUY2YV-ZNUPJ5XQoPrRnUg&type=invite`\r\n\r\n![Screenshot from 2021-11-30 12-24-55](https://user-images.githubusercontent.com/16841792/144038941-8c4e8777-2bcb-4a2e-82fe-d6ef531874d9.png)\r\n\r\n### How to fix it\r\n\r\n1. Stop local supabase\r\n2. Delete `supabase/.branches` and `supabase/.temp`\r\n3. Run `supabase start`\r\n4. Run my seed script that sends so invites to my inbucket service\r\n\r\nIf I run `supabase db reset` and seed again then the error is back and I have to do the steps above\r\n",
                    "author": {
                        "login": "NixBiks"
                    },
                    "createdAt": "2021-11-30T11:23:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809832"
                },
                {
                    "id": "IC_kwDOEKipmc5GvUfr",
                    "body": "> I have the same issue running locally with supabase cli. Let me know what I can do to provide sufficient information. My issue happens when I click a magic link, e.g. `http://localhost:54321/auth/v1/verify?redirect_to=http%3A%2F%2Flocalhost%3A3000&token=gUY2YV-ZNUPJ5XQoPrRnUg&type=invite`\r\n> \r\n> ![Screenshot from 2021-11-30 12-24-55](https://user-images.githubusercontent.com/16841792/144038941-8c4e8777-2bcb-4a2e-82fe-d6ef531874d9.png)\r\n> \r\n> ### How to fix it\r\n> 1. Stop local supabase\r\n> 2. Delete `supabase/.branches` and `supabase/.temp`\r\n> 3. Run `supabase start`\r\n> 4. Run my seed script that sends so invites to my inbucket service\r\n> \r\n> If I run `supabase db reset` and seed again then the error is back and I have to do the steps above\r\n\r\nNot sure what #4 means here (the 'sends so invites' part), but I was similarly able to resolve this issue by repeating steps 1-3 here and then running my own seed script for my local instance.",
                    "author": {
                        "login": "mclean25"
                    },
                    "createdAt": "2021-12-05T16:43:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809835"
                },
                {
                    "id": "IC_kwDOEKipmc5GvUfu",
                    "body": "@mclean25 just a typo so it's hard to read the sentence. But the step is running a seed script that sends invites (all invites are captured with the inbucket service)",
                    "author": {
                        "login": "NixBiks"
                    },
                    "createdAt": "2021-12-05T17:20:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809838"
                },
                {
                    "id": "IC_kwDOEKipmc5GvUfy",
                    "body": "Hey all, transferring this to our Auth repo so we can best track this",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T06:18:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1186809842"
                },
                {
                    "id": "IC_kwDOEKipmc5J4DIM",
                    "body": "Hey everyone, these errors are usually returned when there is a failing trigger created on one of the tables in the auth schema. If anyone's still facing this issue and require assistance, please contact Supabase at our support link (https://app.supabase.com/support/new) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:58:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1239429644"
                },
                {
                    "id": "IC_kwDOEKipmc5ef6vN",
                    "body": "Super old, but ran into this tonight. It was an issue with a trigger function having a misnamed param. To debug, start with a basic trigger like this and work back: \r\n\r\n```\r\ncreate function public.handle_new_user()\r\nreturns trigger\r\nlanguage plpgsql\r\nsecurity definer set search_path = public\r\nas $$\r\nbegin\r\n  insert into public.profiles (id)\r\n  values (new.id);\r\n  return new;\r\nend;\r\n$$;\r\n\r\n-- trigger the function every time a user is created\r\ncreate trigger on_auth_user_created\r\n  after insert on auth.users\r\n  for each row execute procedure public.handle_new_user();\r\n\r\n```",
                    "author": {
                        "login": "saltcod"
                    },
                    "createdAt": "2023-06-10T02:06:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1585425357"
                },
                {
                    "id": "IC_kwDOEKipmc5eg17s",
                    "body": "@saltcod yeah, this error is returned if you have a trigger on the auth schema that fails - it causes the entire transaction to be rolled back ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-10T13:34:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/541#issuecomment-1585667820"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N7lT6",
            "number": 542,
            "title": "Hash code in the auth email getting ignored by email link protection service ",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nFor example, MimeCast and SafeLink removes hash code part of the URL when they transform to safe link. \r\nSo company emails with these service enabled cannot be used for authentication purpose. \r\n- without the hash code, GoTrue server just hangs \r\n\r\n## To Reproduce\r\n\r\nFind a company email with link protection service, try to invite that email or send reset password link. \r\nThe link will be broken due to the safe link issue explained above \r\n\r\n## Expected behavior\r\n\r\nHash code cannot be used if we consider the service to be used with big company emails. \r\n\r\n",
            "author": {
                "login": "jyk2000"
            },
            "state": "CLOSED",
            "createdAt": "2021-11-16T15:55:47Z",
            "closedAt": "2022-07-18T06:27:34Z",
            "url": "https://github.com/supabase/gotrue/issues/542",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GvVyn",
                    "body": "> Find a company email with link protection service, try to invite that email or send reset password link\r\n\r\nCan you please provide an example of this or an example of what an email with a hashcode looks like? It would be awesome to create a test case for this one as I'm not familiar with the format of email link protection services",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-28T16:20:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/542#issuecomment-1186815143"
                },
                {
                    "id": "IC_kwDOEKipmc5GvVyr",
                    "body": "Hey @jyk2000!\r\n\r\nGoing to transfer this to our Auth repo and close  it there since it seems like the issue has gone stale. Do feel free to re-open if you are still facing the issue though.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T06:27:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/542#issuecomment-1186815147"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N7vuz",
            "number": 543,
            "title": "Revoke Refresh Token",
            "body": "![Screenshot from 2022-03-11 13-07-57](https://user-images.githubusercontent.com/96174573/157812078-af5b2345-3cba-4ac8-a7e5-26ea8cc44fc9.png)\r\n\r\nfirebase have this https://firebase.google.com/docs/auth/admin/manage-sessions#revoke_refresh_tokens",
            "author": {
                "login": "Deliana90"
            },
            "state": "CLOSED",
            "createdAt": "2022-03-11T06:08:24Z",
            "closedAt": "2022-09-07T14:00:06Z",
            "url": "https://github.com/supabase/gotrue/issues/543",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5J4DiC",
                    "body": "Hey @Deliana90,\r\n\r\nThanks for the request -- we currently have a `Logout` endpoint which revokes all refresh tokens and logs out all sessions associated with a user.\r\n\r\nHope this helps! Feel free to let us know if there are further questions or feedback.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-07T14:00:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/543#issuecomment-1239431298"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N7wMS",
            "number": 544,
            "title": "Sign in automatically authenticates email of an user that did not authenticate his email",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nawait supabase.auth.signIn({\r\n        email: formState.email,\r\n        password: formState.password,\r\n      });\r\nAutomatically authenticates email despite the user not clicking their confirmation email.\r\n\r\n## To Reproduce\r\nThere are 2 ways to create this bug\r\nMethod 1:\r\n1. Create a DB using quickstart : react\r\n2. Sign up an user using email and password\r\n3.  Repeated attempts at signing in the unauthenticated new account will change the 'confirmed at' column of that account from 'null' to a new timestamp.\r\n(might take a second log in attempt to trigger)\r\n4. User will be logged in despite not confirming his email\r\n\r\nMethod 2:\r\n1. Create a DB using quickstart : react\r\n2. Sign up an user using email and password\r\n3.  Confirm the user's email\r\n4. Delete the account from auth.users using sql command\r\n5.  Recreate an account using the same email and a different password\r\n7.  Repeated attempts at signing in the unauthenticated new account will change the 'confirmed at' column of that account from 'null' to a new timestamp.\r\n9. User will be logged in despite not confirming his email\r\n\r\n## Expected behavior\r\n\r\nUser should not be able to login with email and password if they did not confirm their email\r\n\r\n\r\n",
            "author": {
                "login": "SeekSaveServe"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-20T11:00:12Z",
            "closedAt": "2022-07-19T14:38:08Z",
            "url": "https://github.com/supabase/gotrue/issues/544",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GveIX",
                    "body": "Hey @SeekSaveServe, could you please share your settings under Auth > Settings > Email Auth ?\r\n\r\n\r\n<img width=\"1419\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10214025/169795326-851c632a-1c69-44b4-b13c-083e798dd32e.png\">\r\n",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-05-23T10:01:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/544#issuecomment-1186849303"
                },
                {
                    "id": "IC_kwDOEKipmc5GveIc",
                    "body": "Hey @SeekSaveServe ,\r\n\r\nDid you manage to get around to checking the settings? Do let us know if you are still facing issues!\r\n\r\nWe'll be transferring this issue to out Auth repo for tracking purposes.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T07:17:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/544#issuecomment-1186849308"
                },
                {
                    "id": "IC_kwDOEKipmc5G4GTJ",
                    "body": "Hi @J0 ! Apologies for the very late reply, it is working after we redeployed it :)",
                    "author": {
                        "login": "SeekSaveServe"
                    },
                    "createdAt": "2022-07-19T14:16:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/544#issuecomment-1189110985"
                },
                {
                    "id": "IC_kwDOEKipmc5G4M0A",
                    "body": "Not at all -- thank you for being patient with us.  Good to hear that it's working! Going to close for now but feel free to reach out again if you run into any issues :)",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-19T14:38:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/544#issuecomment-1189137664"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N7yG0",
            "number": 545,
            "title": "JWT from Keycloak alway showing JWSInvalidSignature",
            "body": "# Bug report\r\nI'm running a local (self-hosted) docker instance of supabase. I added Keycloak as a provider in the docker.yml for Gotrue according to this guide: https://github.com/netlify/gotrue#external-authentication-providers\r\nThe provider is recognized and I can get a login url when calling `GotrueSessionResponse gotrueResponse = await Supabase.instance.client.auth.signIn(provider: Provider.keycloak);`\r\nHowever, when I try to use the returned `access_token`, it alway says \"JWSError JWSInvalidSignature\" when I try to get data from the Supabase database.\r\nI tried\r\n```\r\nSupabase.instance.client.auth.setAuth(json.decode(response.body)[\"access_token\"]);\r\nSupabase.instance.client.auth.setSession(json.decode(response.body)[\"refresh_token\"]);\r\nSupabase.instance.client.auth.refreshSession();\r\n```\r\nand also verified the access token on jwt.io but it always complains about the signature. I followed the guide here https://supabase.com/docs/guides/auth/auth-keycloak to set up Keycloak, but it's just not working.\r\n\r\n## Describe the bug\r\nToken signature is always invalid.\r\n\r\n## To Reproduce\r\nDownload Supabase, update auth container image to: `image: supabase/gotrue:v2.6.28` (for the keycloak provider), add provider config to docker-compose.yml:\r\n```\r\n GOTRUE_EXTERNAL_KEYCLOAK_ENABLED: \"true\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_CLIENT_ID: \"supabase\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_SECRET: \"4ljLTK72wY1eTuOilPw4gkHTok0yFupo\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_REDIRECT_URI: \"http://localhost:3000/callback\"\r\n      GOTRUE_EXTERNAL_KEYCLOAK_URL: \"http://localhost:8080/auth/realms/supabase\"\r\n```\r\nGet authorization url in code via: \r\n`GotrueSessionResponse gotrueResponse = await Supabase.instance.client.auth.signIn(provider: Provider.keycloak);`\r\n\r\nAuthorize on the url, get code. Send post request to Keycloak to get final access_token. Add access token to supabase code and try to execute a database query.\r\n\r\n## Expected behavior\r\nSupabase should accept the JWT.\r\n\r\n## System information\r\n\r\n- OS: Mac\r\n- Browser WebKit (Safari)\r\n- Client library: supabase-dart",
            "author": {
                "login": "cremfert"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-09T10:42:47Z",
            "closedAt": "2022-09-28T09:08:34Z",
            "url": "https://github.com/supabase/gotrue/issues/545",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GvfpK",
                    "body": "Transferring to our auth repo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T07:25:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/545#issuecomment-1186855498"
                },
                {
                    "id": "IC_kwDOEKipmc5IuiOM",
                    "body": "Hi @cremfert - did you manage to solve this?",
                    "author": {
                        "login": "magick93"
                    },
                    "createdAt": "2022-08-19T02:06:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/545#issuecomment-1220158348"
                },
                {
                    "id": "IC_kwDOEKipmc5I-Bp7",
                    "body": "@magick93 Unfortunately, no. I switched from supabase to PostgREST and this works with Keycloak. Sorry.",
                    "author": {
                        "login": "cremfert"
                    },
                    "createdAt": "2022-08-23T15:15:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/545#issuecomment-1224219259"
                },
                {
                    "id": "IC_kwDOEKipmc5LI23k",
                    "body": "GoTrue does not accept arbitrary JWTs issued by Keycloak. It only accepts JWTs issued by GoTrue. You may be confusing the Login with Keycloak functionality with Keycloak's own JWTs.\r\n\r\nGoTrue allows you to log users in if they have an account in your Keycloak server. This is done using the OAuth 2.0 protocol support in Keycloak. Once the login completes, GoTrue will issue its own JWTs that are not equal to the ones issued by Keycloak, and can only be used for communication with GoTrue (and the rest of the Supabase platform).\r\n\r\nI hope this answers your questions.\r\n\r\n(You can use your own PostgREST with Keycloak, as it supports any JWTs if configured properly.)",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:08:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/545#issuecomment-1260613092"
                },
                {
                    "id": "IC_kwDOEKipmc5LL7mi",
                    "body": "> GoTrue allows you to log users in if they have an account in your Keycloak server. \r\n\r\n> It only accepts JWTs issued by GoTrue.\r\n\r\nDoes this mean keyclock is only being used to authenticate, and not authorize? So that any Keycloak roles are not present as claims in the jwt?",
                    "author": {
                        "login": "magick93"
                    },
                    "createdAt": "2022-09-28T20:15:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/545#issuecomment-1261418914"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N70AG",
            "number": 546,
            "title": "Social Login with Chrome extensions",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nYes, the problem being that Social login such as google does not seem to work as intended in Chrome extensions. I have followed this discussion here: https://github.com/supabase/supabase/discussions/5787\r\n\r\nWhich has the same issue, and I'm hoping to find improved documentation, or help towards a solutions to be able to build extensions with Supabase.\r\n\r\n## Describe the solution you'd like\r\n\r\nImproved documentation around how to make social logins work with extensions.\r\n\r\n## Describe alternatives you've considered\r\n\r\nBuilding with Firebase instead, as they have Google OAuth that works with extensions as documented here: https://developer.chrome.com/docs/extensions/mv3/tut_oauth/\r\n\r\n## Additional context\r\n\r\nI asked this in the discord and it was suggested to create an issue here :) Thanks!\r\n",
            "author": {
                "login": "geordidearns"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-20T13:01:57Z",
            "closedAt": "2022-07-18T10:38:32Z",
            "url": "https://github.com/supabase/gotrue/issues/546",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GvhH_",
                    "body": "I am also facing the same issue, not able to create google auth session in V3 chrome extension.\r\n",
                    "author": {
                        "login": "RuntimeTerror10"
                    },
                    "createdAt": "2022-04-20T19:42:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/546#issuecomment-1186861567"
                },
                {
                    "id": "IC_kwDOEKipmc5GvhIH",
                    "body": "also having this problem, down to exchange discord and talk, or update me if you have a solution :) ? ",
                    "author": {
                        "login": "Galz648"
                    },
                    "createdAt": "2022-04-22T14:41:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/546#issuecomment-1186861575"
                },
                {
                    "id": "IC_kwDOEKipmc5GvhIK",
                    "body": "See my answer on #5787. Hope it helps! ",
                    "author": {
                        "login": "der-ofenmeister"
                    },
                    "createdAt": "2022-07-05T17:54:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/546#issuecomment-1186861578"
                },
                {
                    "id": "IC_kwDOEKipmc5GvhIM",
                    "body": "Hey team ! \r\n\r\nThanks for opening this issue and collaborating to find an answer -- do let us know if you're  still facing issues with social login on chrome extensions. If anyone would like to document this solution we'll do our best to find a spot for it\r\n\r\nGoing to transfer this to our Auth repo for better tracking",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T07:33:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/546#issuecomment-1186861580"
                },
                {
                    "id": "IC_kwDOEKipmc5Gv740",
                    "body": "I think there shouldn't be an issue now. If anyone's still having issues I'm more than happy to direct them/show some (more) code.",
                    "author": {
                        "login": "der-ofenmeister"
                    },
                    "createdAt": "2022-07-18T09:26:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/546#issuecomment-1186971188"
                },
                {
                    "id": "IC_kwDOEKipmc5GwMc0",
                    "body": "Gotcha, thanks so much @der-ofenmeister! Closing this for now",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T10:38:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/546#issuecomment-1187039028"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N718T",
            "number": 547,
            "title": "OTP by email should not send email verification link, email should be verified when user inputs correct OTP",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nEmail OTP for new users is sending an email with a link to confirm the email instead of the OTP. This is unnecessary with email OTP, since if the user can successfully paste the OTP into the app they have access to this email address, and it's bad UX since the user expects an OTP not a link. The bug is that to prevent this we must turn off email verification, so users are verified immediately they enter an email.\r\n\r\n## Expected behavior\r\n\r\nI think solution to this for email OTP only is to send an OTP instead of a confirmation link with new users and to mark the email as verified when the user enters a valid OTP.\r\n\r\n",
            "author": {
                "login": "fergusmeiklejohn"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-14T03:26:21Z",
            "closedAt": "2022-09-19T06:37:28Z",
            "url": "https://github.com/supabase/gotrue/issues/547",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GvjmX",
                    "body": "I just used email OTP in the last few weeks for a test and I thought I edited the email template to not send a link and just the otp code...\r\n```\r\n<h2>Confirm your signup</h2>\r\n<p>Enter this code to confirm your email</p>\r\n{{ .Token }}\r\n```",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2022-04-14T03:31:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/547#issuecomment-1186871703"
                },
                {
                    "id": "IC_kwDOEKipmc5Gvjmb",
                    "body": "is it possible to make the OTP code human-friendly? like 4-6 digits / letters\r\n\r\nThanks",
                    "author": {
                        "login": "ruskid"
                    },
                    "createdAt": "2022-06-20T15:27:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/547#issuecomment-1186871707"
                },
                {
                    "id": "IC_kwDOEKipmc5Gvjme",
                    "body": "> is it possible to make the OTP code human-friendly? like 4-6 digits / letters\r\n> \r\n> Thanks\r\n\r\nPerhaps it should be long enough to be secure, but it would be great to leave off the hyphens because they're sometimes difficult to copy on mobile\r\n",
                    "author": {
                        "login": "fergusmeiklejohn"
                    },
                    "createdAt": "2022-06-21T09:58:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/547#issuecomment-1186871710"
                },
                {
                    "id": "IC_kwDOEKipmc5KiwDY",
                    "body": "Hey all,\r\n\r\nYou should now be able to generate a 6-10 digit email OTP via the [ admin generateLink endpoint](https://github.com/supabase/gotrue#post-admingenerate_link) which you should then be able to use to perform the following behaviour.\r\n\r\nGoing to close this for now but feel free to re-open if there are further questions or queries.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-19T06:37:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/547#issuecomment-1250623704"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N77i6",
            "number": 548,
            "title": "Add the generate_link endpoint to the GoTrue Auth Server reference page ",
            "body": "# Improve documentation\r\n\r\n## Link \r\n\r\n[GoTrue Auth Server](https://supabase.com/docs/gotrue/server/about)\r\n\r\n## Describe the problem\r\n\r\nThis page lists the endpoints exposed by the Supabase GoTrue server, however, it seems that it's out of date since it is missing the recent addition of ```/generate_link``` in the endpoints.\r\n\r\n## Describe the improvement\r\n\r\nAdd a reference to the ```/generate_link``` API (and any other APIs that might have been added recently).\r\n",
            "author": {
                "login": "chipilov"
            },
            "state": "CLOSED",
            "createdAt": "2022-01-17T13:34:31Z",
            "closedAt": "2022-08-30T03:39:29Z",
            "url": "https://github.com/supabase/gotrue/issues/548",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GvoM4",
                    "body": "we should actually deprecate these in favor of the GoTrue README.md file. These weren't being maintained properly (as you point out).\r\n\r\nWhere did you find a link to this @chipilov ?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-01-17T18:08:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1186890552"
                },
                {
                    "id": "IC_kwDOEKipmc5GvoM_",
                    "body": "@kiwicopple I had seen it sometime ago (not sure how I found it the first time) and I was able found it again by Googling for \"supabase gotrue api\" - it is the second link.\r\n\r\nThe reason why I dug it out is because someone was asking about it on StackOverflow: https://stackoverflow.com/questions/70719066/is-there-restful-api-available-for-auth-features-of-supabase\r\n\r\nShould I change my StackOverflow answer to remove the reference to the docs (and only leave the link to the GoTrue repo)?",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-01-17T18:49:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1186890559"
                },
                {
                    "id": "IC_kwDOEKipmc5GvoNE",
                    "body": "@chipilov I want to work on this\r\n",
                    "author": {
                        "login": "ratika-12"
                    },
                    "createdAt": "2022-01-19T05:38:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1186890564"
                },
                {
                    "id": "IC_kwDOEKipmc5GvoNH",
                    "body": "@ratika-12 the generateLink() reference is already included. see https://supabase.com/docs/reference/javascript/auth-api-generatelink",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-01-19T05:41:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1186890567"
                },
                {
                    "id": "IC_kwDOEKipmc5GvoNK",
                    "body": "@kangmingtay The issue is about the documentation of the actual REST endpoint, NOT the JavaScript API.\r\n\r\nHowever, as @kiwicopple mentioned, this is already documented in the README.md of the GoTrue project itself. Maybe you just need to take down the obsolete page from the supabase.io site.",
                    "author": {
                        "login": "chipilov"
                    },
                    "createdAt": "2022-01-19T07:37:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1186890570"
                },
                {
                    "id": "IC_kwDOEKipmc5GvoNO",
                    "body": "would be nice to have this page auto-generated from the gotrue README, for discoverability - because it's not obvious for people to look in the repo necessarily ",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-02-04T08:21:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1186890574"
                },
                {
                    "id": "IC_kwDOEKipmc5GvoNQ",
                    "body": "Hey team,\r\n\r\nWe're looking into adding an OpenAPI specification with a subset of the endpoints -- We'll put up a YAML/JSON file soon with some endpoints so feel free to help document the endpoints --  PRs are welcome :)",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T08:03:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1186890576"
                },
                {
                    "id": "IC_kwDOEKipmc5HqhMG",
                    "body": "Please find the OpenAPI Specification for GoTrue [here](https://github.com/supabase/supabase/tree/master/spec)\r\n\r\nPRs are welcome :)",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-02T10:53:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/548#issuecomment-1202328326"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N8BMy",
            "number": 550,
            "title": "Azure Auth: http://localhost:5000/?error=server_error&error_description=Error+getting+user+email+from+external+provider",
            "body": "# Bug report\r\n\r\n## When I login using Azure Auth for a newly created Azure App Registration, I get this error\r\n\r\n## To Reproduce\r\n\r\n1. Register a new app registration in azure portal, giving access to organisations and personal accounts\r\n2.  Register the supabase redirect uri as a \"Web\" redirect uri (in azure portal)\r\n3. Create a secret for this new app registration\r\n4. enable azure auth in supabase, pasting in the client id and secret of the new app registration\r\n5. Invoke:\r\n\r\n```\r\nconst {user, session, error} = await supabase.auth.signIn({\r\n            provider: 'azure',\r\n        })\r\n```\r\n\r\n6. That calls https://rlgaaitetwbkhisssmkq.supabase.co/auth/v1/authorize?provider=azure\r\n7. Which returns with a 302 to https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=16d4a427-b73c-45fc-b04f-9545e7273f21&redirect_uri=https://rlgaaitetwbkhisssmkq.supabase.co/auth/v1/callback&response_type=code&scope=openid&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJle.......\r\n8. Which returns with a 200 and pops the Microsoft Auth dialog, asking for me to grant permission to the app.  Note, it does not ask me what Microsoft identity to use, I assume its using the identity I am using to log into Azure Portal.\r\n9. I grant permission, then it seems to load https://login.live.com/Me.htm?v=3\r\n10. Then it seems to load https://login.live.com/oauth20_authorize.srf?client_id=16d4a427-b73c-45fc-b04f-9545e7273f21&scope=openid&redirect_uri=https://rlgaaitetwbkhisssmkq.supabase.co/auth/v1/callback&response_type=code&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ....&uaid=95c5d4c9a43f406ca88c5b1b22ea432a&msproxy=1&issuer=mso&tenant=common&ui_locales=en-GB\r\n11. Then it loads https://account.live.com/Consent/Update?mkt=EN-GB&uiflavor=web&id=293577&ru=https://login.live.com/oauth20_authorize.srf?uaid=95c5d4c9a43f406ca88c5b1b22ea432a&opid=A353DB724539E16F&opidt=1640691597\r\n12. Eventually we get to https://login.live.com/oauth20_authorize.srf?uaid=95c5d4c9a43f406ca88c5b1b22ea432a&opid=A353DB724539E16F&opidt=1640691597&res=success&route=R3_BAY\r\n13. which returns a 302 to https://rlgaaitetwbkhisssmkq.supabase.co/auth/v1/callback?code=M.R3_BAY.f96be895-105c-c9f1-5462-d0b31af76746&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ey....\r\n14. Invoking https://rlgaaitetwbkhisssmkq.supabase.co/auth/v1/callback?code=M.R3_BAY.f96be895-105c-c9f1-5462-d0b31af76746&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ey... returns a 302 to http://localhost:5000/?error=server_error&error_description=Error+getting+user+email+from+external+provider\r\n\r\n## Expected behavior\r\n\r\nI have done the same steps for Google Auth, and it worked, expect the same to happen for Azure auth.\r\n\r\nAlso, I have successfully logged in using Azure using similar steps using the Microsoft Native javascript sdk for auth, @azure/msal-browser\r\n\r\nI am aware of https://github.com/supabase/gotrue/pull/54 , but two things on that.  The first is: I was not presented with an option to select an email address to login with (presumably because I am already logged into azure portal?) but even if I was, the second point is that I don't expect my customers to login using this weird azure specific email address.  I expect them to login using their \"usual\" azure identity.",
            "author": {
                "login": "mike-hogan"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-28T12:02:50Z",
            "closedAt": "2022-09-29T10:05:35Z",
            "url": "https://github.com/supabase/gotrue/issues/550",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GvtDE",
                    "body": "I can confirm that if I log out of Azure portal, I am prompted to enter an email address",
                    "author": {
                        "login": "mike-hogan"
                    },
                    "createdAt": "2021-12-28T12:16:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1186910404"
                },
                {
                    "id": "IC_kwDOEKipmc5GvtDK",
                    "body": "same issue...",
                    "author": {
                        "login": "Luc069"
                    },
                    "createdAt": "2022-04-23T20:19:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1186910410"
                },
                {
                    "id": "IC_kwDOEKipmc5GvtDN",
                    "body": "also getting `error=server_error&error_description=Error+getting+user+email+from+external+provider`",
                    "author": {
                        "login": "Avi-Robusta"
                    },
                    "createdAt": "2022-07-17T08:00:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1186910413"
                },
                {
                    "id": "IC_kwDOEKipmc5KY9W9",
                    "body": "I also have this issue",
                    "author": {
                        "login": "simpros"
                    },
                    "createdAt": "2022-09-15T12:49:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1248056765"
                },
                {
                    "id": "IC_kwDOEKipmc5LOX2R",
                    "body": "Hey everyone, GoTrue requires that Azure provide back an email address for the user that is signing in. Make sure you always use this code snippet which includes the email scope:\r\n\r\n```typescript\r\nasync function signInWithAzure() {\r\n  const { user, session, error } = await supabase.auth.signIn(\r\n    {\r\n      provider: 'azure',\r\n    },\r\n    {\r\n      scopes: 'email',\r\n    }\r\n  )\r\n}\r\n```\r\n\r\nPlease reopen the issue if this does not solve the problem for you.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T10:05:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1262058897"
                },
                {
                    "id": "IC_kwDOEKipmc5Nbtya",
                    "body": "I was able to fix this by using `common` instead of the `tenant_id` as suggested by the docs.\r\n\r\nhttps://login.microsoftonline.com/common",
                    "author": {
                        "login": "plondon"
                    },
                    "createdAt": "2022-11-01T20:40:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1299111066"
                },
                {
                    "id": "IC_kwDOEKipmc5Oqj2B",
                    "body": "Although unrelated to Azure, there is a similar issue for the Keycloak integration which I've fixed by adding `openid` in the scopes option.\r\n\r\n```ts\r\nasync function signInWithKeycloak() {\r\n  const { user, session, error } = await supabase.auth.signIn(\r\n    {provider: 'Keycloak'},\r\n    {scopes: 'openid'}\r\n  )\r\n}\r\n```\r\n\r\nIt should probably get documented in [this integration guide](https://supabase.com/docs/guides/auth/auth-keycloak). ",
                    "author": {
                        "login": "kaleabmelkie"
                    },
                    "createdAt": "2022-11-18T09:56:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1319779713"
                },
                {
                    "id": "IC_kwDOEKipmc5eQkT2",
                    "body": "I have the same issue right now any way to solve this ? \r\n\r\nError:  \r\n\r\n`/SignIn?error=server_error&error_description=Error+getting+user+email+from+external+provider`\r\n\r\nMy signInWithOAuth returns this error\r\n\r\nHere is my oauth call:\r\n\r\n    const { data, error } = await supabase.auth.signInWithOAuth({\r\n      provider: 'azure',\r\n      options: {\r\n        scopes: 'email',\r\n        redirectTo: 'nativeAddress//--/SignIn',\r\n      },\r\n    })\r\nThe redirect is fine, anyways it doesn't even get there it fails on the returned data url\r\nI followed the supabase social login docs and made sure all api permissions were on\r\n\r\n<img width=\"1017\" alt=\"Screenshot 2023-06-07 at 3 35 30 PM\" src=\"https://github.com/supabase/gotrue/assets/4626172/14dfd564-46bf-4599-9cdf-491af2365fda\">\r\n",
                    "author": {
                        "login": "anthonylaflamme"
                    },
                    "createdAt": "2023-06-07T19:37:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1581401334"
                },
                {
                    "id": "IC_kwDOEKipmc5eQkzm",
                    "body": "Hey so there was a report that on some Azure accounts the email is encoded differently. @silentworks do you recall?",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T19:39:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1581403366"
                },
                {
                    "id": "IC_kwDOEKipmc5eUyOh",
                    "body": "@anthonylaflamme We have a theory that the problem is #1130 but have no way of testing. Do you mind contacting support@supabase.com and link to this comment so we can discuss if we can find a way to test this with you?",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-08T12:36:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1582506913"
                },
                {
                    "id": "IC_kwDOEKipmc5eU1Y9",
                    "body": "@hf I sure can thank you for the quick response. I will follow up on support@supabase.com . Should I also open a support ticket on supabase dashboard ?",
                    "author": {
                        "login": "anthonylaflamme"
                    },
                    "createdAt": "2023-06-08T12:46:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1582519869"
                },
                {
                    "id": "IC_kwDOEKipmc5ejqgj",
                    "body": "@anthonylaflamme Yes a support ticket on the dashboard would work too. Just mention this issue in that ticket so we know it's you.",
                    "author": {
                        "login": "silentworks"
                    },
                    "createdAt": "2023-06-12T00:55:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1586407459"
                },
                {
                    "id": "IC_kwDOEKipmc5ldIjz",
                    "body": "@anthonylaflamme Were you able to figure out a solution for this with the Supabase team? ",
                    "author": {
                        "login": "karan2801"
                    },
                    "createdAt": "2023-09-01T04:23:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1702136051"
                },
                {
                    "id": "IC_kwDOEKipmc5lgQ75",
                    "body": "@karan2801 wasn't able to test got assigned another task at my workplace. I know i'm coming back on this in about a month. Although I was using a personal free account for test so I don't know if that is why it was causing issue.\r\n\r\nThe team that maintains the oauth stuff added a new code to retrieve email but never got the chance to test",
                    "author": {
                        "login": "anthonylaflamme"
                    },
                    "createdAt": "2023-09-01T15:45:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1702956793"
                },
                {
                    "id": "IC_kwDOEKipmc5me_s2",
                    "body": "@\r\n\r\n> I have the same issue right now any way to solve this ?\r\n> \r\n> Error:\r\n> \r\n> `/SignIn?error=server_error&error_description=Error+getting+user+email+from+external+provider`\r\n> \r\n> My signInWithOAuth returns this error\r\n> \r\n> Here is my oauth call:\r\n> \r\n> ```\r\n> const { data, error } = await supabase.auth.signInWithOAuth({\r\n>   provider: 'azure',\r\n>   options: {\r\n>     scopes: 'email',\r\n>     redirectTo: 'nativeAddress//--/SignIn',\r\n>   },\r\n> })\r\n> ```\r\n> \r\n> The redirect is fine, anyways it doesn't even get there it fails on the returned data url I followed the supabase social login docs and made sure all api permissions were on\r\n> \r\n> <img alt=\"Screenshot 2023-06-07 at 3 35 30 PM\" width=\"1017\" src=\"https://user-images.githubusercontent.com/4626172/244177833-14dfd564-46bf-4599-9cdf-491af2365fda.png\">\r\n\r\nI'm facing the same issue, any solution so far?",
                    "author": {
                        "login": "madil4"
                    },
                    "createdAt": "2023-09-14T12:56:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1719401270"
                },
                {
                    "id": "IC_kwDOEKipmc5nIMsV",
                    "body": "I have the same issue... try the common login URL but still the same issue",
                    "author": {
                        "login": "Freez"
                    },
                    "createdAt": "2023-09-21T19:50:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1730202389"
                },
                {
                    "id": "IC_kwDOEKipmc5s_OZO",
                    "body": "I have the same issue",
                    "author": {
                        "login": "JanRuettinger"
                    },
                    "createdAt": "2023-11-27T20:12:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/550#issuecomment-1828513358"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N8BRj",
            "number": 551,
            "title": "supabase oauth azure provide error : Unable to Exchange External code ",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nI used azure external oauth provider to log in\r\n\r\nRedirect url used is ------ https://aomnqngcqjdcvqovmjjn.supabase.co/auth/v1/callback\r\n\r\nIt is redirecting me to -------- http://localhost:3000/?error=server_error&error_description=Unable+to+exchange+external+code%3A+0.AVYATe-lM3aaxE2G3zQy-ilZg3WsJb7sWJpBnTQLR_-RJx1WAEU.AQABAAIAAAD--DLA3VO7QrddgJg7Wevrpsz8QdQCyeSynIokYb7cJhztFsxBEpVABWWdpY29U2QtxQtwbiXzdtFS-UnW5EFzSAKiJZIp8gTarIR2YW_jE70aT71TvQ_4-v3JXZi_S_pKYBKF_12fPYks1OuJVDItxEc6MHyOd8iI7HZtwzO-44hAMDBOGvvyw9rszE7Mg-Y6heN9_DuPS8lTgTavwYG5ekyW2W4121LXl8HH0qTF9kCusbVQfLPo8OUOnXX-LwgOfvIuuZm1UmGGSEjddSDa5PCRplKbu9168odz9oywD33p_dw2bQLmWDWHqJd7Q6NWJ1zsEQB396Y_dwABGnKfnNVOPQ3r0XhaDWMkGS2iFLAzUUBSwJtMR7yoGs8MjutNKZhjosPQp_79c86dIvKbzg3E_yKfiEFyZGwK7WALHnVDnmzz1m4FaMHMYPi-rQTNhVoWFFkqsdiQxciUmHOUK6Ul_RgYj-Vx7F4h1dq7N3BZFJEcKaxo9rBMv8I6oSPzCkd9vTbNVXRr96F3uI9ZJIS23ajsy_a2oTb_v3xDgu77V5-GJ6-NuEIvaq0q59Qj7bONwM2d11cZmZrnR5jpNi9ha99DqSMhWgU3HDZeiPwKqrbd3Mrk5x-jxeBbZPopBdYAit21sp7HSHPlp2exIAA#\r\n\r\nWhen i tried it with google it is working fine\r\nI checked the space also there is no space while entering client id and secret\r\n\r\nCan You pls look at this\r\nafter Logging i am reflected to login page again\r\n![Screenshot (3)](https://user-images.githubusercontent.com/85378633/147224586-5d2b288c-37e8-4581-b799-78ea4d42d542.png)\r\n\r\n\r\nA clear and concise description of what the bug is.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Go to '\u2026'\r\n2. Click on '\u2026'\r\n3. Scroll down to '\u2026'\r\n4. See error\r\n\r\n## Expected behavior\r\n\r\nA clear and concise description of what you expected to happen.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: [e.g. macOS, Windows]\r\n- Browser (if applies) [e.g. chrome, safari]\r\n- Version of supabase-js: [e.g. 6.0.2]\r\n- Version of Node.js: [e.g. 10.10.0]\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "subhaschnadraBodaki"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-23T10:06:30Z",
            "closedAt": "2022-07-25T08:24:23Z",
            "url": "https://github.com/supabase/gotrue/issues/551",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5GvtGu",
                    "body": "Hey @subhaschnadraBodaki , did you follow all the instructions here to set up your Azure app?\r\n\r\nhttps://github.com/supabase/gotrue/pull/54#issuecomment-757043573",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-23T10:53:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/551#issuecomment-1186910638"
                },
                {
                    "id": "IC_kwDOEKipmc5GvtGx",
                    "body": "Hey @subhaschnadraBodaki, I had that error too until (in Azure portal) I configured the redirect uri as a Web app redirect uri, instead of an SPA (single page app) redirect uri.  Then that error disappeared, but the next error I got was \"Error getting user email from external provider\"",
                    "author": {
                        "login": "mike-hogan"
                    },
                    "createdAt": "2021-12-28T11:45:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/551#issuecomment-1186910641"
                },
                {
                    "id": "IC_kwDOEKipmc5GvtG2",
                    "body": "> Error getting user email from external provider\r\n\r\nDoes your Azure app allow permissions to get the users' email address?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-28T16:30:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/551#issuecomment-1186910646"
                },
                {
                    "id": "IC_kwDOEKipmc5GvtG6",
                    "body": "> Does your Azure app allow permissions to get the users' email address?\r\n\r\nYes, my app has the same 5 scopes as shown in https://github.com/supabase/gotrue/pull/54",
                    "author": {
                        "login": "mike-hogan"
                    },
                    "createdAt": "2021-12-28T16:40:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/551#issuecomment-1186910650"
                },
                {
                    "id": "IC_kwDOEKipmc5HJeQ9",
                    "body": "Hey @mike-hogan  \r\n\r\nWanted to check in and see if this is still an issue -- attempted to replicate and I'm currently able to sign in with azure as a provider\r\n\r\nAware that the issue might be configuration or permissions specific though.\r\n\r\nLet us know!\r\nJoel",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-25T07:09:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/551#issuecomment-1193665597"
                },
                {
                    "id": "IC_kwDOEKipmc5HJtWX",
                    "body": "Hi @J0 , to be honest I just moved on and stopped using Azure.  It was just too complicated when all I needed was login.  I do need to some back at some stage, but could be next year.  Sorry I couldn't be of more help.",
                    "author": {
                        "login": "mike-hogan"
                    },
                    "createdAt": "2022-07-25T08:11:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/551#issuecomment-1193727383"
                },
                {
                    "id": "IC_kwDOEKipmc5HJweM",
                    "body": "Hey Mike,\r\n\r\nI see, it makes sense that you might want to use a simple solution for login. I'm sorry that we weren't able to provide you an easier login experience at that time. I'm going to close this issue for now(we will still track azure related issues via #550) but feel free to reach out again when you decide to come back!  \r\n\r\nAlternatively, do feel free to check out our other supported providers(e.g. Github/Google) which may be comparatively easier to set up.\r\n\r\nThanks!\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-25T08:24:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/551#issuecomment-1193740172"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5N8DPp",
            "number": 552,
            "title": "Inconsistent naming of error messages variables/properties from supabase auth functions",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI think this is more an enhancement than bug. The error object is not the same across different `supabase.auth` functions, for some functions I get `{ error : { message: '....'} }` and for others I get `{error: {msg: '....'}}`\r\n\r\n## To Reproduce\r\n\r\nI see this behavior on `supabase.auth.signUp` and `supabase.auth.signIn`.\r\n\r\n## Expected behavior\r\n\r\nTo always get the same error object structure for different functions.\r\n\r\n## System information\r\n\r\nOS: macOS\r\nBrowser chrome 96.0.4664.55 (Build oficial) (x86_64)\r\nVersion of supabase-js: 1.28.1\r\nVersion of Node.js: v12.20.0\r\n\r\n",
            "author": {
                "login": "ichbinedgar"
            },
            "state": "CLOSED",
            "createdAt": "2021-12-01T18:52:18Z",
            "closedAt": "2022-09-07T13:49:28Z",
            "url": "https://github.com/supabase/gotrue/issues/552",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Gvurh",
                    "body": "@kangmingtay - is this coming from GoTrue? Can we make these errors consistent?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-12-02T03:55:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/552#issuecomment-1186917089"
                },
                {
                    "id": "IC_kwDOEKipmc5Gvurk",
                    "body": "Hey @ichbinedgar,\r\n\r\nThanks for reporting this -- we are looking into having better error codes. Transferring to auth repo for tracking",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T08:30:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/552#issuecomment-1186917092"
                },
                {
                    "id": "IC_kwDOEKipmc5J4AKW",
                    "body": "Hey all,\r\n\r\nThis should be resolved with the release of supabase-js v2 which contains a standardised `AuthResponse` type and defines a standardised format for messages.\r\n\r\nLet us know  if there are further questions or if there are still issues.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-07T13:49:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/552#issuecomment-1239417494"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5OValI",
            "number": 559,
            "title": "QR Login just like whatsapp and discord",
            "body": "# Feature request\r\nQR Login just like whatsapp and discord\r\n\r\n## Describe the solution you'd like\r\n**Discord:**\r\n![scanning qr code](https://user-images.githubusercontent.com/100037148/154986931-1e46552c-ce35-4c60-b604-172d3aac63b4.gif)\r\n\r\n\r\n**Whatsapp**\r\n![web-whatsapp](https://user-images.githubusercontent.com/100037148/154986972-010a390d-c7a2-4a27-8012-cd8901884cb5.jpg)\r\n\r\n",
            "author": {
                "login": "bossjapzz"
            },
            "state": "CLOSED",
            "createdAt": "2022-02-21T15:42:25Z",
            "closedAt": "2022-08-02T10:53:05Z",
            "url": "https://github.com/supabase/gotrue/issues/559",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5HDy11",
                    "body": "i would love to help with this",
                    "author": {
                        "login": "Emeka-Ugbanu-hub"
                    },
                    "createdAt": "2022-02-22T21:46:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/559#issuecomment-1192177013"
                },
                {
                    "id": "IC_kwDOEKipmc5HDy12",
                    "body": "Ok you can",
                    "author": {
                        "login": "sanelejavas"
                    },
                    "createdAt": "2022-02-23T05:17:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/559#issuecomment-1192177014"
                },
                {
                    "id": "IC_kwDOEKipmc5HDy13",
                    "body": "Hey all @sanelejavas  @Emeka-Ugbanu-hub ,\r\n\r\nWondering if y'all managed to find a workaround for this -- could we trouble you to share what steps you took?\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-18T08:00:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/559#issuecomment-1192177015"
                },
                {
                    "id": "IC_kwDOEKipmc5HDy15",
                    "body": "Additional clarification: were you looking to have login with QR code on the dashboard or the ability to create logins with QR codes via our auth service.\r\n\r\nLet us know!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-07-21T03:05:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/559#issuecomment-1192177017"
                },
                {
                    "id": "IC_kwDOEKipmc5HqhC8",
                    "body": "Closing due to inactivity, feel free to re-open when ready\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-02T10:53:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/559#issuecomment-1202327740"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5OqT--",
            "number": 569,
            "title": "Avoid Phone/Mail enumaration/leak via UserUpdate",
            "body": "# Chore\r\n\r\n## Describe the chore\r\n\r\nIf the Phone/Mail is duplicate than the UserUpdate should fail silently and non-valid/non-working change confirmation mail should then be send.\r\n\r\nBonus:\r\nThe notification should be send to the duplicate E-Mail address,\r\ngiving notice about a tried change. (Of course not including the Email of the other user!).\r\n\r\n\r\n## Additional context\r\nIt should not be possible for one User to find out if another E-Mail address is registered for the service.\r\nImagine a service like \"Grinder\" or something privacy related an I am able to check if my employee is registered, not good \r\n",
            "author": {
                "login": "rokk4"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-27T15:14:49Z",
            "closedAt": "2022-09-29T09:32:40Z",
            "url": "https://github.com/supabase/gotrue/issues/569",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JDQ0E",
                    "body": "Hey, thank you for this issue. \r\n\r\nI will investigate if there's something that needs to be done. However, do have in mind that it's practically impossible to hide the information whether a user has an account on any application. There are various side-channel attacks that can determine, with a relatively high degree of confidence, whether an account exists in a system.\r\n\r\nThe best way for users to protect themselves from such attacks is to use anonymized email addresses, or use social login which eliminate most of the effective side-channel avenues.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T11:29:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/569#issuecomment-1225592068"
                },
                {
                    "id": "IC_kwDOEKipmc5LOOvK",
                    "body": "We've decided to not provide guarantees about a user enumeration attack when using email or phone number login, as this is incredibly difficult to pull off consistently and well. We'll be coming out with a Security document that explains our reasoning behind this as well as some tips on how applications can help users anonymize their data.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T09:32:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/569#issuecomment-1262021578"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5O_Ers",
            "number": 577,
            "title": "Reddit OAuth2 Support",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nNo.\r\n\r\n## Describe the solution you'd like\r\n\r\nIt would be cool if Reddit OAuth could be used in Supabase.\r\n\r\n## Describe alternatives you've considered\r\n\r\nMaking my own. \ud83d\udc80\r\n\r\n## Additional context\r\n\r\nN/A",
            "author": {
                "login": "aetinx"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-01T00:32:07Z",
            "closedAt": "2022-09-07T13:09:03Z",
            "url": "https://github.com/supabase/gotrue/issues/577",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Ho5bb",
                    "body": "Might want to check out https://github.com/reddit-archive/reddit/wiki/OAuth2.",
                    "author": {
                        "login": "aetinx"
                    },
                    "createdAt": "2022-08-01T00:38:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/577#issuecomment-1201903323"
                },
                {
                    "id": "IC_kwDOEKipmc5Ho5bd",
                    "body": "This might be a better fit for the Supabase Auth(Supabase/GoTrue) repo. Transferring there",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-02T01:10:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/577#issuecomment-1201903325"
                },
                {
                    "id": "IC_kwDOEKipmc5IZ16r",
                    "body": "I would love this too \ud83d\udc4d I need this for one of my projects and have been using NextAuth + Planetscale, when I'd much rather use Supabase",
                    "author": {
                        "login": "amosbastian"
                    },
                    "createdAt": "2022-08-15T08:08:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/577#issuecomment-1214733995"
                },
                {
                    "id": "IC_kwDOEKipmc5J30HC",
                    "body": "Hey @aetinx  and @amosbastian,\r\n\r\nThanks for the interest! Going to move this to the main thread on #451 so do feel free to upvote the request there. This helps us to better gauge which providers to implement.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-07T13:09:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/577#issuecomment-1239368130"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5O_Fvp",
            "number": 578,
            "title": "allow wildcards in redirect URLS for dynamic dev environments like Gitpod",
            "body": "On Gitpod I can't get Magic Link auth working in my dev environment without setting the redirect URL to whatever the current path the app is being laucnhed on \r\n(in my case https://3000-continuata-viqrio-t16z9w4kls9.ws-eu54.gitpod.io)\r\n\r\nThe subdomain is dynamically allocated.\r\n\r\nIt'd be great to be able to add a more agnostic redirect URL e.g,\r\n`*.gitpod.io` or `%.gitpod.io`\r\nSo I can develop without having to edit my supabase settings.\r\n\r\n",
            "author": {
                "login": "stukennedy"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-31T23:02:20Z",
            "closedAt": "2022-08-02T15:44:44Z",
            "url": "https://github.com/supabase/gotrue/issues/578",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Ho6Rw",
                    "body": "Hey @stukennedy,\r\n\r\nThanks for your query! I'm not sure if I fully understood your query. We do allow for dynamically redirect URIs as per the following thread: [redirect URIs](https://mobile.twitter.com/supabase/status/1539561445414805506) so you should be able to add the following:\r\n\r\nhttps://mysite.com/users/*\r\n\r\nand redirect to https://mysite.com/users/123 or alternatively  https://*.dev.com and redirect to https://blah.dev.com. A clearer example can be viewed [here](https://github.com/supabase/gotrue/pull/334/files#diff-d133d83455bfc22126258a84d0d5f48b2733a1bdf42f3bffe49419025020ce2dR488)\r\n\r\nHope this resolves your use case but let me know if I've misunderstood or there's anything that I've missed.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-02T01:17:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/578#issuecomment-1201906800"
                },
                {
                    "id": "IC_kwDOEKipmc5Hpzwh",
                    "body": "Yes that looks great.\r\nThanks for the swift reply. \r\n\r\nSome description of the redirection rules and formatting possibilities in the docs would be really helpful, was quite tricky to figure out what site URL and redirect URLs are doing by trial and error.",
                    "author": {
                        "login": "stukennedy"
                    },
                    "createdAt": "2022-08-02T07:51:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/578#issuecomment-1202142241"
                },
                {
                    "id": "IC_kwDOEKipmc5Hsj6L",
                    "body": "Noted, this is good feedback. We've created an internal issue with the documentation team so that we can track this so going to move the discussion there. Closing this for now.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-02T15:44:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/578#issuecomment-1202863755"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5PGRrp",
            "number": 587,
            "title": "getSessionFromUrl doesn't respect setting persistSession",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nThis is a follow up on supabase/gotrue-js#327. \r\n\r\nIn the constructor `getSessionFromUrl` gets called with `storeSession: true` regardless of `settings.persistSession`\r\n\r\nhttps://github.com/supabase/gotrue-js/blob/fb7fae5d763c7173f16aa8c6a8747013d8ba4d24/src/GoTrueClient.ts#L138-L141\r\n\r\n\r\n`getSessionFromUrl` itself does only check `options?.storeSession`\r\nhttps://github.com/supabase/gotrue-js/blob/fb7fae5d763c7173f16aa8c6a8747013d8ba4d24/src/GoTrueClient.ts#L627-L634\r\n\r\n## To Reproduce\r\n\r\nSee description.\r\n\r\n## Expected behavior\r\n\r\nShould respect settings\r\n\r\n## Suggested Fixes\r\n\r\n1. In constructor set `storeSession` to `this.persistSession` in `getSessionFromUrl` call.\r\n\r\n```diff \r\n--- a/src/GoTrueClient.ts\r\n+++ b/src/GoTrueClient.ts\r\n@@ -135,7 +135,7 @@ export default class GoTrueClient {\r\n\r\n     if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\r\n       // Handle the OAuth redirect\r\n-      this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\r\n+      this.getSessionFromUrl({ storeSession: this.persistSession }).then(({ error }) => {\r\n         if (error) {\r\n           throw new Error('Error getting session from URL.')\r\n         }\r\n```\r\n\r\n2. In  `getSessionFromUrl` \r\n\r\na.) either check  for `this.persistSession` \r\n\r\n```diff\r\n--- a/src/GoTrueClient.ts\r\n+++ b/src/GoTrueClient.ts\r\n@@ -624,7 +624,7 @@ export default class GoTrueClient {\r\n         token_type,\r\n         user: user!,\r\n       }\r\n-      if (options?.storeSession) {\r\n+      if (this.persistSession && options?.storeSession) {\r\n         this._saveSession(session)\r\n         const recoveryMode = getParameterByName('type')\r\n         this._notifyAllSubscribers('SIGNED_IN')\r\n```\r\n\r\nb.) console.warn or throw an error if `this.persistSession !== !!options?.storeSession`\r\n\r\n## System information\r\n\r\n- OS: NA\r\n- Browser: NA\r\n- Version of supabase-js: NA\r\n- Version of gotrue-js: 1.23.0-next\r\n- Version of Node.js: NA\r\n\r\n",
            "author": {
                "login": "pixtron"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-29T12:49:06Z",
            "closedAt": "2022-08-24T11:40:16Z",
            "url": "https://github.com/supabase/gotrue/issues/587",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JDTTX",
                    "body": "Hey this appears to be related to gotrue-js and appears to have been fixed in https://github.com/supabase/gotrue-js/pull/327.\r\n\r\nIf I'm missing something, please open another issue.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T11:40:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/587#issuecomment-1225602263"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5PKbzD",
            "number": 590,
            "title": "Redirect URLs set in Supabase console are ignored",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen setting `Redirect URLs` from the Supabase console and calling `signin()` with `redirectTo` option, the user still redirected to site URL and not the URL set as `redirectURL`. ",
            "author": {
                "login": "dshukertjr"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-04T06:31:37Z",
            "closedAt": "2022-08-04T23:30:32Z",
            "url": "https://github.com/supabase/gotrue/issues/590",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5H4DWu",
                    "body": "Hey all, \r\n\r\nWe've rolled out a patch which should resolve this issue -- going to close for now but feel free to re-open if you're still facing issues.\r\n\r\n\r\nThanks!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-04T23:30:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/590#issuecomment-1205876142"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5PNBo9",
            "number": 593,
            "title": "Keycloak URLs Split Auth and Token endpoints",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI run Keycloak behind a proxy on the same network as supabase (also behind a proxy).  \r\nThe proxy is terminating SSL.  \r\nThe network behind the proxy is private and secure.  \r\nCurrently, gotrue (well, supabase) only has 1 url for keycloak, and uses this both for user auth and token exchange.  \r\nWhich means that supabase needs a route to the public URL of the proxy->keycloak, as it needs to use this for the token exchange.  \r\nIf the auth URL and token exchange URL were able to be set independently, the token exchange could happen entirely internally on the private network (and could skip SSL).\r\n\r\n## Describe the solution you'd like\r\n\r\nAdd an additional `GOTRUE_EXTERNAL_KEYCLOAK_TOKEN_URL` which is optional.  \r\nIf it is not provided, then use the current `GOTRUE_EXTERNAL_KEYCLOAK_URL` env var for both auth and token routes (as is the current behaviour).  \r\nIf the new `GOTRUE_EXTERNAL_KEYCLOAK_TOKEN_URL` is set then use `GOTRUE_EXTERNAL_KEYCLOAK_URL` for auth redirect, and `GOTRUE_EXTERNAL_KEYCLOAK_TOKEN_URL` for token exchange.\r\n\r\n## Describe alternatives you've considered\r\n\r\nReplacing the current env var with 2 new ones that explicitly describe what they do (eg `GOTRUE_EXTERNAL_KEYCLOAK_TOKEN_URL` and `GOTRUE_EXTERNAL_KEYCLOAK_AUTH_URL`) will break backwards compatibility.  \r\nI don't like that the usage of the env var differs depending if another env var is set or not.  \r\nPerhaps favour the existing env var if it is set for the current behaviour. and introduce the 2 new explicit env vars that are used if the `GOTRUE_EXTERNAL_KEYCLOAK_URL`  env var is not set.\r\n\r\n## Additional context\r\n\r\nI would love to code a PR for this, but I don't know Go\r\n",
            "author": {
                "login": "Towerful"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-04T15:27:06Z",
            "closedAt": "2022-09-26T08:33:12Z",
            "url": "https://github.com/supabase/gotrue/issues/593",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5K9sGI",
                    "body": "Hey @Towerful,\r\n\r\nAlthough I understand your problem, this is not likely to be supported by GoTrue. The reason is that this is a very special case and unlikely to occur in other places. We want to keep GoTrue secure by default and avoid endless configurations that may confuse users.\r\n\r\nTypically external identity providers are considered \"external\" to the system and we recommend always using TLS, regardless of whether they are on the same network.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-26T08:33:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/593#issuecomment-1257685384"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5PuppI",
            "number": 601,
            "title": "Game Center and Google Play Services integration",
            "body": "# Feature request\r\n\r\nSupport Game Center OAuth\r\n\r\n## Additional context\r\n- https://github.com/supabase-community/supabase-flutter/issues/156\r\n- https://developers.google.com/games/services\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "author": {
                "login": "bdlukaa"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-12T19:25:15Z",
            "closedAt": "2022-09-19T06:05:42Z",
            "url": "https://github.com/supabase/gotrue/issues/601",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JC5ZI",
                    "body": "Thanks for this. We'll be taking a look and discussing with the team.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T09:55:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/601#issuecomment-1225496136"
                },
                {
                    "id": "IC_kwDOEKipmc5KirFG",
                    "body": "Hey as with the rest of the requests, we will be moving this to the thread on  #451 Going to move this thread there but feel free to re-open if there are still issues.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-19T06:05:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/601#issuecomment-1250603334"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5PxFyH",
            "number": 602,
            "title": "Add Reddit auth provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI would like to be able to login with Reddit since my project revolves around Reddit\r\n\r\n## Describe the solution you'd like\r\n\r\nReddit should be added to the list of supported providers\r\n\r\n## Describe alternatives you've considered\r\n\r\nUsing another service than Supabase such as NextAuth when they release a Supabase adapter https://github.com/nextauthjs/next-auth/pull/5050\r\n",
            "author": {
                "login": "amosbastian"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-13T12:31:47Z",
            "closedAt": "2022-08-15T06:25:56Z",
            "url": "https://github.com/supabase/gotrue/issues/602",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5IZk3p",
                    "body": "Closing as duplicate of #577 . Please feel free to follow along there",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-15T06:25:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/602#issuecomment-1214664169"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5PyU1h",
            "number": 603,
            "title": "Firebase Auth as Social Auth Provider",
            "body": "This will help us to sign in with firebase for realtime database, firestore and some other firebase services and integrate supabase to use postgres, functions, storage etc.",
            "author": {
                "login": "topperspal"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-15T06:17:20Z",
            "closedAt": "2022-08-24T09:53:47Z",
            "url": "https://github.com/supabase/gotrue/issues/603",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JC4_O",
                    "body": "This is a great suggestion we'll have this in mind!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T09:53:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/603#issuecomment-1225494478"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5PyVcx",
            "number": 604,
            "title": "Add a redirectTo parameter when updating an user email",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nAs of now, updating the authenticated user's email sends a mail with a redirection to the Site URL you define in the supabase project settings\r\n\r\n![image](https://user-images.githubusercontent.com/1839757/184336810-f67b493c-f6c8-404d-b5ea-56ec6d7c14ee.png)\r\n\r\nIt would be nice to have a `redirectTo` in the update method of the GoTrue client (like with `resetPasswordForEmail`)\r\n\r\n## Describe the solution you'd like\r\n\r\nAdd a second parameter to update to allow passing `redirectTo`\r\n",
            "author": {
                "login": "JonathanPicques"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-12T10:32:35Z",
            "closedAt": "2022-09-14T13:47:20Z",
            "url": "https://github.com/supabase/gotrue/issues/604",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5I98FO",
                    "body": "I've opened an issue about this yesterday on [supabase repo](https://github.com/supabase/gotrue/issues/1055) and the issue is not inside gotrue which accepts different `redirectTo`. The issue is inside gotrue-js which doesn't let you pass any `redirectTo` option. I've opened a pull request on gotrue-js [here](https://github.com/supabase/gotrue-js/pull/410)",
                    "author": {
                        "login": "mghizzo"
                    },
                    "createdAt": "2022-08-23T14:58:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/604#issuecomment-1224196430"
                },
                {
                    "id": "IC_kwDOEKipmc5KUIgn",
                    "body": "Hey all, let's continue the discussion on the linked GoTrue-js issue. Closing for now but feel free to re-open if there are further queries.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-14T13:47:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/604#issuecomment-1246791719"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5QCvX-",
            "number": 605,
            "title": "Limit sms per phone number",
            "body": "# Feature request\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nFirst of all, SMS price is high in my country. Secondly, competitors or enemies can use this feature or bug in order to send a lot of expensive SMS messages, so it will lead us to loose money.\r\n\r\n## Describe the solution you'd like\r\n\r\nFirst of all, add a configuration let's say 5 sms per 24 hours.\r\nSecondly, please add how much time and how many attempts left until SMS code is valid in method `supabase.auth.verifyOTP`\r\n\r\n## Describe alternatives you've considered\r\n\r\nWhatsapp phone verification will not allow you to send more than 6 SMS in 24 hours.\r\n",
            "author": {
                "login": "myemuk"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-18T10:26:16Z",
            "closedAt": "2022-08-24T09:52:47Z",
            "url": "https://github.com/supabase/gotrue/issues/605",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JC4wG",
                    "body": "Hey please take a look at the hCaptcha functionality we have built in. Unfortunately there isn't much that can be done when implementing phone-based logins, if that's something you need.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-08-24T09:52:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/605#issuecomment-1225493510"
                },
                {
                    "id": "IC_kwDOEKipmc5JC6Ea",
                    "body": "Thank for info. Sad that it is not in the plan. Btw, there is a PR what adds custom SMS provider: [558](https://github.com/supabase/gotrue/pull/558). Can you have a look at it and merge as soon as possible since it will help me a lot in mu case. ",
                    "author": {
                        "login": "myemuk"
                    },
                    "createdAt": "2022-08-24T09:58:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/605#issuecomment-1225498906"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxMzQzMDc0OTk3",
            "number": 608,
            "title": "Option to set Auth table keys as camelCase",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nUsing Prisma as the migrations manager into Supabase pushes as `camelCase` keys table names, whereas the `auth` system uses `snake_case` keys.\r\n\r\nThere is a method to `@@map` an [existing introspected database schema](https://github.com/prisma/prisma/discussions/2530) to handle this, however, this is not overly useful for the `auth` case as that system is accessed outside the user-defined tables via the `supabase-js` lib.\r\n\r\n## Describe the solution you'd like\r\n\r\nAlthough I prefer the `snake_case` table key system, the application is `Prisma`-heavy which I don't have the ability to modify.\r\n\r\nIdeally _(although I can see the complexity involved)_ the solution would be to have the ability (off by default) to set the Supabase schema key and table name casing. \r\n\r\n## Describe alternatives you've considered\r\n\r\nSolution 1 - Manage the schema from Supabase and introspect it from Prisma. Not desirable as all the existing tooling is set up as a \"Prisma-first\" flow.\r\n\r\nSolution 2 - Transform the auth table keys application-side, immediately prior to use. What I intend to do currently, although this introduces additional potential risk and overhead.\r\n\r\n\r\n## Additional context\r\n\r\nExisting `User` interfaces to demonstrate the `snake_case`:\r\n\r\n```typescript\r\nexport interface User {\r\n  id: string\r\n  app_metadata: {\r\n    provider?: string\r\n    [key: string]: any\r\n  }\r\n  user_metadata: {\r\n    [key: string]: any\r\n  }\r\n  aud: string\r\n  confirmation_sent_at?: string\r\n  email?: string\r\n  created_at: string\r\n  confirmed_at?: string\r\n  last_sign_in_at?: string\r\n  role?: string\r\n  updated_at?: string\r\n}\r\n\r\nexport interface UserAttributes { \r\n  email?: string \r\n  password?: string \r\n  email_change_token?: string \r\n  data?: object\r\n}\r\n\r\n```\r\n",
            "author": {
                "login": "prescience-data"
            },
            "state": "CLOSED",
            "createdAt": "2021-05-11T00:12:43Z",
            "closedAt": "2022-09-07T13:37:26Z",
            "url": "https://github.com/supabase/gotrue/issues/608",
            "comments": [
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDEyMTk0Njk3NjA=",
                    "body": "Hmm - upon reflection, it seems like `supabase-js` + the `cli` acts as a full replacement for a solution like Prisma?\r\n\r\nI'm assuming the preferred solution is to fully swap it out if that can be sold to the ops team?\r\n\r\nIf that's the case, what part of the docs should be searched to find the method of managing schemas and migrations?\r\n\r\nI located https://supabase.io/docs/reference/postgres/schemas but it's not entirely clear where those schemas are supposed to live and how relationships are managed?",
                    "author": {
                        "login": "prescience-data"
                    },
                    "createdAt": "2021-05-11T00:30:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/608#issuecomment-1219469760"
                },
                {
                    "id": "MDEyOklzc3VlQ29tbWVudDEyMTk0Njk3NjQ=",
                    "body": "> managing schemas and migrations\r\n\r\nWe are still working on migrations. Some more details of how we plan to implement them here: https://supabase.io/blog/2021/03/31/supabase-cli#migrations\r\n\r\nFor now you would need to use another tool (for example, [dbmate](https://github.com/amacneil/dbmate)).\r\n\r\n> it seems like supabase-js + the cli acts as a full replacement for a solution like Prisma?\r\n\r\nOur APIs can be used as a replacement for prisma - it is up to you. The supabase database is pure postgres, and we provide managed APIs that handle everything - connection pooling, security, etc. \r\n\r\n> fully swap it out if that can be sold to the ops team\r\n\r\nFeel free to reach out over email if you need help deciding and we'll try to give you a completely unbiased opinion. Prisma is a very good tool, and a bit more mature - it really comes down to your preferences/requirements.",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-05-11T01:04:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/608#issuecomment-1219469764"
                },
                {
                    "id": "IC_kwDOEKipmc5J38cz",
                    "body": "hey @prescience-data, i'll be closing this issue since it does not seem relevant to gotrue. We do not plan to change the column names in the gotrue database schema from snake_case to camelCase at this point.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:37:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/608#issuecomment-1239402291"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5QGb3u",
            "number": 611,
            "title": "Snapchat external provider login",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nsignup for client / secret keys here\r\nhttps://docs.snap.com/snap-kit/developer-portal/developing-your-app\r\n\r\nI want to enable like this\r\n```\r\n\r\n      GOTRUE_EXTERNAL_SNAPCHAT_ENABLED: \"true\"\r\n      GOTRUE_EXTERNAL_SNAPCHAT_CLIENT_ID: \"111\"\r\n      GOTRUE_EXTERNAL_SNAPCHAT_SECRET: \"asdf\"\r\n      GOTRUE_EXTERNAL_SNAPCHAT_REDIRECT_URI: \"https://localhost:9999/callback\"\r\n\r\n\r\n```\r\n",
            "author": {
                "login": "wweevv-johndpope"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-19T02:45:17Z",
            "closedAt": "2022-08-22T11:06:45Z",
            "url": "https://github.com/supabase/gotrue/issues/611",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5I2UVJ",
                    "body": "Closing as it is a duplicate of #451",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-08-22T11:06:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/611#issuecomment-1222198601"
                },
                {
                    "id": "IC_kwDOEKipmc5KFOP9",
                    "body": "drafted here https://github.com/supabase/gotrue/pull/449/files",
                    "author": {
                        "login": "johndpope"
                    },
                    "createdAt": "2022-09-11T04:22:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/611#issuecomment-1242883069"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5QHlX7",
            "number": 616,
            "title": "The automated release is failing \ud83d\udea8",
            "body": "## :rotating_light: The automated release from the `master` branch failed. :rotating_light:\n\nI recommend you give this issue a high priority, so other packages depending on you can benefit from your bug fixes and new features again.\n\nYou can find below the list of errors reported by **semantic-release**. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can fix this \ud83d\udcaa.\n\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\n\nOnce all the errors are resolved, **semantic-release** will release your package the next time you push a commit to the `master` branch. You can also manually restart the failed CI job that runs **semantic-release**.\n\nIf you are not sure how to resolve this, here are some links that can help you:\n- [Usage documentation](https://github.com/semantic-release/semantic-release/blob/caribou/docs/usage/README.md)\n- [Frequently Asked Questions](https://github.com/semantic-release/semantic-release/blob/caribou/docs/support/FAQ.md)\n- [Support channels](https://github.com/semantic-release/semantic-release#get-help)\n\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind **[semantic-release](https://github.com/semantic-release/semantic-release/issues/new)**.\n\n---\n\n### Missing `package.json` file.\n\nA [package.json file](https://docs.npmjs.com/files/package.json) at the root of your project is required to release on npm.\n\nPlease follow the [npm guideline](https://docs.npmjs.com/getting-started/creating-node-modules) to create a valid `package.json` file.\n\n---\n\nGood luck with your project \u2728\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:\n\n<!-- semantic-release:github -->",
            "author": {
                "login": "github-actions"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-19T09:07:01Z",
            "closedAt": "2022-08-19T09:28:19Z",
            "url": "https://github.com/supabase/gotrue/issues/616",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Ivpan",
                    "body": "## :rotating_light: The automated release from the `master` branch failed. :rotating_light:\n\nI recommend you give this issue a high priority, so other packages depending on you can benefit from your bug fixes and new features again.\n\nYou can find below the list of errors reported by **semantic-release**. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can fix this \ud83d\udcaa.\n\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\n\nOnce all the errors are resolved, **semantic-release** will release your package the next time you push a commit to the `master` branch. You can also manually restart the failed CI job that runs **semantic-release**.\n\nIf you are not sure how to resolve this, here are some links that can help you:\n- [Usage documentation](https://github.com/semantic-release/semantic-release/blob/caribou/docs/usage/README.md)\n- [Frequently Asked Questions](https://github.com/semantic-release/semantic-release/blob/caribou/docs/support/FAQ.md)\n- [Support channels](https://github.com/semantic-release/semantic-release#get-help)\n\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind **[semantic-release](https://github.com/semantic-release/semantic-release/issues/new)**.\n\n---\n\n### Missing `package.json` file.\n\nA [package.json file](https://docs.npmjs.com/files/package.json) at the root of your project is required to release on npm.\n\nPlease follow the [npm guideline](https://docs.npmjs.com/getting-started/creating-node-modules) to create a valid `package.json` file.\n\n---\n\nGood luck with your project \u2728\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2022-08-19T09:19:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/616#issuecomment-1220449959"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5QW6DE",
            "number": 629,
            "title": "Setting app_metadata in auth.api.createUser() doesn't work (via supabase-js)",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\n`app_metadata` isn't set when running `supabase.auth.api.createUser({ email: '...', app_metadata: { foo: 'bar' } })`.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create user with service_role like so:\r\n```javascript\r\nconst { user, error } = await supabase.auth.api.createUser({\r\n  email: '...',\r\n  app_metadata: {\r\n    user_role: 'manager',\r\n  },\r\n})\r\n```\r\n2. Check data/user variable or via Supabase UI:\r\n```javascript\r\nconsole.log(user.app_metadata.user_role) // undefined\r\nconsole.log(user.app_metadata) // { provider: 'email', providers: ['email'] }\r\n```\r\n3. **Bug appears!** Nothing has been set.\r\n4. Update user via client:\r\n```javascript\r\nconst { user: updatedUser, error: updatedError } = await supabase.auth.api.updateUserById(user.id, {\r\n  app_metadata: {\r\n    user_role: 'manager',\r\n  }\r\n})\r\n```\r\n5. Check updated data/user variable or via Supabase UI:\r\n```javascript\r\nconsole.log(user.app_metadata.user_role) // 'manager'\r\nconsole.log(user.app_metadata) // { provider: 'email', providers: ['email'], user_role: 'manager' }\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe app_metadata parameter provided in `auth.api.createUser()` should be set to and persist in the database, just like `auth.api.updateUserById()`.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Version of supabase-js: 1.35.6\r\n- Version of Node.js: 18.7.0\r\n\r\n## Additional context\r\n\r\nI'm running this code in a Remix server with Node.js 18, and a service_role key.\r\n",
            "author": {
                "login": "danielpox"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-20T09:56:43Z",
            "closedAt": "2022-08-23T16:00:27Z",
            "url": "https://github.com/supabase/gotrue/issues/629",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5I-Pe0",
                    "body": "Hi @danielpox, thanks for reporting this bug! We have made a fix in #628 and will roll it out to all projects once it's merged",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-08-23T16:00:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/629#issuecomment-1224275892"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5QcXdH",
            "number": 634,
            "title": "Allow registering users by only social identity ID without email",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWe're looking at setting up an OAuth provider for Steam as described in the [Steam docs](https://partner.steamgames.com/doc/webapi_overview/oauth).\r\n\r\nHowever, there is no Steam API available to access the authenticated Steam user's email or phone number, this is information that is simply not exposed. As a result, we're unable to continue with [inserting a new user in the DB](https://github.com/supabase/gotrue/blob/22aa3f638e55762a1b4944e9fd436c80935e974b/api/external.go#L171).\r\n\r\nIs there a way that we could have social login only, without linking to an email?\r\n\r\n## Describe the solution you'd like\r\n\r\nIdeally, we'd love a way to sign in/sign up a user via OAuth using only the provider's identity ID, without the requirement for an email. Is there a particular reason that an email is required?\r\n\r\n## Describe alternatives you've considered\r\n\r\nCreating fake emails such as `STEAM_ID@fakedomain.dev`, but this feels hacky, and won't work if we expand our providers to include email-based login (as well as Steam login) in the future.\r\n\r\nThank you! \ud83d\ude42 ",
            "author": {
                "login": "bensalilijames"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-24T15:19:03Z",
            "closedAt": "2022-08-24T16:55:19Z",
            "url": "https://github.com/supabase/gotrue/issues/634",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5JExiY",
                    "body": "Looks like I should have done a better search, #414 will fix this!",
                    "author": {
                        "login": "bensalilijames"
                    },
                    "createdAt": "2022-08-24T16:55:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/634#issuecomment-1225988248"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Qg_kJ",
            "number": 635,
            "title": "Add admin functionality to sign up/in a user account with a provider identity",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nWe have a use case where we wish to sign in/sign up a Supabase user from a game. Ideally, this would use the Steam flow described here under \"Linking From In-game\": https://partner.steamgames.com/doc/features/auth\r\n\r\nThat flow requires a custom server/endpoint to verify the session ticket, so I'm thinking that expanding the Admin API capabilities to support this would be very useful here.\r\n\r\n## Describe the solution you'd like\r\n\r\nThe game would send the session token to our custom endpoint (a Next.js API route), which could do something like the following:\r\n\r\n1) Verify the session token with the Steam server and retrieve the Steam ID\r\n2) Use a new admin API to retrieve an existing user by the Steam ID (provider identity ID):\r\n```ts\r\nconst user = await supabase.auth.admin.getUserByProviderIdentity({\r\n  \"provider\": \"steam\",\r\n  \"identityId\": \"STEAM_ID\",\r\n});\r\n```\r\n3) If the user does not exist, sign up the user using their Steam ID:\r\n```ts\r\nconst user = await supabase.auth.admin.createUser({\r\n  \"provider\": \"steam\",\r\n  \"identityId\": \"STEAM_ID\",\r\n});\r\n```\r\n4) Create a Supabase session for the user:\r\n```ts\r\nconst session = await supabase.auth.admin.signIn({ userId: user.id });\r\n```\r\n5) Return the session to the client in order to continue using Supabase client-side\r\n\r\nAn alternative could be to create a single admin API which combines all three steps into one:\r\n\r\n```ts\r\nconst session = await supabase.auth.admin.signIn({\r\n  \"provider\": \"steam\",\r\n  \"identityId\": \"STEAM_ID\",\r\n});\r\n```\r\n\r\nNote that it is important this is an admin/server-side API, if you could do this from a client you could log in as anybody if you had their provider's identity ID (in this case Steam ID)!\r\n\r\n## Describe alternatives you've considered\r\n\r\n- Using the [OAuth 2.0 Steam flow](https://partner.steamgames.com/doc/webapi_overview/oauth). Slightly worse UX than the \"linking from in-game option\" since the OAuth flow opens the Steam browser overlay, and there are a few sources that suggest this functionality no longer exists. I'm in contact with Steam support to see if that's the case. If it *does* still exist, we could write an OAuth 2.0 provider, so long as #414 lands.\r\n- Using the [OpenID Steam flow](https://partner.steamgames.com/doc/features/auth#website). However, I think this is a non-starter, as it uses OpenID 2.0 and not OpenID Connect.\r\n\r\n## Additional context\r\n\r\nEssentially, we're looking for a way for users to sign up/sign in to Supabase using Steam as the only available provider, to reduce friction in the game as it will be published on Steam only.\r\n\r\nWould be very grateful to hear your thoughts - thanks! \ud83d\ude42 ",
            "author": {
                "login": "bensalilijames"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-25T12:33:08Z",
            "closedAt": "2022-09-28T09:39:03Z",
            "url": "https://github.com/supabase/gotrue/issues/635",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KscQA",
                    "body": "Hi @bensalilijames, this seems very specific to steam. It might be worth to consider handling this custom behaviour on your own in the `public` schema. You can create `public.users` table that contains a `steam_id` and `user_id` column. The `user_id` column should map to `auth.users.id` so that you can easily retrieve the user information using the `steam_id`. \r\n\r\nIf the user doesn't exist, then you can call `supabase.auth.admin.inviteUserByEmail` (assuming steam allows you to retrieve the user's email somehow) and invite the user. (Although i'm not sure if this would help to achieve your usecase)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-21T03:37:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/635#issuecomment-1253164032"
                },
                {
                    "id": "IC_kwDOEKipmc5LI_-5",
                    "body": "Thank you @bensalilijames for the suggestion. As @kangmingtay explains, this is a fairly Steam-specific behavior. We're going to look into adding Steam login to GoTrue in the future, though and we'll make sure we take your input when that happens. There's no clear timeline for this yet.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:39:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/635#issuecomment-1260650425"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Q2R2n",
            "number": 656,
            "title": "Roblox OAuth provider",
            "body": "Roblox recently opened up a private alpha for their new OAuth2 system, and should become public in a few months. I can keep this issue updated with any news, so that once it becomes public it can be implemented into Supabase.\r\n\r\nUntil then, I will come up with a basic draft and see if I can get it functioning properly locally.\r\n\r\nRoblox is what my app is based around, but I am currently using Discord OAuth through Supabase and authenticating them using other means afterwards. Adding this OAuth would make my life incredibly simple.\r\n\r\n\r\n",
            "author": {
                "login": "ethndotsh"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-30T22:39:26Z",
            "closedAt": "2022-09-07T13:06:46Z",
            "url": "https://github.com/supabase/gotrue/issues/656",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5J3zdf",
                    "body": "hey @cursecodes, we're closing this in view of #451 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-07T13:06:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/656#issuecomment-1239365471"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5RYLlz",
            "number": 671,
            "title": "createUser does not work with a public.users table",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nA user in Discord (jxyz) was using api.createUser() and encountering:\r\n`  error: {\r\n    message: 'duplicate key value violates unique constraint \"users_pkey\"',\r\n    status: 500\r\n}`\r\n\r\nI suspect this recent change may be the issue: [refactor: remove auth schema prefix](https://github.com/supabase/gotrue/pull/669) \r\n\r\nThe user changed the name of the public user table, trigger and function to solve the issue.\r\nI did not discuss details of how the duplicate primary key was being generated, but this was a testing environment. \r\n \r\nEdit: Their trigger function used `public.users` and is in the public schema so I don't think it was trying to insert into auth.users.\r\n\r\nEdit2:  On an older instance I am NOT able to reproduce this with a public.users table and NO Trigger function.  The Discord user's instance was created in the past 24hours.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\ncreate a public.users table (normally used to copy user info with a trigger function on auth.users table.\r\nRun below with the service_role key:\r\n```\r\nconst email = 'alice@gmail.com';\r\nconst password = 'test1234';\r\nconst create_user_response = await supabase.auth.api.createUser({ email, password, email_confirm: true });\r\n```\r\n\r\n## Expected behavior\r\nShould be able to have a public.users table\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "GaryAustin1"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-07T23:08:46Z",
            "closedAt": "2022-09-11T17:56:13Z",
            "url": "https://github.com/supabase/gotrue/issues/671",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KFtqw",
                    "body": "hey @GaryAustin1, just to clarify, we haven't merged in #669 yet so it shouldn't related to this bug",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-11T17:52:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/671#issuecomment-1243011760"
                },
                {
                    "id": "IC_kwDOEKipmc5KFt0m",
                    "body": "@kangmingtay Thanks, I can't reproduce the user's issue, so I suspect they actually did have a problem in their trigger function and it got fixed when they renamed the public.user to public.profiles.  \r\n",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2022-09-11T17:56:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/671#issuecomment-1243012390"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5RmKL8",
            "number": 674,
            "title": "Redirection issue with Notion OAuth",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nGetting \"No API key found in request\" instead of expected redirection to the given URI when using Notion OAuth.\r\n\r\n\r\n\r\n## To Reproduce\r\n\r\nSetup Notion OAuth (as described in the docs) and form the OAuth URI as below:\r\n\r\n`${SUPABASE_URL}/auth/v1/authorize?provider=notion&redirect_to=${returnUrl}`\r\n\r\n> In my case, returnUrl was a local expo uri ('exp://192.168.43.73:19000/--/auth/callback'), but I also tried with in browser with returnUrl set to localhost:xxx.\r\n\r\nVisit the above URL and start the authentication flow. After the last step (i.e. selecting the notion pages to grant permission), I am being redirected to a URL of the following form:\r\n\r\n```\r\n<SUPABASE_URL>/#access_token=<LONGACCESSTOKEN>&expires_in=3600&provider_token=<SOMEOTHERTOKEN>&refresh_token=<SOMEOTHERTOKEN>&token_type=bearer\r\n```\r\n\r\nwith the following response:\r\n\r\n```\r\n{\"message\":\"No API key found in request\"}\r\n```\r\n\r\n## Expected behavior\r\n\r\nIt should redirect to the provided `returnUrl` with necessary params.\r\n\r\ncc: @zernonia\r\n",
            "author": {
                "login": "NagariaHussain"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-11T14:09:14Z",
            "closedAt": "2022-09-14T14:13:25Z",
            "url": "https://github.com/supabase/gotrue/issues/674",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KITgY",
                    "body": "Have you set up your Notion API key as per the docs ?\r\n\r\nhttps://github.com/supabase/gotrue#external-authentication-providers",
                    "author": {
                        "login": "gprieto"
                    },
                    "createdAt": "2022-09-12T12:47:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/674#issuecomment-1243691032"
                },
                {
                    "id": "IC_kwDOEKipmc5KITxf",
                    "body": "> Have you set up your Notion API key as per the docs ?\n> \n> \n> \n> https://github.com/supabase/gotrue#external-authentication-providers\n\nYup, followed the exact steps. ",
                    "author": {
                        "login": "NagariaHussain"
                    },
                    "createdAt": "2022-09-12T12:48:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/674#issuecomment-1243692127"
                },
                {
                    "id": "IC_kwDOEKipmc5KIVSq",
                    "body": "Have you set them up in your Supabase dashboard as per the docs?\r\n\r\nhttps://supabase.com/docs/guides/auth/auth-notion#add-your-notion-credentials-into-your-supabase-project",
                    "author": {
                        "login": "gprieto"
                    },
                    "createdAt": "2022-09-12T12:53:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/674#issuecomment-1243698346"
                },
                {
                    "id": "IC_kwDOEKipmc5KIaJb",
                    "body": "BTW it is on a managed cloud project, not self hosted supabase. ",
                    "author": {
                        "login": "NagariaHussain"
                    },
                    "createdAt": "2022-09-12T13:10:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/674#issuecomment-1243718235"
                },
                {
                    "id": "IC_kwDOEKipmc5KImqN",
                    "body": "> Have you set them up in your Supabase dashboard as per the docs?\n> \n> https://supabase.com/docs/guides/auth/auth-notion#add-your-notion-credentials-into-your-supabase-project\n\nYes.\n",
                    "author": {
                        "login": "NagariaHussain"
                    },
                    "createdAt": "2022-09-12T13:46:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/674#issuecomment-1243769485"
                },
                {
                    "id": "IC_kwDOEKipmc5KURc5",
                    "body": "hey @NagariaHussain, can you please drop us a support email [here](https://app.supabase.com/support/new)? We would love to help you get to the bottom of this!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-14T14:13:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/674#issuecomment-1246828345"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Rv0n4",
            "number": 681,
            "title": "Feature Request: Add Apple `Passkeys` as Auth Method.",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI was very happy to see that Apple Implemented a feature in the newest Version of Safari (16) called Passkeys. See here https://developer.apple.com/passkeys/. It basically allows users to basically sign in with a secure key that is verified via FaceID instead of username & password.\r\n\r\n## Describe the solution you'd like\r\n\r\nI would like to see this feature working with supabase auth, since it is a very modern, user-friendly way and secure way to authenticate a user. \r\n\r\n## Describe alternatives you've considered\r\n\r\nImplementing the authentication by myself, but surely that's not what's supabase about.\r\n\r\n## Additional context\r\n\r\nhttps://webkit.org/blog/13152/webkit-features-in-safari-16-0/\r\n",
            "author": {
                "login": "madebyfabian"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-13T13:49:11Z",
            "closedAt": "2022-09-19T06:00:34Z",
            "url": "https://github.com/supabase/gotrue/issues/681",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5KiqTg",
                    "body": "Hey @madebyfabian! \r\n\r\nThanks for the request! We've looked at the article and unfortunately we won't be supporting Sign In/Sign Up via Passkeys in the near future. We will, however, be implementing 2FA with the WebAuthn standard, through which passkeys as a 2FA method can be supported.\r\n\r\nGoing to close for now but feel free to let me know if there are any further queries.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-19T06:00:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/681#issuecomment-1250600160"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5SlLRv",
            "number": 699,
            "title": "user metadata with magic link ",
            "body": "It would be nice to allow for the ability to add user metadata when someone is using the magic link or to make a password option on the signup field to allow for magic links.\r\n",
            "author": {
                "login": "rlee1990"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-17T14:27:43Z",
            "closedAt": "2022-10-21T04:38:13Z",
            "url": "https://github.com/supabase/gotrue/issues/699",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5K9EzP",
                    "body": "Could you please provide a very specific sample how you imagine this to be?",
                    "author": {
                        "login": "activenode"
                    },
                    "createdAt": "2022-09-21T18:50:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1257524431"
                },
                {
                    "id": "IC_kwDOEKipmc5K9EzR",
                    "body": "> Could you please provide a very specific sample how you imagine this to be?\n\nSo after some thought. To me the best approach would be to make the signup option to allow for passwords to be optional just like the signin option. That way if someone signs up for a site that also take things like username name and date of birth they can get past in with the raw user metadata. I don't see how much of a difference it would be vs having to provide a password or not.",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2022-09-21T18:54:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1257524433"
                },
                {
                    "id": "IC_kwDOEKipmc5K9EzS",
                    "body": "I think the logic of both should be cleaned up anyways (see https://github.com/supabase/gotrue-js/issues/449 as well).\r\n\r\nThey do too much stuff implicitly. I also do think there should be a method such as `signUpWithEmailWithoutPassword` same as the `gotrue` one `signUpWithEmail` which already exists but then without a password which would be more meaningful than `signIn` which implicitly registers a user which is very weird to me honestly.",
                    "author": {
                        "login": "activenode"
                    },
                    "createdAt": "2022-09-21T19:15:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1257524434"
                },
                {
                    "id": "IC_kwDOEKipmc5K9EzX",
                    "body": "My workaround here was to generate a random password for the user, and never tell them what it is (since I only offered magiclink signup/in). \r\nBut of course, this is a strange behaviour for a non-obvious reason, and I'd prefer to see something like what's suggested above...",
                    "author": {
                        "login": "chrisb2244"
                    },
                    "createdAt": "2022-09-26T00:54:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1257524439"
                },
                {
                    "id": "IC_kwDOEKipmc5K9Eza",
                    "body": "@chrisb2244 That's what I was think as a workaround but that could have adverse effects down the line hopefully this will gain enough support ",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2022-09-26T00:58:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1257524442"
                },
                {
                    "id": "IC_kwDOEKipmc5LJ9TD",
                    "body": "hey everyone, closing this out because we've added this to gotrue already (https://github.com/supabase/gotrue/pull/506, https://github.com/supabase/gotrue/pull/658)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-09-28T13:17:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1260901571"
                },
                {
                    "id": "IC_kwDOEKipmc5LM_mR",
                    "body": "> hey everyone, closing this out because we've added this to gotrue already (https://github.com/supabase/gotrue/pull/506, https://github.com/supabase/gotrue/pull/658)\n\nThat's nice any clue when it might land on the flutter or dart package?",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2022-09-29T03:20:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1261697425"
                },
                {
                    "id": "IC_kwDOEKipmc5LNrjo",
                    "body": "Hey @rlee1990,\r\n\r\nNot too sure at the moment, but we're looping in the Flutter maintainer: @dshukertjr into the thread so that there's visibility on the feature.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-29T07:28:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1261877480"
                },
                {
                    "id": "IC_kwDOEKipmc5LNxW0",
                    "body": "@rlee1990 Hopefully not too long from now! We are in the process of making the developer preview version of gotrue-dart to be aligned with gotrue-js rc right now!",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2022-09-29T07:51:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1261901236"
                },
                {
                    "id": "IC_kwDOEKipmc5MTQQy",
                    "body": "@dshukertjr is there any thing on github for us to follow for progress on this?",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2022-10-17T00:45:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1280115762"
                },
                {
                    "id": "IC_kwDOEKipmc5MUwRm",
                    "body": "@rlee1990 You can follow [this PR](https://github.com/supabase-community/gotrue-dart/pull/90)!",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2022-10-17T08:50:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1280509030"
                },
                {
                    "id": "IC_kwDOEKipmc5MrKLD",
                    "body": "I just tried calling `signInWithOtp` with some metadata, and it seems like the metadata is not being saved on the server side.  I wonder if it's a server side issue or a client side issue.\r\n\r\n\r\nCode that I used:\r\n```typescript\r\n    const { error } = await supabase.auth.signInWithOtp({\r\n      email: 'my_new_email@gmail.com',\r\n      options: {\r\n        data: { name: 'something' },\r\n      },\r\n    })\r\n```",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2022-10-21T02:38:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1286382275"
                },
                {
                    "id": "IC_kwDOEKipmc5Mraq7",
                    "body": "Yup, good catch @dshukertjr! I've made a PR in gotrue to fix this issue already, it should go out to all supabase projects next week.\r\n\r\nOne caveat though: If the user has already signed up, you can't use the `data` param to update the user_metadata field. The user will have to update it using the `updateUser` method in gotrue-js",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-10-21T04:38:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1286449851"
                },
                {
                    "id": "IC_kwDOEKipmc5M1jzT",
                    "body": "> Yup, good catch @dshukertjr! I've made a PR in gotrue to fix this issue already, it should go out to all supabase projects next week.\r\n> \r\n> One caveat though: If the user has already signed up, you can't use the `data` param to update the user_metadata field. The user will have to update it using the `updateUser` method in gotrue-js\r\n\r\nIs there a pr or something I can follow so I now when this has been fixed?",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2022-10-24T14:18:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1289108691"
                },
                {
                    "id": "IC_kwDOEKipmc5Z-G3g",
                    "body": "Hi, It's been a while. and I have just tried to get the data via magic link and it seems the data does not go through. \r\nam I missing something??\r\n\r\nI develop vite react ts.\r\n\r\n```typescript\r\n    const { error } = await supabase.auth.signInWithOtp({ email:email, options: {data: {\r\n      Title: \"\u0412\u0430\u0448\u0438\u044f\u0442 \u043c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u0438 \u043b\u0438\u043d\u043a\",\r\n      H2: \"\u041c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u0438 \u043b\u0438\u043d\u043a\",\r\n      P: \"\u0421\u043b\u0435\u0434\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u0437\u0438 \u043b\u0438\u043d\u043a, \u0437\u0430 \u0434\u0430 \u0432\u043b\u0435\u0437\u0435\u0442\u0435 \u0432 \u043f\u0440\u043e\u0444\u0438\u043b\u0430 \u0441\u0438:\",\r\n      Link: \"\u0412\u043b\u0435\u0437\u0442\u0435 \u0432 \u043f\u0440\u043e\u0444\u0438\u043b\u0430 \u0441\u0438\"\r\n  }} });\r\n```\r\n\r\nin Email Templates\r\n\r\n```html\r\n<h2>{{ .Data.H2 }}</h2>\r\n\r\n<p>{{ .Data.P }}  {{ .Email }} {{ .Data.To }}  {{ .NewEmail }}:</p>\r\n<p><a href=\"{{ .ConfirmationURL }}\">{{ .Data.Link }}</a></p>\r\n```\r\n\r\nThank you.\r\n",
                    "author": {
                        "login": "thecodingpapa"
                    },
                    "createdAt": "2023-04-15T01:42:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1509453280"
                },
                {
                    "id": "IC_kwDOEKipmc5aC9hl",
                    "body": "Hi @thecodingpapa, that should work, but it seems like the data only goes through the first time a user is signed up. Subsequent signup attempts by the same user will only result in sending whatever data was sent the first time.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-04-17T05:30:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1510725733"
                },
                {
                    "id": "IC_kwDOEKipmc5aI7jO",
                    "body": "Hi @kangmingtay,\r\nThank you for your prompt reply earlier. I have a follow-up question.\r\n\r\nIn the future, Will it be changed to the 'Data' to update dynamically when a user signs in, rather than just during sign-up? I am concerned that users may change their language preference after their initial sign-up, and this cause a mismatch between the language preference in my application and the language used in email notifications.\r\n\r\nThank you once again!\r\n",
                    "author": {
                        "login": "thecodingpapa"
                    },
                    "createdAt": "2023-04-18T00:58:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/699#issuecomment-1512290510"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5SlLi_",
            "number": 700,
            "title": "Add / Remove a Provider",
            "body": "# Feature request\r\n\r\nCurrently, there doesn't seem to be a way to link / unlink a provider (email, google, password, phone, etc).  There should be methods to do this, as people need to be able to handle their accounts in these situations.  This is very standard.\r\n\r\n## Describe the solution you'd like\r\n\r\nThere should be just basic \"link\" and \"unlink\" methods for an account that is already signed in.\r\n\r\nhttps://firebase.google.com/docs/auth/web/account-linking\r\n\r\nhttps://auth0.com/docs/manage-users/user-accounts/user-account-linking/unlink-user-accounts\r\n\r\n\r\n## Describe alternatives you've considered\r\n\r\nI don't see a way to do this since you can't \"delete\" an account either.  I guess you could write a separate stored procedure to delete the account, then a separate stored procedure to copy / delete / merge other accounts.  Then write the backend code, then write the frontend code.  \r\n\r\nThat being said, this should be built-in.\r\n\r\nJ\r\n\r\n",
            "author": {
                "login": "jdgamble555"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-16T02:48:32Z",
            "closedAt": "2022-09-28T13:17:41Z",
            "url": "https://github.com/supabase/gotrue/issues/700",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LJ9Ny",
                    "body": "Hey,\r\n\r\nThanks for the detailed description! We've received multiple requests for this but we don't plan to support linking/unlinking providers for the moment but it's something that we'll be looking into right now. Feel free to follow along at #313 \r\n\r\nGoing to close for now but let us now if you have any further questions/concerns.\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-28T13:17:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/700#issuecomment-1260901234"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5SlLoR",
            "number": 701,
            "title": "[azure] Error getting user email from external provider",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI am not able to let users login through azure provider. I followed this [guide](https://supabase.com/docs/guides/auth/auth-azure#register-an-application).\r\n\r\n## To Reproduce\r\n\r\nFollow the guide and you will see the following error in the Authentication Logs of the supabase project:\r\n\r\n```\r\n{\"component\":\"api\",\"error\":\"Unable to find email with Azure provider\",\"level\":\"error\",\"method\":\"GET\",\"msg\":\"500: Error getting user email from external provider\",\"path\":\"/callback\",\"referer\":\"\",\"remote_addr\":\"212.95.23.44\",\"time\":\"2022-09-14T11:33:53Z\",\"timestamp\":\"2022-09-14T11:33:52Z\"}\r\n```\r\n## Expected behavior\r\n\r\nThe user should be able to sign in with azure.\r\n\r\n## Additional context\r\n\r\nI am trying to do the login in a flutter desktop application, but I don't think that matters, as it fails on the supabase server side.\r\n",
            "author": {
                "login": "simpros"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-14T11:39:02Z",
            "closedAt": "2022-09-26T09:55:57Z",
            "url": "https://github.com/supabase/gotrue/issues/701",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5K-Ew4",
                    "body": "Closing as a duplicate of #550 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-09-26T09:55:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/701#issuecomment-1257786424"
                },
                {
                    "id": "IC_kwDOEKipmc5NgdfC",
                    "body": "https://github.com/supabase/gotrue/issues/550#issuecomment-1299111066",
                    "author": {
                        "login": "plondon"
                    },
                    "createdAt": "2022-11-02T12:56:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/701#issuecomment-1300355010"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5SlMJt",
            "number": 702,
            "title": "Support hanko for advanced passwordless auth",
            "body": "# Feature request\r\n\r\nIt is not a problem today but may become one, as we get more and attracted to using fingerprints and face IDs on our phones. Hanko is an ambitious project, been following it lately and i have seen that it is quite promising in its implementation and commitment to Webauthn api. Who wouldn't want users to login with FaceID/Fingerprint ? It's faster and easier for the end user.\r\n\r\n## Describe the solution you'd like\r\n\r\nAllow us to integrate Hanko's JWT with Supabase JWT somehow, so that the session and user remains synced between them. That way, we get the best of both worlds. If you guys could work with them, it may take Supabase Auth to the next level. \r\n\r\nRepository for reference: https://github.com/teamhanko/hanko\r\n\r\n## Describe alternatives you've considered\r\n\r\nNone yet.\r\n",
            "author": {
                "login": "dukesx"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-10T07:31:49Z",
            "closedAt": "2022-09-28T09:28:19Z",
            "url": "https://github.com/supabase/gotrue/issues/702",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LI82S",
                    "body": "Hanko is a similar project to GoTrue. Until we see clear demand for users we won't be able to add any support for it. The community is free to open a PR!\r\n\r\nGoTrue will support WebAuthn, PassKey and MFA, though we don't have a timeline for this just yet. ",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:28:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/702#issuecomment-1260637586"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5SwXt_",
            "number": 708,
            "title": "Allow any URI wild card formatting for redirect_to URIs.",
            "body": "# Bug report\r\n\r\nThis bug might be intentional but limits people who are building mobile apps. In `gotrue/api/helpers.go` on line 108, when I specify a `redirect_to` parameter during an invite request for a mobile app with formatting such as `exp://192.168.0.80:19000/`, gotrue doesn't support wild cards for that kind of URI format. This becomes a problem when working with Expo at a hosted URL where wildcard formatting would be useful. This also becomes a problem when working with a production mobile app.\r\n\r\nThe solution would be pretty simple by just removing `if strings.HasPrefix(uri, \"http\") || strings.HasPrefix(uri, \"https\")` and letting any URI wildcard formatting.\r\n\r\n```Go\r\nfunc isRedirectURLValid(config *conf.GlobalConfiguration, redirectURL string) bool {\r\n\tif redirectURL == \"\" {\r\n\t\treturn false\r\n\t}\r\n\r\n\tbase, berr := url.Parse(config.SiteURL)\r\n\trefurl, rerr := url.Parse(redirectURL)\r\n\r\n\t// As long as the referrer came from the site, we will redirect back there\r\n\tif berr == nil && rerr == nil && base.Hostname() == refurl.Hostname() {\r\n\t\treturn true\r\n\t}\r\n\r\n\t// For case when user came from mobile app or other permitted resource - redirect back\r\n\tfor uri, g := range config.URIAllowListMap {\r\n\t\t// Only allow wildcard matching if url scheme is http(s)\r\n\t\tif strings.HasPrefix(uri, \"http\") || strings.HasPrefix(uri, \"https\") {\r\n\t\t\tif g.Match(redirectURL) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} else if redirectURL == uri {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\treturn false\r\n}\r\n```\r\n",
            "author": {
                "login": "spencerbart"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-27T21:38:31Z",
            "closedAt": "2022-09-29T09:26:32Z",
            "url": "https://github.com/supabase/gotrue/issues/708",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LG2CH",
                    "body": "There might be a purpose to only allowing HTTP and HTTPS to have wild card but it would be nice to have more flexibility",
                    "author": {
                        "login": "spencerbart"
                    },
                    "createdAt": "2022-09-27T21:42:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/708#issuecomment-1260085383"
                },
                {
                    "id": "IC_kwDOEKipmc5LG2eK",
                    "body": "^^having this problem too. This would be way nice.",
                    "author": {
                        "login": "blake-rouse"
                    },
                    "createdAt": "2022-09-27T21:45:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/708#issuecomment-1260087178"
                },
                {
                    "id": "IC_kwDOEKipmc5LHCjw",
                    "body": "Here is a Lyft example `lyft://ridetype?id=lyft&pickup[latitude]=37.764728&pickup[longitude]=-122.422999&destination[latitude]=37.7763592&destination[longitude]=-122.4242038`",
                    "author": {
                        "login": "spencerbart"
                    },
                    "createdAt": "2022-09-27T22:25:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/708#issuecomment-1260136688"
                },
                {
                    "id": "IC_kwDOEKipmc5LOM_F",
                    "body": "Fixing this in #711. Let's move any further conversation there.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-29T09:26:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/708#issuecomment-1262014405"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5S4VUE",
            "number": 710,
            "title": "Every site_url is used as redirect_to param for auth/v1/verify",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nEvery site_url is used as `redirect_to` param for `auth/v1/verify` when resetting a password.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1.  use below.. we are going to reset the password\r\n\r\n```js\r\nconst supabase = createClient(\r\n  'https://rsnibhkhsbfnncjmwnkj.supabase.co',\r\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYxNTIxNDE1MywiZXhwIjoxOTMwNzkwMTUzfQ.OQEbAaTfgDdLCCht251P2JRD3QDnui6nsU8N-tZA_Mc'\r\n)\r\n\r\nconst { error } = await supabaseClient.auth.resetPasswordForEmail(email, {\r\n  'http://localhost:3000',\r\n})\r\n```\r\n\r\n2. gotrue route auth/v1/verify looks like this\r\nnotice the comma seperated string for redirect_to\r\n`https://rsnibhkhsbfnncjmwnkj.supabase.co/auth/v1/verify?token=ab9b60c82d4aa0269e71ec75cd3138fb0c2f354045f7ea99ddffafbf&type=recovery&redirect_to=http://localhost:3000,https://ui.supabase.com,https://supabase.com`\r\n\r\n## Expected behavior\r\n\r\nFor the actual correct redirect url to be used\r\n\r\n## Screenshots\r\n<img width=\"2054\" alt=\"Screenshot 2022-09-29 at 4 48 09 PM\" src=\"https://user-images.githubusercontent.com/8291514/192985673-1b1dcbb9-ed18-4094-8052-27aed8d3a766.png\">\r\n\r\n## System information\r\n\r\n\u251c\u2500\u2500 @supabase/auth-ui-react@0.2.0\r\n\u251c\u2500\u2500 @supabase/supabase-js@2.0.0-rc.10\r\n\u251c\u2500\u2500 next@12.3.1\r\n\u251c\u2500\u2500 react-dom@17.0.2\r\n\u2514\u2500\u2500 react@17.0.2\r\n\r\nnode v16.16.0\r\n\r\n## Additional context\r\n\r\nIt is quite hard to understand the difference between 'redirect urls' and 'site urls' in gotrue config, it feels like it should just be 1 set of urls under 'allowed domains' like firebase does it.\r\n\r\nmaybe this is just a frontend thing though, and we need to make a better distinction or perhaps maybe phase one of them out in favour of the other.\r\n",
            "author": {
                "login": "MildTomato"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-29T08:49:37Z",
            "closedAt": "2022-10-19T13:44:47Z",
            "url": "https://github.com/supabase/gotrue/issues/710",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5MiO4C",
                    "body": "Hey @MildTomato,\r\n\r\nThe `SITE_URL` is meant to take in only a single URL. After discussion with the team, we decided the best fix for this is probably validating that users only enter one URL on the frontend.\r\n\r\nGoing to close for now but feel free to reach out if there are further queries.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-10-19T13:44:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/710#issuecomment-1284042242"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5S9nPh",
            "number": 713,
            "title": "Email Links don't pass through enterprise email systems",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nOne of the organizations that uses our web app has an enterprise email system (part of the Microsoft platform?). As part of the system's security, when an email is to be delivered to a user's inbox the system will open the email, scan through the email, and open all of the links that are contained within the email. If the system deems that the email is safe, it then delivers it into the user's inbox.\r\n\r\nThe issue with this system is that when a reset-password link (or any auth link) is sent through this system, by the time it reaches the user's inbox the link has been opened and the single-use token is expired.\r\n\r\n## To Reproduce\r\n\r\nThe only way to reproduce this behavior would be to send a reset-password link (or any other auth link) to an email address that is controlled by an enterprise system. I'm not certain which systems work like this, except that this certain organization's system does.\r\n\r\n## Expected behavior\r\n\r\nAs seen from these discussions\r\n- https://github.com/supabase/supabase/discussions/6004\r\n- https://github.com/supabase/supabase/discussions/7791\r\n\r\na single-use token is important for security purposes. However, a possible alternative that would work for these systems would be to have an access_token that isn't single-use, but rather has an expiration timestamp (10 minutes, one hour, one day, etc.). I'm not a security expert, but this seems like a good solution that would solve the enterprise email issue.\r\n\r\n",
            "author": {
                "login": "kylerummens"
            },
            "state": "OPEN",
            "createdAt": "2022-07-20T17:53:45Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/713",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LcOjy",
                    "body": "Same here,  not fit for production with this.",
                    "author": {
                        "login": "rokk4"
                    },
                    "createdAt": "2022-10-03T16:07:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1265690866"
                },
                {
                    "id": "IC_kwDOEKipmc5Lt1xI",
                    "body": "I think (although, if there's a good way to confirm this, that would be appreciated) that this is also causing an issue for me - some of my users are reporting an inability to log-in. On the first user, I created a page to track the URL hash parameters and redirect to a more descriptive page, because I thought they'd waited more than the expiry time (hour, day, whatever). But when I attempted to reproduce with my gmail account - no problems. The first link was invalid, but regenerating a new link and then immediately using it had no problems (my first reporting user said this wasn't possible even on repeated attempt, and when I deleted their account and had them recreate it, still no dice).\r\n\r\nNow I see in the supabase auth-logs page (app.supabase.com/project/<projectid>/auth/logs) that the requests and verify attempts are close together for the next user who reported it, so it's not an expiry time issue...",
                    "author": {
                        "login": "chrisb2244"
                    },
                    "createdAt": "2022-10-06T15:50:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1270307912"
                },
                {
                    "id": "IC_kwDOEKipmc5RT6HL",
                    "body": "I have a question regarding this: Does this also activate the link (verify the email address) or is there some mechanism that prevents this? Because everyone is writing that the link is just invalid.",
                    "author": {
                        "login": "florianwalther-private"
                    },
                    "createdAt": "2022-12-23T18:31:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1364173259"
                },
                {
                    "id": "IC_kwDOEKipmc5VCsoS",
                    "body": "Any updates on this?",
                    "author": {
                        "login": "eleddie"
                    },
                    "createdAt": "2023-02-11T13:30:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1426770450"
                },
                {
                    "id": "IC_kwDOEKipmc5a9MRQ",
                    "body": "@florianwalther-private it does activate the link and verify the email, but then the user can't add a password.\r\n\r\nThis will also cause them to fail the password reset, again because the link has been used. \r\n\r\nBasically meaning they can't access the system at all.",
                    "author": {
                        "login": "erikgoins"
                    },
                    "createdAt": "2023-04-27T16:21:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1525990480"
                },
                {
                    "id": "IC_kwDOEKipmc5a9Y9B",
                    "body": "@erikgoins Thank you for the clarification!",
                    "author": {
                        "login": "florianwalther-private"
                    },
                    "createdAt": "2023-04-27T17:03:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1526042433"
                },
                {
                    "id": "IC_kwDOEKipmc5fHNN5",
                    "body": "@hf I've seen similar issues from Gmail on iOS as well, probably from attempts to preload the page.\r\nCan we get an option to use time window instead of a single use token? I think this is critical to make it more reliable and production ready.",
                    "author": {
                        "login": "EskelCz"
                    },
                    "createdAt": "2023-06-17T12:05:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1595724665"
                },
                {
                    "id": "IC_kwDOEKipmc5oT_fR",
                    "body": "I worked around the issue by changing the link in the invite user email template to\r\n\r\n`{{ .SiteURL }}sign-up?url={{ .ConfirmationURL }}`\r\n\r\nMy page has a button that redirects to `searchParams.get('url')`",
                    "author": {
                        "login": "andivis"
                    },
                    "createdAt": "2023-10-06T06:49:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1750071249"
                },
                {
                    "id": "IC_kwDOEKipmc5oVg9R",
                    "body": "> I worked around the issue by changing the link in the invite user email template to\r\n> \r\n> `{{ .SiteURL }}sign-up?url={{ .ConfirmationURL }}`\r\n> \r\n> My page has a button that redirects to `searchParams.get('url')`\r\n\r\nWe had to do the same thing using a custom page.",
                    "author": {
                        "login": "erik-beus"
                    },
                    "createdAt": "2023-10-06T11:29:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/713#issuecomment-1750470481"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5S-5HO",
            "number": 715,
            "title": "No rate-limiting with admin JWT",
            "body": "GoTrue enforces rate limiting even for the admin JWT, which should not be the case. See #651.",
            "author": {
                "login": "hf"
            },
            "state": "OPEN",
            "createdAt": "2022-09-30T10:23:39Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/715",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5S_guF",
            "number": 718,
            "title": "Sign-in with custom token",
            "body": "# Feature request\r\n## Is your feature request related to a problem? Please describe.\r\nTo support special cases for authentification like signing in by scanning a qr code on the web (e.g. Whatsapp Web) it should be possible to create a custom Token for authentification serverside using the gotrue-js package.\r\nThis is currently not possible to implement in supabase using the api directly.\r\n\r\n## Describe the solution you'd like\r\n\r\nA function in the gotrueapi like `.api.createCustomToken(userId: string, adittionalClaims): Promise<string>`. On the client side there would be\r\na function like `.auth.signInWithCustomToken(customToken:string): Promise<session>`.\r\nAdditionalClaims would contain things like an expiration time for the token.\r\nThis is a feature I really liked in Firebase Auth (see Additional context).\r\n\r\n## Describe alternatives you've considered\r\n\r\nThis might be able to do by signing your own refreshToken or accessToken, but I think it would be better to have it directly implemented into the Api.\r\n\r\n## Additional context\r\n\r\nThe Firebase Auth Docs: https://firebase.google.com/docs/auth/admin/create-custom-tokens\r\n",
            "author": {
                "login": "flowhorn"
            },
            "state": "OPEN",
            "createdAt": "2022-01-04T11:38:17Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/718",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LT9gI",
                    "body": "Transferred to [gotrue](https://github.com/supabase/gotrue) and changed title to reflect the feature request better. Adding to our backlog too.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-30T12:40:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/718#issuecomment-1263523848"
                },
                {
                    "id": "IC_kwDOEKipmc5PYJSO",
                    "body": "This would definitely make life much easier for anyone dealing with multiple auth systems.",
                    "author": {
                        "login": "icopp"
                    },
                    "createdAt": "2022-11-30T07:10:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/718#issuecomment-1331729550"
                },
                {
                    "id": "IC_kwDOEKipmc5Wu719",
                    "body": "Any updates? This will definitely solve a lot of problems when dealing with many types of auth system and also simplify and standardize integration with other providers. ",
                    "author": {
                        "login": "OliverRhyme"
                    },
                    "createdAt": "2023-03-05T16:53:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/718#issuecomment-1455144317"
                },
                {
                    "id": "IC_kwDOEKipmc5lhkty",
                    "body": "As I'm switching to Supabase, we have users in an existing authentication provider. Until we deprecate that old system, I want to authenticate my users to that system, and create an auth token for the supabase api for that user. \r\n\r\nSomething similar to this: https://www.mongodb.com/docs/atlas/app-services/authentication/custom-function/\r\n\r\nHoping something like this could solve my problem.",
                    "author": {
                        "login": "amerryma"
                    },
                    "createdAt": "2023-09-01T20:43:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/718#issuecomment-1703299954"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5S_4C-",
            "number": 719,
            "title": "Add ability to set non persistent custom claims on JWTs",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI'm trying to implement multi-tenancy - where a single auth user can belong to multiple tenants - in my app. I want to implement some kind of session state, so that a user can select the context for the single tenant they want to view the data of on a per session basis. \r\nFor this I'm thinking of setting a temporary custom claim in the JWT. With temporary I mean it's not persisted to the auth user object (e.g. stored in the `auth.users` table). \r\n\r\nMore details in this discussion https://github.com/supabase/supabase/discussions/6301 \r\n\r\n## Describe the solution you'd like\r\n\r\nIntroduce a new function that operates the same way as the current way we can update the [users's metadata](https://supabase.com/docs/reference/javascript/auth-update#update-a-users-metadata), but in a not persisted manner. \r\n\r\n## Describe alternatives you've considered\r\n\r\nI could [mint my own JWT's](https://github.com/supabase/gotrue/issues/277), but since I guess more people might have this use case of this per-session state it might be more convenient if this library would accommodate it. \r\n",
            "author": {
                "login": "mgm1313"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-07T08:23:45Z",
            "closedAt": "2022-09-30T13:51:05Z",
            "url": "https://github.com/supabase/gotrue/issues/719",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LURLd",
                    "body": "Hey @mgm1313 (and :+1:-ers @reyhann, @dinvlad),\r\n\r\nAccess tokens, which have the form of a JWT, are meant to be very short lived tokens. In the default Supabase Auth setting their expiration time is 1 hour. Industry best practice recommends having them as short as possible, typically 5 or 10 minutes. From that point of view it does not make any sense to customize the access token with data that is not persisted in the database, as the data would only be \"around\" until the access token expires.\r\n\r\nWe've already released rudimentary session support, however in the near future the feature set will grow and we'll consider adding session metadata support that will appear in all JWTs so long as the session is valid.\r\n\r\nI'll close this issue for now, but feel free to comment or offer suggestions afterwards.\r\n\r\n(P.S. This feels like an issue that should live in [gotrue](https://github.com/supabase/gotrue so I'll move it there.)",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-30T13:51:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/719#issuecomment-1263604445"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5TAcQf",
            "number": 720,
            "title": "Auth with Custom Token (Similar to Firebase)",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI'm thinking of transitioning from Firebase to Supabase. I'm using a custom Auth flow with Firebase, to use a Web3 wallet like Metamask to verify the user. This is not possible in Supabase. In [Firebase I can do ](https://firebase.google.com/docs/auth/admin/create-custom-tokens#web-version-9)\r\n\r\n```\r\nconst customToken = getAuth().createCustomToken(user-uid)\r\n```\r\nin the backend, after verifying a Metamask Signature. And then in the frontend call:\r\n\r\n```\r\nsignInWithCustomToken(getAuth(), customToken)\r\n```\r\nto Sign into Firebase Auth. I've seen a similar approach using Supabase in this [video](https://www.youtube.com/watch?v=tVyQZ0CiMWI). But it seems hacky since it's using `setAuth()` on the front-end and that seems meant for serverside access. It also doesn't persist the login state between browser sessions.\r\n\r\n## Describe the solution you'd like\r\n\r\nIdeally, I could create a signed JWT in the backend from the JWT secret, send it to the frontend and use it to login, while goetrue-js handles all the session management. Is this already possible?\r\n",
            "author": {
                "login": "johanneskares"
            },
            "state": "CLOSED",
            "createdAt": "2022-08-31T16:24:01Z",
            "closedAt": "2022-09-30T15:43:23Z",
            "url": "https://github.com/supabase/gotrue/issues/720",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LUvmv",
                    "body": "Moving this to [gotrue](https://github.com/supabase/gotrue) where there is a duplicate.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-30T15:38:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/720#issuecomment-1263729071"
                },
                {
                    "id": "IC_kwDOEKipmc5LUwz5",
                    "body": "Closing as duplicate of #718 ",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-30T15:43:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/720#issuecomment-1263734009"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5TSqN-",
            "number": 735,
            "title": "supbase-js v2 : signInWithOTP doesn't support the data object in the options params. Breaks i18n templating support.",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nsignInWithOTP doesn't support the data object in the options params. Breaks i18n templating support.\r\n\r\nA clear and concise description of what the bug is.\r\nUsing supabase-js v2 (latest) seems not able to forward the data object in the option params when using it like here:\r\n```\r\nsupabase.auth.signInWithOtp({\r\n      email,\r\n      options: {\r\n        emailRedirectTo: `http://localhost:3000/${language}/app/auth`,\r\n        data: { language: \"en\" },\r\n      },\r\n```\r\nIn order to be able to use GO's template variables to render and appropriate i18n strings in the magicLink Email templates hosted via supabase backend, we need a way to distinguish the user's locale , e.g.: via the data object or similar\r\n\r\n## To Reproduce\r\n\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\nUse the following snippet when submitting magicLink auth in your webapp:\r\n```\r\nsupabase.auth.signInWithOtp({\r\n      email,\r\n      options: {\r\n        emailRedirectTo: `http://localhost:3000/${language}/app/auth`,\r\n        data: { language: \"en\" },\r\n      },\r\n```\r\nthen go to the supabase auth settings and recognize that the following GO template variable is an empty array or null:\r\n{{ .Data }}\r\n\r\n\r\n\r\n\r\n\r\n## Expected behavior\r\nsupabase.auth.signInWithOtp should honour the data object in the options and make it available in the magicLink templates in the supabase auth backend settings.\r\n",
            "author": {
                "login": "mtin79"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-05T08:03:59Z",
            "closedAt": "2022-10-19T16:10:05Z",
            "url": "https://github.com/supabase/gotrue/issues/735",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5MjC7E",
                    "body": "Fixed in https://github.com/supabase/gotrue-js/pull/512.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-10-19T16:10:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/735#issuecomment-1284255428"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5TgqCq",
            "number": 739,
            "title": "Invitation link should not be useable by automated systems",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWe use the [`generateLink()` auth api](https://supabase.com/docs/reference/javascript/auth-api-generatelink) to generate `'invite'` links and send them by email to our customers.\r\nWe came across the case where the customer has an automated system (probably an anti-spam or anti-malware), which opened all the existing links inside an email prior to delivering it.\r\n\r\nHence, the invitation link was consumed by this system, and had already expired when the customer tried to use it.\r\n\r\nI believe such links should forbid being used by automated systems, for instance by checking the user-agent.\r\n\r\nTo be honest I'm not sure if this is a bug or a feature request, but this seemed critical enough to me to open an issue about it.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Use `generateLink()` to generate an 'invite' link, like this one: http://localhost:54321/auth/v1/verify?token=1a3f408007230d4143916d714e68be601cba2cb5c023c4e5d490c641&type=invite&redirect_to=http://localhost:3000/register\r\n2. Paste this link in a Discord/Slack/Whatsapp conversation\r\n3. Now paste this link in the browser.\r\n4. Notice we are redirected to http://localhost:3000/register with an error saying the link has expired\r\n\r\n## Expected behavior\r\n\r\nI would have expected the link to be valid when pasted into the browser.\r\n\r\n## System information\r\n\r\n- OS: Ubuntu\r\n- Browser: Chrome\r\n- Version of supabase-js: 1.35.6\r\n- Version of Node.js: 16.17.0\r\n\r\nThanks a lot\r\n",
            "author": {
                "login": "slax57"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-29T09:11:36Z",
            "closedAt": "2023-06-07T11:00:46Z",
            "url": "https://github.com/supabase/gotrue/issues/739",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5LyZxR",
                    "body": "@slax57 - do you know of any way (from the supabase db, logs, GUI/dashboard etc) to check if this is the reason that a link 'expired'? I think I'm hitting the same issue, but it'd be good to confirm this is the cause, and not something else.\r\n\r\nFor solutions, I've seen these other links referencing the same issue - some suggest workarounds like using the OTP instead and having the user copy/paste a code (which seems like a degradation in UX to me, but better than having them unable to login at all...)\r\n\r\n[Workaround for single-use auth tokens #7791](https://github.com/supabase/supabase/discussions/7791)\r\n[Email Links don't pass through enterprise email systems #713](https://github.com/supabase/gotrue/issues/713)\r\n[Use invite link twice. #6004](https://github.com/supabase/supabase/discussions/6004)\r\n[Email password reset link is invalid for certain emails supabase/supabase-js#342](https://github.com/supabase/gotrue-js/issues/342)\r\n ",
                    "author": {
                        "login": "chrisb2244"
                    },
                    "createdAt": "2022-10-07T04:39:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/739#issuecomment-1271503953"
                },
                {
                    "id": "IC_kwDOEKipmc5LyZxX",
                    "body": "@chrisb2244 No I don't, sorry. I had the intuition it might be this based on customer feedback, then confirmed it by doing a real-world test with Discord.\r\n\r\nThanks for the links btw, makes me realize this issue has been raised already (even if not as gh issues).\r\n\r\nOur team chose to workaround this by creating an indirection table to store the link and an intermediate screen requiring the user to click on a button to actually be redirected to the supabase link.",
                    "author": {
                        "login": "slax57"
                    },
                    "createdAt": "2022-10-07T10:19:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/739#issuecomment-1271503959"
                },
                {
                    "id": "IC_kwDOEKipmc5L2H_i",
                    "body": "Would you imagine that such automated systems would run with `window` defined? (as in, in a browser?)\r\nIf not, perhaps a page (on the user side) that takes the token as a query/hash parameter and then runs something like (pseudo, untested code):\r\n```\r\nif (typeof window !== 'undefined') {\r\n   const realLink = getAppropriateSupabaseLink(req);\r\n   fetch(realLink, { method: 'POST' }) // not sure if this should be post or get, \r\n   // and also probably the supabase verify endpoint might be appropriate, \r\n   // and handle the function described by 'getAppropriateSupabaseLink' or similar...\r\n} else {\r\n   // Do nothing because this is running in some email-scanning system or automated whatever?\r\n}",
                    "author": {
                        "login": "chrisb2244"
                    },
                    "createdAt": "2022-10-09T07:44:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/739#issuecomment-1272479714"
                },
                {
                    "id": "IC_kwDOEKipmc5cA5Pg",
                    "body": "Or maybe don't consume the link after the first use, allow two uses.",
                    "author": {
                        "login": "EskelCz"
                    },
                    "createdAt": "2023-05-11T10:25:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/739#issuecomment-1543738336"
                },
                {
                    "id": "IC_kwDOEKipmc5eNP9q",
                    "body": "Duplicate of #713.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:00:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/739#issuecomment-1580531562"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5T0dGa",
            "number": 748,
            "title": "signUp() user data is not obfuscated/fake when returned",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nWhen using the create a new user function signUp(), when an existing user is queried it returns a user object with valid information that is not obfuscated/fake as the documents suggest. Only once the user has confirmed their email is the id obfuscated but information such as phone, email and user metadata is still valid.\r\n\r\nhttps://github.com/supabase/gotrue/blob/85cff37bac7fdd22a87235890caca7d6ace6c244/api/signup.go#L257\r\n\r\nWhy are we only removing one or the other when it comes to the provider phone & email fields, should they not both be removed if obfuscating?\r\nhttps://github.com/supabase/gotrue/blob/85cff37bac7fdd22a87235890caca7d6ace6c244/api/signup.go#L267\r\n\r\n// Should be used whenever we want to prevent information about whether a user is registered or not from leaking\r\nfunc sanitizeUser()\r\n\r\nWhy does the user need to be sanitized for \"confirm email\" when enabled but not when \"confirm email\" is disabled? should it not simply return \"User already registered\"? one seems to be leaking if a user is registered does it not?\r\n",
            "author": {
                "login": "samuel-stubbs"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-12T09:28:19Z",
            "closedAt": "2022-10-19T13:59:52Z",
            "url": "https://github.com/supabase/gotrue/issues/748",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5MEV8C",
                    "body": "thanks @samuel-stubbs - transferring to the auth repo",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-10-12T13:51:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/748#issuecomment-1276206850"
                },
                {
                    "id": "IC_kwDOEKipmc5MiUet",
                    "body": "Hey @samuel-stubbs, for more context, we initially decided not to obfuscate the data when \"confirm email\" is disabled because that action is already inherently insecure. When \"confirm email\" is disabled, it returns an access token and refresh token pair on signup and there is no way to \"fake\" that data. An attacker can easily use the access token to determine if the user actually exists or not.\r\n\r\nWhen we move to v2, we intend to do away with obfuscation completely since obfuscation makes the DX of the API confusing. If a developer wants the data returned from gotrue to be obfuscated and not leak information, they should handle the obfuscation via a proxy server. This would also allow for more customization on the developer's end as to how granular they want to obfuscate the data.\r\n\r\nWe'll be closing this issue for now but thanks for raising it up!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-10-19T13:59:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/748#issuecomment-1284065197"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5T0e9b",
            "number": 749,
            "title": "signUp user already exist message",
            "body": "# Feature request\r\n\r\nwhen signingUp (with the email confirmation enabled) if the user already exist, we should receive error \"user already exists\"\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIt is not possible to notify the user whether his registration was successful and email was sent, or was fault because user already exists\r\n\r\n## Describe the solution you'd like\r\n\r\n1. User is registering using email and password\r\n2. If the user is already register we are receiving error message \"user already exists\"\r\n\r\n## Describe alternatives you've considered\r\n\r\nI have tried to login user before to check if logIn throws \"user does not exist\" but the message throws wrong credentials which is ok, but cannot be used to determine if user exists already or not\r\n\r\nOn this forum there is a proposal to create a registered users table with all emails and check this. I think this is not wise to have such table with free access.\r\n\r\n",
            "author": {
                "login": "glatocha"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-12T02:18:19Z",
            "closedAt": "2023-05-03T14:16:48Z",
            "url": "https://github.com/supabase/gotrue/issues/749",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5bYWP9",
                    "body": "Hey @glatocha,\r\n\r\nThanks for the feedback. We are looking into adding customizable behavior around signup/sign in flows via webhooks which would allow users to decide what to return or do when a user already exists.\r\n\r\nDo let us know if you have any feedback or suggestions around this. Going to close this issue for now as we'll be tracking this internally as one example use case. \r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-03T14:16:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/749#issuecomment-1533109245"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ULg4g",
            "number": 754,
            "title": "Accounts not linked when creating account with OIDC first.",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nAn error occurs in the database when trying to create an account/sign in with an OIDC provider via the `grant_type=id_token` endpoint if they've already created an account using that same email address. \r\nThe error returned is: `duplicate key value violates unique constraint 'users_email_key'`.\r\n\r\nThis bug does not happen if the user has created an account with OIDC first.\r\n\r\n## To Reproduce\r\n\r\n1. User creates an account using their Email and Password. They verify their account via the verification email sent.\r\n2. User is able to successfully login with their Email and Password.\r\n3. User then tries to sign in to their account via the OIDC endpoint `grant_type=id_token`. In this example, they're signing in with Google. The email for the Google account is the same as the email used previously.\r\n4. I get an error stating `duplicate key value violates unique constraint 'users_email_key'`.\r\n\r\n## Expected behavior\r\n\r\nThe expected behavior is that the user is able to login to that existing account because the Email is the same.\r\n\r\nAn example of what happens when a user creates an OIDC account first is:\r\n1. User created an account via the OIDC endpoint `grant_type=id_token`. In this example, they're signing in with Google.\r\n2. The user is able to successfully sign in with Google.\r\n3. The user does not have a password they can use to login with their email. They reset their password with a new password.\r\n4. The user is now able to successfully Sign in with OIDC as well as their email and new password and the accounts are linked.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- I'm using hosted Supabase.\r\n\r\n",
            "author": {
                "login": "DanMossa"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-17T22:20:02Z",
            "closedAt": "2023-02-04T00:17:26Z",
            "url": "https://github.com/supabase/gotrue/issues/754",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5UnwTx",
            "number": 767,
            "title": "Make the `ReferrerURL` variable available in the email templates",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nEnterprise email systems are consuming password recovery links and the alternative is to use the OTP which is worse for the user experience.\r\n\r\n## Describe the solution you'd like\r\n\r\nMake the `ReferrerURL` variable (which comes from `emailRedirectTo`) available in the email templates, it could be combined with the `Token` variable to create custom links that are not consumed by the enterprise email systems.\r\n\r\nFor example: `{{ .ReferrerURL }}/change-password?email={{ .Email }}&code={{ .Token }}`\r\n\r\n## Describe alternatives you've considered\r\n\r\nAn alternative would be that the password recovery links not to be consumed by enterprise email systems.\r\n\r\n## Additional context\r\n\r\n- https://github.com/supabase/gotrue/issues/739\r\n- https://github.com/supabase/gotrue/issues/713\r\n",
            "author": {
                "login": "leynier"
            },
            "state": "OPEN",
            "createdAt": "2022-10-23T08:42:59Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/767",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5NLa4_",
                    "body": "Hey @leynier,\r\n\r\nI don't see how passing the referrer URL solves the issue. Email security systems break magic links because they _visit_ the link. The way to stop them from doing that is to make sure that the link is visited by a human instead of a robot. There are different strategies which can be done for this to be prevented such as:\r\n\r\n- Serve a HTML + JavaScript page that will visit the actual magic link after some short timeout (half a second)\r\n- Do a Turing test before visiting the actual magic link\r\n- Ask for a user to click a button before visiting the magic link\r\n\r\nYou can customize the magic link email template today with whatever URL you want, though.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-10-28T10:41:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/767#issuecomment-1294839359"
                },
                {
                    "id": "IC_kwDOEKipmc5NN6A0",
                    "body": "Hi @hf, thanks for the response.\r\n\r\nThe link that contains the variable `ConfirmationURL` even when an invalid value is used in `redirect_to` (invalid because nothing really exists at that address and this value is declared in the allowed redirect URLs) when it is visited by an email security system consumes it making it invalid for **\"real\"** use. The **\"invalid value\"** part of the `redirect_to` is important because it proves that what is consuming the link is **not** the final address, it is the Supabase server in the redirection step that is consuming the link.\r\n\r\nMy `ConfirmationURL` has the following format: `https://<projectId>.supabase.co/auth/v1/verify?token=<token>&type=magiclink&redirect_to=<redirectTo>`\r\n\r\nIs it possible to make that `ConfirmationURL` have the format `<redirectTo>/custompath/magiclink/<token>`? In order to then build in that final address the necessary logic to prevent the token from being consumed by email security systems, such as waiting a few seconds, putting a button, etc.\r\n\r\nIn the case that is not possible that `ConfirmationUrl` to have that format then will be good to have the `ReferrerURL` variable (aka `redirect_to`) to build manually the URL that I need. The only parameter that I don't have available in the template to build that URL is the `ReferrerURL` (aka `redirect_to`).\r\n\r\nBy the way, I think that the correct parameter of `filepath` of `getSiteUrl` in the `MagicLinkMail` method is `m.Config.Mailer.URLPaths.MagicLink` instead of `m.Config.Mailer.URLPaths.Recovery`.\r\n\r\nhttps://github.com/supabase/gotrue/blob/41668b77c23003296ef642f7565fb97375b4fef2/mailer/template.go#L250",
                    "author": {
                        "login": "leynier"
                    },
                    "createdAt": "2022-10-28T21:38:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/767#issuecomment-1295491124"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5U7ALx",
            "number": 780,
            "title": "raw_user_meta_data is empty",
            "body": "When using the signInWithOtp for the magic link and providing information in data. Checking the data in my trigger function its always empty.",
            "author": {
                "login": "rlee1990"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-26T22:07:53Z",
            "closedAt": "2022-11-07T15:24:01Z",
            "url": "https://github.com/supabase/gotrue/issues/780",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5NMGOw",
                    "body": "@kangmingtay are you able to look at this?",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2022-10-28T13:42:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/780#issuecomment-1295016880"
                },
                {
                    "id": "IC_kwDOEKipmc5Nvpe5",
                    "body": "hey @rlee1990, i noticed you've reopened the issue, can you please provide some reproducible steps for this? thanks!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-11-04T23:34:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/780#issuecomment-1304336313"
                },
                {
                    "id": "IC_kwDOEKipmc5NvpnA",
                    "body": "> hey @rlee1990, i noticed you've reopened the issue, can you please provide some reproducible steps for this? thanks!\n\n@kangmingtay its in reference to https://github.com/supabase/supabase-flutter/issues/246",
                    "author": {
                        "login": "rlee1990"
                    },
                    "createdAt": "2022-11-04T23:36:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/780#issuecomment-1304336832"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5VFdD-",
            "number": 782,
            "title": "Support Native Apple (iOS) and Google (Android) log in ",
            "body": "# Feature request\r\n\r\nI would like to be able to use native Apple/iOS and Google/Android log in options using Capacitor. Plugins already exist which allow for the bulk of the flow:\r\n\r\n- Apple (https://github.com/capacitor-community/apple-sign-in)\r\n- Google (https://github.com/CodetrixStudio/CapacitorGoogleAuth)\r\n\r\nI would like the option to sign in using the values returned by these plugins.\r\n\r\n## Describe the solution you'd like\r\n\r\nThese plugins both return values that can be used for auth. Both follow a fairly straight-forward flow for then validating the tokens. I would like to be able to use these values to create, validate and log in users.\r\n\r\n## Describe alternatives you've considered\r\n\r\nPondered writing these values directly to the tables via server-side code, but that seems like a terrible hack. Unless it's what I should do!\r\n\r\n## Additional context\r\n\r\nThis is one of the biggest features in Firebase (mobile auth support) that I need to be able to use Supabase as a replacement.",
            "author": {
                "login": "wiverson"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-28T16:25:27Z",
            "closedAt": "2023-08-21T08:48:49Z",
            "url": "https://github.com/supabase/gotrue/issues/782",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ee4Ed",
                    "body": "Why is this ignored for 7 months? :(",
                    "author": {
                        "login": "Jonatthu"
                    },
                    "createdAt": "2023-06-09T21:38:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/782#issuecomment-1585152285"
                },
                {
                    "id": "IC_kwDOEKipmc5ee7vZ",
                    "body": "So, as an FYI there is some movement on this issue. The full flow is included and working for the Dart/Flutter and CSharp clients. In theory it could be added to the JS client, perhaps with a patch to the JS client (it's just a single REST method to add to hit the server with the native flow data). Or, alternatively, by invoking the GoTrue server-side APIs to send the native Sign in with Apple JWT and nonce to the server and then initializing the JS client with the returned session.\r\n\r\nI did a bunch of [PRs for the CSharp](https://github.com/supabase-community/gotrue-csharp) version and made a [demo video](https://youtu.be/S0hTwtsUWcM) of it working in Unity.\r\n\r\nThis issue should still be open to 1) add the flow to the JS client and 2) write up the docs.",
                    "author": {
                        "login": "wiverson"
                    },
                    "createdAt": "2023-06-09T21:54:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/782#issuecomment-1585167321"
                },
                {
                    "id": "IC_kwDOEKipmc5kfQQf",
                    "body": "Hey team,\r\n\r\nThis should now be possible [with the JS library as well](https://supabase.com/blog/native-mobile-auth). Here's the [corresponding function call](https://supabase.com/docs/reference/javascript/auth-signinwithidtoken)\r\n\r\nGoing to close for now but feel free to let us know if there are any remaining unresolved issues.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-21T08:48:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/782#issuecomment-1685914655"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5VI_gF",
            "number": 784,
            "title": "Supabase auth in Node returns error 500",
            "body": "supabase-js version: 2.0.4\r\n\r\nI'm trying to build an API using Vercel serverless functions (NOT a Next.js API). I can't seem to be able to retrieve the user object from within the API handler. I'm not sure what I'm doing wrong and I see no meaningful error message in the returned error object or the Supabase log. This is the error object:\r\n\r\n```\r\nerror:  AuthApiError: Internal server error\r\n    at C:\\XXX\\node_modules\\@supabase\\gotrue-js\\src\\lib\\fetch.ts:41:16\r\n    at processTicksAndRejections (node:internal/process/task_queues:95:5) {\r\n  __isAuthError: true,\r\n  status: 500\r\n}\r\n```\r\n\r\nThe Supabase event that appears to be raised by the call (what is `invalid claim: subject missing`?):\r\n\r\n```\r\n{\"component\":\"api\",\"error\":\"invalid claim: subject missing\",\"level\":\"error\",\"method\":\"GET\",\"msg\":\"Unhandled server error: invalid claim: subject missing\",\"path\":\"/user\",\"referer\":\"\",\"remote_addr\":\"xxx.xxx.xxx.xxx\",\"time\":\"2022-10-29T19:23:01Z\",\"timestamp\":\"2022-10-29T19:23:01Z\"}\r\n```\r\n\r\nAnd the code:\r\n\r\n```ts\r\nconst supabaseClient = createClient(supabaseUrl, supabaseKey);\r\n\r\nconst user = await supabaseClient.auth.getUser();\r\n```\r\n\r\nuser is null and user.error contains the information pasted above.\r\n\r\nI have no problem with auth in a Next.js API using createServerSupabaseClient from the auth-helpers-nextjs package.",
            "author": {
                "login": "user72356"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-29T19:30:27Z",
            "closedAt": "2022-11-01T14:05:56Z",
            "url": "https://github.com/supabase/gotrue/issues/784",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5NY1L4",
                    "body": "At this point in your code, there's no user logged in, so this is an expected error.\r\n\r\n`getUser()`, without passing in an `access_token`/`jwt`, will try and find the user by calling `getSession()`. If that isn't successful, then `getUser()` will set the jwt to `undefined`, and pass that into a fetch for `{your-supabase-url}/user`.",
                    "author": {
                        "login": "j4w8n"
                    },
                    "createdAt": "2022-11-01T11:00:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/784#issuecomment-1298354936"
                },
                {
                    "id": "IC_kwDOEKipmc5NZn01",
                    "body": "I'm closing this because I found out the issue was that createClient() does not do any cookie management behind the scenes. It doesn't send/parse an auth cookie, so none was being sent over the wire. As a result the session was blank. The solution was to fork auth-helpers-nextjs and modify it to work with Vercel API functions.",
                    "author": {
                        "login": "user72356"
                    },
                    "createdAt": "2022-11-01T14:05:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/784#issuecomment-1298562357"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Vblx7",
            "number": 790,
            "title": "MFA: 404 on get assurence level request /auth/v1/factors",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nWhen following the supabase docs for MFA with Next.js I receive a 404 when requesting the assurence level when using\r\n`await supabase.auth.mfa.getAuthenticatorAssuranceLevel()`\r\nand subsequently the challenge request\r\n`const challenge = await supabase.auth.mfa.challenge({ factorId }) // \"totp\"`\r\n\r\nfollowing [this guide](https://supabase.com/docs/guides/auth/auth-mfa#server-side-rendering)\r\n\r\n## To Reproduce\r\nrepo to reproduce (just needs .env.local with key and url) on [github](https://github.com/CHBaker/supabase-nextjs-auth-proof/tree/42f21b056c398b4bbcf641b9bcfe795ad3975868)\r\n\r\nuse the effect from the docs from Enroll in MFA:\r\n\r\n\r\n```\r\nuseEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const { data, error } =\r\n          await supabase.auth.mfa.getAuthenticatorAssuranceLevel();\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        console.log(\"mfa data \", data);\r\n        // currentAuthenticationMethods: [], currentLevel: null, nextLevel: null\r\n\r\n        if (data.nextLevel === \"aal2\" && data.nextLevel !== data.currentLevel) {\r\n          setShowMFAScreen(true);\r\n        }\r\n      } finally {\r\n        setReadyToShow(true);\r\n      }\r\n    })();\r\n  }, []);\r\n```\r\n\r\n## Expected behavior\r\n\r\nthat the value returned from the assurance level would correspond with a user who is not enrolled in MFA (AAL1 and not enrolled in MFA)\r\n\r\n## Screenshots\r\n\r\n![Screen Shot 2022-10-26 at 10 44 04 AM](https://user-images.githubusercontent.com/14304935/198085901-8746008a-9770-4a6d-93d0-7f8beb6215f4.png)\r\n![Screen Shot 2022-10-26 at 10 44 14 AM](https://user-images.githubusercontent.com/14304935/198085916-0b596d9c-bfd8-463b-94c8-cd98a451789f.png)\r\n\r\n## System information\r\n\r\n- served from localhost:300\r\n- set up supabase with nextjs using the getting started guide\r\n- OS: Mac M1\r\n- Browser: Chrome\r\n- Version of supabase-js: 2.0.4\r\n- Version of Node.js: 12\r\n\r\n## Additional context\r\n\r\npackage.json:\r\n```\r\n{\r\n  \"name\": \"supabase-nextjs-auth-proof\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"dev\": \"next dev\",\r\n    \"build\": \"next build\",\r\n    \"start\": \"next start\",\r\n    \"lint\": \"next lint\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@supabase/auth-helpers-nextjs\": \"^0.4.1\",\r\n    \"@supabase/auth-helpers-react\": \"^0.3.0\",\r\n    \"@supabase/auth-ui-react\": \"^0.2.2\",\r\n    \"@supabase/supabase-js\": \"^2.0.4\",\r\n    \"next\": \"12.3.1\",\r\n    \"react\": \"18.2.0\",\r\n    \"react-dom\": \"18.2.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/node\": \"18.11.4\",\r\n    \"@types/react\": \"18.0.22\",\r\n    \"@types/react-dom\": \"18.0.7\",\r\n    \"eslint\": \"8.26.0\",\r\n    \"eslint-config-next\": \"12.3.1\",\r\n    \"typescript\": \"4.8.4\"\r\n  }\r\n}\r\n```\r\n",
            "author": {
                "login": "CHBaker"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-26T16:47:48Z",
            "closedAt": "2023-01-05T08:18:07Z",
            "url": "https://github.com/supabase/gotrue/issues/790",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5NhZD-",
                    "body": "Hey @CHBaker,\r\n\r\nThanks for your patience! Auth team here - apologies, I'm only just seeing this. At present, MFA is only available to early access users. Thus, such it is not accessible to the public unless activated on our end(and will thus throw a 404)\r\n\r\nPlease email `growth@supabase.io` with your project ref if you'd like to get MFA enabled.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2022-11-02T09:50:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/790#issuecomment-1300599038"
                },
                {
                    "id": "IC_kwDOEKipmc5NoMdu",
                    "body": "okay thank you very much. could we close this with a PR to docs saying this is still in early access? I wouldn't mind doing that if you can point me to the file since I'm new to your project. Also we could add a message instead of just the 404 that says 'this feature is in beta, learn more here'\r\n",
                    "author": {
                        "login": "CHBaker"
                    },
                    "createdAt": "2022-11-03T16:41:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/790#issuecomment-1302382446"
                },
                {
                    "id": "IC_kwDOEKipmc5RxaXk",
                    "body": "Thanks for your patience! MFA is now available on all projects - going to close for now but feel free to re-open if there are still issues",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-05T08:18:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/790#issuecomment-1371907556"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Vf7S6",
            "number": 791,
            "title": "Selfhosted: Supabase-Auth Go Problem with invalid memory address or nil pinter dereference",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\n Supabase container keeps on restarting. (loops)\r\n```supabase-auth | {\"level\":\"info\",\"msg\":\"Go runtime metrics collection started\",\"time\":\"2022-11-03T10:19:40Z\"}\r\nsupabase-auth | {\"level\":\"info\",\"msg\":\"received graceful shutdown signal\",\"time\":\"2022-11-03T10:19:40Z\"}\r\nsupabase-auth | panic: runtime error: invalid memory address or nil pointer dereference\r\nsupabase-auth | [signal SIGSEGV: segmentation violation code=0x1 addr=0x60 pc=0x6073b4]\r\nsupabase-auth |\r\nsupabase-auth | goroutine 1 [running]:\r\nsupabase-auth | net/url.(*URL).Query(0xc000046017?)\r\nsupabase-auth |         /usr/local/go/src/net/url/url.go:1104 +0x14\r\nsupabase-auth | github.com/netlify/gotrue/cmd.migrate(0xc0005bfcf8?, {0xc0005bfcd0?, 0x0?, 0x0?})\r\nsupabase-auth |         /go/src/github.com/netlify/gotrue/cmd/migrate_cmd.go:55 +0x216\r\nsupabase-auth | github.com/netlify/gotrue/cmd.glob..func4(0x1849480, {0x189ae00?, 0x0?, 0x0?})\r\nsupabase-auth |         /go/src/github.com/netlify/gotrue/cmd/root_cmd.go:17 +0x25\r\nsupabase-auth | github.com/spf13/cobra.(*Command).execute(0x1849480, {0xc00010c1d0, 0x0, 0x0})\r\nsupabase-auth |         /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:856 +0x663\r\nsupabase-auth | github.com/spf13/cobra.(*Command).ExecuteC(0x1849480)\r\nsupabase-auth |         /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:960 +0x39c\r\nsupabase-auth | github.com/spf13/cobra.(*Command).Execute(...)\r\nsupabase-auth |         /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:897\r\nsupabase-auth | github.com/spf13/cobra.(*Command).ExecuteContext(...)\r\nsupabase-auth |         /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:890\r\nsupabase-auth | main.main()\r\nsupabase-auth |         /go/src/github.com/netlify/gotrue/main.go:31 +0x139```\r\n\r\n## To Reproduce\r\n\r\n1. Starting the docker-compose with: docker-compose -f docker-compose.yml up\r\n2. and this Bugs shows again and again in console\r\n\r\n## System information\r\n\r\n- OS: Ubuntu Server 2204 (VM Machine on Windows 11 in VM Workstation 16 Pro)\r\n- Version of supabase-js: latest docker supabase version\r\n\r\n## Additional context\r\n\r\nIs it a version problem with GO? Found something abount a version problem with a a bit different bug in the web.\r\n\r\nThank you :)",
            "author": {
                "login": "MerlinChiodo"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-03T10:31:34Z",
            "closedAt": "2022-11-03T13:58:16Z",
            "url": "https://github.com/supabase/gotrue/issues/791",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5NmX4W",
                    "body": "![image](https://user-images.githubusercontent.com/60719496/199699080-0e2541ca-e1b4-46ad-88ad-5f7df58f16fc.png)\r\n",
                    "author": {
                        "login": "MerlinChiodo"
                    },
                    "createdAt": "2022-11-03T10:33:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/791#issuecomment-1301904918"
                },
                {
                    "id": "IC_kwDOEKipmc5NnT1y",
                    "body": "Anyone having this bug, cloning project new and start with initial (clone example.env) works for me. So probably it was caused due to a Password in env with special chars or there was a fix in a new image release ",
                    "author": {
                        "login": "MerlinChiodo"
                    },
                    "createdAt": "2022-11-03T13:54:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/791#issuecomment-1302150514"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5VqUbd",
            "number": 794,
            "title": "/admin/users/<user_id> admin role?",
            "body": "# Improve documentation\r\n\r\n## Link \r\n\r\nhttps://github.com/supabase/gotrue#post-put-adminusersuser_id\r\n\r\n## Describe the problem\r\n\r\nIn the code sample the comment says `// admin role required`\r\n\r\n## Describe the improvement\r\n\r\nThe endpoint cannot be called with a user that has the role set to \"admin\".\r\nIt works when the user has assigned the role \"service_role\" with the anon_key\r\n\r\nIs this problematic to assign a user the role \"service_role\" so he can set the app_metadata of other users?\r\nI want to move the role management of my application to the app_metadata json",
            "author": {
                "login": "tschuehly"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-05T19:14:32Z",
            "closedAt": "2023-03-01T08:07:06Z",
            "url": "https://github.com/supabase/gotrue/issues/794",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5WYwyL",
                    "body": "Hey,\r\n\r\nThanks for the query! The service role is needed to execute `/admin` functions and correspondingly any `supabase.auth.admin`  bindings in the `supabase-js` library. I've amended the README to reflect this.\r\n\r\nRole wise,  our recommendation is to not expose the service key (which grants the service role) in the browser. An options which might be worth considering are to expose a server side route which calls the admin route and sets the metadata for you\r\n\r\nHope this helps - let me know if there are further queries.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T04:45:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/794#issuecomment-1449331851"
                },
                {
                    "id": "IC_kwDOEKipmc5WZf7a",
                    "body": "Updated the docs to reflect this",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T08:07:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/794#issuecomment-1449524954"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5VzhYE",
            "number": 797,
            "title": "Revoke all sessions when password changes",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nCurrently, when a user changes the password, the user isn't logged out of his/her other sessions. If a user believes his/her account is compromised, he/she will change the password and expect to be signed out of all other sessions.\r\n\r\nOne might even consider this a security vulnerability.\r\n\r\n## Describe the solution you'd like\r\n\r\nRevoke all sessions when a user's password changes\u2014possibly including the current session on which the password was changed. I believe this should be a default behaviour to GoTrue.\r\n\r\n## Describe alternatives you've considered\r\n\r\nAdding a Postgres trigger to expire all session tokens and refresh tokens for a user on password change. I'm holding off on implementing this because I believe revoking all existing sessions should be a default behaviour on password change on the Supabase level, and that it shouldn't be an application logic implemented on our end.",
            "author": {
                "login": "liaujianjie"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-08T06:22:48Z",
            "closedAt": "2023-03-01T09:16:15Z",
            "url": "https://github.com/supabase/gotrue/issues/797",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5WZ_0k",
                    "body": "Hey @liaujianjie,\r\n\r\nWe've since added logout on password change - calling `updateUser` [should revoke other sessions](https://github.com/supabase/gotrue/blob/master/internal/api/user.go#L129)\r\n\r\nGoing to close for now but feel free to re-open if there are still issues or unresolved questions.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T09:16:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/797#issuecomment-1449655588"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5WCXQm",
            "number": 803,
            "title": "Missing swagger link?",
            "body": "# Improve documentation\n\n## Link \n\nREADME\n\n## Describe the problem\n\nI think the link to the swagger api docs is missing. Or does a website with the api docs not even exists?\n\n## Describe the improvement\n\nAdd link to the README like [storage-api](https://github.com/supabase/storage-api) is doing it.\n\n## Additional context\n\nThe README itself contains some documentation, but for example the delete user route is missing.",
            "author": {
                "login": "Vinzent03"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-10T08:23:34Z",
            "closedAt": "2022-11-11T21:42:37Z",
            "url": "https://github.com/supabase/gotrue/issues/803",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ONsky",
                    "body": "Seems like I accidentally created the same issue twice due to a network issue. See #804",
                    "author": {
                        "login": "Vinzent03"
                    },
                    "createdAt": "2022-11-11T21:42:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/803#issuecomment-1312213298"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5WCXab",
            "number": 804,
            "title": "Missing swagger link?",
            "body": "# Improve documentation\n\n## Link \n\nREADME\n\n## Describe the problem\n\nI think the link to the swagger api docs is missing. Or does a website with the api docs not even exists?\n\n## Describe the improvement\n\nAdd link to the README like [storage-api](https://github.com/supabase/storage-api) is doing it.\n\n## Additional context\n\nThe README itself contains some documentation, but for example the delete user route is missing.",
            "author": {
                "login": "Vinzent03"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-10T08:24:04Z",
            "closedAt": "2023-01-25T14:54:34Z",
            "url": "https://github.com/supabase/gotrue/issues/804",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Tq3RV",
                    "body": "Hey @Vinzent03,\r\n\r\nThanks for the enquiry! Unfortunately we don't have a site with comprehensive documentation for the API yet. There's [the auth reference site](https://supabase.com/docs/reference/self-hosting-auth/generates-an-email-action-link) but it's still being worked on by the docs team at the moment - PRs are welcome!\r\n\r\nGoing to close for now but let us know if there are other issues! Hopefully the reference site should be able to answer most questions once done.\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-25T14:54:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/804#issuecomment-1403745365"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5WSuLu",
            "number": 807,
            "title": "sign in via apple using authorization code / email (rest api) not web flow",
            "body": "# Feature request\r\ncurrently the sign in via apple is only on browser - we need a native solution.\r\nI've crafted a sample in javascript / nodejs \r\nhttps://github.com/johndpope/Sign-in-with-Apple-for-supabase/\r\n\r\nwe want to send the authorization_code + email to backend - and return the existing user - or sign up new one.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nhttps://github.com/supabase-community/gotrue-swift/issues/4\r\n\r\n\r\nA clear and concise description of what you want and what your use case is.\r\n\r\n## Describe the solution you'd like\r\n\r\nsign in via rest api - as documented here \r\nhttps://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api\r\n\r\n## Describe alternatives you've considered\r\n\r\nthe web based browser session is not sufficient.\r\n\r\n## Additional context\r\n\r\nsee readme\r\n",
            "author": {
                "login": "johndpope"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-14T10:02:33Z",
            "closedAt": "2023-01-25T15:23:50Z",
            "url": "https://github.com/supabase/gotrue/issues/807",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5TrCWl",
                    "body": "This is a duplicate of #434.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-01-25T15:23:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/807#issuecomment-1403790757"
                },
                {
                    "id": "IC_kwDOEKipmc5UUCLi",
                    "body": "so - there's seems to be a misunderstanding. \r\nI want to sign into ios apple login in swift with uikit - and get the authorization code NATIVELY. \r\n\r\nthe swift repo here is based off sign with apple from apple.\r\nhttps://github.com/johndpope/Sign-in-with-Apple-for-supabase/\r\n\r\nWhen you successfully sign in - you get an authorization code from Apple.\r\n THIS IS APPLE SWIFT CODE - THIS IS THE METHOD FOR RECEIVING THE AUTHORIZATION FROM APPLE LOGIN.\r\n![image](https://user-images.githubusercontent.com/289994/216479440-c2c47771-6752-46f9-b460-d80df9afc10e.png)\r\n\r\n\r\nthe PR you mention in 434 seems to be for javascript.\r\nis there backend work that's related? \r\nI just want to hit the gotrue api - and send this authorziation code.\r\n\r\nI dont need/want any captcha.\r\n  gotrue_meta_security: { captcha_token: options?.captchaToken },\r\n\r\n@kangmingtay - this doesn't seem to help native login.\r\nI'm not interested in sign in via a browser / webflow.\r\n",
                    "author": {
                        "login": "johndpope"
                    },
                    "createdAt": "2023-02-03T00:13:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/807#issuecomment-1414537954"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5WokoM",
            "number": 815,
            "title": "Add Mastodon as auth provider",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nMastodon is growing in popularity and could be very useful to add as an auth provider.\r\n\r\n## Additional context\r\n\r\nDue to the federated nature of mastodon, I think login can be setup per-server instance. \r\n\r\nI'm not exactly sure how to reflect that.",
            "author": {
                "login": "raed667"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-16T10:58:41Z",
            "closedAt": "2023-01-25T14:46:24Z",
            "url": "https://github.com/supabase/gotrue/issues/815",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5OmntX",
                    "body": "thanks for the request! moving this one to the auth repo - these ones are not likely going to be implemented quickly without community support. For anyone handy with golang, it's possible to implement this by referencing one of the [existing providers](https://github.com/supabase/gotrue/tree/master/api/provider)",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-11-17T14:47:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/815#issuecomment-1318746967"
                },
                {
                    "id": "IC_kwDOEKipmc5Tq0c9",
                    "body": "Closing here and migrating to #451 so we can better track",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-25T14:46:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/815#issuecomment-1403733821"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5WpAHi",
            "number": 818,
            "title": "Leaking signup info",
            "body": "looks like we're using https://github.com/supabase/gotrue/blob/e187280ed8496d86a99aef4b458a229a6ab5f785/api/errors.go#L18 and https://github.com/supabase/gotrue/blob/e187280ed8496d86a99aef4b458a229a6ab5f785/api/errors.go#L19 in a few places - we should mask them on public endpoints to avoid leaking info about which email/phones are registered",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-17T15:58:23Z",
            "closedAt": "2023-02-15T04:01:04Z",
            "url": "https://github.com/supabase/gotrue/issues/818",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRxeL",
                    "body": "closing since we don't plan to obfuscate this in the future ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-15T04:01:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/818#issuecomment-1430722443"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Wvg2z",
            "number": 820,
            "title": "After email change - identites array still contains old email",
            "body": "```\r\n{\r\n  \"id\": \"12fbf230-f196-4521-bbb3-fa474da8a56b\",\r\n  \"aud\": \"authenticated\",\r\n  \"role\": \"authenticated\",\r\n  \"email\": \"new@apple.com\",\r\n  \"email_confirmed_at\": \"2022-11-18T14:11:14.079381Z\",\r\n  \"phone\": \"\",\r\n  \"confirmation_sent_at\": \"2022-11-18T14:09:48.076506Z\",\r\n  \"confirmed_at\": \"2022-11-18T14:11:14.079381Z\",\r\n  \"recovery_sent_at\": \"2022-11-18T14:20:49.715077Z\",\r\n  \"email_change_sent_at\": \"2022-11-18T14:52:42.099554Z\",\r\n  \"reauthentication_sent_at\": \"2022-11-18T14:39:47.626075Z\",\r\n  \"last_sign_in_at\": \"2022-11-18T14:54:03.735118Z\",\r\n  \"app_metadata\": {\r\n    \"provider\": \"email\",\r\n    \"providers\": [\r\n      \"email\"\r\n    ]\r\n  },\r\n  \"user_metadata\": {},\r\n  \"identities\": [\r\n    {\r\n      \"id\": \"12fbf230-f196-4521-bbb3-fa474da8a56b\",\r\n      \"user_id\": \"12fbf230-f196-4521-bbb3-fa474da8a56b\",\r\n      \"identity_data\": {\r\n        \"email\": \"old@gmail.com\",\r\n        \"sub\": \"12fbf230-f196-4521-bbb3-fa474da8a56b\"\r\n      },\r\n      \"provider\": \"email\",\r\n      \"last_sign_in_at\": \"2022-11-18T14:09:49.592989Z\",\r\n      \"created_at\": \"2022-11-18T14:09:49.593022Z\",\r\n      \"updated_at\": \"2022-11-18T14:09:49.593022Z\"\r\n    }\r\n  ],\r\n  \"created_at\": \"2022-11-18T14:09:48.325756Z\",\r\n  \"updated_at\": \"2022-11-18T14:54:04.834277Z\"\r\n}\r\n```",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-18T15:07:03Z",
            "closedAt": "2023-02-23T07:19:16Z",
            "url": "https://github.com/supabase/gotrue/issues/820",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5V6ILN",
                    "body": "Hey! \r\n\r\nI've just tested this and it seems fine now. \r\n\r\n<img width=\"520\" alt=\"CleanShot 2023-02-23 at 15 18 34@2x\" src=\"https://user-images.githubusercontent.com/8011761/220842034-9fc10a53-8fb8-4af9-8990-daa0b3820670.png\">\r\n\r\n\r\nSteps taken (with secure email change enabled)\r\n1. signUp\r\n2. updateUser\r\n3. Confirm both emails\r\n\r\nGoing to close but feel free to reopen if there are still issues.\r\n\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-23T07:19:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/820#issuecomment-1441301197"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5WvhYf",
            "number": 821,
            "title": "After email change, cannot receive password reset email",
            "body": "tested on supabase prod so didn't dig into the logs yet \r\n\r\n",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-18T15:08:09Z",
            "closedAt": "2023-02-23T07:22:23Z",
            "url": "https://github.com/supabase/gotrue/issues/821",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5OtOac",
                    "body": "Several users are hitting this, support is aware.  \r\nIt is the actual password reset email process.  The UI reset does not work but magiclink does.  \r\nAlso appears region dependent.  I have 2 US-West not working and 2 US-East working.  One customer is at least on EU-West",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2022-11-18T20:13:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/821#issuecomment-1320478364"
                },
                {
                    "id": "IC_kwDOEKipmc5V6IvQ",
                    "body": "Hey,\r\n\r\n\r\nTested this and it seems fine now. It's worth noting that it takes a while for emails to reach and on the free tier reset password emails are also being flagged as  spam on gmail.\r\n\r\nClosing for now but feel free to reopen if there are issues",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-23T07:22:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/821#issuecomment-1441303504"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Xu0Qp",
            "number": 842,
            "title": "Add well-defined error codes",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nCurrently it appears that errors from GoTrue only contain a single property, `msg`, which describes the error. While I could show this message to my users, it would not be localized, and may not match the tone of my app.\r\n\r\n## Describe the solution you'd like\r\n\r\nI would like it if there were well-documented specific error codes (beyond the HTTP error codes) like `PASSWORD_TOO_SHORT` or `EMAIL_EXISTS` included in error payloads so that I could create my own error messages to present to the user on the application side.\r\n\r\n## Describe alternatives you've considered\r\n\r\nI could match against the existing `msg` strings, but that seems error-prone and likely to be broken when the language in those strings is updated.\r\n",
            "author": {
                "login": "ryansburgoyne"
            },
            "state": "OPEN",
            "createdAt": "2022-12-01T20:05:05Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/842",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5PiUUb",
                    "body": "After further development, I've discovered that some errors do include error codes (`GoTrueError(message: nil, msg: nil, code: nil, error: Optional(\"invalid_grant\"), errorDescription: Optional(\"Invalid login credentials\")`) while others do not (`GoTrueError(message: nil, msg: Optional(\"Password should be at least 6 characters\"), code: Optional(422), error: nil, errorDescription: nil)`.",
                    "author": {
                        "login": "ryansburgoyne"
                    },
                    "createdAt": "2022-12-01T20:20:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/842#issuecomment-1334396187"
                },
                {
                    "id": "IC_kwDOEKipmc5RBwHx",
                    "body": "This is a known issue and one we're very aware of. It is likely to be one of our biggest priorities in the next year. We'll keep you updated on this issue.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-20T14:03:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/842#issuecomment-1359413745"
                },
                {
                    "id": "IC_kwDOEKipmc5o79S9",
                    "body": "Any news on this topic? I'm building a Rust app and it's extremely confusing what the API error messages come in different shapes.",
                    "author": {
                        "login": "arobert93"
                    },
                    "createdAt": "2023-10-12T23:52:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/842#issuecomment-1760548029"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Yf8zV",
            "number": 849,
            "title": "The automated release is failing \ud83d\udea8",
            "body": "## :rotating_light: The automated release from the `hf/fix-last-sign-in-at-issue` branch failed. :rotating_light:\n\nI recommend you give this issue a high priority, so other packages depending on you can benefit from your bug fixes and new features again.\n\nYou can find below the list of errors reported by **semantic-release**. Each one of them has to be resolved in order to automatically publish your package. I\u2019m sure you can fix this \ud83d\udcaa.\n\nErrors are usually caused by a misconfiguration or an authentication problem. With each error reported below you will find explanation and guidance to help you to resolve it.\n\nOnce all the errors are resolved, **semantic-release** will release your package the next time you push a commit to the `hf/fix-last-sign-in-at-issue` branch. You can also manually restart the failed CI job that runs **semantic-release**.\n\nIf you are not sure how to resolve this, here are some links that can help you:\n- [Usage documentation](https://github.com/semantic-release/semantic-release/blob/caribou/docs/usage/README.md)\n- [Frequently Asked Questions](https://github.com/semantic-release/semantic-release/blob/caribou/docs/support/FAQ.md)\n- [Support channels](https://github.com/semantic-release/semantic-release#get-help)\n\nIf those don\u2019t help, or if this issue is reporting something you think isn\u2019t right, you can always ask the humans behind **[semantic-release](https://github.com/semantic-release/semantic-release/issues/new)**.\n\n---\n\n### The release `2.33.4` on branch `hf/fix-last-sign-in-at-issue` cannot be published as it is out of range.\n\nBased on the releases published on other branches, only versions within the range `>=2.38.1` can be published from branch `hf/fix-last-sign-in-at-issue`.\n\nThe following commits are responsible for the invalid release:\n- release: allow releasing from `hf/fix-last-sign-in-at-issue` (9437737)\n- ci: remove conditional to allow running on workflow dispatch (4290de0)\n- fix: fill `last_sign_in_at` with a non-null value on backfilled email identities (609662e)\n\nThose commits should be moved to a valid branch with [git merge](https://git-scm.com/docs/git-merge) or [git cherry-pick](https://git-scm.com/docs/git-cherry-pick) and removed from branch `hf/fix-last-sign-in-at-issue` with [git revert](https://git-scm.com/docs/git-revert) or [git reset](https://git-scm.com/docs/git-reset).\n\nA valid branch could be `master` or `hf/fix-last-sign-in-at-issue`.\n\nSee the [workflow configuration documentation](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/workflow-configuration.md) for more details.\n\n---\n\nGood luck with your project \u2728\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:\n\n<!-- semantic-release:github -->",
            "author": {
                "login": "github-actions"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-08T14:31:54Z",
            "closedAt": "2022-12-08T14:58:41Z",
            "url": "https://github.com/supabase/gotrue/issues/849",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5YhyZd",
            "number": 852,
            "title": "signal SIGSEGV: segmentation violation after fresh docker install",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nHej folks,\r\ni just pulled the docker container incl. docker compose file and filled the .env files regarding to my needs, afterwards I started the whole thing with docker-compose up -d.\r\nAll containers are up & running but gotrue wont.\r\nSSL Certs are fine as well.\r\n\r\nAfter all Containers are running I went to the gotrue containers logs and found this:\r\n\r\n```sh\r\ngoroutine 1 [running]:\r\nnet/url.(*URL).Query(0xc00004a017?)\r\n        /usr/local/go/src/net/url/url.go:1115 +0x14\r\ngithub.com/netlify/gotrue/cmd.migrate(0xc0004dfcf8?, {0xc0004dfcd0?, 0x0?, 0x0?})\r\n        /go/src/github.com/netlify/gotrue/cmd/migrate_cmd.go:55 +0x229\r\ngithub.com/netlify/gotrue/cmd.glob..func4(0x1921d40, {0x1973c10?, 0x0?, 0x0?})\r\n        /go/src/github.com/netlify/gotrue/cmd/root_cmd.go:17 +0x25\r\ngithub.com/spf13/cobra.(*Command).execute(0x1921d40, {0xc00003e1f0, 0x0, 0x0})\r\n        /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:856 +0x663\r\ngithub.com/spf13/cobra.(*Command).ExecuteC(0x1921d40)\r\n        /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:960 +0x39d\r\ngithub.com/spf13/cobra.(*Command).Execute(...)\r\n        /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:897\r\ngithub.com/spf13/cobra.(*Command).ExecuteContext(...)\r\n        /go/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:890\r\nmain.main()\r\n        /go/src/github.com/netlify/gotrue/main.go:31 +0x139\r\n{\"level\":\"info\",\"msg\":\"Go runtime metrics collection started\",\"time\":\"2022-12-08T18:59:39Z\"}\r\n{\"level\":\"info\",\"msg\":\"received graceful shutdown signal\",\"time\":\"2022-12-08T18:59:39Z\"}\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x60 pc=0x60fcb4]\r\n```\r\n\r\n## To Reproduce\r\n\r\nStarting \r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\nStarted with fresh git clone\r\n\r\n## Expected behavior\r\n\r\nNot crashing and restarting the gotrue container caused by a SIGSEGV.\r\n\r\n## System information\r\n\r\nServer:\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 20.04.5 LTS\r\nRelease:        20.04\r\nDocker version 20.10.21, build baeda1f\r\n",
            "author": {
                "login": "criation"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-08T19:12:52Z",
            "closedAt": "2022-12-20T13:59:33Z",
            "url": "https://github.com/supabase/gotrue/issues/852",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5QHeH6",
                    "body": "I can reproduce this error:\r\nIf the 'POSTGRES_PASSWORD' variable contains a '#' or an '%' this weird looking SIGSEGV accrues. I didn't test it with other special characters.\r\n\r\nAlso have a look here: https://github.com/golang/go/issues/41153",
                    "author": {
                        "login": "JulianKropp"
                    },
                    "createdAt": "2022-12-09T10:36:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/852#issuecomment-1344135674"
                },
                {
                    "id": "IC_kwDOEKipmc5QHgKL",
                    "body": "This resolved my bug, perfect thanks a lot @JulianKropp ",
                    "author": {
                        "login": "criation"
                    },
                    "createdAt": "2022-12-09T10:45:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/852#issuecomment-1344144011"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5YzsMG",
            "number": 855,
            "title": "Password Signup calls are behaving wrong when magic-link-account already exists",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nPassword Signup calls to the API are not failing, even though a user with this email already exists. The API instead creates a new \"fake\" user, returns it and attempts to be successful. But a new user is actually never created when checking the dashboard. Also, they are not able to signin with the password afterwards. They also don't get a verification email. So basically, it creates a dead user but with the same email.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. In Dashboard: Enable new signups, enable email provider, enable signup confirmations required.\r\n2. User Creates account with magic link by JS method `.signInWithOtp()`. An account gets created. A confirmation email gets send. Everything fine.\r\n3. User wants to sign in with password too. So user might use the register method at the next time they want to sign in. Or they just accidently forgot that they are already signed in with magic link and try to register again with same email.\r\n4. The Supabase API actually returns a fully new \"fake\" user object with the same email but with a new user id. **This should be unwanted behaviour, since you cannot create multiple users with the same id**. This newly created \"fake\" user does not pop up in the supabase dashboard and also the confirmation email never gets sent. So the user will still never be able to sign up with a password with that email. But the signup request is returning with HTTP 200 and a new \"fake\" user object, assuming that supabase somehow created a new user, which it didn't.\r\n\r\n## Expected behavior\r\n\r\nI expect that the signup call will fail, since a user is already signuped with this email. Just like it fails when trying to sign up a user with password that already is created and has a password.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Version of @supabase/supabase-js: 2.1.0\r\n- Version of Node.js: e.g. 16.18.1\r\n",
            "author": {
                "login": "madebyfabian"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-11T12:50:08Z",
            "closedAt": "2022-12-11T13:50:27Z",
            "url": "https://github.com/supabase/gotrue/issues/855",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5QM2oC",
                    "body": "To temporarly resolve this, I suppose I could do the signup call on a server and before doing that, checking via the admin api \r\n`await supabase.auth.admin.listUsers()` that a user with this email is already existing, and then throwing an error manually before attempting to signup.",
                    "author": {
                        "login": "madebyfabian"
                    },
                    "createdAt": "2022-12-11T12:52:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/855#issuecomment-1345546754"
                },
                {
                    "id": "IC_kwDOEKipmc5QM55P",
                    "body": "I found this comment that this behaviour is intentional:\r\nhttps://github.com/supabase/supabase/discussions/1282#discussioncomment-1673737\r\n\r\nI understand why, but maybe it would be great if this behaviour would be documented somewhere, or could be turn off.",
                    "author": {
                        "login": "madebyfabian"
                    },
                    "createdAt": "2022-12-11T13:50:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/855#issuecomment-1345560143"
                },
                {
                    "id": "IC_kwDOEKipmc5QM6Ib",
                    "body": "See also https://github.com/supabase/supabase-js/issues/296",
                    "author": {
                        "login": "madebyfabian"
                    },
                    "createdAt": "2022-12-11T13:54:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/855#issuecomment-1345561115"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Y84QU",
            "number": 858,
            "title": "[Twilio Auth Provider] SMS messages display a wrong Sender",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nOTP codes sent via SMS comprise a title (ie. \u201cPresence\") and a body (ie. your \u201cYour Presence code is: 827347\u201d).\r\nHowever, when Twilio's messages pass through Supabase, the Alphasender gets substituted by a generic phone number (not to be confused with Twilio Service SID). Twilio Support says that these numbers belong to their batch of phone numbers used under the hood to dispatch the SMS. For some reason, Supabase is assigning these numbers to Sender.\r\n\r\nUsers will be suspicious if they receive OTP codes from generic phone numbers that are not clearly linked to the app they have signed up.\r\n\r\n## To Reproduce\r\n\r\n1. Sign in with phone number\r\n2. Wait for the SMS\r\n3. See the number as the alphasender instead of `Presence`\r\n\r\nIssue is not reproducible when sending messages directly from Twilio console via CURL method. Issue occurs only when messages pass through Supabase.\r\n\r\n## Expected behavior\r\n\r\nIt depends on the countries, but usually Sender should be either Customer\u2019s custom Alphasender (in our case: \u201cPresence\u201d) or Twilio\u2019s default Alphasender (\u201cAUTHMSG\u201d).\r\n\r\n## Screenshots\r\n\r\n![photo1670257081 edited](https://user-images.githubusercontent.com/45696119/205945544-02d1952f-5a1c-4d00-8125-a92248d8ad12.jpg)\r\n\r\n\r\n## System information\r\n\r\n- Version of supabase-flutter: 1.2.2\r\n\r\n## Additional context\r\n\r\nn/a\r\n",
            "author": {
                "login": "bdlukaa"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-06T14:56:32Z",
            "closedAt": "2022-12-12T17:13:09Z",
            "url": "https://github.com/supabase/gotrue/issues/858",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5QSB-s",
                    "body": "Hey I'm sorry to be bouncing this back to Twilio but GoTrue (the software behind Supabase Auth) is not able to control the phone number. Please check your Twilio configuration.\r\n\r\n[Here's the code that does this.](https://github.com/supabase/gotrue/blob/master/api/sms_provider/twilio.go#L58-L63) Twilio translates the SID into a phone number. We are unable to choose the phone number for you.\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-12T17:13:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/858#issuecomment-1346903980"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ZEWak",
            "number": 859,
            "title": "[Twilio Auth Provider] otp codes are not sent or sent with huge delay",
            "body": "**Bug report**\r\nOTP codes sent via SMS dont arrive to some numbers. At same time OTP codes arrive if we send them outside Supabase, from Twilio via Curl.\r\n\r\ncurl -X POST \"https://verify.twilio.com/v2/Services/[OurTwilioVerifySID]/Verifications\" \r\n--data-urlencode \"To=+447467285767\" \r\n--data-urlencode \"Channel=sms\" \r\n-u `OurTwilioAccountSID`:`OurTwilioAuthToken`\r\n\r\n**To reproduce**\r\nYou can send otp codes to this number via both Gotrue and Twilio curl.\r\nhttps://receive-smss.com/sms/447467285767/\r\n\r\nLogs will report an error returned by auth.signIn\r\n`final response = await auth.signIn(phone: phone);`\r\n\r\n**Other related issue**\r\nWe happen to receive some otp codes, from previous unsuccessful requests, all at once after more than 30min. \r\nMaybe there is also a traffic issue on Gotrue server? \r\n\r\n![IMG_5618](https://user-images.githubusercontent.com/83366073/207354381-4d718c20-6148-4f78-a173-07b74511b08a.PNG)\r\n\r\n**Our Twilio Settings**\r\nOur Supabse Setting page for Twilio is configured properly. This page made us also think that a potential reason of this issue might be that Twilio asks us to enter `Message SID`, but we use `Verify SID` in a Twilio curl request. We would expect to enter `Verify SID` in Supabase console as well.\r\n\r\nPlease notice we temporarily switched to MessageBird in order to workaround this issue. But Twilio settings should be filled in.\r\n\r\n**System information**\r\nVersion of supabase-flutter: 1.2.2",
            "author": {
                "login": "iosephmagno"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-13T14:09:06Z",
            "closedAt": "2022-12-19T12:33:38Z",
            "url": "https://github.com/supabase/gotrue/issues/859",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5QhopD",
                    "body": "@iosephmagno from the looks of it, it appears you are referencing `Verify SID` which is part of the Twilio Verify API. At this time GoTrue / Supabase Auth does not support Twilio Verify. A number of users have asked for this, but we don't have a timeline on it just yet.\r\n\r\nNote that SMS deliverability depends solely on Twilio. Please send us some logs or a reproducible example if the GoTrue code is crashing or logging an error.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-14T11:12:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/859#issuecomment-1350994499"
                },
                {
                    "id": "IC_kwDOEKipmc5Qik_N",
                    "body": "> @iosephmagno from the looks of it, it appears you are referencing `Verify SID` which is part of the Twilio Verify API. At this time GoTrue / Supabase Auth does not support Twilio Verify. A number of users have asked for this, but we don't have a timeline on it just yet.\r\n\r\n@hf thanks for looking into this.\r\n\r\nYes, sending otp codes with Twilio is done via `Verify`. It is their service for Auth and they also price it differently from `Message`. I might be wrong, but sending otp codes via `Message` might cause problems in some edge cases. If you guys could make some time for it, switching code to Verify api shouldn't be difficult (different endpoints but similar fields).\r\n\r\n\r\n> Note that SMS deliverability depends solely on Twilio. Please send us some logs or a reproducible example if the GoTrue code is crashing or logging an error.\r\n\r\nTried to inspect Supabase logs but we get this error. We opened an internal ticket for that.\r\n\r\n<img width=\"948\" alt=\"1\" src=\"https://user-images.githubusercontent.com/83366073/207587499-2c73a524-87b7-4d83-8930-4b654e1e8df8.png\">\r\n\r\n\r\n\r\n\r\n",
                    "author": {
                        "login": "iosephmagno"
                    },
                    "createdAt": "2022-12-14T12:20:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/859#issuecomment-1351241677"
                },
                {
                    "id": "IC_kwDOEKipmc5QsSAl",
                    "body": "Hi @iosephmagno, the Twilio integration we built is solely for messaging purposes and we verify the OTP in gotrue when you call `supabase.auth.verifyOtp()`. Twilio Verify handles the verification of the OTP code on their end which we don't plan on supporting for now. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-12-15T22:17:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/859#issuecomment-1353785381"
                },
                {
                    "id": "IC_kwDOEKipmc5QwBUu",
                    "body": "Hello @kangmingtay. We still cannot read supabase logs (opened a ticket for this), but at first glance, something doesn't work as expected.\r\n\r\nFor example, we made this test using the same phone number:\r\n1) \u2705 we do receive OTP code with MessageBird \r\n2) \u274c we don\u2019t receive OTP code with Twilio\r\n3) \u2705 we do receive OTP code with Twilio curl using both `Verify` and `Message` endpoints outside Supabase (tested on same numbers used in point 1 and 2)\r\n\r\nThis combination of facts make us think that it should be a Supabase's issue with OTP verification.\r\n\r\nI already provided this number where you should be able to reproduce the test described above\r\nhttps://receive-smss.com/sms/447467285767/\r\n \r\nPlease double-check things on your side.\r\nWe will tell you more as soon as we can read logs from supabase console.\r\nThx",
                    "author": {
                        "login": "iosephmagno"
                    },
                    "createdAt": "2022-12-16T13:27:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/859#issuecomment-1354765614"
                },
                {
                    "id": "IC_kwDOEKipmc5Qw1hQ",
                    "body": "@kangmingtay just to confirm we have no logs issue.\r\nAnother thing done and integrated to above comment is to check that we can send otp with Twilio with both `Verify` and `Message` endpoints. We wanted to test also with `Message` service since it is the one you are using in gotrue.",
                    "author": {
                        "login": "iosephmagno"
                    },
                    "createdAt": "2022-12-16T14:47:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/859#issuecomment-1354979408"
                },
                {
                    "id": "IC_kwDOEKipmc5Q62B1",
                    "body": "@kangmingtay closing this because it seems it was twilio issue. Thanks for the kind support \ud83d\udc4d",
                    "author": {
                        "login": "iosephmagno"
                    },
                    "createdAt": "2022-12-19T12:33:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/859#issuecomment-1357602933"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ZMzcO",
            "number": 861,
            "title": "load user after sign-*in* to pull data from triggers ",
            "body": "Related to: https://github.com/supabase/gotrue/pull/712\r\n\r\nWould like to have the same functionality for sign in method. We use database triggers to manipulate user data, but it only works for the sign-up method, whereas the sign in method receives out of date user data.",
            "author": {
                "login": "lauri865"
            },
            "state": "OPEN",
            "createdAt": "2022-12-14T12:24:54Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/861",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5RBsJs",
                    "body": "@lauri865 What does your trigger do to notice a new sign-in? ",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-20T13:57:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/861#issuecomment-1359397484"
                },
                {
                    "id": "IC_kwDOEKipmc5RBuY4",
                    "body": "Every sign-in triggers a new update on the users table (e.g. updating last_sign_in_at, etc.). So a trigger that listens to UPDATES on the auth.users table picks up new sign-ins.",
                    "author": {
                        "login": "lauri865"
                    },
                    "createdAt": "2022-12-20T14:00:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/861#issuecomment-1359406648"
                },
                {
                    "id": "IC_kwDOEKipmc5cxdn6",
                    "body": "For internal tracking: Included as part of Actions RFC",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-22T03:33:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/861#issuecomment-1556470266"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ZrLa1",
            "number": 866,
            "title": "Supabase social login",
            "body": "# Bug report\r\nSupabase social login creates a new user whenever I login using a third party provider\r\n\r\n## Describe the bug\r\nA new user is created whenever I try to login a new user using an OAuth provider like Google or Github. I would expect that the user is not created when using this. \r\n\r\nA clear and concise description of what the bug is.\r\nCreation of a user when using an OAuth provider such as Github and Google for authenticating a user. \r\n\r\n## To Reproduce\r\n```js\r\nconst { data, error } = await supabase.auth.signInWithOAuth({\r\n      provider: \"github\",\r\n});\r\n```\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create an OAuth application on your Github account. \r\n2. Configure it in the supabase settings by providing the necessary information.\r\n3. Test it out. You will see that a user gets created even if they do not exist in the users table of your auth schema.\r\n\r\n## Expected behavior\r\nI expect that the developer should be able to explicitly specify when or not to create a user. For example on login, I would simply prefer that the users table is just checked where's on signup, I would prefer that a new user is created which is not the case as in supabase v1.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser:  brave\r\n- Version of supabase-js: v2\r\n\r\n## Additional context\r\nSigning in and signing up of users.\r\n",
            "author": {
                "login": "ANYURU"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-16T12:30:11Z",
            "closedAt": "2023-01-20T08:46:22Z",
            "url": "https://github.com/supabase/gotrue/issues/866",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5RBeY6",
                    "body": "@ANYURU Just to clarify, you're expecting to \"check\" if a user account exists and not create one if it doesn't?\r\n\r\nIf so, this is something we're unlikely to ever support as this check does result in an authorization event occurring on the OAuth provider -- which is the equivalent of a user \"signing in.\"\r\n\r\nShould you need such a check, it's best to implement your own custom logic using edge functions or similar.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-20T13:21:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/866#issuecomment-1359341114"
                },
                {
                    "id": "IC_kwDOEKipmc5TVPyh",
                    "body": "Hey all,  \r\n\r\nIt's been about a month since there was last activity on this issue - I'm going to close it for now but feel free to re-open if there are still issues/concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-20T08:46:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/866#issuecomment-1398078625"
                },
                {
                    "id": "IC_kwDOEKipmc5TZyNR",
                    "body": "Its okay. Thanks\n\nOn Fri, Jan 20, 2023, 11:46 AM Joel Lee ***@***.***> wrote:\n\n> Closed #866 <https://github.com/supabase/gotrue/issues/866> as completed.\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/supabase/gotrue/issues/866#event-8319385802>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ALVZBW3CULSC6NBWJL2UJ7TWTJGGVANCNFSM6AAAAAATEOMTAI>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n",
                    "author": {
                        "login": "ANYURU"
                    },
                    "createdAt": "2023-01-21T15:07:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/866#issuecomment-1399268177"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ZrZs5",
            "number": 867,
            "title": "Support for Essential Twitter Account for Authentication",
            "body": "# Feature request\r\n\r\nTwitter authentication only works with an elevated Twitter developer account. The elevated account is not easy to get approved and Twitter also does not explain the exact problem with the elevated account request application. So, having support for an essential account will be a good option for indie developers and personal/school/college projects. \r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nNO.\r\n\r\n## Describe the solution you'd like\r\n\r\nI wish that Supabase also supports essential Twitter developers' accounts for Authentication.\r\n\r\n\r\n## Additional context\r\n\r\nAlso, the docs for Twitter Authentication on Supbase are outdated. It does not mention having an elevated account as mandatory. Would love to see some updates to the docs.\r\n",
            "author": {
                "login": "surajondev"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-08T04:31:13Z",
            "closedAt": "2022-12-20T13:38:08Z",
            "url": "https://github.com/supabase/gotrue/issues/867",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5RBkMR",
                    "body": "@surajondev Please correct me if I'm wrong, but by \"essential Twitter account\" you mean:\r\n\r\n[Twitter Docs; Step Four](https://developer.twitter.com/en/docs/twitter-api/getting-started/getting-access-to-the-twitter-api#:~:text=step%20four)\r\n\r\n> With Essential access, you are only able to make requests to the Twitter API v2 endpoints, and not the v1.1 or enterprise endpoints. You are limited to [500K Tweets/month](https://developer.twitter.com/en/docs/twitter-api/tweet-caps), and unable to take advantage of certain developer portal functionality such as [teams](https://developer.twitter.com/en/docs/developer-portal/team-management) and access to additional App environments.\r\n\r\nI believe the Twitter API v2 endpoints are not designed for authenticating users (which is separate from the OAuth 2.0 authorization flow for users). Regardless, from what I can tell you still need to register an app with Twitter, which asks for elevated mode only.\r\n\r\nThus, I'll close this issue but do comment further.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-20T13:38:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/867#issuecomment-1359364881"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ZrbLl",
            "number": 868,
            "title": "GitHub OAuth Sign In not working",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen trying to login with GitHub, post-authorization by GitHub, I'm being redirected to my web app with the query params: `error=server_error&error_description=url+argument+is+missing`\r\n\r\nMy GitHub Sign In code:\r\n\r\n```javascript\r\nconst signInWithGitHub = () =>\r\n    supabase.auth.signInWithOAuth({\r\n        provider: 'github',\r\n        options: { redirectTo: window.location.origin }\r\n    });\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Enable GitHub Login for your application via the steps mentioned by the official Supabase guide here: https://supabase.com/docs/guides/auth/auth-github\r\n2. Try logging in with GitHub in your application\r\n4. See error\r\n\r\nA link where this error can be seen: https://spot-monitoring.vercel.app/\r\n\r\n## Expected behavior\r\n\r\nThe GitHub Sign In was working a while back, but without any changes, it stopped working all of a sudden.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: [e.g. macOS, Windows] Windows\r\n- Browser (if applies) [e.g. chrome, safari] Chrome\r\n- Version of supabase-js: [e.g. 6.0.2] 2.0.5 and 2.1.1 (Also tried latest)\r\n- Version of Node.js: [e.g. 10.10.0] 14.17.0\r\n",
            "author": {
                "login": "deve-sh"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-26T10:22:54Z",
            "closedAt": "2022-12-20T13:49:52Z",
            "url": "https://github.com/supabase/gotrue/issues/868",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5RBfPe",
                    "body": "I'm getting this:\r\n\r\nhttps://spot-monitoring.vercel.app/?error=server_error&error_description=Database+error+saving+new+user\r\n\r\nI have a local app which uses GitHub, but I'm not able to reproduce your issue.",
                    "author": {
                        "login": "j4w8n"
                    },
                    "createdAt": "2022-11-26T12:03:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/868#issuecomment-1359344606"
                },
                {
                    "id": "IC_kwDOEKipmc5RBfPi",
                    "body": "The server_error is what I'm talking about, there doesn't seem to be any client involvement in the error.",
                    "author": {
                        "login": "deve-sh"
                    },
                    "createdAt": "2022-11-26T12:52:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/868#issuecomment-1359344610"
                },
                {
                    "id": "IC_kwDOEKipmc5RBfPl",
                    "body": "Did you get this resolved?",
                    "author": {
                        "login": "j4w8n"
                    },
                    "createdAt": "2022-12-02T10:11:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/868#issuecomment-1359344613"
                },
                {
                    "id": "IC_kwDOEKipmc5RBo3l",
                    "body": "@deve-sh [Please open a support ticket](https://app.supabase.com/support/new) if you are facing an issue on a live application and you're not able to figure out the cause of the issue.\r\n\r\nRegarding this specific issue, it may be worth checking your project's [Authentication URL Configuration](https://app.supabase.com/project/_/auth/url-configuration) for any errors.\r\n\r\nI'll close this issue but feel free to comment further.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-20T13:49:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/868#issuecomment-1359384037"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5Z6B6M",
            "number": 870,
            "title": "Email templates from local server not retrievable",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIt is not possible to retrieve mail templates from a server with a local ip adress.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Set env variable `GOTRUE_MAILER_TEMPLATES_CONFIRMATION` to a local ip or domain that gets resolved to a local ip\r\n2. Start docker container\r\n3. Register a new user\r\n4. See default template used and error in console\r\n```\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n{\"level\":\"error\",\"msg\":\"Cancelled attempted request to ip in private range\",\"time\":\"2022-12-17T12:27:16Z\",\"transport\":\"local_blocker\"}\r\n2022/12/17 12:27:16 Error loading template from /templates/email/comfirmation.html: Get \"https://www.example.com/templates/email/comfirmation.html\": context canceled\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe template is retrieved and sent out.\r\n\r\n## Screenshots\r\n\r\nNot applicable.\r\n\r\n## System information\r\n\r\nsupabase/gotrue:v2.19.4@sha256:c53237780a3669e39aef34de9c82161e289c29ddcded5ae3018f0039f7b02875\r\n\r\n## Additional context\r\n\r\nRelevant issue from the netlify repository https://github.com/netlify/gotrue/issues/324. Not sure if they will fix this anytime soon, could this be fixed in this fork instead?\r\n",
            "author": {
                "login": "jojomatik"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-22T18:41:13Z",
            "closedAt": "2023-07-31T17:28:16Z",
            "url": "https://github.com/supabase/gotrue/issues/870",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Riwl6",
                    "body": "Hey @jojomatik, are you running gotrue in a docker environment? If you are, then this issue isn't related to gotrue but it's because localhost in a docker environment refers to the container's localhost and not the docker host. In order to connect to the docker host from the container, you will need to set the environment variable to point to `http://host.docker.internal:MYPORT/path/to/email/template`  ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-12-30T19:37:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1368066426"
                },
                {
                    "id": "IC_kwDOEKipmc5RixZn",
                    "body": "Hi @kangmingtay, yes I'm running in a docker environment and want to access the template. The template is not on the docker host but on another docker container with a local IP (`192.168.x.y`). I'm not sure what `host.docker.internal` resolves to but it seems like gotrue is blocking any LAN-IPs, so I don't actually think this will help. Have you tried it?",
                    "author": {
                        "login": "jojomatik"
                    },
                    "createdAt": "2022-12-30T19:49:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1368069735"
                },
                {
                    "id": "IC_kwDOEKipmc5Ri8b7",
                    "body": "Hey @jojomatik, is your other docker container running in the same docker network as the gotrue container? I haven't tried to reproduce it but it would be great if you can provide a reproducible example so i can take a look at it when i'm free. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-12-30T22:53:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1368114939"
                },
                {
                    "id": "IC_kwDOEKipmc5UvUQr",
                    "body": "I am getting the same issue. I think it stems from the block list listed (followed up the chain of dependencies) to here:\r\n\r\n[Netlify http commons](https://github.com/netlify/netlify-commons/blob/main/http/http.go)\r\n\r\n`var privateIPBlocks []*net.IPNet\r\n\r\nfunc init() {\r\n\tfor _, cidr := range []string{\r\n\t\t\"127.0.0.0/8\",    // IPv4 loopback\r\n\t\t\"10.0.0.0/8\",     // RFC1918\r\n\t\t\"100.64.0.0/10\",  // RFC6598\r\n\t\t\"172.16.0.0/12\",  // RFC1918\r\n\t\t\"192.0.0.0/24\",   // RFC6890\r\n\t\t\"192.168.0.0/16\", // RFC1918\r\n\t\t\"169.254.0.0/16\", // RFC3927\r\n\t\t\"::1/128\",        // IPv6 loopback\r\n\t\t\"fe80::/10\",      // IPv6 link-local\r\n\t\t\"fc00::/7\",       // IPv6 unique local addr\r\n\t} {\r\n\t\t_, block, _ := net.ParseCIDR(cidr)\r\n\t\tprivateIPBlocks = append(privateIPBlocks, block)\r\n\t}\r\n}`\r\n\r\n",
                    "author": {
                        "login": "arcanechimp"
                    },
                    "createdAt": "2023-02-08T00:20:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1421689899"
                },
                {
                    "id": "IC_kwDOEKipmc5WHtR5",
                    "body": "Same issue. It seems really unneccessary to have to host these templates outside the docker environment...\r\n\r\n@kangmingtay can we reopen this please?",
                    "author": {
                        "login": "profiluefter"
                    },
                    "createdAt": "2023-02-25T01:18:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1444861049"
                },
                {
                    "id": "IC_kwDOEKipmc5dFQu7",
                    "body": "@profiluefter / @kangmingtay - Running into this same issue accessing the template via a kubernetes service dns, which resolves to an ip in the `172.16.0.0/12` range. I don't really want my templates accessible to world.",
                    "author": {
                        "login": "kevinmlong"
                    },
                    "createdAt": "2023-05-24T17:24:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1561660347"
                },
                {
                    "id": "IC_kwDOEKipmc5daDSh",
                    "body": "> Hey @jojomatik, is your other docker container running in the same docker network as the gotrue container? I haven't tried to reproduce it but it would be great if you can provide a reproducible example so i can take a look at it when i'm free.\r\n\r\nYes, I have all containers running in the same compose stack and in the same docker network. As a workaround I currently access the templates via the public IP address. It works but it shouldn't be that complicated. And as @kevinmlong mentions, you generally don't want your templates just publically available.\r\n\r\n\r\n> I am getting the same issue. I think it stems from the block list listed (followed up the chain of dependencies) to here:\r\n> \r\n> [Netlify http commons](https://github.com/netlify/netlify-commons/blob/main/http/http.go)\r\n> \r\n> `var privateIPBlocks []*net.IPNet\r\n> \r\n> func init() { for _, cidr := range []string{ \"127.0.0.0/8\", // IPv4 loopback \"10.0.0.0/8\", // RFC1918 \"100.64.0.0/10\", // RFC6598 \"172.16.0.0/12\", // RFC1918 \"192.0.0.0/24\", // RFC6890 \"192.168.0.0/16\", // RFC1918 \"169.254.0.0/16\", // RFC3927 \"::1/128\", // IPv6 loopback \"fe80::/10\", // IPv6 link-local \"fc00::/7\", // IPv6 unique local addr } { _, block, _ := net.ParseCIDR(cidr) privateIPBlocks = append(privateIPBlocks, block) } }`\r\n\r\nI found that snippet as well while researching, I agree in that I believe that this is the relevant block list.",
                    "author": {
                        "login": "jojomatik"
                    },
                    "createdAt": "2023-05-29T13:00:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1567110305"
                },
                {
                    "id": "IC_kwDOEKipmc5g_LUE",
                    "body": "Hi @hf, is this fixed now or are there any outstanding tasks to be completed? I don't have enough time right now to test myself, but would still be curious. Also we could close the issue if it's fixed",
                    "author": {
                        "login": "jojomatik"
                    },
                    "createdAt": "2023-07-08T11:52:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1627174148"
                },
                {
                    "id": "IC_kwDOEKipmc5i3-rH",
                    "body": "hey everyone, this seems to be resolved already but feel free to reopen it if anyone's still running into the same issue!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:28:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/870#issuecomment-1658841799"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5aESd8",
            "number": 872,
            "title": "Support for SAML",
            "body": "Saw some discussions and merges on this but couldn't find whats missing to support SAML and if it exists how to use it, or what is left to be able to use it.\r\n\r\n",
            "author": {
                "login": "omrihaber"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-26T16:29:43Z",
            "closedAt": "2023-01-20T08:58:30Z",
            "url": "https://github.com/supabase/gotrue/issues/872",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5TVSdp",
                    "body": "Hey @omrihaber,\r\n\r\nThanks for the query - please see #244 for updates! Going to close this issue and post an update there\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-20T08:58:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/872#issuecomment-1398089577"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5aF92i",
            "number": 873,
            "title": "Token endpoint grant refresh_token should read from HttpOnly cookie",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nThe GoTrue password grant type flow sets two HttpOnly cookies, one each for the `access_token` and the `refresh_token`. A custom API endpoint can subsequently read the `access_token` cookie and verify the validity of the token without the client having sent it explicitly as a header bearer token. As a result, the client does not have to save the `access_token` in local storage. This helps against XSS attacks because when the `access_token` is only stored as an HttpOnly cookie, it cannot be read by client side script code.\r\n\r\nWhilst this works, one piece of the puzzle is missing: the `refresh_token` grant type flow expects the refresh_token as a parameter in the body of the POST request. This means that the client must store the `refresh_token` in either memory (too fleeting) or in local storage.\r\n\r\nHowever in the case of a web client, the token endpoint also receives the `refresh_token` HttpOnly cookie, in which case it is not necessary to send the `refresh_token` in the body of the POST request.\r\n\r\n## Describe the solution you'd like\r\n\r\nThe fact that the HttpOnly cookies are set should be properly taken advantage of.\r\nThe token endpoint implementing the `refresh_token` grant should check the `refresh_token` HttpOnly cookie, in which case the body `refresh_token` parameter can be ignored and, in fact, be optional.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThe alternative is to store the `refresh_token` in local storage, which can increase the severity of an XSS attack (i.e. someone could steal the refresh_token).\r\n\r\n\r\n",
            "author": {
                "login": "wmaurer"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-27T07:18:16Z",
            "closedAt": "2023-02-02T16:20:57Z",
            "url": "https://github.com/supabase/gotrue/issues/873",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5USBIk",
                    "body": "Hi @wmaurer, the HttpOnly cookies are only there for backward compatibility only and are not consumed by GoTrue. This is because GoTrue is used in non-browser environments too which do not have browser-like cookie handling.\r\n\r\nI'll close this issue for now.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-02-02T16:20:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/873#issuecomment-1414009380"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5aK8-W",
            "number": 876,
            "title": "signInWithOtp - First OTP always expired",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen I use `signInWithOtp`, using an actual OTP and not the magic link, the first code is almost always expired when I use it in `verifyOtp`. Only when I request a new code (using `signInWithOtp` again), do I get a working one. It happens in development and production.\r\n\r\n## To Reproduce\r\n\r\n1. Sign in with OTP (this happens inside a modal dialog):\r\n\r\n``` \r\nconst { error } = await supabaseClient.auth.signInWithOtp({\r\n    email: email,\r\n    options: { data: { ...Object.fromEntries(gameStats) } }\r\n});\r\n```\r\n\r\n2. Verify the OTP (this happens in another modal):\r\n\r\n```\r\nconst { error } = await supabaseClient.auth.verifyOtp({ email: emailToVerify, token: otp, type: \"magiclink\" });\r\n```\r\n\r\n3. The verify method throws an error (expired OTP) -> repeat steps 1 & 2 in the exact same way, now it works (the second OTP is valid).\r\n\r\n## Expected behavior\r\n\r\nThe first OTP should work.\r\n\r\n## System information\r\n\r\n- OS: Windows\r\n- Browser: Chrome\r\n- Versions: \r\n- \"@supabase/auth-helpers-nextjs\": \"^0.5.2\"\r\n- \"@supabase/auth-helpers-react\": \"^0.3.1\"\r\n- \"@supabase/supabase-js\": \"^2.2.1\"\r\n\r\n## Additional context\r\n\r\nI'm using React + NextJS together with Supabase's helper packages.\r\n",
            "author": {
                "login": "florianwalther-private"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-28T13:54:23Z",
            "closedAt": "2023-02-15T03:58:00Z",
            "url": "https://github.com/supabase/gotrue/issues/876",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5RiwHL",
                    "body": "Hi @florianwalther-private, this is because if a user invokes `signInWithOtp` for the first time, the \"type\" used should be \"signup\" instead of \"magiclink\". Currently, the workaround for this would be to do this:\r\n\r\n```\r\n// try with type: magiclink first\r\ntry {\r\n  const { error } = await supabaseClient.auth.verifyOtp({ email: emailToVerify, token: otp, type: \"magiclink\" });\r\n  if (error) throw error\r\n} catch (error) {\r\n  // if there's an error, then try type: signup since it could be the user's first time calling `signInWithOtp` \r\n  const { error } = await supabaseClient.auth.verifyOtp({ email: emailToVerify, token: otp, type: \"signup\" });\r\n}\r\n```\r\n\r\nWe do plan to change this behaviour in the future so this workaround isn't necessary by introducing a generic type for verifying email OTPs regardless of whether the user exists or not. But until that lands, you'll need to handle the error returned for now. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-12-30T19:31:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1368064459"
                },
                {
                    "id": "IC_kwDOEKipmc5Ri2gP",
                    "body": "Thank you for the clarification. Please implement this generic identifier!\r\n\r\nBy the way, is it normal that the old OTP is still valid after calling `signInWithOtp` a second time (with `shouldCreateUser: false`)?",
                    "author": {
                        "login": "florianwalther-private"
                    },
                    "createdAt": "2022-12-30T21:07:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1368090639"
                },
                {
                    "id": "IC_kwDOEKipmc5Ri8Xm",
                    "body": "@florianwalther-private hmm can you provide more details how that happens?\n\nIf you call `signInWithOtp` for the first time with `shouldCreateUser: false`, then no user will be created if the user doesn't exist yet so there won't be an OTP sent out. \n\nSetting the `shouldCreateUser` param just prevents the user from being created. If you called `signInWithOtp` before that and a user is created already, then calling it again with the param set to false won't do anything.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2022-12-30T22:51:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1368114662"
                },
                {
                    "id": "IC_kwDOEKipmc5RjPd-",
                    "body": "@kangmingtay I use `signInWithOtp` (with `shouldCreateUser: true`) to sign up a user and `signInWithOtp` with `shouldCreateUser: false` as the \"resend verification email\" button because you don't provide this feature out of the box.\r\nProblem is, the 2nd OTP doesn't invalidate the first one (and I'm not sure if it should)",
                    "author": {
                        "login": "florianwalther-private"
                    },
                    "createdAt": "2022-12-31T09:48:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1368192894"
                },
                {
                    "id": "IC_kwDOEKipmc5SD_a4",
                    "body": "@florianwalther-private Thanks Florian for the quick reply, Kindly help clarify this for me...A user signs up using \r\nconst { error, data } = await supabase.auth.signUp({\r\n      email: values.email,\r\n      password: values.password,\r\n    }) \r\na confirmation email is sent to the email provided with a 6 digit token which the new user tries to verify using \r\n const { data } = await supabase.auth.verifyOtp({\r\n        email,\r\n        token: otp.join(\"\").toString(),\r\n        type: \"signup\",\r\n      }) \r\nand the user gets a token expired, how do I work around the issue? since I'm not using magic links",
                    "author": {
                        "login": "alphakex2"
                    },
                    "createdAt": "2023-01-10T06:07:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1376777912"
                },
                {
                    "id": "IC_kwDOEKipmc5VRvFi",
                    "body": "hey @florianwalther-private, the generic identifier has been implemented since this release (v2.40.3) and we'll be looking to roll it out to all projects on Supabase soon. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-15T03:54:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1430712674"
                },
                {
                    "id": "IC_kwDOEKipmc5VRw2C",
                    "body": "hi @alphakex2, you can do a couple of sanity checks on your end:\r\n1. Check that the value of `otp.join(\"\").toString()` matches the OTP sent in the email\r\n2. Check your project's auth logs and inspect the `/verify` routes to see if your email client has accidentally prefetched the email link sent in your email. \r\n\r\nIf you're still facing issues with this, please contact us at support through the dashboard. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-15T03:58:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1430719874"
                },
                {
                    "id": "IC_kwDOEKipmc5bTyEP",
                    "body": "@kangmingtay hey, following up on this, as I've seem to find out about the same issue happening to all my new clients. \r\n\r\n1) was the generic identifier implemented? I don't see any mention of one in the docs. \r\n\r\n2) the highest NPM package version goes up to v2.21 as of the time of this writing. What package did you mean by v2.40? \ud83d\ude4f",
                    "author": {
                        "login": "altryne"
                    },
                    "createdAt": "2023-05-02T18:02:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1531912463"
                },
                {
                    "id": "IC_kwDOEKipmc5bT88q",
                    "body": "Ok found it. (it was https://github.com/supabase/gotrue/pull/885 )\r\n\r\nThis pull requests introduces a generic identifier called `email` that works for both new and existing users, without the need for the above workaround. \r\n\r\nIt's not documented yet (@kangmingtay where whould I open a ticket for documentation?) \ud83d\ude4f \r\n\r\nTo solve the above, replace `await supabaseClient.auth.verifyOtp({ email: emailToVerify, token: otp, type: \"magiclink\" });` with `await supabaseClient.auth.verifyOtp({ email: emailToVerify, token: otp, type: \"email\" });` and it should work for both new and existing customers \r\n",
                    "author": {
                        "login": "altryne"
                    },
                    "createdAt": "2023-05-02T18:33:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/876#issuecomment-1531957034"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5aNuQH",
            "number": 877,
            "title": "Rename Azure to Microsoft Account?",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIs the Azure integration the same as what other providers call \"Microsoft Account\"? For example Auth0 has this page: \r\nhttps://marketplace.auth0.com/integrations/microsoft-account-social-connection\r\n\r\n## Describe the solution you'd like\r\n\r\nIf so, can we use the proper name \"Microsoft Account\" and logo? In the general public almost no one knows that Azure is, nor they are familiar with the logo especially.\r\n\r\nHow it should look:\r\n\r\n<img width=\"381\" alt=\"image\" src=\"https://user-images.githubusercontent.com/494223/209931045-7e881e90-b648-46f1-83b4-4767c0049d1e.png\">\r\n\r\n",
            "author": {
                "login": "hyperknot"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-29T09:22:05Z",
            "closedAt": "2023-02-08T05:47:13Z",
            "url": "https://github.com/supabase/gotrue/issues/877",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5UwsLf",
                    "body": "Hey Hyperknot,\r\n\r\nThanks for pointing this out! AFAIK, applications make use of Azure Active Directory for OAuth sign ins so they should generally be the same. Agree that the general population might not be as familiar with Azure - not sure about the developer population though. \r\n\r\nAs this would require renaming across the board it might take some time before we can get to this  - I'm going to close this issue for now but will open an internal ticket to track this.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-08T05:47:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/877#issuecomment-1422050015"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5aRkRv",
            "number": 879,
            "title": "Passkey support",
            "body": "Sign in with passkeys\n[resources](https://fidoalliance.org/passkeys/)",
            "author": {
                "login": "felixb1010"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-15T00:18:19Z",
            "closedAt": "2023-01-20T08:48:49Z",
            "url": "https://github.com/supabase/gotrue/issues/879",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5RiSdW",
                    "body": "Additional resources explaining the concept of `passkeys` very well and showcasing which services already support passkeys as a form of authentication:\r\n- [passkeys.io](https://www.passkeys.io/)\r\n- [Passkeys Directory](https://passkeys.directory/)",
                    "author": {
                        "login": "matthewmorek"
                    },
                    "createdAt": "2022-12-29T18:31:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/879#issuecomment-1367942998"
                },
                {
                    "id": "IC_kwDOEKipmc5TVQTP",
                    "body": "Hey all, \r\n\r\nThis should come together with Webauthn support - please track #92 for updates on both Webauthn (MFA) and Passkeys",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-01-20T08:48:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/879#issuecomment-1398080719"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5aRkjR",
            "number": 880,
            "title": "Create a `supabase.auth.admin.getUserByEmail` function",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nOn server-side, I want to check whether a user with a certain email exists before doing a signup. Since for safety reasons, signups on client side return fake \"success\" data, even though the user already signed up with this email. (https://github.com/supabase/supabase-js/issues/296)\r\n\r\n## Describe the solution you'd like\r\n\r\nI would like to have an additional method to not only list all users and get one by Id, but also get one by email.\r\nSo there is `supabase.auth.admin.getUserById(1)` but not `getUserByEmail('example@example.com')`\r\n\r\n## Describe alternatives you've considered\r\n\r\n- Using `listUsers()`, pretty inefficient but would do the trick\r\n- Signing up a user on the client \r\n",
            "author": {
                "login": "madebyfabian"
            },
            "state": "OPEN",
            "createdAt": "2022-12-11T14:40:15Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/880",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5RiSqK",
                    "body": "Hey yes this is a good suggestion. Though, we would probably use something like `listIdentitiesForEmailAddress` since email addresses do not always uniquely identify users.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-12-30T14:18:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/880#issuecomment-1367943818"
                },
                {
                    "id": "IC_kwDOEKipmc5YcuB7",
                    "body": "Hey, I am a new comer here, can I pick up this task?",
                    "author": null,
                    "createdAt": "2023-03-25T21:13:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/880#issuecomment-1483923579"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhsUm",
                    "body": "Hey @toff26,\r\n\r\nSorry for the delayed reply - do feel free to take a stab at it and let us know if there are any queries. You'll need to update both `supabase/gotrue-js` and `supabase/supabase-js`\r\n\r\nThanks!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-04-10T16:06:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/880#issuecomment-1502004518"
                },
                {
                    "id": "IC_kwDOEKipmc5lwuU1",
                    "body": "@J0  @hf  i don't see an open PR shall i pick this up?\r\nI see we need to add \r\n\r\n- GET /admin/users/{email} endpoint in this repo\r\n- modify supabase/gotrue-js to use the same\r\n- modify supabase/supabase-js to use the updated method from gotrue-je\r\nlet me know if anything else i need to keep in mind or i'm on the right path",
                    "author": {
                        "login": "mahendraHegde"
                    },
                    "createdAt": "2023-09-05T20:31:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/880#issuecomment-1707271477"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5aSIB1",
            "number": 881,
            "title": "Feature Request: Add Logto OIDC Provider Functionality",
            "body": "# Feature Request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\n[Logto](https://github.com/logto-io/logto) is not listed as one of the OIDC-based providers. Custom provider implementation has yet to be implemented into Supabase, so I am making this request as providers must be added manually, and I am unsure how best to do this. Logto is a fairly new FOSS OIDC-based identity / IAM server that I am interested in using rather than the default Supabase Authentication functionality. However, I would like to use the other features of Supabase after authenticating through Logto.\r\n\r\n## Describe the solution you'd like\r\n\r\nAdding Logto to the list of providers, potentially by modifying an existing provider solution (may be similar to the [Keycloak implementation](https://supabase.com/docs/guides/auth/auth-keycloak)).  `GoTrueClient.ts#L595` seems to show what inputs are necessary.\r\n\r\n## Describe alternatives you've considered\r\n\r\nI've read several supabase and gotrue-js issues and PR's, and none of them have shown how to properly implement a custom OIDC provider. Potentially something like this: [PR 207 Reference](https://github.com/supabase/gotrue-js/pull/207).\r\n\r\n## Additional context\r\n\r\nNone\r\n",
            "author": {
                "login": "About7Deaths"
            },
            "state": "OPEN",
            "createdAt": "2022-08-19T21:51:25Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/881",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5a-to2",
            "number": 888,
            "title": "Custom user id generation (e.g. ulid or entity type prefix)",
            "body": "# Feature request\r\n\r\nWe have a convention of prefixing ids based on the type of entity (see Stripe API) and would like to thus generate our user ids with `usr_` such that they look like `usr_xxxxxx`. Further more we prefer `ulid` rather than `uuid`, which is not only more compact (when represented as string, not binary) but also contains a timestamp. \r\n\r\nThus we'd love a way to customize how user id is generated. Perhaps with postgres function that gotrue calls out to generate ids? It can still be of `uuid` type as I'm sure updating database schema from `uuid` to `varchar` can be tricky. However even the ability to generate `ulid` style `uuid` (see https://www.ulidtools.com/) is already a huge boon, then we can always add a view / generated column to prefix the `usr_` that we want in our application\r\n",
            "author": {
                "login": "tonyxiao"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-09T21:58:59Z",
            "closedAt": "2023-02-02T15:58:04Z",
            "url": "https://github.com/supabase/gotrue/issues/888",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5SHq5p",
                    "body": "I believe you will need to request a gotrue change for this.  Gotrue does not use the database to generate the UUID, but does it in Go code...  https://github.com/supabase/gotrue/blob/a4a96c0bf5e09b80fbe345e678a859f07948b9d1/models/user.go#L70\r\n\r\n",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-01-10T19:26:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/888#issuecomment-1377742441"
                },
                {
                    "id": "IC_kwDOEKipmc5SH9jD",
                    "body": "https://github.com/supabase/gotrue#post-put-adminusersuser_id what about this one? It seems that there should be some ability to provide an id when creating user \r\n![CleanShot 2023-01-10 at 21 38 20@2x](https://user-images.githubusercontent.com/696842/211657193-d6907f4c-8426-4ce3-8497-20af4f2eb341.png)\r\n",
                    "author": {
                        "login": "tonyxiao"
                    },
                    "createdAt": "2023-01-10T20:38:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/888#issuecomment-1377818819"
                },
                {
                    "id": "IC_kwDOEKipmc5SIFlW",
                    "body": "The ultimate authority will be a Supabase dev,\r\nBut I believe the way that call works is if you provide a UUID then it will UPDATE that user if it finds it, otherwise error.\r\nIf you don't provide a UUID then it will create a new user with a UUID gotrue generates.\r\n\r\nThat is how the javascript code calls it for createUser and updateUser.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-01-10T21:05:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/888#issuecomment-1377851734"
                },
                {
                    "id": "IC_kwDOEKipmc5SL7xn",
                    "body": "How do I invoke the right call (with custom uuid) when using supabase-js auth? Don't see a corresponding call whether in the client or admin sdk",
                    "author": {
                        "login": "tonyxiao"
                    },
                    "createdAt": "2023-01-11T14:46:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/888#issuecomment-1378860135"
                },
                {
                    "id": "IC_kwDOEKipmc5UR4FX",
                    "body": "Hey @tonyxiao,\r\n\r\nIt's unlikely we'll be supporting this as it creates quite a bit of complexity. We use v4 UUIDs exclusively both because they can be generated in the database fairly quickly. We also will not be supporting UUIDs generated from the outside as this can lead to some interesting security problems.\r\n\r\nIt may be the case that we do add some form of object tagging or developer metadata (similar to how Stripe and AWS do it) to help you identify objects easily. We don't have a timeline on this, though I suspect with our current SSO effort this may start appearing in some aspects.\r\n\r\nI'll close this issue for now.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-02-02T15:58:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/888#issuecomment-1413972311"
                },
                {
                    "id": "IC_kwDOEKipmc5WgoJo",
                    "body": "@hf the uuids are not generated in database, they are generated directly in go though.\r\n\r\n```\r\n// NewUser initializes a new user from an email, password and user data.\r\nfunc NewUser(phone, email, password, aud string, userData map[string]interface{}) (*User, error) {\r\n\tid, err := uuid.NewV4()\r\n```\r\n\r\nWhat are the security issue you see for an externally generated uuid? Given that this is the admin endpoint, not the client side endpoint where user signs up. ",
                    "author": {
                        "login": "tonyxiao"
                    },
                    "createdAt": "2023-03-02T07:06:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/888#issuecomment-1451393640"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cWgWX",
            "number": 896,
            "title": "Confirmation of E-Mail Change has no Effect",
            "body": "# Bug report\r\n\r\nUsing the E-Mail provider, I cannot change the email that is used to sign-in the user. A mail with a confirmation link is sent, but this link does not lead to a change of the auth email address. It does sign out the user, but the old email address needs to be used to sign in.\r\n\r\n## To Reproduce\r\n\r\nSee also the screen recording below.\r\n\r\n1. Create a user with email + password\r\n2. Perform an update with `supabase.auth.updateUser({ email: newEmail })`\r\n3. The user will receive an email with the confirmation link. Press the link.\r\n4. You will be redirected to the frontend-URL and signed out.\r\n5. \u26a1\ufe0f you have to sign in with the old email address\r\n\r\n## Expected behavior\r\n\r\nThe new and confirmed email should work for sign in.\r\n\r\n## Screenshots\r\n\r\nhttps://user-images.githubusercontent.com/29344072/213483584-01b1ff7b-1a2b-40a0-aaa7-54d42d675e5e.mov\r\n\r\n## System information\r\n\r\n- Supabase CLI v1.33\r\n- Supabase JS 2.4.0\r\n\r\nI have the same behavior in my deployed instance.\r\n\r\n",
            "author": {
                "login": "ccssmnn"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-19T15:33:33Z",
            "closedAt": "2023-02-02T19:14:52Z",
            "url": "https://github.com/supabase/gotrue/issues/896",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5UFL2i",
                    "body": "hey @ccssmnn, i'm not able to reproduce the bug described above, but you should be able to take a look at your project's logs to see what's causing the error:\r\n\r\n* Auth logs: https://app.supabase.com/project/_/logs/auth-logs\r\n* Postgres logs: https://app.supabase.com/project/_/logs/postgres-logs",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-01-31T16:00:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/896#issuecomment-1410645410"
                },
                {
                    "id": "IC_kwDOEKipmc5US4xL",
                    "body": "@kangmingtay thanks for pointing me to the logs. The Auth logs show the failed `/verify` request. The Postgres logs are pointing me to **my** error within a trigger (`after update on auth.users`).",
                    "author": {
                        "login": "ccssmnn"
                    },
                    "createdAt": "2023-02-02T19:14:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/896#issuecomment-1414237259"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cZn7T",
            "number": 897,
            "title": "Can't verify email change OTP code - \"User not found\"",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nAfter creating a user with the **signInWithOtp** method using a phone and then adding an email for that user using **updateUser**, I get a **User not found** error while calling **verifyOTP** method with the email added before.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create a user using `SupabaseClient.auth.signInWithOtp(phone: \"XXXXXXXX\");`\r\n2. Verify the phone with `SupabaseClient.auth.verifyOTP( phone: \"XXXXXXXX\", token: \"XXXX\", type: OtpType.sms);`\r\n3. Add an email for the user calling `SupabaseClient.auth.updateUser(UserAttributes(phone: \"XXXXXXXX\", email: \"XXX@XXX.XX\"));`\r\n4. Verify the OTP code sent to the email for confirmation using `SupabaseClient.auth.verifyOTP(email: \"XXX@XXX.XX\", token: \"XXXX\", type: OtpType.emailChange);`\r\n5. See an exception `AuthException(message: User not found, statusCode: 404)`\r\n\r\n## Expected behavior\r\n\r\nAs the users table on the auth schema has **email_change** and **email_change_sent_at** values updated with the email added before, the verifyOTP has to find the email and respond successfully.\r\n\r\n## System information\r\n\r\n- Version of supabase_flutter: 1.2.2\r\n- Version of Flutter: 3.3.6\r\n\r\n## Additional context\r\n\r\nSometimes after updating the same email multiple times on the same user I could verify it successfully but only a few times.",
            "author": {
                "login": "nicolantean"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-12T18:02:37Z",
            "closedAt": "2023-03-22T03:11:05Z",
            "url": "https://github.com/supabase/gotrue/issues/897",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5T2t8Q",
                    "body": "Hi @dshukertjr @kangmingtay, we are a bit stuck with that. Do you have any news? Can we help with something? \r\n\r\nThanks for the hard work and the great tool!",
                    "author": {
                        "login": "mirland"
                    },
                    "createdAt": "2023-01-27T17:42:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1406852880"
                },
                {
                    "id": "IC_kwDOEKipmc5T7G4f",
                    "body": "Hey @nicolantean and @mirland, I've made a PR to fix this bug already. Thanks for reporting this!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-01-30T05:04:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1408003615"
                },
                {
                    "id": "IC_kwDOEKipmc5UErXs",
                    "body": "Thank you so much @kangmingtay for the fix! I've tried the same flow but it is still not working. What do I have to do to use the latest version of gotrue on my flutter project? Because I couldn't find the gotrue version that is using my project.",
                    "author": {
                        "login": "nicolantean"
                    },
                    "createdAt": "2023-01-31T14:56:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1410512364"
                },
                {
                    "id": "IC_kwDOEKipmc5UnN60",
                    "body": "Hi, @kangmingtay thanks for the fix! I'm currently testing it again and I'm having the same issue. How can I update supabase to fix the issue? Do you know if this fix has already been released on Supabase? I'm not finding documentation about it ",
                    "author": {
                        "login": "mirland"
                    },
                    "createdAt": "2023-02-06T18:37:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1419566772"
                },
                {
                    "id": "IC_kwDOEKipmc5XhwvY",
                    "body": "Hi @kangmingtay @dshukertjr, We have tested it again and it's still not working. Can you give me support? Should we do something on our side to upgrade this module in Supabase? I couldn't find any documentation about that.\r\nRight now it's blocking us from releasing our product to production. \r\n\r\nI also think this issue shouldn't be closed until the fix is validated, can you reopen it, please?\r\n\r\nThanks again for the hard work, great product, and for your effort!",
                    "author": {
                        "login": "mirland"
                    },
                    "createdAt": "2023-03-14T16:52:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1468468184"
                },
                {
                    "id": "IC_kwDOEKipmc5YFtet",
                    "body": "We tried it again, paused the server, and resumed it. After that, it starts working! We have tried it before but it didn't work, maybe the changes were not in prod. I don't know. We tested it a couple of times now and it seems to be working. Thanks, you can close the issue",
                    "author": {
                        "login": "mirland"
                    },
                    "createdAt": "2023-03-21T14:01:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1477892013"
                },
                {
                    "id": "IC_kwDOEKipmc5YJab8",
                    "body": "hey @mirland, apologies for the late reply but in the future, it would be great if you can contact us through [support](https://app.supabase.com/support/new). It's quite challenging to keep up with the github notifications and we have an excellent support team that helps with making sure that your questions get answered in time. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-22T03:12:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1478862588"
                },
                {
                    "id": "IC_kwDOEKipmc5YJany",
                    "body": "Yes, thanks! The support team gave me the suggestion! I tried it again and it worked Thanks again",
                    "author": {
                        "login": "mirland"
                    },
                    "createdAt": "2023-03-22T03:14:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/897#issuecomment-1478863346"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cZwJO",
            "number": 898,
            "title": "Support docker file-based secrets natively",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIt would be great if gotrue supported [Docker Secrets](https://docs.docker.com/engine/swarm/secrets), and `*_FILE` versions of the variables that hold secrets, so that we can pass a secrets file vs. the raw value:\r\n\r\n```yaml\r\nservices:\r\n  gotrue:\r\n    image: supabase/gotrue:v2.40.1\r\n    restart: unless-stopped\r\n    environment:\r\n      GOTRUE_JWT_SECRET: ${JWT_SECRET}\r\n      GOTRUE_JWT_SECRET_FILE: /run/secrets/jwt_secret\r\n    secrets:\r\n      - jwt_secret\r\n```\r\n\r\nThe current `GOTRUE_JWT_SECRET` variable could still be supported alongside `GOTRUE_JWT_SECRET_FILE`, and the same for all other secrets. This would let current code continue to work, but migrate to a more secure method of injecting secrets.\r\n\r\n## Describe the solution you'd like\r\n\r\nA clear and concise description of what you want to happen.\r\n\r\n## Describe alternatives you've considered\r\n\r\nentrypoint approach was rejected https://github.com/supabase/gotrue/pull/642\r\n\r\n## Additional context\r\n\r\nupstream issue https://github.com/supabase/supabase/issues/6014\r\n",
            "author": {
                "login": "sweatybridge"
            },
            "state": "OPEN",
            "createdAt": "2023-01-20T03:21:11Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/898",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5TZrr6",
                    "body": "GoTrue has just too many secrets, it doesn't make sense to do this for each one.\r\n\r\nI'm considering adding a `GOTRUE_ENV_SECRETS_FILE` in which you can specify secrets as environment variables:\r\n\r\n```\r\nGOTRUE_JWT_SECRET=abcdef\r\n```\r\n\r\nDoes that make sense?",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-01-21T12:21:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/898#issuecomment-1399241466"
                },
                {
                    "id": "IC_kwDOEKipmc5TZt1Z",
                    "body": "For secrets only used by gotrue, I think it's ok to store them in a single file. Since `JWT_SECRET` may be used by other services to decode auth token independently, it might be more useful to put it into a separate file. Also for secret rotation, it will be quite helpful to have them defined separately.\n\nIf there are too many secrets, I think it's ok to have one file for a start, then move specific ones out when the use case comes up. ",
                    "author": {
                        "login": "sweatybridge"
                    },
                    "createdAt": "2023-01-21T13:17:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/898#issuecomment-1399250265"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cZxEj",
            "number": 899,
            "title": "Can't change default email templates",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nSetting email templates from environment variables doesn't work in [self-hosted Docker Supabase](https://github.com/supabase/supabase/tree/master/docker)\r\nIn [self-hosted Docker Supabase](https://github.com/supabase/supabase/tree/master/docker), after setting `GOTRUE_MAILER_TEMPLATES_EMAIL_CHANGE` I'm still receiving the email with the [default template](https://github.com/supabase/gotrue/blob/master/mailer/template.go#L50-L54).\r\n\r\n## To Reproduce\r\n\r\n1. use [docker-comopse.yml](https://github.com/supabase/supabase/blob/master/docker/docker-compose.yml) to launch a self-hosted Supabase project\r\n2. set `GOTRUE_MAILER_TEMPLATES_EMAIL_CHANGE` to (as per [docs](https://supabase.com/docs/reference/tools/reference-auth#email-templates)):\r\n    ```\r\n    GOTRUE_MAILER_TEMPLATES_EMAIL_CHANGE: \"<h2>Confirm your Email</h2><p>Changing from {{ .Email }} to {{ .NewEmail }}:</p><p><a href='{{ .ConfirmationURL }}'>Change Email</a></p><p>Alternatively, enter the code: {{ .Token }}</p><p>Thanks</p>\"\r\n    ```\r\n4. change email using [update()](https://supabase.com/docs/reference/javascript/auth-update) from Nodejs client (after authenticating user with current email)\r\n5. still receive change email confirmation with [default template](https://github.com/supabase/gotrue/blob/master/mailer/template.go#L50-L54):\r\n    ```\r\n    Confirm email address change\r\n    Follow this link to confirm the update of your email address from [mycurrentemail@example.com](mailto:mycurrentemail@example.com) to [mynewemail@example.com](mailto:mynewemail@example.com):\r\n\r\n    [Change email address link] (I won't paste it here)\r\n\r\n    Alternatively, enter the code: <email-change-token>\r\n    ```\r\n\r\n**N.B.:** setting [custom subjects](https://supabase.com/docs/reference/tools/reference-auth#email) from environment variables works as expected. \r\n\r\n## Expected behavior\r\n\r\nReceive the email change confirmation with the custom template set from environment variables.\r\n\r\n## System information\r\n\r\n- OS: Ubuntu 20.04 LTS\r\n- Docker: Docker version 22.06.0-beta.0, build 3e9117b\r\n- docker-compose: Docker Compose version v2.6.1\r\n- supabase/gotrue: v2.5.21 (Docker image)\r\n- Version of supabase-js: 1.35.4\r\n- Version of Node.js: v16.14.1\r\n",
            "author": {
                "login": "Luca8991"
            },
            "state": "CLOSED",
            "createdAt": "2022-07-29T13:28:13Z",
            "closedAt": "2023-01-20T04:00:14Z",
            "url": "https://github.com/supabase/gotrue/issues/899",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5TUfz7",
                    "body": "Hey! Funny, I recently wrote a short experience report on self hosting supabase and mentioned the exact same problem here: https://github.com/supabase/supabase/discussions/8004\r\n\r\nI struggled, too - but it resolved itself. Look very carefully at the docs: The variable does not want plain html text, it needs a URL string which itself points to a an HTML template file. Try that and it works. Yes, it is a bit strange.",
                    "author": {
                        "login": "christianfl"
                    },
                    "createdAt": "2022-08-03T20:31:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1397882107"
                },
                {
                    "id": "IC_kwDOEKipmc5TUfz-",
                    "body": "I'm experiencing this same issue for Template without self-hosting. No matter what I set for the template I get the generic email. E.g.\r\n\r\n<img width=\"1470\" alt=\"Screen Shot 2022-08-07 at 11 41 53 AM\" src=\"https://user-images.githubusercontent.com/20894667/183304031-e449dbd3-4012-464e-bf80-0868954aa92b.png\">\r\n\r\n\r\n<img width=\"410\" alt=\"Screen Shot 2022-08-07 at 11 39 14 AM\" src=\"https://user-images.githubusercontent.com/20894667/183303931-19ebc15f-467d-4fca-85a7-0562a3e67eac.png\">\r\n\r\nI've clicked save and refreshed to ensure the changes were made.  These are my Auth Settings if it helps w/ troubleshooting\r\n\r\n<img width=\"1118\" alt=\"Screen Shot 2022-08-07 at 11 44 12 AM\" src=\"https://user-images.githubusercontent.com/20894667/183304133-a08d5126-7e96-4ce0-8bed-f2be5d6be7f3.png\">\r\n\r\n",
                    "author": {
                        "login": "WarrenBuffering"
                    },
                    "createdAt": "2022-08-07T17:45:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1397882110"
                },
                {
                    "id": "IC_kwDOEKipmc5TUf0B",
                    "body": "@AndrewTelkamp It's the same. U need to pass a URL and not html.",
                    "author": {
                        "login": "christianfl"
                    },
                    "createdAt": "2022-08-07T18:01:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1397882113"
                },
                {
                    "id": "IC_kwDOEKipmc5TUf0E",
                    "body": "I don't think that's the case @christianfl. I was definitely messing up the URL (needed to remove the brackets), but I am able to get inline HTML to work fine. For example, this works and I'm receiving an updated template now. \r\n\r\n```\r\n<h2>Reset FishTrax Password</h2>\r\n\r\n<p>Use the following link to reset your password:</p>\r\n<p><a href=\"http://gmail.com\">Reset Password</a></p>\r\n```\r\n\r\nI still have an issue because my product is a mobile application, and the href is being stripped out but I don't want to steal the original issue and have filed that under a [different bug ](https://github.com/supabase/supabase/issues/8137)",
                    "author": {
                        "login": "WarrenBuffering"
                    },
                    "createdAt": "2022-08-07T19:10:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1397882116"
                },
                {
                    "id": "IC_kwDOEKipmc5TUi3B",
                    "body": "The mailer config has be renamed in gotrue 2.40.1 to be clearer that it is expecting a url path.\r\n```yaml\r\n      GOTRUE_MAILER_URLPATHS_INVITE: ${MAILER_URLPATHS_INVITE}\r\n      GOTRUE_MAILER_URLPATHS_CONFIRMATION: ${MAILER_URLPATHS_CONFIRMATION}\r\n      GOTRUE_MAILER_URLPATHS_RECOVERY: ${MAILER_URLPATHS_RECOVERY}\r\n      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: ${MAILER_URLPATHS_EMAIL_CHANGE}\r\n```",
                    "author": {
                        "login": "sweatybridge"
                    },
                    "createdAt": "2023-01-20T04:00:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1397894593"
                },
                {
                    "id": "IC_kwDOEKipmc5j7Qdh",
                    "body": "Still struggling to change the templates to this day as there is very little documentation on it;\r\n\r\nI also note the env variables `GOTRUE_MAILER_TEMPLATES_EMAIL_CHANGE` exist but when I look them up in the codebase, they seem unused. is that normal?",
                    "author": {
                        "login": "Benjythebee"
                    },
                    "createdAt": "2023-08-13T22:19:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1676478305"
                },
                {
                    "id": "IC_kwDOEKipmc5j7TTk",
                    "body": "@Benjythebee they are used in the codebase of Gotrue. You won't find reference to these variables directly as they are handled by the [envconfig](https://github.com/kelseyhightower/envconfig) library. But you can see the struct with the `email_change` part of its name here https://github.com/supabase/gotrue/blob/4ff1fe058cfab418c445808004091e89dcf87124/internal/conf/configuration.go#L159, you can also see where [envconfig](https://github.com/kelseyhightower/envconfig) starts parsing the environment variable here https://github.com/supabase/gotrue/blob/4ff1fe058cfab418c445808004091e89dcf87124/internal/conf/configuration.go#L347\r\n\r\nAre you trying to change the templates in self-hosted or in the CLI setup? if self-hosted once you make the change you need to restart your docker containers for the change to take effect.",
                    "author": {
                        "login": "silentworks"
                    },
                    "createdAt": "2023-08-13T23:11:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1676489956"
                },
                {
                    "id": "IC_kwDOEKipmc5j7Wr3",
                    "body": "That makes a lot of sense, thanks a lot! Self-hosted, I think it was just a matter of understanding what to change and to what",
                    "author": {
                        "login": "Benjythebee"
                    },
                    "createdAt": "2023-08-14T00:07:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/899#issuecomment-1676503799"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cbwT-",
            "number": 901,
            "title": "[FEATURE-REQUEST] Allow the ability to add custom email and OTP combinations that do not trigger an email but log you in. For app submissions and UI testing purposes.",
            "body": "# Feature request\r\nI'm currently using sign-in with email but sending the user an OTP.\r\nFor testing, app submissions, and end-to-end tests, I would love a feature where we could specify an email and OTP combination in the dashboard that would log you in without actually sending you an email.\r\nWhen creating this pair, an auth user with that email would also be created for handling sessions.\r\n\r\nThis would be great for app submissions and UI testing for folks that have OTP as their only login method (like me). \r\n\r\n",
            "author": {
                "login": "mypalvikram"
            },
            "state": "OPEN",
            "createdAt": "2023-01-10T16:19:52Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/901",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5bYaGx",
                    "body": "Hey @mypalvikram, thanks for creating this issue, this is definitely on our roadmap but the team will be prioritising some other features before this one. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:26:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/901#issuecomment-1533125041"
                },
                {
                    "id": "IC_kwDOEKipmc5gu9Di",
                    "body": "hey @mypalvikram, we're working on a way to make this possible for sms OTPs for now - https://github.com/supabase/gotrue/pull/1166\r\n\r\nstay tuned!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-06T03:42:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/901#issuecomment-1622921442"
                },
                {
                    "id": "IC_kwDOEKipmc5gvXKu",
                    "body": "> hey @mypalvikram, we're working on a way to make this possible for sms OTPs for now - https://github.com/supabase/gotrue/pull/1166\n> \n> \n> \n> stay tuned!\n\nThanks for the update! \ud83d\udcaa\ud83c\udffd",
                    "author": {
                        "login": "mypalvikram"
                    },
                    "createdAt": "2023-07-06T05:46:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/901#issuecomment-1623028398"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cbwaz",
            "number": 902,
            "title": "Only Save New User ",
            "body": "Hi ,\r\nWhen I use signUp, it creates a new user, but deletes the current session and sign-in with the new user. \r\nI just want to create user.\r\n\r\nI modified gotrue_client.dart class\r\n\r\nFuture<AuthResponse> signUpMy({\r\n    String? email,\r\n    String? phone,\r\n    required String password,\r\n    String? emailRedirectTo,\r\n    Map<String, dynamic>? data,\r\n    String? captchaToken,\r\n  }) async {\r\n    assert((email != null && phone == null) || (email == null && phone != null),\r\n        'You must provide either an email or phone number');\r\n\r\n    late final Map<String, dynamic> response;\r\n\r\n    if (email != null) {\r\n      final urlParams = <String, String>{};\r\n\r\n      response = await _fetch.request(\r\n        '$_url/signup',\r\n        RequestMethodType.post,\r\n        options: GotrueRequestOptions(\r\n          headers: _headers,\r\n          redirectTo: emailRedirectTo,\r\n          body: {\r\n            'email': email,\r\n            'password': password,\r\n            'data': data,\r\n            'gotrue_meta_security': {'captcha_token': captchaToken},\r\n          },\r\n          query: urlParams,\r\n        ),\r\n      );\r\n    } else if (phone != null) {\r\n      final body = {\r\n        'phone': phone,\r\n        'password': password,\r\n        'data': data,\r\n        'gotrue_meta_security': {'captcha_token': captchaToken},\r\n      };\r\n      final fetchOptions = GotrueRequestOptions(headers: _headers, body: body);\r\n      response = await _fetch.request('$_url/signup', RequestMethodType.post,\r\n          options: fetchOptions) as Map<String, dynamic>;\r\n    } else {\r\n      throw AuthException(\r\n          'You must provide either an email or phone number and a password');\r\n    }\r\n\r\n    final authResponse = AuthResponse.fromJson(response);\r\n\r\n    /*  final session = authResponse.session;\r\n    if (session != null) {\r\n      _saveSession(session);\r\n      _notifyAllSubscribers(AuthChangeEvent.signedIn);\r\n    } */\r\n\r\n    return authResponse;\r\n  }\r\n",
            "author": {
                "login": "yutech23"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-04T16:48:42Z",
            "closedAt": "2023-03-01T09:35:16Z",
            "url": "https://github.com/supabase/gotrue/issues/902",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRuUR",
                    "body": "> When I use signUp, it creates a new user, but deletes the current session and sign-in with the new user.\r\n\r\nhey @yutech23, what do you mean by this statement?\r\n\r\n> I just want to create user.\r\n\r\nhave you checked out the admin method for creating a new user?\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-15T03:47:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/902#issuecomment-1430709521"
                },
                {
                    "id": "IC_kwDOEKipmc5WYuO4",
                    "body": "Hey @yutech23,\r\n\r\nWanted to check in and see if all is going well - did you manage to find a workaround for your issue?\r\n\r\nLet us know!\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T04:26:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/902#issuecomment-1449321400"
                },
                {
                    "id": "IC_kwDOEKipmc5WZ9Gq",
                    "body": "> Hey @yutech23,\r\n> \r\n> Wanted to check in and see if all is going well - did you manage to find a workaround for your issue?\r\n> \r\n> Let us know! Jo\r\nThank you for asking again. I solved. I used : \r\n \r\nsupabase.auth.signInWithPassword(email: setEmail, password: setPassword);\r\n",
                    "author": {
                        "login": "yutech23"
                    },
                    "createdAt": "2023-03-01T09:11:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/902#issuecomment-1449644458"
                },
                {
                    "id": "IC_kwDOEKipmc5WaJ7_",
                    "body": "Glad to hear that you found a workaround! \r\n\r\nGoing to close for now but feel free to re-open if there are further issues :)\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T09:35:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/902#issuecomment-1449697023"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cbxFS",
            "number": 903,
            "title": "Create user with login instead of email",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nEmail shouldn't be a requirement. I'm building a website where email is optional.\r\n\r\n## Describe the solution you'd like\r\n\r\n```js\r\nconst { data, error } = await supabase.auth.signUp({\r\n  login: 'example',\r\n  password: 'example-password',\r\n})\r\n\r\nconst { data, error } = await supabase.auth.signIn({\r\n  login: 'example',\r\n  password: 'example-password',\r\n})\r\n```\r\n\r\n## Describe alternatives you've considered\r\n\r\nNone yet.\r\n",
            "author": {
                "login": "szmarczak"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-06T22:29:16Z",
            "closedAt": "2023-02-15T03:45:46Z",
            "url": "https://github.com/supabase/gotrue/issues/903",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5TWLVT",
                    "body": "A workaround would be to use a `no-reply` email under the project domain such as `username@noreply-user.myproject.com`, however this would disable the option of customizing the email.",
                    "author": {
                        "login": "szmarczak"
                    },
                    "createdAt": "2023-01-06T23:57:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/903#issuecomment-1398322515"
                },
                {
                    "id": "IC_kwDOEKipmc5TWLVb",
                    "body": "> A workaround would be to use a `no-reply` email under the project domain such as `username@noreply-user.myproject.com`, however this would disable the option of customizing the email.\r\n\r\nI think you'd be losing more than just customization; users won't be able to verify accounts/emails and won't be to reset reset password by email. ",
                    "author": {
                        "login": "hugonteifeh"
                    },
                    "createdAt": "2023-01-14T22:11:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/903#issuecomment-1398322523"
                },
                {
                    "id": "IC_kwDOEKipmc5VRuFW",
                    "body": "Hey @szmarczak, we don't plan on adding username-password sign ups as a login mechanism for gotrue. However, anonymous sign-ins (#68) is on the roadmap and that might help with your use case in the future. \r\n\r\nClosing this issue out since we won't be implementing this but feel free to reopen it or clarify if I've missed something.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-15T03:45:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/903#issuecomment-1430708566"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cby2L",
            "number": 904,
            "title": "LDAP Authentication",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI would like to have a custom authentication function when self-hosting. I was planning to use it in my organization, but they require LDAP Auth. It would be great to sign-in just the username, for example changing a little bit from the documentation:\r\n```js\r\nasync function signInWithEmail() {\r\n  const ldapAuthSuccess = await customSignInFunction(username, password)\r\n  if ( ldapAuthSuccess) {\r\n    const { data, error } = await supabase.auth.signInWithUsername({ 'username' : username })\r\n  } else {\r\n  // Return error\r\n }\r\n}\r\n```\r\n\r\nThis way the credential are verified by an external function. If that function is successful we can tell supabase to generate the JWT token just with the username without password ( or whatever field we prefer).\r\n\r\nFor reference, Laravel Sanctum, provide a similar functionality, where it is possibile to issue token just with user model.\r\nhttps://laravel.com/docs/9.x/sanctum#issuing-api-tokens\r\n```php\r\nuse App\\Models\\User;\r\nuse Illuminate\\Http\\Request;\r\nuse Illuminate\\Support\\Facades\\Hash;\r\nuse Illuminate\\Validation\\ValidationException;\r\n \r\nRoute::post('/sanctum/token', function (Request $request) {\r\n    $request->validate([\r\n        'email' => 'required|email',\r\n        'password' => 'required',\r\n        'device_name' => 'required',\r\n    ]);\r\n \r\n    $user = User::where('email', $request->email)->first();\r\n \r\n   // Custom auth logic\r\n    if (! $user || ! Hash::check($request->password, $user->password)) {\r\n        throw ValidationException::withMessages([\r\n            'email' => ['The provided credentials are incorrect.'],\r\n        ]);\r\n    }\r\n \r\n    // Issue token when successful custom login\r\n    return $user->createToken($request->device_name)->plainTextToken;\r\n});\r\n});\r\n```\r\n\r\nI'm willing to extend supabase, but I need to study a little more about the codebase. It will take time.",
            "author": {
                "login": "xluk9"
            },
            "state": "OPEN",
            "createdAt": "2022-10-30T10:42:13Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/904",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5eNcfA",
                    "body": "Could you elaborate more on what you need to do with LDAP? This is fairly uncommon nowadays, as most use cases can be covered by SSO with SAML (which is supported).",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:23:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/904#issuecomment-1580582848"
                },
                {
                    "id": "IC_kwDOEKipmc5jq3fZ",
                    "body": "I would like to authenticate via LDAP, given the LDAP settings in some conf file or ENV variables (hostname, cn....).\r\nMy organization has self-hosted Microsoft AD without SSO/SAML. How should I proceed?\r\n\r\nTo add to these, some users are from AD and some other are simple database users. How to proceed? That's why it is crucial that you provide API to do custom auth, as given by example with Laravel. \r\n\r\nMy current API works this way\r\n1. Authenticate through LDAP\r\n2. If it fails, then authenticate via database username/password.\r\n\r\nHow should I do it?",
                    "author": {
                        "login": "xluk9"
                    },
                    "createdAt": "2023-08-09T21:33:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/904#issuecomment-1672181721"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cb0ih",
            "number": 905,
            "title": "Universal single OTP verification method that works for new users and existing users.",
            "body": "# Feature request\r\n\r\nUniversal OTP verification call for **signup** and **magiclink** methods.\r\n\r\n`supabase.auth.verifyOtp({ email, token, type: 'signupandmagiclink'})`\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nAt the moment on your email providers settings if you have \"Confirm email\" toggled(which is default). On the first login attempt users will be sent \"Confirm your Signup\" email, the problem is that - that OTP only works with this method:\r\n`supabase.auth.verifyOtp({ email, token, type: 'signup'})`, because of that you will have to build 2 extra screens - one for users that want to create new account, one for verifying account creation OTP.\r\n\r\nIt's an extra unecessary logic that is not needed and could create confusion for users and developers, what if user forgets that he already created account, goes to \"create account\" screen and requests code, receives magic link code, but this time this magic link code no longer works for `type: 'signup'` and user will receive generic `OTP code is invalid or expired` error.\r\n\r\n## Describe the solution you'd like\r\n\r\nAll we need is a simple `verifyOtp()` method that works for both \"signup\" and \"magiclink\" codes.\r\n\r\n## Describe alternatives you've considered\r\n\r\nThis can be prevented by toggling `Confirm email` option to false in the auth provider settings, but:\r\n1. What if you want to verify email signups with passwords\r\n2. Developers might not know that they need to toggle it, because by definition OTP is email verification anyways?\r\n3. You still want to send the \"Confirm your signup\" email template with some \"Welcome to my app message\" instead \"here is your one time code\"\r\n\r\n## Additional context\r\n\r\nAlso, I noticed apart from \"signup\" and \"magiclink\" there is a \"recovery\" type, if you are using passwordless sign in, what are you exactly recovering?\r\n\r\n![Screenshot 2022-11-02 at 17 02 43](https://user-images.githubusercontent.com/20464922/199554286-0fb46d4f-c3a6-47ed-b801-f9487d41ef5d.png)\r\n\r\n",
            "author": {
                "login": "catdoglt"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-02T17:06:26Z",
            "closedAt": "2023-05-03T14:28:55Z",
            "url": "https://github.com/supabase/gotrue/issues/905",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5W8eq4",
                    "body": "It would be amazing to have this feature.",
                    "author": {
                        "login": "Lewitje"
                    },
                    "createdAt": "2023-03-07T19:17:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1458694840"
                },
                {
                    "id": "IC_kwDOEKipmc5W9Sy4",
                    "body": "I would love this feature too, but for now, here's a workaround which works for me:\r\n```\r\nconst loginResponse = await supabase.auth.verifyOtp({\r\n\temail: email.value,\r\n\ttoken: token.value,\r\n\ttype: 'magiclink',\r\n});\r\n\r\nif (loginResponse.error) {\r\n\tconst signupResponse = await supabase.auth.verifyOtp({\r\n\t\temail: email.value,\r\n\t\ttoken: token.value,\r\n\t\ttype: 'signup',\r\n\t});\r\n}\r\n```",
                    "author": {
                        "login": "petedavisdev"
                    },
                    "createdAt": "2023-03-07T21:38:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1458908344"
                },
                {
                    "id": "IC_kwDOEKipmc5bYbBL",
                    "body": "Hey @Lewitje, @petedavisdev  and @catdoglt, we have this already, you can use the `type: 'email'` which would cover both `magiclink` and `signup` verification types. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:28:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1533128779"
                },
                {
                    "id": "IC_kwDOEKipmc5b_tNs",
                    "body": "> Hey @Lewitje, @petedavisdev and @catdoglt, we have this already, you can use the `type: 'email'` which would cover both `magiclink` and `signup` verification types.\r\n\r\n@kangmingtay  Strange, I just hit this error in my development environment while on `@supabase/supabase-js@^2.21.0`\r\n\r\n\r\nAfter getting the code from the magic link email, we attempt to verify it like so:\r\n```typescript\r\nelse if (type === 'email') {\r\n        response = await supabase.auth.verifyOtp({\r\n          email: userEmail,\r\n          token: data.token,\r\n          type,\r\n        });\r\n      }\r\n\r\nif (response.error) throw response.error;\r\n```\r\n\r\n\r\nAnd then get the following error in the browser:\r\n<img width=\"369\" alt=\"Screenshot 2023-05-11 at 12 42 45 AM\" src=\"https://github.com/supabase/gotrue/assets/59102133/f5728c79-d350-4fba-853a-f6fcde5f7564\">\r\n\r\n\r\nFrom the screenshots below you can tell the access code matches the request payload:\r\n<img width=\"539\" alt=\"Screenshot 2023-05-11 at 12 42 11 AM\" src=\"https://github.com/supabase/gotrue/assets/59102133/dcaba06f-6f5e-45c2-affe-fece819c4580\">\r\n\r\n<img width=\"754\" alt=\"Screenshot 2023-05-11 at 12 40 16 AM\" src=\"https://github.com/supabase/gotrue/assets/59102133/86010164-e2bf-43ce-833f-e98d562c8c2e\">\r\n\r\n",
                    "author": {
                        "login": "IM-Deane"
                    },
                    "createdAt": "2023-05-11T06:46:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1543426924"
                },
                {
                    "id": "IC_kwDOEKipmc5b_zr0",
                    "body": "hi @IM-Deane, a quick sanity check would be to see if the `auth.users.confirmation_token` or `auth.users.recovery_token` columns are populated before you call the `verifyOtp` method. If you are calling the `signInWithOtp` method for a new user, the `confirmation_token` column should contain a value. If it's an existing user, the `recovery_token` column should contain a value. There are also the `confirmation_sent_at` and `recovery_sent_at` columns which you can check to see if the verification request is being made outside of the valid window. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-11T07:10:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1543453428"
                },
                {
                    "id": "IC_kwDOEKipmc5gCwT1",
                    "body": "@kangmingtay Hi, I read conversation from beginning because I was facing the same problem trying to verify OTP token I dont know why it was working but one day it didnt work, (to be exact just a day before a demo of my project LOL) and thank to this is working now \r\nconst verify = await supabaseclient.auth.verifyOtp({\r\n      email: email,\r\n      token: otp,\r\n      type: 'email',\r\n    });\r\n\r\n But why was it working? its very strange i mean im was using before  this const verify = await supabaseclient.auth.verifyOtp({\r\n      email: email,\r\n      token: otp,\r\n      type: 'magiclink',\r\n    });\r\nUnexpected right?",
                    "author": {
                        "login": "nestorbfgo"
                    },
                    "createdAt": "2023-06-28T12:45:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1611334901"
                },
                {
                    "id": "IC_kwDOEKipmc5gLACB",
                    "body": "@nestorbfgo it might have not worked if you were trying to verify a new user, which would have required you to set the type to `signup`. Before the `email` type was added, one typically had to use the `magiclink` type first, and then catch the error and try verifying again with the `signup` type.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-29T16:28:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1613496449"
                },
                {
                    "id": "IC_kwDOEKipmc5qyZrj",
                    "body": "> Hey @Lewitje, @petedavisdev and @catdoglt, we have this already, you can use the `type: 'email'` which would cover both `magiclink` and `signup` verification types.\r\n\r\noh, thank you for this reply! you saved me. I did not find it in code...",
                    "author": {
                        "login": "landsman"
                    },
                    "createdAt": "2023-11-02T21:58:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1791597283"
                },
                {
                    "id": "IC_kwDOEKipmc5rWVkR",
                    "body": "> > Hey @Lewitje, @petedavisdev and @catdoglt, we have this already, you can use the `type: 'email'` which would cover both `magiclink` and `signup` verification types.\r\n> \r\n> @kangmingtay Strange, I just hit this error in my development environment while on `@supabase/supabase-js@^2.21.0`\r\n> \r\n> After getting the code from the magic link email, we attempt to verify it like so:\r\n> \r\n> ```ts\r\n> else if (type === 'email') {\r\n>         response = await supabase.auth.verifyOtp({\r\n>           email: userEmail,\r\n>           token: data.token,\r\n>           type,\r\n>         });\r\n>       }\r\n> \r\n> if (response.error) throw response.error;\r\n> ```\r\n> \r\n> And then get the following error in the browser: <img alt=\"Screenshot 2023-05-11 at 12 42 45 AM\" width=\"369\" src=\"https://user-images.githubusercontent.com/59102133/237595585-f5728c79-d350-4fba-853a-f6fcde5f7564.png\">\r\n> \r\n> From the screenshots below you can tell the access code matches the request payload: <img alt=\"Screenshot 2023-05-11 at 12 42 11 AM\" width=\"539\" src=\"https://user-images.githubusercontent.com/59102133/237595495-dcaba06f-6f5e-45c2-affe-fece819c4580.png\">\r\n> \r\n> <img alt=\"Screenshot 2023-05-11 at 12 40 16 AM\" width=\"754\" src=\"https://user-images.githubusercontent.com/59102133/237595008-86010164-e2bf-43ce-833f-e98d562c8c2e.png\">\r\n\r\nI am getting the same error. I called signUp with email and password, and I received the signup email with 6-digit otp. But the verify otp never succeed\r\n```typescript\r\n    const { data, error } = await this._client.auth.signUp({\r\n      email: email,\r\n      password: password,\r\n    });\r\n    const { data, error } = await this._client.auth.verifyOtp({\r\n      email: email,\r\n      token: code,\r\n      type: 'email',\r\n    });\r\n```\r\n\r\nBUT, if I click on the confirmation url with that token hash, the user is confirmed which I believe passed the verify otp process.\r\n\r\nAny suggestions ?",
                    "author": {
                        "login": "willieee802"
                    },
                    "createdAt": "2023-11-08T04:09:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/905#issuecomment-1801017617"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cb2gE",
            "number": 906,
            "title": "Provide the option to disable auth.signup and make it available server-side only",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nIn many cases, it's very useful, at times even necessary, to make certain sensitive actions exclusive to the server such as signing up and deleting a user.\r\n\r\n## Describe the solution you'd like\r\n\r\nThis could probably be broken down into two separate but closely related feature requests:\r\n\r\n1. Expose a `signup` function on `auth.admin` that sends confirmation emails, or update `auth.admin.createUser` to let it send confirmation emails.\r\n2. Allow the option to disable `auth.signup`, that is to disallow users from directly signing up.\r\n\r\n## Describe alternatives you've considered\r\n\r\nI've considered `auth.admin.createUser` but this function doesn't send confirmation emails.\r\n\r\nI've also considered `auth.signup` on the server, but this is obviously not optimal as Supabase won't able to differentiate between a request coming from the server vs one coming from a user.\r\n\r\n\ud83c\udf33\ud83c\udf3f Keep up the BEAUTIFUL work \ud83c\udf33\ud83c\udf3f ",
            "author": {
                "login": "hugonteifeh"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-08T13:43:26Z",
            "closedAt": "2023-05-03T14:27:56Z",
            "url": "https://github.com/supabase/gotrue/issues/906",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRuiK",
                    "body": "hey @hugonteifeh, have you seen the [`generateLink` method](https://supabase.com/docs/reference/javascript/auth-admin-updateuserbyid) ? It won't send the email for you but it returns an email link which you can send via your own custom email provider. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-15T03:49:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/906#issuecomment-1430710410"
                },
                {
                    "id": "IC_kwDOEKipmc5VWi3I",
                    "body": "@kangmingtay Thanks for your reply. Yes I'm already aware of `generatedLink`. But then:\r\n1. One would need to set up and maintain a custom email provider just for this small feature.\r\n2. This still doesn't prevent signups directly from the front end, right?",
                    "author": {
                        "login": "hugonteifeh"
                    },
                    "createdAt": "2023-02-15T20:16:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/906#issuecomment-1431973320"
                },
                {
                    "id": "IC_kwDOEKipmc5VYlzD",
                    "body": "> 1. One would need to set up and maintain a custom email provider just for this small feature.\r\n\r\nYeah you're right, this requires one to setup and maintain a custom email provider which isn't ideal. Is there a reason why you're opting to call the signup function from the server-side instead? \r\n\r\n> 2. This still doesn't prevent signups directly from the front end, right?\r\n\r\nIt does because it's an admin endpoint which means that you can toggle the option to disable signups so that the signup method is blocked. \r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-16T04:53:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/906#issuecomment-1432509635"
                },
                {
                    "id": "IC_kwDOEKipmc5VxS6w",
                    "body": "> Yeah you're right, this requires one to setup and maintain a custom email provider which isn't ideal. Is there a reason why you're opting to call the signup function from the server-side instead?\r\n\r\nIt gives the system the ability to check business rules on the server before allowing users to sign up.\r\n\r\n> It does because it's an admin endpoint which means that you can toggle the option to disable signups so that the signup method is blocked.\r\n\r\nInteresting!",
                    "author": {
                        "login": "hugonteifeh"
                    },
                    "createdAt": "2023-02-21T19:28:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/906#issuecomment-1438985904"
                },
                {
                    "id": "IC_kwDOEKipmc5bYalf",
                    "body": "Hey @hugonteifeh, i'll be closing this issue for now since the generate link endpoint seems to help with this.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:27:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/906#issuecomment-1533127007"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cb6te",
            "number": 908,
            "title": "Revise counter-intuitive invite link design",
            "body": "The current design of invite links for Supabase immediately invalidates the link after first opening, which is counter-intuitive and confusing for users. It would improve the user experience to have a more intuitive design, such as allowing for multiple uses or providing an option to resend the invite link or having a time-limited design, such as expiring after one week.",
            "author": {
                "login": "gaodeng"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-18T23:18:54Z",
            "closedAt": "2023-02-13T12:20:12Z",
            "url": "https://github.com/supabase/gotrue/issues/908",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5TWTQd",
                    "body": "I believe this is a security feature, rather than a bug. I'll sent this to the Auth repo for their comments",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2023-01-20T13:09:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/908#issuecomment-1398354973"
                },
                {
                    "id": "IC_kwDOEKipmc5TWqN_",
                    "body": "@kiwicopple \r\nI understand that the one-time use of the invitation link is a security feature, but it can also cause confusion for users. In normal system design, the invitation link should not pose any security risks. I suggest re-evaluating the design to find a balance between security and user experience. Instead of limiting the use of the invitation link to one time only, other measures  can be implemented to ensure security without causing confusion for users.",
                    "author": {
                        "login": "gaodeng"
                    },
                    "createdAt": "2023-01-20T14:11:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/908#issuecomment-1398449023"
                },
                {
                    "id": "IC_kwDOEKipmc5UDMV0",
                    "body": "Hi @gaodeng, it would be great if you can share your usecase on why you require your users to click on the invite link more than once? We strive to design an API that's both secure by default and user-friendly and like most software systems design, it always requires a tradeoff. I believe a possible solution here would be to show to the user a clearer error message so that they know that the invite link has been used already or if they need to request for another one. \r\n\r\n ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-01-31T10:36:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/908#issuecomment-1410123124"
                },
                {
                    "id": "IC_kwDOEKipmc5UDZSI",
                    "body": "Hi @kangmingtay \r\nThe restriction on only being able to click the invite link once does not align with user expectations, as most other systems do not have such a limitation.",
                    "author": {
                        "login": "gaodeng"
                    },
                    "createdAt": "2023-01-31T11:15:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/908#issuecomment-1410176136"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cnzqn",
            "number": 911,
            "title": "Cannot use OAuth after signing up with UN/PW",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nUsing OAuth after signing up with Magic Link or UN/PW results in: \r\n`ERROR: duplicate key value violates unique constraint \"users_email_partial_key\" (SQLSTATE 23505).`\r\n\r\nIf you signup with OAuth, and then set a password or use a magic link, everything works as expected, but if you do things the other way around you get the error. \r\n\r\nFor clarity:\r\nSign Up with Google or Microsoft OAuth -> Add Password/Use Magic Link -> User logs in correctly\r\nSign up with Google OAuth -> Try to Sign-in with Microsoft OAuth (same email) -> User logs in correctly\r\nSign up with Password/Magic Link -> Try to Sign-In with OAuth -> 500: Database error saving new user\r\n\r\n## To Reproduce\r\n1. Set up User Management Starter\r\n2. Add Google or Microsoft OAuth\r\n3. Send user a magic link to login (creating user in Users).\r\n4. Use signInWithOAuth to try and authenticate a user with the same email:\r\n\r\n```\r\nconst { error } = await supabase.auth.signInWithOAuth({\r\nprovider: providerVar,\r\n});\t\t\r\n```\r\n5. See error in response and in Auth Logs.\r\n\r\nAlternatively, if you do this the other way around it works:\r\n1. Have user signup/signin with OAuth\r\n2. Add a PW or use a Magic Link to Login\r\n3. User Authenticates correctly. \r\n\r\nAnd Lastly:\r\n1. Have user signup/signin with Google OAuth\r\n2. Use Microsoft OAuth to Login\r\n3. Supabase ties the login to the existing account with the same email. \r\n\r\n## Expected behavior\r\n\r\nI'd expect OAuth to associate to the same email as the UN/PW User, just like using different OAuth Providers does. \r\n\r\n## Additional context\r\n\r\nThe use case here is for us to be able to keep User Signups disabled so that we can allow OAuth signups, but only with invited users. Or to allow existing users to switch to OAuth Login. This is possibly related to #434. ",
            "author": {
                "login": "mchappeldev"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-23T22:35:31Z",
            "closedAt": "2023-02-15T03:36:24Z",
            "url": "https://github.com/supabase/gotrue/issues/911",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5UFVX6",
                    "body": "Hi @mchappeldev, I'm unable to reproduce this:\r\n\r\nSign up with Password/Magic Link -> Try to Sign-In with OAuth -> 500: Database error saving new user\r\n\r\nIt would be great if you could contact us at support (https://app.supabase.com/support/new) so we can investigate the issue with your project.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-01-31T16:24:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/911#issuecomment-1410684410"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5cyW5w",
            "number": 915,
            "title": "Adding error codes to ApiError",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI am building a website with supabase and the errors that is returned from `supabase.auth` only contains a general error code `400` and a message in english. This makes the different errors hard to distinguish from eachother.\r\n\r\n**Example:**\r\nUser tries to create an account but the user is already registered so the error returned from `supabase.auth.signUp`  will be\r\n```javascript\r\n{ \r\n  message: \"User already registered\",\r\n  status: 400\r\n}\r\n```\r\n\r\n## Describe the solution you'd like\r\n\r\nIf the error included a specific error code mapped to particular error then providing a custom message would be easy.\r\n\r\n**Example:**\r\n```javascript\r\n{ \r\n  message: \"User already registered\",\r\n  status: 400,\r\n  errorCode: 1,\r\n}\r\n```\r\n\r\nIt would also be **really awesome** if the error codes was included in the documentation.\r\n\r\n## Describe alternatives you've considered\r\n\r\nI've considered checking the string value returned in the error but if that would change in the future that would in turn break the application.",
            "author": {
                "login": "samirergaibi"
            },
            "state": "OPEN",
            "createdAt": "2022-02-06T15:08:19Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/915",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Tqj_Q",
                    "body": "+1 for this change, as at this time distinguishing between errors (and translating them to different languages), is completely contingent on parsing the message being returned (and if that message one day got changed, it would break whatever logic we've had to build on top of it)",
                    "author": {
                        "login": "joeyTedeschi"
                    },
                    "createdAt": "2022-02-22T04:02:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1403666384"
                },
                {
                    "id": "IC_kwDOEKipmc5TqkBD",
                    "body": "I realize that when a user signs up using an already in use `email` don't get any error messages, `auth.signUp()` just returns the user. i think in this case i wanna cath the error and tell the user that email is in use\r\n\r\na `User already registered` error message would be awesome",
                    "author": {
                        "login": "salazarr-js"
                    },
                    "createdAt": "2022-04-12T20:56:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1403666499"
                },
                {
                    "id": "IC_kwDOEKipmc5TqkBH",
                    "body": "I want to alert the user if they need to check their email for the invite link, so error code would be help on signIn here would really help",
                    "author": {
                        "login": "Andrewjeska"
                    },
                    "createdAt": "2022-09-28T15:27:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1403666503"
                },
                {
                    "id": "IC_kwDOEKipmc5TqkBP",
                    "body": "I strongly support this request!  \r\nError codes would facilitate the creation of dictionary data for translation and help with multilingualization.\r\n\r\nI am developing an application for Japanese and currently there is no list of error messages, so I am having a hard time creating dictionary data.",
                    "author": {
                        "login": "aiji42"
                    },
                    "createdAt": "2022-09-29T02:56:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1403666511"
                },
                {
                    "id": "IC_kwDOEKipmc5TqkBX",
                    "body": "+1 on this. How am I supposed to provide the user additional steps if their login attempt errors because their email hasn't been verified yet, but they can't find the verification code anymore? ",
                    "author": {
                        "login": "florianwalther-private"
                    },
                    "createdAt": "2022-12-25T19:01:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1403666519"
                },
                {
                    "id": "IC_kwDOEKipmc5TqkBc",
                    "body": "Related to supabase/supabase#12739",
                    "author": {
                        "login": "silentworks"
                    },
                    "createdAt": "2022-12-25T22:39:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1403666524"
                },
                {
                    "id": "IC_kwDOEKipmc5TqkBi",
                    "body": "Interested in this. ",
                    "author": {
                        "login": "nickreese"
                    },
                    "createdAt": "2023-01-13T21:05:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1403666530"
                },
                {
                    "id": "IC_kwDOEKipmc5WfjCT",
                    "body": "Over a year later and this has not been addressed. I thought features like this were standard practice. ",
                    "author": {
                        "login": "raheemja"
                    },
                    "createdAt": "2023-03-02T00:51:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1451110547"
                },
                {
                    "id": "IC_kwDOEKipmc5XVBml",
                    "body": "no news on this? how people are handling authentication errors and internalization?",
                    "author": {
                        "login": "renansoares"
                    },
                    "createdAt": "2023-03-12T08:52:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1465129381"
                },
                {
                    "id": "IC_kwDOEKipmc5Y0BjT",
                    "body": "Thought this was industry standard and not something to implement upon request. Any developments on this?",
                    "author": {
                        "login": "sharifbubuka"
                    },
                    "createdAt": "2023-03-30T10:03:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1490032851"
                },
                {
                    "id": "IC_kwDOEKipmc5ZAfhF",
                    "body": "This just made ditch supabase Auth for something else.\r\n\r\nIts standard practise to return proper errors.\r\n\r\nBut till now over a year nothing has been done. There is no proper CURL documentation for us to implement the rest Auth into a SDK ourselves. \r\n\r\nEven on the little examples, errors are not treated well. this is a no no for me,shows an unserious company in this aspect",
                    "author": {
                        "login": "otyang"
                    },
                    "createdAt": "2023-04-02T11:09:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1493301317"
                },
                {
                    "id": "IC_kwDOEKipmc5Zsy-w",
                    "body": "Adding stable error keys to the returned JSON would be great (e.g., user.already.registered). That's clearer than abstract error codes ala Oracle.\r\n\r\nAnd the ideal would be using the structure proposed by RFC 7807:\r\n- https://github.com/NationalBankBelgium/REST-API-Design-Guide/wiki/Error-handling-Error-details\r\n- https://github.com/NationalBankBelgium/REST-API-Design-Guide/wiki/Error-handling-Example-with-a-single-error\r\n- https://github.com/NationalBankBelgium/REST-API-Design-Guide/wiki/Error-handling-Example-with-multiple-errors\r\n- https://github.com/NationalBankBelgium/REST-API-Design-Guide/wiki/Error-handling-Example-with-parameters\r\n- https://github.com/NationalBankBelgium/REST-API-Design-Guide/wiki/Error-handling-Example-with-additional-metadata",
                    "author": {
                        "login": "dsebastien"
                    },
                    "createdAt": "2023-04-12T09:01:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1504915376"
                },
                {
                    "id": "IC_kwDOEKipmc5aNyco",
                    "body": "+1 on this",
                    "author": {
                        "login": "AdamEisfeld"
                    },
                    "createdAt": "2023-04-18T17:40:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1513563944"
                },
                {
                    "id": "IC_kwDOEKipmc5gXEgL",
                    "body": "I ran into the same issue and started collecting possible error messages by going through the GoTrue implementation.\r\n\r\nI collect the errors for each endpoint in [this Google Sheets doc](https://docs.google.com/spreadsheets/d/1GRFrER_WrleH7XgrzM_wHnZNNTtdH1Bc0cGa5kvyOQM/edit?usp=sharing). It's WIP so everything in this sheet is a little bit messy at the moment. \r\n\r\nI also created a [npm package ](https://github.com/joeldomke/supabase-errors-js)that offers an error handler method for each function of GoTrue JS and therefore also Supabase JS.",
                    "author": {
                        "login": "joeldomke"
                    },
                    "createdAt": "2023-07-02T13:24:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1616660491"
                },
                {
                    "id": "IC_kwDOEKipmc5gadgq",
                    "body": "Thx a lot Joel !\r\n\r\nLe dim. 2 juil. 2023 \u00e0 15:24, Joel Domke ***@***.***> a\r\n\u00e9crit :\r\n\r\n> I ran into the same issue and started collecting possible error messages\r\n> by going through the GoTrue implementation.\r\n>\r\n> I collect the errors for each endpoint in this Google Sheets doc\r\n> <https://docs.google.com/spreadsheets/d/1GRFrER_WrleH7XgrzM_wHnZNNTtdH1Bc0cGa5kvyOQM/edit?usp=sharing>.\r\n> It's WIP so everything in this sheet is a little bit messy at the moment.\r\n>\r\n> I also created a npm package\r\n> <https://github.com/joeldomke/supabase-errors-js>that offers an error\r\n> handler method for each function of GoTrue JS and therefore also Supabase\r\n> JS.\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/supabase/gotrue/issues/915#issuecomment-1616660491>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AABA5QT2GYVJ7FZHAZPVVMDXOFY7XANCNFSM6AAAAAAUGLI6EA>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n",
                    "author": {
                        "login": "caipicoder"
                    },
                    "createdAt": "2023-07-03T07:43:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1617549354"
                },
                {
                    "id": "IC_kwDOEKipmc5jfUOT",
                    "body": "Running into the same issue \u2013 would love to have standardized error codes for auth (I'm using `supabase.auth.signInWithOtp()` specifically). Firebase has a doc about this: https://firebase.google.com/docs/reference/js/v8/firebase.auth.Error",
                    "author": {
                        "login": "drummerjolev"
                    },
                    "createdAt": "2023-08-08T08:26:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1669153683"
                },
                {
                    "id": "IC_kwDOEKipmc5kkzCV",
                    "body": "+1 on this",
                    "author": {
                        "login": "CharleeWa"
                    },
                    "createdAt": "2023-08-22T03:40:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1687367829"
                },
                {
                    "id": "IC_kwDOEKipmc5mJp7u",
                    "body": "Such improvement would be great for developer experience, +1 to this idea.",
                    "author": {
                        "login": "mwoss"
                    },
                    "createdAt": "2023-09-11T12:45:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1713807086"
                },
                {
                    "id": "IC_kwDOEKipmc5mkXkb",
                    "body": "Any progress on this would be great help! Is there a way we can contribute ourselves?",
                    "author": {
                        "login": "elglogins"
                    },
                    "createdAt": "2023-09-15T07:29:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/915#issuecomment-1720809755"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5dC9E7",
            "number": 917,
            "title": "Opentelementry Not Working",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI have a self-hosted Supabase Instance proxied behind Traefik. I am trying to send the metrics and traces from GoTrue to Signoz endpoint <IP>:4318/v1/traces, but I received the following errors. \r\n\r\nI have also tried with Grafana Cloud tempo, and the same issue occurred. \r\n\r\n```\r\n      GOTRUE_LOG_LEVEL: debug\r\n      GOTRUE_TRACING_ENABLED: true\r\n      GOTRUE_TRACING_EXPORTER: opentelemetry\r\n      GOTRUE_METRICS_ENABLED: true\r\n      GOTRUE_METRICS_EXPORTER: opentelemetry\r\n\r\n      OTEL_SERVICE_NAME: gotrue\r\n      OTEL_EXPORTER_OTLP_PROTOCOL: grpc\r\n      OTEL_EXPORTER_OTLP_ENDPOINT: <IP>:4318/v1/traces # or localhost:4318/v1/traces (Signoz) \r\n```\r\n```\r\n2023/01/28 23:44:04 max retry time elapsed: rpc error: code = Unavailable desc = connection error: desc = \"transport: Error while dialing dial tcp: missing address\"\r\n```\r\n\r\nA clear and concise description of what the bug is.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Go to '[Supabase Self Host Guide](https://supabase.com/docs/guides/self-hosting)'\r\n2. Modify the `docker-compose.yml` accordingly.\r\n3. `docker compose up -d`\r\n4. Install Signoz [here](https://signoz.io/docs/install/docker/#install-signoz-using-the-install-script)\r\n\r\n## Expected behavior\r\n\r\nExpected the exporter would send metrics, and traces to the endpoint.\r\n\r\n\r\n## Additional context\r\n\r\nHere is a summary of the log file\r\n\r\n[_supabase-auth_logs.txt](https://github.com/supabase/gotrue/files/10528562/_supabase-auth_logs.txt)\r\n",
            "author": {
                "login": "jameswong3388"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-28T23:57:19Z",
            "closedAt": "2023-01-30T02:48:27Z",
            "url": "https://github.com/supabase/gotrue/issues/917",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5dmSzJ",
            "number": 932,
            "title": "`issuer or client_id must not be supplied` when users are signing in with Google or Apple.",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nI'm using Flutter and Dart and I have existing code that lets users create an account or sign in using their Apple Id. Now when a user tries to create an account or log in, the error message returned is `issuer or client_id must not be supplied`\r\n\r\n## To Reproduce\r\n\r\nThis is the reproducible code\r\n\r\n```dart\r\n\r\n  final String randomNonce = uuidV4();\r\n  final String hashedNonce = sha256.convert(utf8.encode(randomNonce)).toString();\r\n  const String clientId = 'com.datefirefly';\r\n\r\n  final credential = await SignInWithApple.getAppleIDCredential(\r\n    scopes: [\r\n      AppleIDAuthorizationScopes.email,\r\n    ],\r\n    nonce: hashedNonce,\r\n  );\r\n\r\n    GotrueSessionResponse signInRes = await _supabase.client.auth.signIn(\r\n      oidc: OpenIDConnectCredentials(\r\n        idToken: idToken,\r\n        nonce: nonce,\r\n        provider: provider,\r\n        clientId: clientId,\r\n      ),\r\n    );\r\n```\r\n\r\n\r\n## Expected behavior\r\n\r\nThe previous, correct, behavior is creating an account or signing into an existing account.\r\n\r\n## Screenshots\r\n\r\n![original](https://user-images.githubusercontent.com/10294777/216687616-a682cbce-4f97-4e9f-a07a-2daa482a1b71.jpg)\r\n\r\n\r\n## System information\r\n\r\n- OS: iOS sign in with Apple. Android sign in with Google\r\n- \r\n## Additional context\r\n\r\nThis was working before and now it isn't with the same code.\r\nI believe it has to do with this PR that was merged:\r\nhttps://github.com/supabase/gotrue/pull/927\r\n",
            "author": {
                "login": "DanMossa"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-03T19:13:40Z",
            "closedAt": "2023-03-14T06:52:42Z",
            "url": "https://github.com/supabase/gotrue/issues/932",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Xd84R",
                    "body": "Hey @DanMossa,\r\n\r\nThere is a security vulnerability with this flow and this is why you get this error message. Please remove any `client_id` or `issuer` properites from the requests and only use the `provider` property instead. Please review the last security advisory published on this repo for more details.\r\n\r\nI believe this specific issue was resolved if you were using the Apple or Google issuers and your project was correctly setup. https://github.com/supabase/gotrue/blob/master/internal/api/token.go#L421\r\n\r\nPlease also reach out to support@supabase.com if you need direct support on a production project, as GitHub issues are not meant for rapid support but rather about issues with the open-source project itself.\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-14T06:52:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/932#issuecomment-1467469329"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eAuA4",
            "number": 936,
            "title": "Auth Facebook error: unable to find email with Facebook provider",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI'm trying to test out my Nuxt app with Facebook login but I keep getting an error on the address bar:\r\n\r\n`?error=server_error&error_description=Error+getting+user+email+from+external+provider#_=_`\r\n\r\nSupabase logs: `unable to find email with Facebook provider`\r\n\r\nI got all set up: Facebook app, Facebook advanced access on `email` and `public_profile`, callback URLs, app ID, and keys. It would go through Facebook's auth page then it redirects to my localhost with the error. User won't be registered to `auth.users` as well.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Followed Facebook Auth tutorial on the docs\r\n2. Used Supabase Nuxt module.\r\n\r\n```vue\r\n<script setup>\r\nconst supabase = useSupabaseAuthClient();\r\nconst socialAuth = async (provider) => {\r\n  const { error } = await supabase.auth.signInWithOAuth({ provider: provider });\r\n  if (error) {\r\n    console.log(error);\r\n  } else {\r\n    console.log(\"Social Auth success.\");\r\n  }\r\n};\r\n</script>\r\n<template>\r\n  <div>\r\n    <button @click=\"socialAuth('facebook')\">Login with Facebook</button>\r\n  </div>\r\n</template>\r\n```\r\n\r\n## Expected behavior\r\n\r\nLogin with Facebook and get user data using `useSupabaseUser()`.\r\n\r\n## System information\r\n\r\n- OS: Windows\r\n- Browser: Chrome, Edge\r\n- Version of supabase-js: 2.1.0 (using @nuxtjs/supabase: 0.3.0)\r\n- Version of Node.js: 16.15.1\r\n",
            "author": {
                "login": "larrasu"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-21T06:00:45Z",
            "closedAt": "2023-02-17T06:10:44Z",
            "url": "https://github.com/supabase/gotrue/issues/936",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5U2wO-",
                    "body": "Is it occurring with only nuxt app or for every library?",
                    "author": {
                        "login": "chandhuDev"
                    },
                    "createdAt": "2023-01-22T16:26:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/936#issuecomment-1423639486"
                },
                {
                    "id": "IC_kwDOEKipmc5U2wPC",
                    "body": "I've looked into Graph API and I learned if a user chose to make their email \"only me\" Facebook won't provide it to applications. I know this because I set my email as \"only me\" and I don't have any other accounts to test this app as of yet. What can be the workaround here? Most of my app's target audience is on Facebook.\r\n\r\n<img width=\"971\" alt=\"image\" src=\"https://user-images.githubusercontent.com/74983120/216089706-5929db78-73c6-4fc5-88be-28ba60c63f11.png\">\r\n\r\nMore info [here](https://stackoverflow.com/questions/9347104/register-with-facebook-sometimes-doesnt-provide-email)",
                    "author": {
                        "login": "larrasu"
                    },
                    "createdAt": "2023-02-01T15:46:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/936#issuecomment-1423639490"
                },
                {
                    "id": "IC_kwDOEKipmc5Ve18u",
                    "body": "Hey @larrasu,\r\n\r\nUnfortunately, it sounds like this is an issue specific to the Facebook API graph endpoint - we don't have access to permissions on the Facebook Graph API endpoint. We would suggest that you contact Facebook support, or handle errors at the application level for cases where the user has decided not to make their email available.\r\n\r\nGoing to close the issue but feel free to re-open if there are still questions\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-17T06:10:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/936#issuecomment-1434148654"
                },
                {
                    "id": "IC_kwDOEKipmc5gOhcR",
                    "body": "No, Twitter is same.\r\n**unable to find email with Twitter provider**",
                    "author": {
                        "login": "Developer27149"
                    },
                    "createdAt": "2023-06-30T09:53:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/936#issuecomment-1614419729"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eAuRh",
            "number": 937,
            "title": "User created via `supabase.auth.admin.createUser` cannot login via OAuth",
            "body": "# Bug report\r\n\r\nUser created via `supabase.auth.admin.createUser` cannot login via OAuth\r\n\r\n## To Reproduce\r\n\r\n- Create a new user within an edge function on the server using `supabase.auth.admin.createUser`\r\n- Logout and then try and login on client using `client.auth.signInWithOAuth` with google as the provider\r\n- The application doesn't seem to recognise a user with that email exists and attempts to create a new user which causes an error message \"Database error saving new user\"\r\n\r\n## Expected behavior\r\n\r\n- The user should be logged in\r\n\r\n## Additional context\r\n\r\n- The user can login as expected if you send a magic link\r\n- Login with OAuth still doesn't work after email is verified via login with magic link\r\n- Passing `email_confirm: true` to the original auth.admin function doesn't solve the problem\r\n\r\n",
            "author": {
                "login": "timdiacon"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-26T14:56:13Z",
            "closedAt": "2023-05-16T09:13:46Z",
            "url": "https://github.com/supabase/gotrue/issues/937",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5U2weC",
                    "body": "Hi @timdiacon \r\nI think you should fill the `app_metadata` field like described here:\r\nhttps://github.com/supabase/gotrue-js/blob/013afaeb45e5d964a8cca467b748a3daa557f22c/src/lib/types.ts#L273-L280",
                    "author": {
                        "login": "ruggi99"
                    },
                    "createdAt": "2023-01-26T20:38:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1423640450"
                },
                {
                    "id": "IC_kwDOEKipmc5U2weH",
                    "body": "same problem\r\n\r\nI'm creating a user \r\n`await supabaseAdmin.auth.admin.createUser({\r\n     email: 'someuser@gmail.com',\r\n     email_confirm: true,\r\n     password: '1234',\r\n });\r\n`\r\n \r\n sign in with OAuth\r\n `await this.supabaseClient.auth.signInWithOAuth({\r\n      provider: 'google',\r\n    });`\r\nafter signing supabase throw an error \r\n![image](https://user-images.githubusercontent.com/10474363/215967959-799448ab-43a4-41ff-9e11-dc1c039d2651.png)\r\n\r\nIt seems the problem is with verified users, when I create an un-verified user, then sign in using google Works but the user can't log in using the password.\r\n",
                    "author": {
                        "login": "muhammadzadeh"
                    },
                    "createdAt": "2023-02-01T06:33:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1423640455"
                },
                {
                    "id": "IC_kwDOEKipmc5U2wer",
                    "body": "@timdiacon @muhammadzadeh \r\nSee #11413 that maybe can help you with your problem.",
                    "author": {
                        "login": "ruggi99"
                    },
                    "createdAt": "2023-02-01T07:23:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1423640491"
                },
                {
                    "id": "IC_kwDOEKipmc5U20pb",
                    "body": "I'm having this issue too.\r\n\r\n1. Invite a user via email using \"inviteUser\" in supabase-js\r\n2. They accept invite, subsequently login with Google using exact same email\r\n3. Supabase attempts to create a new user, instead of logging in the existing one, which fails with duplicate key.\r\n\r\nWeird part is this worked earlier today for an existing user using email provider, did something change recently?",
                    "author": {
                        "login": "carlosdp"
                    },
                    "createdAt": "2023-02-09T05:31:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1423657563"
                },
                {
                    "id": "IC_kwDOEKipmc5U21Fu",
                    "body": "I'm unfamiliar with this codebase, so not sure, but this commit from 3 weeks ago seems like it could be the culprit https://github.com/supabase/gotrue/commit/8ddf54b21263cc88d05ad637a2d614f1389a8482\r\n\r\n@kangmingtay any ideas here?\r\n\r\nedit: Ok, I think I understand more what's going on here. It looks like Supabase in production still isn't creating Identities when inviting users, which causes this issue. Is there any ETA on when that change will hit production? Is there something I can do on my end to upgrade to the latest gotrue?",
                    "author": {
                        "login": "carlosdp"
                    },
                    "createdAt": "2023-02-09T05:35:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1423659374"
                },
                {
                    "id": "IC_kwDOEKipmc5VDQLH",
                    "body": "Isn't that an expected behavior? \r\nShouldn't the \"new/invited\" user connect their account separately with google so the accounts can match? ",
                    "author": {
                        "login": "mardix"
                    },
                    "createdAt": "2023-02-12T01:30:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1426916039"
                },
                {
                    "id": "IC_kwDOEKipmc5VDqtE",
                    "body": "> Isn't that an expected behavior? \n> \n> Shouldn't the \"new/invited\" user connect their account separately with google so the accounts can match? \n\nRight, and that'a not possible without the change that was out into master a few weeks ago (which I'm not sure has hit the Supabase hosted service yet)",
                    "author": {
                        "login": "carlosdp"
                    },
                    "createdAt": "2023-02-12T12:48:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1427024708"
                },
                {
                    "id": "IC_kwDOEKipmc5VEZ2U",
                    "body": "@carlosdp yes, you are right. We still haven't deployed the fix to production yet but will look to do it in the upcoming week.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-13T01:58:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1427217812"
                },
                {
                    "id": "IC_kwDOEKipmc5V3J1i",
                    "body": "> @carlosdp yes, you are right. We still haven't deployed the fix to production yet but will look to do it in the upcoming week.\r\n\r\nGreat! Will you close this issue when that happens, so we know it's ready?",
                    "author": {
                        "login": "carlosdp"
                    },
                    "createdAt": "2023-02-22T18:02:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1440521570"
                },
                {
                    "id": "IC_kwDOEKipmc5WvGpN",
                    "body": "@kangmingtay @J0 Any updates yet on this issue? Thank you for looking into it!",
                    "author": {
                        "login": "d-e-h-i-o"
                    },
                    "createdAt": "2023-03-05T19:58:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1455188557"
                },
                {
                    "id": "IC_kwDOEKipmc5Wviwg",
                    "body": "Hey @d-e-h-i-o ,\r\n\r\nThe fix has been rolled out partially, will update you again once it\u2019s been fully rolled out. If you\u2019re in a rush, feel free to email support with your project ref and we\u2019ll let you know if your project has received the patch",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-06T01:44:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1455303712"
                },
                {
                    "id": "IC_kwDOEKipmc5YMqY2",
                    "body": "Hey all,\r\n\r\nWe've rolled out a patch. Could you please try again and let us know if it works for you? Thanks\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-22T14:53:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1479714358"
                },
                {
                    "id": "IC_kwDOEKipmc5Yy8Sp",
                    "body": "Hey team, \r\n\r\nGoing to close for now but feel free to re-open if there are still issues",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-30T06:08:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1489749161"
                },
                {
                    "id": "IC_kwDOEKipmc5bD07b",
                    "body": "@J0 I'm still experiencing the error, with a new project. Same `500: Database error saving new user` error that @muhammadzadeh described. So it looks like this issue is not solved yet.",
                    "author": {
                        "login": "d-e-h-i-o"
                    },
                    "createdAt": "2023-04-28T15:23:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1527729883"
                },
                {
                    "id": "IC_kwDOEKipmc5bRUOH",
                    "body": "@d-e-h-i-o can you please reach out to us at https://app.supabase.com/support/new so we can investigate the issue with your project?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-02T10:53:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1531265927"
                },
                {
                    "id": "IC_kwDOEKipmc5cWF3q",
                    "body": "hi @d-e-h-i-o, seems like this issue has been resolved already through our support channel - please feel free to reopen it and write back to us if you're still experiencing this issue.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-16T09:13:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/937#issuecomment-1549295082"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eAxx7",
            "number": 939,
            "title": "Supabase Auth redirecting to base path, not subdirectory",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI have my app deployed at `192.168.1.5/dev`. I recently began integrating Supabase Auth, using the Google provider. I have this working with a localhost deployment and it will redirect properly. When I tried deploying to an actual server though (the `192.168.1.5/dev` address), I sign in, and the redirect makes it to Supabase, but Supabase then redirects to `192.168.1.5` instead of `192.168.1.5/dev`, even though I have the deployment address set as `192.168.1.5/dev` on the Supabase web UI. Searching my code there are no mentions of 192.168.1.5 anywhere other than config.toml so I know it's not hardcoded.\r\n\r\nIf I manually fix the URL over to the proper subpath, everything works fine it seems and I am signed in.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Set up a basic app with supabase auth with google, run at base URL other than just root\r\n2. Sign in with Google\r\n3. Observe redirect making it to Supabase\r\n4. Observe Supabase redirecting to base path, not the full path with subpath.\r\n\r\n## Expected behavior\r\n\r\nSupabase should have redirected the final OAuth request to the proper subpath, `192.168.1.5/dev`\r\n\r\n## System information\r\n\r\n- OS: Browser on Windows, web app runs containerized linux\r\n- Browser (if applies) [e.g. chrome, safari]: Chrome\r\n- Version of supabase-js: [e.g. 6.0.2]: 2.1.1\r\n- Version of Node.js: [e.g. 10.10.0] v16.16.0 locally, v19.2.0 in container\r\n",
            "author": {
                "login": "CrowhopTech"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-14T05:38:08Z",
            "closedAt": "2023-03-01T04:25:21Z",
            "url": "https://github.com/supabase/gotrue/issues/939",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VfqFo",
                    "body": "Hey,\r\n\r\nThanks for the query - quick question:  is 192.168.1.5/dev in the list of Redirect URLs? If you could send over a screenshot of the redirect urls that'd be really helpful.\r\n\r\nRedirect URLs can be found under Auth > URL Configuration > Redirect URLs",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-17T09:19:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/939#issuecomment-1434362216"
                },
                {
                    "id": "IC_kwDOEKipmc5WYuA1",
                    "body": "Hey,\r\n\r\nI'm going to close this issue as it seems to have gone stale - feel free to reach back out to re-open if you have further questions though!\r\n\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T04:25:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/939#issuecomment-1449320501"
                },
                {
                    "id": "IC_kwDOEKipmc5lU2_9",
                    "body": "I'm still facing this issue. it is the exact same a in the OP",
                    "author": {
                        "login": "pedromassango"
                    },
                    "createdAt": "2023-08-30T23:05:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/939#issuecomment-1699966973"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eAyID",
            "number": 941,
            "title": "Hotmail magic link not working",
            "body": "I have a ...@hotmail.com domain email address and I send a magic link to be able to connect but I never receive the link?\r\nAny idea of what is happening? I have another outlook address with ...@outlook.com domain and it works.\r\n",
            "author": {
                "login": "daniellaera"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-22T09:56:56Z",
            "closedAt": "2023-02-13T02:38:23Z",
            "url": "https://github.com/supabase/gotrue/issues/941",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5U2zns",
                    "body": "Hey @daniellaera,\r\n\r\n Can I check if you're still facing this issue? Generally we recommend using a custom SMTP provider like Sendgrid when going into production for better deliverability",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-09T05:24:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/941#issuecomment-1423653356"
                },
                {
                    "id": "IC_kwDOEKipmc5VEgpC",
                    "body": "Closing for now due to inactivity but feel free to re-open if issue persists",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-13T02:38:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/941#issuecomment-1427245634"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eAyVQ",
            "number": 942,
            "title": "Oauth2 popup flow",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/4487\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **dovenokan** December 14, 2021</sup>\r\nis there a way to make it with popup instead of redirecting?</div>\r\n\r\nIt would be nice if we can have a integrated way use Oauth2 popup flow instead of redirection as you lose the state of your app when using redirect",
            "author": {
                "login": "Sacramentix"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-27T17:46:10Z",
            "closedAt": "2023-02-17T06:25:31Z",
            "url": "https://github.com/supabase/gotrue/issues/942",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5U2zyD",
                    "body": "I think that's strictly and completely against the idea behind Oauth because you're specifically **not** letting the website know your credentials for a 3rd party service. The Oauth service on the other side is the one you trust and the one to tell you: \"Yes, that is a valid user.\"\r\n\r\nA popup would allow the website very easily to gather / phish credentials for a multitude of services. That's the whole point behind the redirect.",
                    "author": {
                        "login": "Rhywden"
                    },
                    "createdAt": "2022-11-28T21:47:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/942#issuecomment-1423654019"
                },
                {
                    "id": "IC_kwDOEKipmc5Ve4If",
                    "body": "Hey,\r\n\r\nWe would generally discourage from using a popup. However, if  you wish, you can call `signInWithOAuth` with the [`skipBrowserRedirect`](https://github.com/supabase/gotrue-js/blob/master/src/GoTrueClient.ts#L1022) option set to `true` and then call `window.open`  to render a button with the given URL\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-17T06:25:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/942#issuecomment-1434157599"
                },
                {
                    "id": "IC_kwDOEKipmc5Ve4LM",
                    "body": "Hope this helps - going to close but feel free to re-open if there are still issues",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-17T06:25:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/942#issuecomment-1434157772"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eRGba",
            "number": 944,
            "title": "Error when using the policy example from Multi-Factor Authentication docs",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI am trying to query the database using Row Level Security policy example from docs [https://supabase.com/docs/guides/auth/auth-mfa](https://supabase.com/docs/guides/auth/auth-mfa#enforce-rules-for-mfa-logins)\r\n\r\n```\r\ncreate policy \"Policy name.\"\r\n  on table_name\r\n  as restrictive -- very important!\r\n  to authenticated\r\n  using (\r\n    array[auth.jwt()->>'aal'] <@ (\r\n      select\r\n          case\r\n            when count(id) > 0 then array['aal2']\r\n            else array['aal1', 'aal2']\r\n          end as aal\r\n        from auth.mfa_factors\r\n        where auth.uid() = user_id and status = 'verified'\r\n    ));\r\n```\r\nbut this causes an error due to a lack of permissions for the auth.mfa_factors table\r\n\r\n`{\"code\":\"42501\",\"details\":null,\"hint\":null,\"message\":\"permission denied for table mfa_factors\"}`\r\n\r\n## To Reproduce\r\n\r\n1. Go to SQL Editor \r\n2. Create policy based on example from docs (above)\r\n3.  Use supabase-js client to select from table which applied this policy `const {data, error} = await client.from('table_name').select('*')`\r\n5. See error in response\r\n\r\n## Expected behavior\r\n\r\nWorking policy\r\n\r\n\r\n## System information\r\n\r\n- OS: Windows\r\n- Browser: Chrome \r\n- nuxtjs/supabase: 0.3.0",
            "author": {
                "login": "AlanMcKen"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-09T12:25:45Z",
            "closedAt": "2023-07-06T03:40:24Z",
            "url": "https://github.com/supabase/gotrue/issues/944",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VfnJU",
                    "body": "Hey @AlanMcKen,\r\n\r\nThanks for the query - qq: did you have any factors enrolled when running the following statement\r\n\r\n```\r\nconst {data, error} = await client.from('table_name').select('*')\r\n```\r\n\r\nCould you also let us know if you were signed in and if you had any factors enrolled?\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-17T09:12:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/944#issuecomment-1434350164"
                },
                {
                    "id": "IC_kwDOEKipmc5VhSzL",
                    "body": "Hello @J0,\r\n\r\nThanks for your response!\r\n\r\nYes, I created two users for testing purposes, one with an enrolled factor (`{\"currentLevel\":\"aal2\",\"nextLevel\":\"aal2\",\"currentAuthenticationMethods\":[{\"method\":\"password\",\"timestamp\":1676645344},{\"method\":\"totp\",\"timestamp\":1676645386}]}`) and one without. In both cases, the error is the same. ",
                    "author": {
                        "login": "AlanMcKen"
                    },
                    "createdAt": "2023-02-17T15:17:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/944#issuecomment-1434791115"
                },
                {
                    "id": "IC_kwDOEKipmc5YMphv",
                    "body": "Hey @AlanMcKen,\r\n\r\nWould you mind creating a new [Support Ticket](https://app.supabase.com/support/new) for your project and referencing this, so I can take a look at your database setup? We can discuss sensitive information there, and then we'll update this ticket.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-22T14:51:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/944#issuecomment-1479710831"
                },
                {
                    "id": "IC_kwDOEKipmc5YRwVG",
                    "body": "Hello @hf \r\n\r\nI created ticket #1511955232 corresponding to this issue. My project is only for testing purposes now, and you feel free to access it anytime. Thanks for your help!",
                    "author": {
                        "login": "AlanMcKen"
                    },
                    "createdAt": "2023-03-23T11:49:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/944#issuecomment-1481049414"
                },
                {
                    "id": "IC_kwDOEKipmc5eNWTc",
                    "body": "The fix for this is to instruct people to use a security definer function in the RLS policy, which has access to the `auth.mfa_factors` table.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:11:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/944#issuecomment-1580557532"
                },
                {
                    "id": "IC_kwDOEKipmc5gu8uv",
                    "body": "hey @AlanMcKen, we'll be closing this issue for now but please let us know if you're still facing any problems with MFA!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-06T03:40:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/944#issuecomment-1622920111"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eYVqw",
            "number": 946,
            "title": "Auth token exposed and susceptible to XSS and session hijacking",
            "body": "# Bug report\r\n\r\nThe auth token used by Supabase Authentication is stored as a normal cookie (not http-only). Consequently, it is accessible by clientside JavaScript which is a **massive security concern**. Auth tokens should [never be exposed](https://owasp.org/www-community/attacks/xss/) as any malicious script on the page could take this cookie and make requests on behalf of the user.\r\n\r\n## Describe the bug\r\n\r\nThe `supabase-auth-token` cookie is stored as a normal cookie, accessible by JavaScript.\r\n\r\n## To Reproduce\r\n\r\n\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Follow the [setup guide](https://supabase.com/docs/guides/auth/auth-helpers/nextjs#basic-setup) to minimally set up Supabase auth on your client\r\n2. [Sign in](https://supabase.com/docs/reference/javascript/v1/auth-signin) with a user\r\n3. Observer cookies\r\n\r\n## Expected behavior\r\n\r\nThe `supabase-auth-token` cookie should be stored as an http-only cookie so that it is not accessible by clientside JavaScript.\r\n\r\n## Screenshots\r\n\r\n<img width=\"1306\" alt=\"Screenshot 2023-02-13 at 5 01 50 PM\" src=\"https://user-images.githubusercontent.com/14933234/218595749-28e52eaa-9884-4e72-a19b-7828ec9759bc.png\">\r\n<img width=\"1350\" alt=\"Screenshot 2023-02-13 at 5 02 54 PM\" src=\"https://user-images.githubusercontent.com/14933234/218595754-02751911-740d-4a52-a184-b732e1e3c034.png\">\r\n\r\n",
            "author": {
                "login": "martindidiego"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-14T03:48:40Z",
            "closedAt": "2023-03-14T06:44:29Z",
            "url": "https://github.com/supabase/gotrue/issues/946",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Xd6J7",
                    "body": "Hi @martindidiego,\r\n\r\nThanks for the submission, however this topic is commonly reported. Please be aware that HttpOnly cookies are not useful in modern Single-Page Apps and thus are not widely used. We are going to be providing a PKCE endpoint which would allow developers to use HttpOnly cookies to store tokens if that makes sense for their needs.\r\n\r\nSupabase Auth is designed to work with any different type of application including single-page apps, traditional web apps, server-side rendering apps, desktop, CLI and mobile apps (where cookies are not enforced). Thus we're not able to use HttpOnly cookies.\r\n\r\nWe are also not considering the case where a malicious script is running in the user's browser. If a user has a malicios extension, it is not something we can take care of, and we're assuming that the developer is responsible for dealing with security best practices such as preventing XSS, sanitizing input and ensuring only secure and trusted JavaScript is served on their domains.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-14T06:44:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/946#issuecomment-1467458171"
                },
                {
                    "id": "IC_kwDOEKipmc5Y2EbE",
                    "body": "Hi @hf ,\r\n\r\nregarding:\r\n\r\n> Thanks for the submission, however this topic is commonly reported. \r\n\r\nYou might want to update the [security policy](https://github.com/supabase/gotrue/security/policy), which mentions only that `Lack of Secure or HTTP only flag on non-sensitive cookies` is out of scope (and session cookie is sensitive).\r\n\r\n> Please be aware that HttpOnly cookies are not useful in modern Single-Page Apps and thus are not widely used.\r\n\r\nThere are other approaches apart from cookies for SPA, for example browser in-memory, as suggested by [OAuth 2.0 Threat Model and Security Considerations](https://www.rfc-editor.org/rfc/rfc6819#section-4.1.3) and [used by Auth0](https://auth0.com/docs/secure/security-guidance/data-security/token-storage#browser-in-memory-scenarios) . There are some tradeoffs and not sure if it would work with Supabase's auth flow, but worth considering to add support for it.\r\n\r\n> We are going to be providing a PKCE endpoint which would allow developers to use HttpOnly cookies to store tokens if that makes sense for their needs.\r\n\r\nThanks, any plans when this will be released?\r\n\r\n> We are also not considering the case where a malicious script is running in the user's browser. If a user has a malicios extension, it is not something we can take care of, and we're assuming that the developer is responsible for dealing with security best practices such as preventing XSS, sanitizing input and ensuring only secure and trusted JavaScript is served on their domains.\r\n\r\nProtecting against XSS is hard and with security it is advisable to provide defense in depth, so it would be good to offer a more secure option if possible.",
                    "author": {
                        "login": "jcerjak"
                    },
                    "createdAt": "2023-03-30T16:11:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/946#issuecomment-1490568900"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ebPP5",
            "number": 948,
            "title": "role is empty for invited users",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nThe Client throws `role '' does not exist`.\r\nOn looking in the DB, it showed that the role field of new users is empty.\r\nEven after using the invite and setting a password, the role field stays empty.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Invite User via Supabase Studio (Selfhosted)\r\n2. Try to use Client to query.\r\n3. Client throws `role '' does not exist`.\r\n## Expected behavior\r\n\r\nThe role field should be populated with 'authenticated', just as it was the case a few weeks ago.\r\n\r\n",
            "author": {
                "login": "rokk4"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-14T13:48:04Z",
            "closedAt": "2023-02-14T20:09:59Z",
            "url": "https://github.com/supabase/gotrue/issues/948",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VQNoI",
                    "body": "` GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated`\r\nwas not set, creating a new user pulls the role field from this ... why?",
                    "author": {
                        "login": "rokk4"
                    },
                    "createdAt": "2023-02-14T20:09:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/948#issuecomment-1430313480"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eevuO",
            "number": 949,
            "title": "  Unique constraint violation on 2nd auth attempt",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\nThe first time a user uses OAuth (github/gmail) to login it works, the second throws an error.  Digging into it seems to error on a constraint on email.   Like it is doing an insert instead of an upsert.  Attached below are the relevant logs.\r\n\r\n```\r\nLog ID\r\n63e4e3e0-2f71-4671-a15f-772909e96277\r\n\r\nLog Timestamp (UTC)\r\n2023-02-01T18:05:14.488Z\r\n\r\nLog Event Message\r\ncurrent transaction is aborted, commands ignored until end of transaction block\r\n\r\nLog Metadata\r\n[\r\n  {\r\n    \"file\": \"/var/log/postgresql/postgresql.csv\",\r\n    \"host\": \"db-gtxuwfqqizavtqcjehwl\",\r\n    \"metadata\": [],\r\n    \"parsed\": [\r\n      {\r\n        \"application_name\": null,\r\n        \"backend_type\": \"client backend\",\r\n        \"command_tag\": \"DEALLOCATE\",\r\n        \"connection_from\": \"127.0.0.1:40538\",\r\n        \"context\": null,\r\n        \"database_name\": \"postgres\",\r\n        \"detail\": null,\r\n        \"error_severity\": \"ERROR\",\r\n        \"hint\": null,\r\n        \"internal_query\": null,\r\n        \"internal_query_pos\": null,\r\n        \"leader_pid\": null,\r\n        \"location\": null,\r\n        \"process_id\": 26670,\r\n        \"query\": \"deallocate \\\"pgx_31\\\"\",\r\n        \"query_id\": 0,\r\n        \"query_pos\": null,\r\n        \"session_id\": \"63d2e7b1.682e\",\r\n        \"session_line_num\": 16,\r\n        \"session_start_time\": \"2023-01-26 20:50:57 UTC\",\r\n        \"sql_state_code\": \"25P02\",\r\n        \"timestamp\": \"2023-02-01 18:05:14.488 UTC\",\r\n        \"transaction_id\": 1383,\r\n        \"user_name\": \"supabase_auth_admin\",\r\n        \"virtual_transaction_id\": \"9/0\"\r\n      }\r\n    ],\r\n    \"parsed_from\": null,\r\n    \"project\": \"gtxuwfqqizavtqcjehwl\",\r\n    \"source_type\": \"file\"\r\n  }\r\n]\r\n\r\n\r\nLog ID\r\nc9209fe8-8a7a-41f7-bddb-dd2fdb7847c9\r\n\r\nLog Timestamp (UTC)\r\n2023-02-01T18:05:14.487Z\r\n\r\nLog Event Message\r\nduplicate key value violates unique constraint \"users_email_partial_key\"\r\n\r\nLog Metadata\r\n[\r\n  {\r\n    \"file\": \"/var/log/postgresql/postgresql.csv\",\r\n    \"host\": \"db-gtxuwfqqizavtqcjehwl\",\r\n    \"metadata\": [],\r\n    \"parsed\": [\r\n      {\r\n        \"application_name\": null,\r\n        \"backend_type\": \"client backend\",\r\n        \"command_tag\": \"INSERT\",\r\n        \"connection_from\": \"127.0.0.1:40538\",\r\n        \"context\": null,\r\n        \"database_name\": \"postgres\",\r\n        \"detail\": \"Key (email)=(XXX@gmail.com) already exists.\",\r\n        \"error_severity\": \"ERROR\",\r\n        \"hint\": null,\r\n        \"internal_query\": null,\r\n        \"internal_query_pos\": null,\r\n        \"leader_pid\": null,\r\n        \"location\": null,\r\n        \"process_id\": 26670,\r\n        \"query\": \"INSERT INTO \\\"users\\\" (\\\"aud\\\", \\\"banned_until\\\", \\\"confirmation_sent_at\\\", \\\"confirmation_token\\\", \\\"created_at\\\", \\\"email\\\", \\\"email_change\\\", \\\"email_change_confirm_status\\\", \\\"email_change_sent_at\\\", \\\"email_change_token_current\\\", \\\"email_change_token_new\\\", \\\"email_confirmed_at\\\", \\\"encrypted_password\\\", \\\"id\\\", \\\"instance_id\\\", \\\"invited_at\\\", \\\"is_sso_user\\\", \\\"last_sign_in_at\\\", \\\"phone\\\", \\\"phone_change\\\", \\\"phone_change_sent_at\\\", \\\"phone_change_token\\\", \\\"phone_confirmed_at\\\", \\\"raw_app_meta_data\\\", \\\"raw_user_meta_data\\\", \\\"reauthentication_sent_at\\\", \\\"reauthentication_token\\\", \\\"recovery_sent_at\\\", \\\"recovery_token\\\", \\\"role\\\", \\\"updated_at\\\") VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31)\",\r\n        \"query_id\": 7171562738777285000,\r\n        \"query_pos\": null,\r\n        \"session_id\": \"63d2e7b1.682e\",\r\n        \"session_line_num\": 15,\r\n        \"session_start_time\": \"2023-01-26 20:50:57 UTC\",\r\n        \"sql_state_code\": \"23505\",\r\n        \"timestamp\": \"2023-02-01 18:05:14.487 UTC\",\r\n        \"transaction_id\": 1383,\r\n        \"user_name\": \"supabase_auth_admin\",\r\n        \"virtual_transaction_id\": \"9/23490\"\r\n      }\r\n    ],\r\n    \"parsed_from\": null,\r\n    \"project\": \"gtxuwfqqizavtqcjehwl\",\r\n    \"source_type\": \"file\"\r\n  }\r\n]\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n1. Go to [https://jspears.github.io/authbug] (https://jspears.github.io/authbug) [source](https://jspears.github.io/authbug)\r\n3. Click on 'login github'\r\n4. Click Logout \r\n5. Click login 'github'\r\n\r\nSee error \r\nhttps://jspears.github.io/authbug/?error=server_error&error_description=Database+error+saving+new+user?error=server_error&error_description=Database+error+saving+new+user\r\n## Expected behavior\r\nNo Error\r\n\r\n## Screenshots\r\n\r\n<img width=\"582\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1071/216202025-d1813179-59b0-4e39-b4f2-2430217f0651.png\">\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser chrome,safari, firefox\r\n- Version of supabase-js: @supabase/supabase-js\": \"^2.7.0\"\r\n- Version of Node.js: N/A\r\n\r\n## Additional context\r\n\r\nI had an auth trigger, that I thought might have caused this error, but I removed it and it still happens.  I also tried a 'clean' supabase instance and it did not seem reproduce.   \r\n\r\nFrom the schema it says\r\n\r\n```COMMENT ON INDEX auth.users_email_partial_key IS 'Auth: A partial unique index that applies only when is_sso_user is false';```\r\n\r\nI tried changing `auth.is_user_sso` to true/false/default, this did not fix the problem.\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "jspears"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-02T00:44:42Z",
            "closedAt": "2023-03-22T14:52:52Z",
            "url": "https://github.com/supabase/gotrue/issues/949",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRlZa",
                    "body": "So i've toggled the is_sso_user boolean to true and the issue goes away.  My assumption is if you use the OTM method first, than try to use SSO for auth, it will result in this condition.",
                    "author": {
                        "login": "jspears"
                    },
                    "createdAt": "2023-02-02T02:00:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1430672986"
                },
                {
                    "id": "IC_kwDOEKipmc5VRlZe",
                    "body": "Maybe related: https://github.com/supabase/gotrue/pull/929",
                    "author": {
                        "login": "ruggi99"
                    },
                    "createdAt": "2023-02-09T10:48:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1430672990"
                },
                {
                    "id": "IC_kwDOEKipmc5VRlZg",
                    "body": "hey @jspears, is the initial login via oauth a completely new user or does the user already exist? Also, did you have any triggers / functions that manually creates a user / modifies the data being inserted into the auth schema? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-09T14:09:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1430672992"
                },
                {
                    "id": "IC_kwDOEKipmc5VRlZj",
                    "body": "Hi @kangmingtay , I am facing similar issue.\r\n\r\nWhen a user creates an account using OAuth (Google), the account gets created.\r\n\r\nBut when the user creates and account using email+password, the account gets created. But afterwards when user tries to sign in with google using the same email id, following error is thrown\r\n\r\n`\r\nduplicate key value violates unique constraint \"users_email_partial_key\"\r\n`",
                    "author": {
                        "login": "KPreetham"
                    },
                    "createdAt": "2023-02-14T12:02:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1430672995"
                },
                {
                    "id": "IC_kwDOEKipmc5W6Wx4",
                    "body": "I have a similar issue for merging users. I described the issue here https://github.com/supabase/gotrue/issues/1109.\r\n\r\nAre any updates to this @J0 ? Merging users with same email is quiet a deal breaker.",
                    "author": {
                        "login": "ferrannp"
                    },
                    "createdAt": "2023-03-07T13:05:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1458138232"
                },
                {
                    "id": "IC_kwDOEKipmc5XVpaF",
                    "body": "any update on this? this is so annoying",
                    "author": {
                        "login": "bigp34ch"
                    },
                    "createdAt": "2023-03-12T20:29:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1465292421"
                },
                {
                    "id": "IC_kwDOEKipmc5Xd-Y8",
                    "body": "@kangmingtay could this be related to this fix https://github.com/supabase/gotrue/pull/990, i.e. that fixes this issue?",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-14T06:56:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1467475516"
                },
                {
                    "id": "IC_kwDOEKipmc5YMqC3",
                    "body": "I believe this is fixed with #990. Will close this issue it's rolling out in the next few days on all projects.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-22T14:52:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1479712951"
                },
                {
                    "id": "IC_kwDOEKipmc5YP-6n",
                    "body": "_appears_ to be fixed (haven't tested it personally, but teammate has)",
                    "author": {
                        "login": "bigp34ch"
                    },
                    "createdAt": "2023-03-23T04:24:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1480584871"
                },
                {
                    "id": "IC_kwDOEKipmc5YQCTm",
                    "body": "@bigp34ch if you are still running into any issues, please feel free to open a support ticket through https://app.supabase.com/support/new and we'll definitely look into it!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-23T04:51:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/949#issuecomment-1480598758"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewbn",
            "number": 950,
            "title": "On auth(), new custom domain returns \u201cServer error. Try again later.\u201d",
            "body": "# Bug report\r\n\r\nI followed the steps as described https://www.youtube.com/watch?v=6rcGnW_Mh-0 and https://supabase.com/docs/guides/platform/custom-domains (I think)\r\n\r\nOn auth(), custom domain returns \u201cServer error. Try again later.\u201d Deployed on Netlify... my local dev .env updated to the new custom subdomain. What am I missing?\r\n\r\n<img width=\"736\" alt=\"Screen Shot 2023-01-27 at 10 23 15 PM\" src=\"https://user-images.githubusercontent.com/4491052/215247020-41de2bca-37d0-45f6-b9bc-05debcd04deb.png\">\r\n<img width=\"625\" alt=\"Screen Shot 2023-01-27 at 10 22 58 PM\" src=\"https://user-images.githubusercontent.com/4491052/215247027-26383ab2-9b38-403b-ae8c-1a1293abadf5.png\">\r\n\r\n\r\n\r\n",
            "author": {
                "login": "renefournier"
            },
            "state": "CLOSED",
            "createdAt": "2023-01-28T05:26:46Z",
            "closedAt": "2023-03-22T14:57:21Z",
            "url": "https://github.com/supabase/gotrue/issues/950",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRl-c",
                    "body": "hey @renefournier, have you checked that your custom domain resolves to the correct supabase domain (npdjanuga...supabase.co) at https://dnschecker.org/ ?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-14T08:30:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/950#issuecomment-1430675356"
                },
                {
                    "id": "IC_kwDOEKipmc5YMrzX",
                    "body": "@renefournier Please open a [Support Ticket](https://app.supabase.com/support/new) if you're having issues on a production instance. GitHub issues are primarily meant to track bugs with the software.\r\n\r\nPlease re-open the issue if you are still having troubles, though make sure you speak to someone in support first.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-22T14:57:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/950#issuecomment-1479720151"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewch",
            "number": 952,
            "title": "App not launched after signing in with OAuth - Flutter iOS ",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI am trying to use OAuth with my self-hosted Supabase and my Flutter app. On web it works as expected\u2026 the OAuth sign in opens and, after successfully authenticating, the user is redirected to the main site and automatically signed in. On the iOS app, a web browser is opened externally where the user signs in to OAuth, and then they are redirected to the website with the token. However, with iOS I need the user to be redirected to the app with the token, not the website. Based on the Supabase docs, this deeplink should work out of the box, since the docs only show one simple function to sign in with OAuth. I added my domain to associated domains, added the bundle ID and website URL to CFBundleURLSchemes, and added a redirect URL of `<bundle ID>://login-callback` which is what other Supabase docs said to do. Still, the website opens instead of launching the app. This seems to have been a reported problem in the past, and people found a workaround, but it doesn\u2019t work since the code changes in v2. \r\n\r\n## To Reproduce\r\nThis code snippet (from Supabase Docs):\r\n```\r\nawait supabase.auth.signInWithOAuth(\r\n  Provider,\r\n  redirectTo: kIsWeb ? null : 'io.supabase.flutter://reset-callback/',\r\n);\r\n```\r\n## Expected behavior\r\n\r\nApp opens a OAuth website, then, after user signs in, the app opens again with the user signed in. \r\n\r\n## System information\r\n\r\n- Platform: iOS (Flutter app, not native)",
            "author": {
                "login": "globemediaofficial"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-14T02:59:43Z",
            "closedAt": "2023-02-15T03:41:28Z",
            "url": "https://github.com/supabase/gotrue/issues/952",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRl-2",
                    "body": "same problem",
                    "author": {
                        "login": "Javas01"
                    },
                    "createdAt": "2023-01-05T02:39:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/952#issuecomment-1430675382"
                },
                {
                    "id": "IC_kwDOEKipmc5VRl-5",
                    "body": "You need to put the authorized redirect URL given by the supabase while creating google Oauth credentials and add `<bundle ID>://login-callback` this to redirect URLs in supabase. that should work",
                    "author": {
                        "login": "dhruvja"
                    },
                    "createdAt": "2023-01-28T16:46:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/952#issuecomment-1430675385"
                },
                {
                    "id": "IC_kwDOEKipmc5VRtfl",
                    "body": "Hey! \r\n\r\nAuth team here - thanks for the query - as @dhruvja mentioned do be sure that you've  added `<bundle ID>://login-callback` as a callback URL.\r\n\r\nGoing to close for now but feel free to re-open if issue persists. Thanks!\r\n\r\ncc: @dshukertjr for visibility",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-15T03:41:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/952#issuecomment-1430706149"
                },
                {
                    "id": "IC_kwDOEKipmc5VR3z7",
                    "body": "I meant to mark this as complete, the issue was that I hadn\u2019t added the redirect as and Additional Redirect URL. After doing that it worked as expected. ",
                    "author": {
                        "login": "globemediaofficial"
                    },
                    "createdAt": "2023-02-15T04:43:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/952#issuecomment-1430748411"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewdc",
            "number": 954,
            "title": "Sign in with Apple doesn't redirect to iOS app",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI'm building a Capacitor app with Supabase and am including Google and Apple as auth providers. I also have a web application built with Next.js using the same Supabase instance.\r\n\r\nWhen signing in to the mobile app with Google on iOS, the user successfully gets redirected back to the mobile app and logged in. When signing in with Apple, it redirects to the web app with the credentials in the URL instead of deep linking to the app (even though I'm using the same redirect to url for both providers). \r\n\r\nI need to read up more on GoTrue, but maybe it has something to do with including the redirectTo in the callback url? The call to `/authorize` will include redirectTo but the callback is set statically. \r\n\r\n## To Reproduce\r\n\r\n1. Configure Apple as an auth provider in Supabase (I know the Apple config works because users can sign into the web app successfully)\r\n2. Configure deep links with Capacitor\r\n3. In the app, the user signs in with Supabase `await sb.auth.signIn({ provider: <apple or google> }, { redirectTo: \"mysite.com/mobile\" })`\r\n5. The web app ignores the session in the url and handles it manually if it's not going to the \"mobile\" url so it's not consuming the mobile credentials (`supabaseClient = createClient(url, key, { detectSessionInUrl: false })`)\r\n6. Deep links are configured successfully and included in the Supabase auth configuration for additional redirect urls. If I copy the url that appears after signing in with Apple to another app like Notes and click it, it opens the mobile app and logs the user in which is the expected behavior. \r\n\r\nUnfortunately I'm not sure of a great way to make a reproducible example given the amount of config that goes into setting up deep links + sign in with Apple.\r\n\r\n## Expected behavior\r\n\r\n1. User clicks signs in with Apple\r\n2. User authenticates with Apple\r\n3. Redirect back to the mobile app\r\n4. User is signed in\r\n\r\n## System information\r\n\r\n- OS: iOS\r\n- Version of supabase-js: 1.35.7\r\n",
            "author": {
                "login": "connorlindsey"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-10T21:18:33Z",
            "closedAt": "2023-03-01T04:25:34Z",
            "url": "https://github.com/supabase/gotrue/issues/954",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRl_m",
                    "body": "hey @connorlindsey, can you please elaborate more on how this is being set up? \r\n\r\n> Configure deep links with Capacitor\r\n\r\nBased on my understanding of Capacitor, it takes a URL and maps it to a mobile deep link. So clicking on a url like `http://foo.app` will open up the \"foo\" mobile app instead of a web page.\r\n\r\n>  If I copy the url that appears after signing in with Apple to another app like Notes and click it, it opens the mobile app and logs the user in which is the expected behavior.\r\n\r\nAlso, does this mean that after the callback, the user gets redirected to the web app instead of the mobile app. However, the URL in the web app still shows `http://foo.app` instead of opening up the mobile app.\r\n\r\nI'm not too familiar with Capacitor but it seems like it could be the cause of the issue - you might want to check when you are creating the listener and if it's created before or after the redirect happens.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-14T07:40:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/954#issuecomment-1430675430"
                },
                {
                    "id": "IC_kwDOEKipmc5WYuCX",
                    "body": "Hey,\r\n\r\nI'm going to close this issue as it seems to have gone stale - feel free to reach back out if you have further questions though!\r\n\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T04:25:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/954#issuecomment-1449320599"
                },
                {
                    "id": "IC_kwDOEKipmc5Wc_58",
                    "body": "Sorry, meant to follow up on this with more detail. \r\n\r\nI was able to work around it by using Capacitor's apple sign in with apple package rather than Supabase's auth directly, then I signed in with oidc using the identity token from Capacitor's sign in with Apple. ",
                    "author": {
                        "login": "connorlindsey"
                    },
                    "createdAt": "2023-03-01T16:29:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/954#issuecomment-1450442364"
                },
                {
                    "id": "IC_kwDOEKipmc5dW0yh",
                    "body": "Hello @connorlindsey, I've been trying desperately to do the same thing for a week in an ionic capacitor app, could you give me more details on how you managed to do this please ?",
                    "author": {
                        "login": "XStarlink"
                    },
                    "createdAt": "2023-05-28T21:10:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/954#issuecomment-1566264481"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewdv",
            "number": 955,
            "title": "Google OAuth not working on Flutter",
            "body": "Using the latest Supabase Library (flutter_supabase 1.1.0) and Hosted Supabase after selecting a Google account on the page I automatically get redirected to \"localhost:3000\" instead of the defiend \"redirectTo\" Parameter:\r\n\r\n![image](https://user-images.githubusercontent.com/20727326/199837744-d6021280-9221-45d9-9c30-447cc26867fc.png)\r\n\r\nI followed the official guide to set up my Google OAuth Screen and Client-ID and set the URLS like this:\r\n![image](https://user-images.githubusercontent.com/20727326/199837883-c6f22593-8bd9-472c-a941-f578c5c65a0b.png)\r\n\r\nI don't really see what I'm doing wrong here which is why I assume this is a bug.",
            "author": {
                "login": "thilojaeggi"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-03T21:29:33Z",
            "closedAt": "2023-02-15T03:39:29Z",
            "url": "https://github.com/supabase/gotrue/issues/955",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRl_0",
                    "body": "you also need to add `ch.sling.app://login-callback` in the list of permitted redirect URLs here: https://app.supabase.com/project/kpzrlczwxpsgzsxbucgg/auth/url-configuration\r\n\r\n<img width=\"999\" alt=\"image\" src=\"https://user-images.githubusercontent.com/458736/200042839-10e5cd45-3b8b-4645-982f-82a5ea5cd360.png\">\r\n",
                    "author": {
                        "login": "awalias"
                    },
                    "createdAt": "2022-11-04T17:51:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/955#issuecomment-1430675444"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmAJ",
                    "body": "Still seeing this one @thilojaeggi ?",
                    "author": {
                        "login": "saltcod"
                    },
                    "createdAt": "2022-12-20T12:58:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/955#issuecomment-1430675465"
                },
                {
                    "id": "IC_kwDOEKipmc5VRtQv",
                    "body": "Going to close this one due to inactivity but feel free to re-open if issue persists.\r\n\r\ncc: @dshukertjr for visibility",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-15T03:39:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/955#issuecomment-1430705199"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eeweO",
            "number": 956,
            "title": "signInWithOAuth discord OAuth scope",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nThe default scope for sign in with discord is ```identify+email```. I want to use identify scope only.\r\nUsing ```scope``` parameter will not remove the default ```identify+email``` but can only add other scopes to it.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. use ```supabase.auth.signInWithOAuth``` with ```provider: discord```\r\n2. See error\r\n\r\n## Expected behavior\r\n\r\ndiscord OAuth able to set scope manually\r\n",
            "author": {
                "login": "aiden0w0"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-01T18:56:44Z",
            "closedAt": "2023-02-23T05:58:37Z",
            "url": "https://github.com/supabase/gotrue/issues/956",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRmAM",
                    "body": "Any update ?\r\nI would like to enable others scopes, how can I do ?",
                    "author": {
                        "login": "jben7"
                    },
                    "createdAt": "2023-02-01T17:22:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1430675468"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmAS",
                    "body": "> Any update ? I would like to enable others scopes, how can I do ?\r\n\r\nyou can use the scope parameter for that function and add other scopes you need.",
                    "author": {
                        "login": "aiden0w0"
                    },
                    "createdAt": "2023-02-06T17:18:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1430675474"
                },
                {
                    "id": "IC_kwDOEKipmc5VRuLH",
                    "body": "Hey! \r\n\r\nThanks for the query As @haode333 mentioned one can do something like\r\n\r\n```\r\n\r\nconst { data, error } = await supabase.auth.signInWithOAuth({\r\n  provider: 'discord'\r\n  options: {\r\n    scopes: '<my-scopes>'\r\n  }\r\n})\r\nconst oAuthToken = data.session.provider_token // use to access provider API\r\n```\r\n\r\nFeel free to check out [our reference docs](https://supabase.com/docs/reference/javascript/auth-signinwithoauth) for details. Closing for now but feel free to re-open if there are issues\r\n\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-15T03:46:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1430708935"
                },
                {
                    "id": "IC_kwDOEKipmc5VRz_P",
                    "body": "Hi @J0 ,\r\n\r\nThe original issue is that there's a default scope ```identify+email``` and the options parameter can not replace it but only add to it.\r\nI believe it's not fixed still.",
                    "author": {
                        "login": "aiden0w0"
                    },
                    "createdAt": "2023-02-15T04:11:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1430732751"
                },
                {
                    "id": "IC_kwDOEKipmc5VR3-0",
                    "body": "Hm @haode333,\r\n\r\nThanks for the clarification!  The fix would probably be to [remove this line](https://github.com/supabase/gotrue/blob/master/internal/api/provider/discord.go#L41) and test that the OAuth provider works.\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-15T04:45:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1430749108"
                },
                {
                    "id": "IC_kwDOEKipmc5VfYUT",
                    "body": "Hey @haode333,\r\n\r\nDo you mind also expanding a little bit more as to why you'd like to drop the email scope?  Removing the scope would potentially break the flow for other users who may depend on the OAuth call requesting for both scopes. As such, it's unlikely that we'll move forward with it  unless there's strong justification provided.\r\n\r\nLet us know.\r\n\r\nThanks",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-17T08:26:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1434289427"
                },
                {
                    "id": "IC_kwDOEKipmc5VfruA",
                    "body": "Hi @J0 ,\r\n\r\nI'm totally fine with its defaulting to ```identify+email```. I'm just unsure why changing it only adds onto default instead of replacing it.\r\nThis is what I think should be changed.\r\n```oauthScopes = append(oauthScopes, strings.Split(scopes, \",\")...)```",
                    "author": {
                        "login": "aiden0w0"
                    },
                    "createdAt": "2023-02-17T09:26:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1434368896"
                },
                {
                    "id": "IC_kwDOEKipmc5V57yV",
                    "body": "Hey @haode333,\r\n\r\nThat makes sense. I may be missing something but by [Hyrum's Law](https://www.hyrumslaw.com/) I think this would also break the existing setup for users who may have assumed that the default is `identify+email`\r\n\r\nIt's likely that we'll be leaving it as is for now but we can definitely revisit this if we do a revamp of the API.\r\n\r\nGoing to close for now but let me know if there are major concerns about this.\r\nJo\r\n ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-23T05:58:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1441250453"
                },
                {
                    "id": "IC_kwDOEKipmc5pWGrT",
                    "body": "@J0 Instead of closing the issue and not doing anything about it for the excuse of \"muh breaks existing setups\" and not just **add some option tell if you want to use default setup (current one) or provide your own set of scopes**\r\n\r\nThis is tiring, you shouldn't assume what users want and hardcode scopes straight from your a**\r\n\r\nI've spent hours debugging this and got embarrassed after the signin didn't work for some users who created their discord accounts using their phone numbers (their accounts didn't have an email attached so resulted in the sign in failing)\r\n\r\nso please fix this by at least giving the users **choice**",
                    "author": {
                        "login": "salahmak"
                    },
                    "createdAt": "2023-10-18T00:32:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1767402195"
                },
                {
                    "id": "IC_kwDOEKipmc5pdBnr",
                    "body": "shame\ud83d\ude21",
                    "author": {
                        "login": "RayanZaki"
                    },
                    "createdAt": "2023-10-18T19:50:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/956#issuecomment-1769216491"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewfl",
            "number": 960,
            "title": "Clarify how to use updateUser() v2",
            "body": "# Improve documentation\r\n\r\n## Link \r\n\r\nSee description (it's about two pages).\r\n\r\n## Describe the problem\r\n\r\nThe `Notes` for [resetPasswordForEmail()](https://supabase.com/docs/reference/javascript/next/auth-resetpasswordforemail#notes) say:\r\n\r\n> Sends a password reset request to an email address. When the user clicks the reset link in the email they are redirected back to your application. Prompt the user for a new password and call auth.updateUser()\r\n\r\nThe documentation for [updateUser()](https://supabase.com/docs/reference/javascript/next/auth-updateuser) says:\r\n\r\n> Updates user data, **if there is a logged in user.**\r\n\r\nAlso in the `Notes` further down the page:\r\n\r\n> In order to use the updateUser() method, **the user needs to be signed in first.**\r\n\r\nI was confused because I couldn't understand how the user could be logged in after they clicked on the link in the reset password email.\r\n\r\nI had to look into the source, in particular [this line](https://github.com/supabase/supabase-js/blob/affe5b5c66c35f96380d0a73783993b72eda2e52/src/SupabaseClient.ts#L16) in the `constructor()` for the `SupabaseClient` to understand that the link automatically logs in the user **when `detectSessionInUrl` is true** (I need to make sure of this).\r\n\r\n## Describe the improvement\r\n\r\nI'd add:\r\n- a sentence to `updateUser()`'s notes `In order to use the updateUser() method, the user needs to be signed in first.` explaining that the link in `resetPasswordForEmail()` auto-logs in the user\r\n- a similar sentence to `Sends a password reset request to an email address. When the user clicks the reset link in the email they are redirected back to your application. Prompt the user for a new password and call auth.updateUser()`",
            "author": {
                "login": "3v0k4"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-03T16:58:30Z",
            "closedAt": "2023-02-15T03:32:09Z",
            "url": "https://github.com/supabase/gotrue/issues/960",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRmBZ",
                    "body": "@3v0k4 I completely agree with you. Thanks for explaining. I was wondering how in the world the supabase client knew that the access token it was returning was valid. ",
                    "author": {
                        "login": "superjose"
                    },
                    "createdAt": "2022-10-11T12:21:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/960#issuecomment-1430675545"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmBf",
                    "body": "Maybe a hint on how to set the redirect_uri in the updateUser call would be great as well.",
                    "author": {
                        "login": "Crenshinibon"
                    },
                    "createdAt": "2022-11-26T17:41:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/960#issuecomment-1430675551"
                },
                {
                    "id": "IC_kwDOEKipmc5VRsV-",
                    "body": "hey @3v0k4, we've included the feedback on the docs you've provided to the [updateUser](https://supabase.com/docs/reference/javascript/auth-updateuser) and [reset password](https://supabase.com/docs/reference/javascript/auth-resetpasswordforemail) methods already - please let us know if you'd like to see anything else! \r\n\r\n@Crenshinibon I've made a fix in the client library method for updateUser to allow passing a custom redirect url when updating the user's email (https://github.com/supabase/gotrue-js/pull/610) - will update the docs when that is merged!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-02-15T03:32:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/960#issuecomment-1430701438"
                },
                {
                    "id": "IC_kwDOEKipmc5WYitX",
                    "body": "Do you guys know if `supabase.auth.updateUser({ password: newPassword })` it's working properly on server side? I'm getting `Auth session missing!` error even when if I do **getUser** ou **refreshSession**. It's weird because in supabase-js v1 this chage-password thing was working normal. And it broke after upgrading the library.\r\n\r\nI used to use: updateuserById. But this method it's obsolete now.\r\n\r\n`await supabaseAuth.auth.api.updateUserById(\r\n        loggedUser.id,\r\n        {password: password}\r\n      )`\r\n",
                    "author": {
                        "login": "gabrielsestrem"
                    },
                    "createdAt": "2023-03-01T03:19:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/960#issuecomment-1449274199"
                },
                {
                    "id": "IC_kwDOEKipmc5WYjXF",
                    "body": "Nevermind... I found the methond under the **admin**:\r\n\r\n`supabase.auth.admin.updateUserById(user.id, {password: password})`",
                    "author": {
                        "login": "gabrielsestrem"
                    },
                    "createdAt": "2023-03-01T03:24:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/960#issuecomment-1449276869"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewgt",
            "number": 963,
            "title": "auth bug: token expired in client, but UI does not reflect this, allows user to make changes",
            "body": "# Bug report\r\n\r\nIf we create a bucket then delete it we cannot create a new bucket with that name: error is \"Invalid Signature\" \r\n\r\n## To Reproduce\r\n\r\nCreate a bucket, delete it, try to create a bucket with the same name as the deleted bucket\r\n\r\n## Expected behavior\r\nWe should be able to create a bucket, delete it, then create it again\r\n\r\n",
            "author": {
                "login": "fergusmeiklejohn"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-26T00:27:25Z",
            "closedAt": "2023-02-15T03:49:26Z",
            "url": "https://github.com/supabase/gotrue/issues/963",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRmCR",
                    "body": "Okay so the bug is actually in auth. The client renders like I'm authorised, I can go through the process of creating a new bucket but then I get an error message. The solution is to refresh the browser which I suppose refreshes the auth token?",
                    "author": {
                        "login": "fergusmeiklejohn"
                    },
                    "createdAt": "2022-05-26T00:33:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/963#issuecomment-1430675601"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmCT",
                    "body": "And this is a bug I see constantly with the web interface. My access token is out of date, I can still use the UI, I attempt to perform an action, it fails but the error message makes it seem like the action has failed rather than it being an auth problem. Sometimes the UI is rendered in a state which makes it seems like all the data has been deleted",
                    "author": {
                        "login": "fergusmeiklejohn"
                    },
                    "createdAt": "2022-05-26T03:59:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/963#issuecomment-1430675603"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmCU",
                    "body": "Hey @fergusmeiklejohn thanks for the report here. \r\n\r\nI tried to reproduce your issue, but maybe I'm missing a step that you're doing locally.  I can create a bucket, delete it, create it again. Love to know if I'm missing something there!\r\n\r\nhttps://user-images.githubusercontent.com/105593/171033919-62992200-1667-4685-839c-59fbc2fc9ee9.mp4\r\n\r\n\r\n",
                    "author": {
                        "login": "saltcod"
                    },
                    "createdAt": "2022-05-30T16:46:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/963#issuecomment-1430675604"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmCV",
                    "body": "Hey @saltcod I think the bug is actually in auth. I opened the issue because I had this experience with buckets but since have had similar buggy interactions with the dashboard all (I think) because the access_token has become invalid on the client, but the client is still allowing us to perform actions which fail when they hit the database. The token is to to expire in 3600 secs so if we have an open tab which we come back to after longer than 3600 secs, the browser renders the page and all interactions which were available at the time the page was created are all still available but will ultimately fail when they hit the database. Have you open sourced the dashboard? Without looking at the code I'm guessing a bit.. I'm finding that I can navigate within the dashboard while auth is stale and then perform an action which fails.",
                    "author": {
                        "login": "fergusmeiklejohn"
                    },
                    "createdAt": "2022-05-31T05:29:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/963#issuecomment-1430675605"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmCZ",
                    "body": "Right, gotcha. Thanks for the clarification there. \r\n\r\nWould love to have a specific example of where you're seeing that. That kind of thing generally shouldn't be happening as we're fetching data with [swr](https://swr.vercel.app/). Swr automatically revalidates after you return to an unfocused a tab after a minute or two. \r\n\r\nI wonder if you're encountering this issue on pages that fetch data differently. If you come up with a way to reproduce this, we'd greatly appreciate you sending it along. \r\n\r\nThanks again!",
                    "author": {
                        "login": "saltcod"
                    },
                    "createdAt": "2022-05-31T09:13:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/963#issuecomment-1430675609"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmCa",
                    "body": "Just fyi will be removing the \"dashboard\" label since the issue is in auth - but please do feel free to let us know if the issue turns out to be from the dashboard instead anytime! \ud83d\ude4f ",
                    "author": {
                        "login": "joshenlim"
                    },
                    "createdAt": "2022-09-27T05:47:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/963#issuecomment-1430675610"
                },
                {
                    "id": "IC_kwDOEKipmc5VRuif",
                    "body": "Hey all,\r\n\r\nThis shouldn't be surfacing again with the new token-refresh algo and tab-syncing. Going to close for now but feel free to re-open if issue re-appears\r\n\r\ncc: @hf for visibility",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-15T03:49:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/963#issuecomment-1430710431"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewh9",
            "number": 965,
            "title": "Supabase Service Key mode will not override RLS if a user token is applied.",
            "body": "# Bug report\r\nIn looking at a user issue with SilentWorks on Discord, a strange result was happening with SvelteKit server side requests being blocked by RLS with service_key used to init the Supabase client (in this case on server).   \r\n\r\nSeems setting a user token overrides the service_key mode of createClient.\r\n\r\nIf true this could cause strange results with left over, or applied tokens to the supabase object.\r\nThis is probably the way things are supposed to work, but not sure that is well understood.\r\n\r\n## To Reproduce\r\n\r\nI don't use server side code, so the mock up test I did is simple JS.  So not a normal service_role mode, BUT I believe the results will still apply to server side code based on the network requests to PostgREST.\r\n\r\nFirst Run with service key and no user signin.  Table returns value.\r\nSign in user.  \r\nRun with service key and table returns [].\r\nTurn off Signin.\r\nStill returns [].\r\nClear local storage.\r\nTable returns value.\r\n\r\nDifference in network requests without and with user token:\r\n\r\nService Key and no signed in user.  Note bearer token matches service key (short)\r\n![image](https://user-images.githubusercontent.com/54564956/161457145-ee4c3575-e743-402e-8946-9cbc47eaf452.png)\r\n\r\nService Key and signed in user.  Note longer bearer token.\r\n![image](https://user-images.githubusercontent.com/54564956/161457257-f8a92076-cdfb-4a23-8c4d-8a9bcf7db38f.png)\r\n\r\n## Expected behavior\r\n\r\nI acknowledge my test is not real world as browser should not run with service role, but I believe on a server with a left over user token from session or set on purpose the same result would occur based on the network request.\r\n\r\nAt a minimum it should be made clear service_key role applied to supabase client object only works with no user token applied. \r\n\r\nCode to reproduce:\r\n```\r\nvar supabase = supabase.createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY)\r\nasync function app () {\r\n/*\r\n    const {user} = await supabase.auth.signIn({\r\n        email:'gabbott@sommapp.com',\r\n        password:'testpass'\r\n    })\r\n    */\r\n    const { data, error} = await supabase\r\n        .from('test')\r\n        .select('*')\r\n        .eq('id',55)\r\n    console.log(data,error)\r\n}\r\napp()\r\n```\r\n\r\nThis could be known, but 3 of us on Discord assumed service_role would always override.   \r\nOnce again, I note that on the server side maybe the issue can not occur, but I suspect if the supabase object gets a user token, it overrides the service role key.   \r\n\r\n",
            "author": {
                "login": "GaryAustin1"
            },
            "state": "CLOSED",
            "createdAt": "2022-04-04T01:05:57Z",
            "closedAt": "2023-03-20T08:16:14Z",
            "url": "https://github.com/supabase/gotrue/issues/965",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRmDQ",
                    "body": "I can also confirm that with no user signin or local storage set...\r\nDoing \r\nsupabase.auth.setAuth(access_token)\r\nWith a valid user token also over rides the service key role.\r\nI suspect there maybe code on server side apps that do various things with the same supabase object and if they ever set the token for one operation, other strictly service role operations will start failing.\r\n",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2022-04-04T01:24:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/965#issuecomment-1430675664"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmDT",
                    "body": "> Service Key and no signed in user.\r\n> Service Key and signed in user.\r\n\r\n@GaryAustin1 Oh, wait. So you assume that both keys will have an effect on db authorization right? That's not the case actually, only the `Authorization: Bearer <jwt>` will affect the db.\r\n\r\nThe key in `apikey` is a Kong thing, it doesn't reach the db and it's only there for rejecting requests without a JWT. See this previous discussion https://github.com/supabase/supabase/discussions/1925#discussioncomment-859934.\r\n\r\nLet me know if that clarifies things.\r\n\r\n(Also, would have to discuss this with the infra team but it might be possible to remove the `apikey` Kong protection now that [postgrest has an option to disallow anon requests](https://postgrest.org/en/latest/releases/latest.html#run-without-configuration))",
                    "author": {
                        "login": "steve-chavez"
                    },
                    "createdAt": "2022-04-04T19:25:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/965#issuecomment-1430675667"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmDa",
                    "body": "@steve-chavez I think this more a confusion thing, but it is likely users assume use of service key is absolute.  As we were debugging a user issue on RLS not working with server side code involving setting token into the SB client. It came out he was using service key.  All three of us assumed his code should bypass RLS.  As I thought about setting token I thought it might be the issue.  After seeing auth header with bearer it is clear what is happening.\r\nBut if your SB client on server is doing multiple things or has left over token, (browser client pulls token from storage even if you start new client with service key). Not sure how all the server auth helpers are working.  Silentworks and I thought worth reporting and at a min documenting that if your token gets set in client you lose service key from init.   ",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2022-04-04T19:55:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/965#issuecomment-1430675674"
                },
                {
                    "id": "IC_kwDOEKipmc5VRmDd",
                    "body": "Perhaps this one requires a docs update. Even if we switched it to the opposite, there would still be confusion for developers, but also with the downside that their false-assumption has caused a data-breach (RLS is bypassed).\r\n\r\nOnce a user is signed in with a client, we definitely want to adhere to the RLS of that user. Let's update the docs to make this clear?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-04-05T12:55:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/965#issuecomment-1430675677"
                },
                {
                    "id": "IC_kwDOEKipmc5ib7vI",
                    "body": "If you run in to this, use a bogus cookie name for the service role client so it won't grab on to the user session:\r\n\r\n```js\r\ncookieOptions: {\r\n    name: 'no-cookie-for-you'\r\n}\r\n```",
                    "author": {
                        "login": "nathancahill"
                    },
                    "createdAt": "2023-07-26T10:22:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/965#issuecomment-1651489736"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5eewiu",
            "number": 967,
            "title": "Include user image to the auth table (from initials generated to social platform generation)",
            "body": "# Feature request\r\nInclude user image to the auth table (from initials generated to social platform generation)\r\n\r\nFrom AppWrite (A supabase open source alternative)\r\n![users-section4](https://user-images.githubusercontent.com/100037148/154984272-96c33fa0-be3c-4842-90cc-9ed3ea0a270b.png)\r\n\r\n\r\n\r\nFrom Firebase\r\n```kt\r\n// Retrieving user photo\r\nval user = Firebase.auth.currentUser\r\nuser?.let {\r\n    for (profile in it.providerData) {\r\n        // Id of the provider (ex: google.com)\r\n        val providerId = profile.providerId\r\n\r\n        // UID specific to the provider\r\n        val uid = profile.uid\r\n\r\n        // Name, email address, and profile photo Url\r\n        val name = profile.displayName\r\n        val email = profile.email\r\n        val photoUrl = profile.photoUrl\r\n    }\r\n}\r\n\r\n// Updating user photo\r\nval user = Firebase.auth.currentUser\r\n\r\nval profileUpdates = userProfileChangeRequest {\r\n    displayName = \"Jane Q. User\"\r\n    photoUri = Uri.parse(\"https://example.com/jane-q-user/profile.jpg\")\r\n}\r\n\r\nuser!!.updateProfile(profileUpdates)\r\n        .addOnCompleteListener { task ->\r\n            if (task.isSuccessful) {\r\n                Log.d(TAG, \"User profile updated.\")\r\n            }\r\n        }\r\n```\r\n\r\nFirebase and AppWrite also knows what image to show\r\nExample:\r\na. if user sign up via email/password (We can use name initials as photo)\r\nb. if it is based on 3rd party sign up e.g. Facebook or Twitter use that photo from the platform\r\n\r\nThis makes it by default user has a photo depend on what method of sign up.",
            "author": {
                "login": "bossjapzz"
            },
            "state": "OPEN",
            "createdAt": "2022-02-21T15:33:24Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/967",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VRmD6",
                    "body": "Hey! \r\n\r\nThanks for the query - can I clarify that this is for displaying profile images on the dashboard user management interface? ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-09T05:18:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/967#issuecomment-1430675706"
                },
                {
                    "id": "IC_kwDOEKipmc5VRnwJ",
                    "body": "Going to close for now - will log as feedback for consideration but feel free to re-open if this is still an issue!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-15T03:00:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/967#issuecomment-1430682633"
                },
                {
                    "id": "IC_kwDOEKipmc5mp2Z0",
                    "body": "+1",
                    "author": {
                        "login": "WarrenGreen"
                    },
                    "createdAt": "2023-09-16T14:53:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/967#issuecomment-1722246772"
                },
                {
                    "id": "IC_kwDOEKipmc5o7rG1",
                    "body": "+1 for this, we wanted to migrate from firebase, they are providing the photo_url, but not supabase(it depends on provider)",
                    "author": {
                        "login": "kasvith"
                    },
                    "createdAt": "2023-10-12T22:48:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/967#issuecomment-1760473525"
                }
            ]
        },
        {
            "id": "MDU6SXNzdWUxNTg1MTIxNTM1",
            "number": 970,
            "title": "Standardize Error Responses across APIs",
            "body": "As suggested by Nicolo, we should standardize the error responses coming from GoTrue, postgres, and realtime (and any other/future APIs) so that it's better DX when writing a client,\r\n\r\nWe can make this change on the servers themselves, but since postgrest and gotrue are fully/partially external may be harder to change, it might be an option to transform the errors within the client libraries/supabase-js, could be messy?\r\n\r\nNicolo also dropped this as a reference: http://spec.openapis.org/oas/v3.0.3#openapi-specification",
            "author": {
                "login": "awalias"
            },
            "state": "CLOSED",
            "createdAt": "2021-01-11T11:44:05Z",
            "closedAt": "2023-02-23T05:53:10Z",
            "url": "https://github.com/supabase/gotrue/issues/970",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5es-Me",
            "number": 975,
            "title": "Security definer's 'new' object only has app_metadata after update not after insert",
            "body": "# Improve documentation\r\n\r\n## Link \r\n\r\nhttps://supabase.com/docs/guides/auth/managing-user-data\r\n\r\n## Describe the problem\r\n\r\nWhen following the managing user data > using triggers example it seems like all data will be available in the `new` object, just as `new.id` is after INSERT. In fact there are many tutorials on the internet which show how to add more data to a profiles table while referencing `new.raw_user_meta_data`. What is not clear from the supabase docs is that `new.raw_app_meta_data` will not contain any data added when `createUser()` is run. Instead this data will become available in a security definer triggered after an UPDATE.\r\n\r\n@GaryAustin1 has clarified:\r\n> The issue is really that the insert to the database does not insert that column value and they do a 2nd update call to the database to put in the app_metadata.  Has nothing to do with new/old and the type of function.\r\n\r\n## Describe the improvement\r\n\r\nAdd a warning to the tutorial that `new.raw_app_meta_data` will only be accessible in a function triggered by an UPDATE. Or alternatively make `new.raw_app_meta_data` available after INSERT inline with all other values which are passed on `createUser()` if this is not the intended behavior. \r\n\r\n## Additional context\r\n\r\nMaybe related to this bug https://github.com/supabase/gotrue/pull/628 as perhaps app_metadata was only inserted into auth.users but not made available in security definers. (I maybe be misunderstanding how postgres works though)\r\n\r\nHere are my logs after running \r\n\r\n` const {\r\n        data: { user },\r\n        error: createUserError,\r\n      } = await serviceSupabase.auth.admin.createUser({\r\n        email,\r\n        user_metadata: { first_name, last_name, job_title },\r\n        app_metadata: { role },\r\n        password: 'blahblah',\r\n        email_confirm: true,\r\n      });`\r\n\r\n![Screenshot_2022-11-20_at_14 53 39](https://user-images.githubusercontent.com/9122228/202926705-d20cb4ee-e967-45c7-b515-732810d1a039.jpg)\r\n\r\nwith two security definers one triggered after UPDATE and one after INSERT to `auth.users`",
            "author": {
                "login": "jopfre"
            },
            "state": "CLOSED",
            "createdAt": "2022-11-20T21:44:49Z",
            "closedAt": "2023-03-20T09:25:42Z",
            "url": "https://github.com/supabase/gotrue/issues/975",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5XWZ-b",
                    "body": "Hey,\r\n\r\nYeah we should probably document that updating metadata happens via an insert statement and then after that an update statement. \r\n\r\nTo fix in #12933",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-13T04:22:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/975#issuecomment-1465491355"
                },
                {
                    "id": "IC_kwDOEKipmc5X-Duz",
                    "body": "Hey @jopfre,\r\n\r\nAfter discussion, the team has decided to relook at our user management strategy which might differ significantly in terms of how we recommend trigger usage. As such, we won't be documenting this for now as it might add confusion for future users.\r\n\r\nThanks for the feedback though! Going to close for now but feel free to re-open if there are further concerns",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-20T09:25:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/975#issuecomment-1475886003"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ezgX8",
            "number": 979,
            "title": "MFA Enrollment",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nUsing the MFA enroll function, the table gets spammed with new unverified factors on website refresh.\r\n\r\n## Expected behavior\r\n\r\nIf the user doesn't have the MFA enrollment started, it should work like how it does as of now. However, if there's already a enrollment process started before by the user, it should reuse the existing QR code.\r\n\r\n## Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/67239078/219922335-9d582626-a810-43b9-a51d-9dc68cc6459e.png)\r\n![image](https://user-images.githubusercontent.com/67239078/219922368-774e557e-bbc4-4d60-9e89-1af1a50ba0bc.png)\r\n\r\n",
            "author": {
                "login": "patrykczubek"
            },
            "state": "OPEN",
            "createdAt": "2023-02-19T04:33:29Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/979",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5VnXfn",
                    "body": "Hey @patrykczubek,\r\n\r\nThanks for the feedback! This is a good suggestion - as an immediate fix it should be possible to add a state variable in React to ensure it's only called once on the enrollment page. We'll look into the docs/lib to see if there's a better way to handle this\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-20T06:07:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/979#issuecomment-1436383207"
                },
                {
                    "id": "IC_kwDOEKipmc5XfC60",
                    "body": "On our side every time MFA enrolment starts, we delete all unverified factors to avoid the mess in the table and avoid exceeding maximum allowed MFAs.\r\n\r\nPerhaps Supabase could cleanup unverified factors after some inactivity time. I don't see what's the point of having unverified factor sitting for a longer than couple minutes (unless there is some MFA workflow which is longer than that).\r\n \r\nThere is also a config param, specifying how many MFA factors user can have (default 10). I believe this setting shouldn't apply for unverified factors, because currently user can easily \"lock themself\" out without an option to create a new MFA.\r\n\r\nI think reusing QR codes poses some security risks. Once QR code disappear from the screen it should never be displayed again, but that's only my opinion.",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-03-14T09:48:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/979#issuecomment-1467756212"
                },
                {
                    "id": "IC_kwDOEKipmc5Xg7Tp",
                    "body": "Hey @tomekit,\r\n\r\nThanks for the feedback! It's helpful in deciding what to prioritize. We're planning on adding a background task of sorts to clean up unverified factors after an interval. \r\n\r\n> There is also a config param, specifying how many MFA factors user can have (default 10). I believe this setting shouldn't apply for unverified factors, because currently user can easily \"lock themself\" out without an option to create a new MFA.\r\n\r\nThis is also a great suggestion, the fix will probably go out with the background task mentioned above.\r\n\r\n> I think reusing QR codes poses some security risks.\r\n\r\nYes, this is a good point, I'd forgot to consider this and perhaps the proper fix here should be to amend the DX around registering a factors\r\n\r\nPlease do keep the feedback coming!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-14T14:53:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/979#issuecomment-1468249321"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5fGWhz",
            "number": 980,
            "title": "Unable to read `x-total-count` pagination header from listUsers() due to CORS restrictions",
            "body": "# Bug report\r\n\r\nUsing fetch from the browser, we are unable to get the value of the `x-total-count` header, because it is not whitelisted in the `Access-Control-Expose-Headers` header in the response\r\n\r\n## Expected behavior\r\n\r\n`Access-Control-Expose-Headers` : `x-total-count`\r\n`x-total-count`: `32`",
            "author": {
                "login": "JonathanPicques"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-22T17:20:36Z",
            "closedAt": "2023-04-19T14:18:45Z",
            "url": "https://github.com/supabase/gotrue/issues/980",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5WcUvy",
                    "body": "Hi @JonathanPicques, we are able to read the value of `x-total-count` in the js client library which uses the fetch API as well (https://github.com/supabase/gotrue-js/blob/e5708f006379df98dcf2f69dfe10e199d7d30147/src/GoTrueAdminApi.ts#L188). It would be great if you can provide a reproducible example so we can investigate this further. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-01T14:43:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/980#issuecomment-1450265586"
                },
                {
                    "id": "IC_kwDOEKipmc5W7x2I",
                    "body": "@kangmingtay are you in the same domain when trying to read `x-total-count` ? That would explain why you are able to read this header, this issue is happening when reading from another domain :\r\n\r\n```js\r\nfetch(\"https://REPLACE_ME.supabase.co/auth/v1/admin/users?page=&per_page=1000\", {\r\n  \"headers\": {\r\n    \"accept\": \"*/*\",\r\n    \"accept-language\": \"en-US,en;q=0.9,fr-FR;q=0.8,fr;q=0.7\",\r\n    \"apikey\": \"REPLACE_ME\",\r\n    \"authorization\": \"Bearer REPLACE_ME\",\r\n    \"sec-ch-ua\": \"\\\"Chromium\\\";v=\\\"110\\\", \\\"Not A(Brand\\\";v=\\\"24\\\", \\\"Google Chrome\\\";v=\\\"110\\\"\",\r\n    \"sec-ch-ua-mobile\": \"?0\",\r\n    \"sec-ch-ua-platform\": \"\\\"Windows\\\"\",\r\n    \"sec-fetch-dest\": \"empty\",\r\n    \"sec-fetch-mode\": \"cors\",\r\n    \"sec-fetch-site\": \"cross-site\"\r\n  },\r\n  \"referrer\": \"http://REPLACE_ME/\",\r\n  \"referrerPolicy\": \"strict-origin-when-cross-origin\",\r\n  \"body\": null,\r\n  \"method\": \"GET\",\r\n  \"mode\": \"cors\",\r\n}).then(resp => console.log(...resp.headers));\r\n```\r\n\r\nThis code will output \r\n```js\r\n['content-type', 'application/json']\r\n```\r\n\r\nGood topic on the issue: https://stackoverflow.com/questions/43344819/reading-response-headers-with-fetch-api",
                    "author": {
                        "login": "JonathanPicques"
                    },
                    "createdAt": "2023-03-07T16:57:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/980#issuecomment-1458511240"
                },
                {
                    "id": "IC_kwDOEKipmc5XGdxY",
                    "body": "@JonathanPicques interesting, TIL. I've made a fix for it in gotrue here (https://github.com/supabase/gotrue/pull/991) but it will take some time before it's rolled out",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-09T05:32:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/980#issuecomment-1461312600"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5gBggR",
            "number": 987,
            "title": "\"Confirm email\" option in Studio does not work anymore",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI have the \"Confirm email\" toggle turned off in my Studio for the Email provider. Until recently, I could create users with the `await supabaseAdmin.auth.admin.createUser` function, and they could log in without confirming their email. However, since this morning logging in to such a newly created user is throwing an \"Email not confirmed\" error. \r\n\r\n## Expected behavior\r\n\r\nUsers should be able to log in without confirming their email.\r\n\r\n## System information\r\n\r\n- Version of supabase_flutter: ^1.0.1\r\n- Version of Node.js: 2.10.0\r\n\r\nThank you for looking into this issue!\r\n",
            "author": {
                "login": "d-e-h-i-o"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-06T09:31:24Z",
            "closedAt": "2023-04-11T04:53:22Z",
            "url": "https://github.com/supabase/gotrue/issues/987",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5YMh_Y",
                    "body": "Fixed in #929 but this is not yet deployed on all projects. Can you try on a new project (which has this version) if the issue persists? If yes, please close this issue.\r\n\r\nA new version is going out in the next few days on all projects and this will be resolved.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-22T14:34:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/987#issuecomment-1479679960"
                },
                {
                    "id": "IC_kwDOEKipmc5ZkSqf",
                    "body": "Hey @d-e-h-i-o ,\r\n\r\nGoing to close this issue as the deploy has been rolled out and this should be fixed on the latest version. Feel free to re-open if the issue persists though.\r\n\r\nThanks!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-04-11T04:53:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/987#issuecomment-1502685855"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5gCxEu",
            "number": 988,
            "title": "Users created with Phone provider (and with an email address added later) are unable to login via oAuth",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nIf a user registers an account using a phone number, and then adds their email address after this, they're unable to login using oAuth.\r\n\r\n## To Reproduce\r\n\r\n1. Register a new user with `supabase.auth.signInWithOtp({ phone: .... })`\r\n2. Verify the user's OTP with `supabase.auth.verifyOtp({ phone: ..., token: ..., type: 'sms'})`\r\n3. Add an email address to the user with `supabase.auth.updateUser({ email: ... })`\r\n4. Logout\r\n5. Attempt to sign in using oAuth with `supabase.auth.signInWithOAuth`\r\n6. The application doesn't seem to recognise a user with that email exists and attempts to create a new user which causes an error message \"Database error saving new user\"\r\n\r\n## Expected behavior\r\n\r\nThe user should be logged in\r\n\r\n## Additional context\r\n\r\nIt looks like when you add an email address to a user that didn't previously have one using `supabase.auth.updateUser`, no new entry is created in the `identities` table. This could be why oAuth doesn't see an existing user and tries to create one.\r\n",
            "author": {
                "login": "sdaoud"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-06T12:41:39Z",
            "closedAt": "2023-05-03T14:17:12Z",
            "url": "https://github.com/supabase/gotrue/issues/988",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5aSkNA",
                    "body": "able to reproduce, it's similar to the problem that is mentioned in #1060 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-04-19T14:16:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/988#issuecomment-1514816320"
                },
                {
                    "id": "IC_kwDOEKipmc5bYWa6",
                    "body": "Issue seems fixed, @sdaoud can you please try again and contact us at [support](https://app.supabase.com/support/new) if you are still facing this problem?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:17:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/988#issuecomment-1533109946"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5gZq97",
            "number": 992,
            "title": "# instead of ? in URL for query parameters returned from an expired email link",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nErrors in the URL from an expired email link are returned like this:\r\n`https://example.com/#error=unauthorized_client&error_code=401&error_description=Email+link+is+invalid+or+has+expired`\r\n\r\n## To Reproduce\r\n\r\n1. Send a password reset email\r\n2. Click the link.\r\n3. Click the link a second time.\r\n4. Inspect the URL\r\n\r\n## Expected behavior\r\n\r\nErrors should be returned as query parameters:\r\n`https://site.com/?error=unauthorized_client&error_code=401&error_description=Email+link+is+invalid+or+has+expired`\r\n\r\n## Additional context\r\n\r\nThis causes URL objects returned on server-side code (Sveltekit in my case) to return without the query parameters:\r\n\r\nWith the #:\r\n```\r\nURL {\r\n  href: 'http://localhost:5173/login/update-password',\r\n  origin: 'http://localhost:5173',\r\n  protocol: 'http:',\r\n  username: '',\r\n  password: '',\r\n  host: 'localhost:5173',\r\n  hostname: 'localhost',\r\n  port: '5173',\r\n  pathname: '/login/update-password',\r\n  search: '',\r\n  searchParams: URLSearchParams {},\r\n  hash: ''}\r\n```\r\n\r\nWith the ?:\r\n```\r\nURL {\r\n  href: 'http://localhost:5173/login/update-password?error=unauthorized_client&error_code=401&error_description=Email+link+is+invalid+or+has+expired',\r\n  origin: 'http://localhost:5173',\r\n  protocol: 'http:',\r\n  username: '',\r\n  password: '',\r\n  host: 'localhost:5173',\r\n  hostname: 'localhost',\r\n  port: '5173',\r\n  pathname: '/login/update-password',\r\n  search: '?error=unauthorized_client&error_code=401&error_description=Email+link+is+invalid+or+has+expired',        \r\n  searchParams: URLSearchParams {\r\n    'error' => 'unauthorized_client',\r\n    'error_code' => '401',\r\n    'error_description' => 'Email link is invalid or has expired' },\r\n  hash: ''}\r\n```\r\n\r\nAdditionally, I am using custom URLs in my emails with redirects. Here is a sample in case that is related:\r\n`https://{supabaseproject}.supabase.co/auth/v1/verify?token={{ .TokenHash }}&amp;type=recovery&amp;redirect_to=http://localhost:5173/login/update-password`\r\n\r\n\r\n",
            "author": {
                "login": "mchappeldev"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-09T14:15:14Z",
            "closedAt": "2023-03-14T06:36:38Z",
            "url": "https://github.com/supabase/gotrue/issues/992",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Xd38B",
                    "body": "Hey, we're working on adding PKCE support which will let you get the errors on the server side. We're going to be deprecating this way of returning errors.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-14T06:36:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/992#issuecomment-1467449089"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5iH3zD",
            "number": 1011,
            "title": "Return `?` instead of `#` on Provider OAuth Callbacks",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nI am writing an application that works server side to receive OAuth callbacks. When following a `redirect_to` after OAuth completes, the information is put into the URL after a `#` instead of as a query string. However, since this is a server side application that has no access to the browser and [**URL content after a hash is not posted to the server**](https://stackoverflow.com/a/20901206/3629438), I am unable to parse the OAuth tokens in my application.\r\n\r\n## To Reproduce\r\n\r\n1. Auth User with Provider (Github)\r\n2. Set RedirectTo to be `http://127.0.0.1:31419`\r\n3. Check returned url in browser.\r\n\r\nReturns a url like so:\r\n```bash\r\nhttp://127.0.0.1:31419/oauth/callback#access_token=ACCESS_TOKEN&expires_in=3600&provider_refresh_token=PROVIDER_REFRESH_TOKEN&provider_token=PROVIDER_TOKEN&refresh_token=REFRESH_TOKEN&token_type=bearer\r\n```\r\n\r\n## Expected behavior\r\n\r\n```bash\r\nhttp://127.0.0.1:31419/oauth/callback?access_token=ACCESS_TOKEN&expires_in=3600&provider_refresh_token=PROVIDER_REFRESH_TOKEN&provider_token=PROVIDER_TOKEN&refresh_token=REFRESH_TOKEN&token_type=bearer\r\n```\r\n\r\n## System information\r\n\r\n- OS: Windows / Mac\r\n- Browser: Chrome\r\n- Language: C#",
            "author": {
                "login": "acupofjose"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-29T17:26:47Z",
            "closedAt": "2023-03-30T06:14:54Z",
            "url": "https://github.com/supabase/gotrue/issues/1011",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5YwJT2",
                    "body": "This is similar to #992, but asking to return on all requests instead of just errors.",
                    "author": {
                        "login": "acupofjose"
                    },
                    "createdAt": "2023-03-29T17:28:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1011#issuecomment-1489016054"
                },
                {
                    "id": "IC_kwDOEKipmc5Yy9bR",
                    "body": "Hey @acupofjose,\r\n\r\nThanks for the request! This was actually intended as a security feature since  `?` params can be read by the server (and thus be logged together with access token) whereas `#` params remain in the browser. We are releasing another OAuth flow, [the PKCE Flow](https://github.com/supabase/gotrue/pull/891) which aims to allow users signing in with OAuth to receive  params with `?` prefixed.\r\n\r\nThe change should reach production in a week or two. We will follow up with the rest of the flows soon\r\n\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-30T06:14:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1011#issuecomment-1489753809"
                },
                {
                    "id": "IC_kwDOEKipmc5Yy9lC",
                    "body": "Going to close for now but let me know if there are further concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-30T06:14:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/1011#issuecomment-1489754434"
                },
                {
                    "id": "IC_kwDOEKipmc5Y0YsN",
                    "body": "Alright! I\u2019ll get to implementing it on the c# clients. Thanks @J0!",
                    "author": {
                        "login": "acupofjose"
                    },
                    "createdAt": "2023-03-30T11:19:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/1011#issuecomment-1490127629"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ibGYl",
            "number": 1015,
            "title": "Password change not possible if GOTRUE_SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION enabled. Error: \"update requires reauthentication\" - not possible to provide Nonce",
            "body": "If: `GOTRUE_SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION` option is enabled for the GoTrue API it is not possible to change password using `updateUser`, e.g.: \r\n\r\n```\r\nfinal res = await supabase.auth.updateUser(\r\n                                      UserAttributes(\r\n                                        password: password,\r\n                                      ),\r\n                                    );\r\n```\r\nAccording to current docs: \r\nhttps://github.com/supabase/gotrue#get-reauthenticate\r\nhttps://github.com/supabase/gotrue#put-user\r\n\r\nuser will need to reauthenticate first, however it doesn't seem is currently possible to provide `nonce` using Flutter library.\r\n\r\nI am using Flutter gotrue v`1.5.7`.\r\n",
            "author": {
                "login": "tomekit"
            },
            "state": "CLOSED",
            "createdAt": "2023-04-01T08:46:50Z",
            "closedAt": "2023-06-20T17:13:42Z",
            "url": "https://github.com/supabase/gotrue/issues/1015",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ZBnSm",
                    "body": "Seems like gotrue-js doesn't support this either. I guess because the supabase platform does not support that flag, but only self-hosted. Do I understand the flow correctly, that you need a `reAuthenticate()` method, which sends a `nonce` to the user via email, which you then pass to `updateUser()`?",
                    "author": {
                        "login": "Vinzent03"
                    },
                    "createdAt": "2023-04-01T09:40:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/1015#issuecomment-1493595302"
                },
                {
                    "id": "IC_kwDOEKipmc5ZBnSn",
                    "body": "@Vinzent03\r\nYes, I've just scanned the JS library, especially: `gotrue-js/src/GoTrueClient.ts` and didn't find any reference to `reauthenticate` as well.\r\n\r\nSpeaking of password change flow, I am not exactly sure what's the \"right\" way, documentation is sparse and I've only deducted that I need `nonce` from reading the code `gotrue/internal/api/user.go`:112 (please find snippet at the bottom of this message).\r\n\r\nEven if I get the `reauthenticate` method running via JS/Flutter, there is an issue with password reset (not change) workflow.\r\nCurrently you call: `/recover`, an e-mail gets clicked, and then `updateUser()` gets called... unfortunately since setting the `...REQUIRE_REAUTH...` setting, the `updateUser()` call now fails with an error: `update requires reauthentication`... so would I need to call `reauthenticate` to send a nonce (in a similar way as with password change) again? If so, that would be pretty horrendous experience both from an user and dev perspective.\r\n\r\nI didn't find this setting in a hosted Supabase so you're probably right... but honestly, allowing password change without reauth of some sort or without requiring current password is a deal breaker to me regardless where my Auth API is self-hosted or managed.\r\n\r\n```golang\r\n# gotrue/internal/api/user.go`:112\r\nif !config.Security.UpdatePasswordRequireReauthentication {\r\n\t\tif terr = user.UpdatePassword(tx, *params.Password); terr != nil {\r\n\t\t\treturn internalServerError(\"Error during password storage\").WithInternalError(terr)\r\n\t\t}\r\n\t\tisPasswordUpdated = true\r\n\t} else if params.Nonce == \"\" {\r\n\t\treturn unauthorizedError(\"Password update requires reauthentication.\")\r\n\t} else {\r\n\t\tif terr = a.verifyReauthentication(params.Nonce, tx, config, user); terr != nil {\r\n\t\t\treturn terr\r\n\t\t}\r\n\t\tif terr = user.UpdatePassword(tx, *params.Password); terr != nil {\r\n\t\t\treturn internalServerError(\"Error during password storage\").WithInternalError(terr)\r\n\t\t}\r\n\t\tisPasswordUpdated = true\r\n\t}\r\n```\r\n",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-04-01T10:12:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/1015#issuecomment-1493595303"
                },
                {
                    "id": "IC_kwDOEKipmc5ZBnSs",
                    "body": "Since the scope is larger than just the Flutter library, I am transferring this to gotrue repo.",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2023-04-03T03:35:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/1015#issuecomment-1493595308"
                },
                {
                    "id": "IC_kwDOEKipmc5fUc_Z",
                    "body": "Hi everyone, we've added the methods to the supabase-js client library already and have also updated the docs for the following:\r\n\r\n* Sending a reauthentication nonce (https://supabase.com/docs/reference/javascript/auth-reauthentication)\r\n* Sending a nonce + password in the update user method (https://supabase.com/docs/reference/javascript/auth-updateuser)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-20T17:13:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/1015#issuecomment-1599197145"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5i-T67",
            "number": 1029,
            "title": "Colima breaks creating new users in local supabase instance",
            "body": "Minimal demo repository for reproduction:\r\nhttps://github.com/riccardolardi/test-supabase-colima\r\n\r\nRunning Colima with this config:\r\n\r\n```\r\nPROFILE    STATUS     ARCH       CPUS    MEMORY    DISK     RUNTIME    ADDRESS\r\ndefault    Running    aarch64    4       6GiB      60GiB    docker\r\n````\r\nAnd latest `supabase` and `@supabase/supabase-js`\r\n\r\nCreation of new users via `supabase.auth.admin.createUser()` or `supabase.auth.signUp()` will result in following error:\r\n\r\n```\r\nAuthRetryableFetchError: fetch failed\r\n    at /Users/riccardolardi/Code/test-supabase-colima/node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:30:16\r\n    at Generator.next (<anonymous>)\r\n    at /Users/riccardolardi/Code/test-supabase-colima/node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:8:71\r\n    at new Promise (<anonymous>)\r\n    at __awaiter (/Users/riccardolardi/Code/test-supabase-colima/node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:4:12)\r\n    at handleError (/Users/riccardolardi/Code/test-supabase-colima/node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:27:40)\r\n    at /Users/riccardolardi/Code/test-supabase-colima/node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:87:35\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\r\n  __isAuthError: true,\r\n  status: 0\r\n}\r\n```\r\n\r\nIs this related to `gotrue`?",
            "author": {
                "login": "riccardolardi"
            },
            "state": "CLOSED",
            "createdAt": "2023-04-10T09:20:29Z",
            "closedAt": "2023-04-17T06:17:37Z",
            "url": "https://github.com/supabase/gotrue/issues/1029",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5aDIVn",
                    "body": "hey @riccardolardi, an `AuthRetryableFetchError` means that there is a network issue with connecting to Supabase. Can you please check the network request from your browser and reach out to us at https://app.supabase.com/support/new if you're still facing this issue?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-04-17T06:17:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1029#issuecomment-1510770023"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARln",
            "number": 1045,
            "title": "Error Getting User Email From External Provider (Azure)",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen attempting to authorize via Azure OAuth, I am being redirected to http://127.0.0.1:5174/?error=server_error&error_description=Error+getting+user+email+from+external+provider\r\n\r\nNo errors are showing up in the auth logs.\r\n\r\n## To Reproduce\r\n\r\nFollow the steps in [Login with Azure](https://supabase.com/docs/guides/auth/social-login/auth-azure)\r\nNotably:\r\n```\r\nasync function signInWithAzure() {\r\n  const { data, error } = await supabase.auth.signInWithOAuth({\r\n    provider: 'azure',\r\n    options: {\r\n      scopes: 'email',\r\n    },\r\n  })\r\n}\r\n```\r\n\r\nWhich redirects to: https://<redacted>.supabase.co/auth/v1/authorize?provider=azure&scopes=email\r\n\r\n## Expected behavior\r\n\r\nApp should login without error\r\n\r\n## System information\r\n\r\n- OS: Windows\r\n- Browser: Chrome\r\n- Version of supabase-js: 2.8.0\r\n- Version of Node.js: v16.17.1\r\n\r\n## Additional context\r\n\r\nAs an aside, it may be worth mentioning in the docs that you'll need to signup for azure here: https://azure.microsoft.com/en-us/free/\r\nSigning up via portal.azure.com doesn't give the new account access to things like Active Directory so you can't follow the steps in the guide to create an application.\r\n",
            "author": {
                "login": "WHenderson"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-17T07:02:31Z",
            "closedAt": "2023-05-03T14:19:54Z",
            "url": "https://github.com/supabase/gotrue/issues/1045",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ZhuXa",
                    "body": "Exactly the same problem here.\r\n\r\nIt looks like the scope isn't taken into account in the request.\r\n\r\nWe simulated a request with our Azure AD, and everything seems to be working in Azure, but supabase fails getting the email. And no trace of it in the logs.",
                    "author": {
                        "login": "Alban-i"
                    },
                    "createdAt": "2023-03-12T10:11:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/1045#issuecomment-1502012890"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhuXd",
                    "body": "Hello,\r\n\r\nSome feedback: @WHenderson, please try to remove the tenant id from the link in your supabase provider config.\r\n\r\nInstead of : https://login.microsoftonline.com/ < tenant - id > \r\nPut : https://login.microsoftonline.com/common\r\n\r\n(I think it's worth it to add that in the doc. Because for newbies like me, it wasn't obvious, and I just spent many hours on this haha)\r\n\r\nIn my case, by adding the tenant id, the authentication would work only for users registered in my organisation, but most of the time, we want anybody with a microsoft account to log in.\r\n\r\nAnd during my testings, I was trying with \"my\" microsoft account on \"my\" org. And usually, the account who created the organisation has an account without email (a bit strange). ",
                    "author": {
                        "login": "Alban-i"
                    },
                    "createdAt": "2023-03-13T07:58:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1045#issuecomment-1502012893"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhuXh",
                    "body": "Found this resource, though if you want @Alban-i you can submit a PR for the docs. I'll try to figure out if this is really true later. https://www.cloudidentity.com/blog/2014/08/26/the-common-endpoint-walks-like-a-tenant-talks-like-a-tenant-but-is-not-a-tenant/",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-03-22T14:45:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/1045#issuecomment-1502012897"
                },
                {
                    "id": "IC_kwDOEKipmc5bYXe3",
                    "body": "Hi @WHenderson, hope you have managed to resolve this issue. I'm gonna close this issue but feel free to reopen it and leave any comments if you're still experiencing this problem.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:19:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/1045#issuecomment-1533114295"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARmG",
            "number": 1046,
            "title": "Deleting users is not possible due to missing \"on delete cascade\" in SvelteKit documentation for table \"profiles\"",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen you create a project and follow the docs for Sveltekit than you are not able to remove an user from the dashboard because of a missing \"on delete cascade\" attribute for the table profiles.\r\nhttps://supabase.com/docs/guides/getting-started/tutorials/with-sveltekit\r\n\r\nA note is visible at https://supabase.com/docs/guides/auth/managing-user-data that you make sure to add \"on delete cascade\".\r\n\r\nThis code is not working for me: (https://supabase.com/docs/guides/auth/managing-user-data)\r\n```create table public.profiles (\r\n  id uuid references auth.users not null on delete cascade,\r\n  first_name text,\r\n  last_name text,\r\n\r\n  primary key (id)\r\n);\r\n\r\nalter table public.profiles enable row level security;\r\n```\r\n\r\nand should be changed to:\r\n```create table public.profiles (\r\n  iid uuid not null references auth.users on delete cascade,\r\n  first_name text,\r\n  last_name text,\r\n\r\n  primary key (id)\r\n);\r\n\r\nalter table public.profiles enable row level security;\r\n```\r\n\r\nThe Sveltekit docs for the table should be changed to: (https://supabase.com/docs/guides/getting-started/tutorials/with-sveltekit)\r\n```\r\ncreate table public.profiles (\r\n  id uuid not null references auth.users on delete cascade primary key,\r\n  updated_at timestamp with time zone,\r\n  username text unique,\r\n  full_name text,\r\n  avatar_url text,\r\n  website text,\r\n\r\n  constraint username_length check (char_length(username) >= 3)\r\n);\r\n```\r\n\r\n## To Reproduce\r\n\r\nSimple follow the docs here:\r\nhttps://supabase.com/docs/guides/getting-started/tutorials/with-sveltekit\r\nAt \"Set up the database schema\" i used the SQL Script and not the \"User Management Starter\".\r\nAdd an user and try to delete the user.\r\n\r\n## Expected behavior\r\n\r\nA clear and concise description of what you expected to happen.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser chrome\r\n- Version of supabase-js: 2.2.1\r\n- Version of Node.js: 16.17.0\r\n\r\n## Additional context\r\n\r\n\r\n",
            "author": {
                "login": "kempermi"
            },
            "state": "OPEN",
            "createdAt": "2022-12-22T10:24:55Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1046",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ZhuX9",
                    "body": "Hey @silentworks,\r\n\r\njust bumping this in case it was missed - wondering if you could take a look as the resident Svelte expert.  Feel free to let us know if you need anything too!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-01T09:18:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/1046#issuecomment-1502012925"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARme",
            "number": 1047,
            "title": "Pass Additional optional params Upon OAuth SignUp",
            "body": "# Feature request\r\n\r\nTo support the ability to pass optional query params to use from within a database sign up trigger for OAuth Signup.\r\n\r\nThis will be used for people building applications with OAuth signup and storing the user within a supabase database.\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nOften times an app will require some basic information about a user upon sign up.\r\nThe OAuth raw user metadata is great for providing general user information, however it prohibits us from asking additional information upon sign up.\r\n\r\nThe SignUp with email method supports this, but not OAuth Sign Up.\r\n\r\n## Describe the solution you'd like\r\n\r\nAn additional optional param (maybe `data?: object`) to pass to the `supabase.signUpWithOAuth()` method.\r\n\r\n## Describe alternatives you've considered\r\n\r\nMaking an additional user Update API call upon OAuth sign up.\r\n",
            "author": {
                "login": "Metaphysics0"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-10T20:06:26Z",
            "closedAt": "2023-05-03T14:10:39Z",
            "url": "https://github.com/supabase/gotrue/issues/1047",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5bYT1i",
                    "body": "Hey team,\r\n\r\nUnfortunately we won't be proceeding this as it would entail passing in the metadata in the url which won't be secure. We'll be working on easier ways for users to customize the workflows in the very near future though.\r\n\r\nLet us know if there are any questions/concerns.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-03T14:10:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1047#issuecomment-1533099362"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARnT",
            "number": 1048,
            "title": "No way to add providers to an existing user",
            "body": "With Firebase, I was able to do the following:\r\n```\r\nfinal credential = GoogleAuthProvider.credential(idToken: idToken);\r\n//OR OTHER PROVIDERS\r\nfinal credential = EmailAuthProvider.credential(email: emailAddress, password: password);\r\n//ADD PROVIDER TO CURRENT USER\r\nFirebaseAuth.instance.currentUser?.linkWithCredential(credential);\r\n```\r\n\r\nWith Supabase I know these two things; users can be created with OAuth providers and, if the email of that provider user matches an existing user email, the provider is automatically added to that existing user. What I don't know is how to add providers to a user manually. This is a pretty standard feature with authentication on apps. I saw [one answer on StackOverflow](https://stackoverflow.com/a/74623924/20496339) that suggests it isn't possible on Supabase, because \"currently in Supabase email address is the unique identifier of users,\" but I don't think this is the case. I think this would be a great addition to `Supabase Auth` (self-hosted).\r\n\r\nExample 1:\r\n1. App requires every user to have an Email & Password\r\n2. User signs up with phone auth or OAth\r\n3. User needs to add Email & Password provider to their profile\r\n\r\nExample 2:\r\n1. User signs up with an Email & Password provider\r\n2. User wants to be able to sign in with OAuth or phone auth\r\n3. User needs to sign in to OAuth then that provider should be added to the existing Email & Password account, regardless of if the email matches",
            "author": {
                "login": "globemediaofficial"
            },
            "state": "CLOSED",
            "createdAt": "2022-12-01T04:06:18Z",
            "closedAt": "2023-06-07T11:41:13Z",
            "url": "https://github.com/supabase/gotrue/issues/1048",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ZhuY6",
                    "body": "I've also run into this issue.\r\n\r\nIt seems it's currently supported that OAuth and email address don't match (e.g. if you change the account email after the OAuth provider is connected, you can still log in with the provider), but it's not a good workaround to ask users to temporarily change their account email address to the one matching their OAuth provider before adding it.",
                    "author": {
                        "login": "tkrunning"
                    },
                    "createdAt": "2023-01-16T14:06:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1048#issuecomment-1502012986"
                },
                {
                    "id": "IC_kwDOEKipmc5eNbTr",
                    "body": "This is one of the highest priorities for the team in the coming period. Watch this space. Somewhat related to #68.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:21:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/1048#issuecomment-1580578027"
                },
                {
                    "id": "IC_kwDOEKipmc5eNldm",
                    "body": "Actually, a duplicate of #313.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:41:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/1048#issuecomment-1580619622"
                },
                {
                    "id": "IC_kwDOEKipmc5hCivI",
                    "body": "@hf Since this issue was closed as \"not planned,\" is this no longer a priority for the team? I'm confused because you said this issue was one of the highest priorities for the team and then closed it as not planned on the same day.",
                    "author": {
                        "login": "globemediaofficial"
                    },
                    "createdAt": "2023-07-10T03:37:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/1048#issuecomment-1628056520"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARn_",
            "number": 1049,
            "title": "Add duplicated Notion template's ID to the JWT receieved after Supabase's Notion OAuth flow",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nNotion's OAuth workflow now [allows integrations to duplicate a public Notion template](https://developers.notion.com/changelog/changes-for-october-11-24-2022) and automatically share the duplicated template with the integration. The JWT that is returned after successful authorization using Supabase's API currently does not include the ID of the duplicated template. The template ID allows integrations to modify the duplicated template in a user's Notion workspace. \r\n\r\n## Describe the solution you'd like\r\n\r\nThe JWT returned after successful authorization should include the duplicated template's ID. \r\n\r\n## Describe alternatives you've considered\r\n\r\nAfter a user has signed in with Notion, trigger another OAuth flow using Notion's native Authorization URL to collect the duplicated template ID\r\n\r\n## Additional context\r\n\r\n![Capture](https://user-images.githubusercontent.com/26758320/201416760-eb670f9d-b966-4a97-8577-3875da7b5ba4.PNG)\r\n\r\nNotion's native OAuth API returns the template id with a key of `duplicated_template_id`",
            "author": {
                "login": "AjayRH"
            },
            "state": "OPEN",
            "createdAt": "2022-11-11T19:39:54Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1049",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5jARpA",
            "number": 1051,
            "title": "NextJS middleware helper sends user to unauthorized route after reroute with signInWithOTP() is fired.",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen I try to login with the signInWithOTP function and click on the magic link, the supabase/next middleware helper sends me to the unauthorized route even though I just authorized with the magic link. However, if I keep the cookies that were just stored then try to go to any protected routes or do signInWithOTP again, it works fine. Is there any way to work around this?\r\n## To Reproduce\r\n\r\n**Middleware.ts**\r\n```\r\nexport const middleware: NextMiddleware = withMiddlewareAuth({\r\n  redirectTo: \"/login\",\r\n  authGuard: {\r\n    isPermitted: async (user): Promise<boolean> => {\r\n      const res = await supabase.rpc(\"user_has_any_role\", {\r\n        user_id_: user.id,\r\n      });\r\n      return !!res.data;\r\n    },\r\n    redirectTo: \"/unauthorized\",\r\n  },\r\n});\r\n\r\n// See \"Matching Paths\" below to learn more\r\nexport const config = {\r\n  matcher: [\"/((?!api|_next|fonts|login|unauthorized|[\\\\w-]+\\\\.\\\\w+).*)\"],\r\n};\r\n```\r\n\r\n\r\n**Login.tsx**\r\n ```\r\n const handleLogin = async (email) => {\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase.auth.signInWithOtp({\r\n        email,\r\n        options: { emailRedirectTo: \"/shows\" },\r\n      });\r\n      if (error) throw error;\r\n      alert(\"Check your email for the login link!\");\r\n    } catch (error) {\r\n      alert(error.error_description || error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n```\r\n\r\n## Expected behavior\r\n\r\nMiddleware should fire, but it shouldnt reroute me to the unauthorized route because I am authorized after signInWithOTP therefore I should be rerouted to /shows as seen in login.tsx. \r\n\r\n\r\n## System information\r\n\r\nWindows\r\nChrome\r\n \"@supabase/supabase-js\": \"2.0.0-rc.10\"\r\n\r\n\r\n",
            "author": {
                "login": "devlukedreamstage"
            },
            "state": "CLOSED",
            "createdAt": "2022-10-17T16:13:09Z",
            "closedAt": "2023-05-22T19:17:28Z",
            "url": "https://github.com/supabase/gotrue/issues/1051",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5cxfkA",
                    "body": "Hey,\r\n\r\nUnfortunately, it looks like [we've deprecated withMiddlewareAuth helper](https://supabase.com/docs/guides/auth/auth-helpers/nextjs) as of the v0.5.0 release. Any chance we could trouble you to try again with [the updated setup](https://supabase.com/docs/guides/auth/auth-helpers/nextjs#auth-with-nextjs-middleware) ? \r\n\r\nFeel free to let us know if there are still issues there.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-22T03:48:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1051#issuecomment-1556478208"
                },
                {
                    "id": "IC_kwDOEKipmc5c2giW",
                    "body": "@J0 This has been resolved after upgrading a while back :) Thank you.",
                    "author": {
                        "login": "devlukedreamstage"
                    },
                    "createdAt": "2023-05-22T19:17:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/1051#issuecomment-1557792918"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARqi",
            "number": 1053,
            "title": "Password reset for accounts using OTP (phone number as usernames)",
            "body": "# Bug report\r\n\r\nThere doesn't seem to be a way to reset passwords for accounts made using phone number (OTP) based log in. \r\n\r\n## Describe the bug\r\n\r\nSee above \r\n\r\n## To Reproduce\r\n\r\n1. Create an account using phone number (OTP) auth\r\n2. Try to reset the password\r\n\r\n## Expected behavior\r\n\r\nPassword reset works with phone number based auth (i.e. situations where we don't have the user's email) \r\n\r\n## Additional context\r\n\r\nThis is quite vital for mobile apps",
            "author": {
                "login": "alexreyes"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-24T02:32:07Z",
            "closedAt": "2023-08-16T02:29:07Z",
            "url": "https://github.com/supabase/gotrue/issues/1053",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ZhucW",
                    "body": "Hi @alexreyes, I'm not sure I understand the problem. OTP based login is a _passwordless_ login method. There is no password stored for the user. Each time a person needs to log in, a new, random and unguessable password is generated (thus called One Time Password) and sent to their SMS. \r\n\r\nForgot password does not apply in this case.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2022-09-28T09:44:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/1053#issuecomment-1502013206"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhucZ",
                    "body": "@hf My bad, what I meant is: password reset is needed for accounts which use a phone number as the username. As in, accounts made with phone numbers (no email). \r\n\r\nCurrently password reset is only supported for email based accounts",
                    "author": {
                        "login": "alexreyes"
                    },
                    "createdAt": "2022-10-04T01:35:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/1053#issuecomment-1502013209"
                },
                {
                    "id": "IC_kwDOEKipmc5kINP2",
                    "body": "I don't think we'll be fixing this because a password reset for an account created using a phone number - `supabase.auth.signUp({ phone: \"...\", password: \"...\"})` can be reset by calling `supabase.auth.signInWithOtp({phone: \"...\"}))` to get an OTP first, then calling `supabase.auth.updateUser({password: \"newpassword\"})` ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-08-16T02:29:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/1053#issuecomment-1679873014"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARrT",
            "number": 1054,
            "title": "supabase auth provide with one tap google login",
            "body": "### Discussed in https://github.com/supabase/supabase/discussions/8035\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **M-NaveedAshraf-work** August  3, 2022</sup>\r\n I'm actually trying to auth my users with supabase with google on tap login provider. it's working fine for a user having one google account register in a browser. but if a user has multiple accounts in a browser then the supabase auth function redirects to google  select an account page. However, the user already selected an account in one tap login iframe.\r\n\r\nhere I selected a user to login\r\n![InkedWMh18B452VZh](https://user-images.githubusercontent.com/107533241/182521155-8422fd32-8741-4514-8879-54ad24b44d02.jpg)\r\n \r\nand it redirects me to this page.\r\n![Inked0jja68vxyWQN](https://user-images.githubusercontent.com/107533241/182521393-b98c8104-7470-471a-9b47-c0343b7c48ee.jpg)\r\n\r\n\r\n</div>",
            "author": {
                "login": "M-NaveedAshraf-work"
            },
            "state": "CLOSED",
            "createdAt": "2022-09-06T08:34:40Z",
            "closedAt": "2023-08-21T08:39:08Z",
            "url": "https://github.com/supabase/gotrue/issues/1054",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Zhucl",
                    "body": "Actually one tap and redirect login don't work the same way. When you press the user on dialog, google verifies you on client side and logs you in but in actual, on tap, you also have a Supabase client set up which does what it should by default, redirect you to login page. \r\n\r\nIt does not work like this :\r\nTap user => send tapped user info to function => get info from function props and send to Supabase.  \r\n\r\nIt works like this:\r\nTap => Google verifies login at their backend => logged in => setSession cookie by themselves\r\n\r\nYour case: \r\n=> Tap => Login with Google => verify and set cookie by Google themselves => execute Sign in with Supabase => Redirect to login page.\r\n\r\nhope this clears the air. For this to work , you will manually need to send google credentials to Supabase by adding entries to users table in auth schema by providing \"provider\" , id , session id, etc. ",
                    "author": {
                        "login": "dukesx"
                    },
                    "createdAt": "2022-09-08T06:11:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/1054#issuecomment-1502013221"
                },
                {
                    "id": "IC_kwDOEKipmc5kfMzb",
                    "body": "Hey team,\r\n\r\nThanks for patiently waiting. Wanted to flag that [One Tap Login is now available on Supabase](https://supabase.com/blog/native-mobile-auth)\r\n\r\nGoing to close this issue now but feel free to revert back if there are still unadressed concerns.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-21T08:39:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1054#issuecomment-1685900507"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARr0",
            "number": 1055,
            "title": "Email change doesn't allow proper UI implementation",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\nI got an issue while I was trying to implement an email change flow for my app. Since I have the \"Double confirm email changes\" setting on, the user must click two links in two different emails and that's exactly what I want. The issue is to implement something to let the user know what he should do. After the user clicks the first email from the old email he gets redirected to \"Site URL\" with `#message=Confirmation+link+accepted.+Please+proceed+to+confirm+link+sent+to+the+other+email` appended.\r\nThis is not very useful since it's difficult to access and in my case doesn't allow me to make a proper page with translation and custom messages.\r\n\r\n## Describe the solution you'd like\r\n\r\nEmail change flow should not be triggered from `update()` method and should instead have his own method which allows to pass a `redirectTo` option like `resetPasswordForEmail()` method.\r\n\r\n## Describe alternatives you've considered\r\n\r\nLooking at another BaaS project which is still under development (Pocketbase), they've implemented:\r\n\r\n- `requestEmailChange('new@example.com')`\r\n- `confirmEmailChange('TOKEN', 'PASSWORD')`\r\n\r\nThis way they allow a more customizable flow.\r\nThey also allow variable customization in the email template solving the issue described above.\r\n\r\n<img width=\"412\" alt=\"Screenshot\" src=\"https://user-images.githubusercontent.com/29211226/185902198-eb3ac4ee-e01a-4714-a989-9f3927f89cda.png\">\r\n",
            "author": {
                "login": "mghizzo"
            },
            "state": "OPEN",
            "createdAt": "2022-08-22T10:45:24Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1055",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5jARst",
            "number": 1056,
            "title": "Add documentation about adding metadata coming from an OAuth signup to a database",
            "body": "# Add documentation about adding metadata coming from an OAuth sign up to a database \r\n\r\n## The problem\r\n\r\nThe problem is, that in many use cases data like age or country is needed. But currently there is no documentation about adding this information to a table in a database if the user signed up via an OAuth provider. \r\n\r\n## The solution\r\n\r\nAdding a new section on the database docs page would be an improvement. It should contain all things necessary to help people set up postgres triggers and functions for that specific purpose. It should be clearly described how to extract data like username, real name, age/birthday, avatar uri, email and phone and add it to a table when a user signs up using OAuth. \r\n\r\n## Additional context\r\nI found a [dev.to guide](https://dev.to/sruhleder/creating-user-profiles-on-sign-up-in-supabase-5037) about this topic but it is really small and only covers a small section of the things mentioned above.\r\n\r\n\r\n\r\nI really appreciate projects like supabase, thank you very much for your work.",
            "author": {
                "login": "zPhoeniqz"
            },
            "state": "CLOSED",
            "createdAt": "2022-05-01T17:23:44Z",
            "closedAt": "2023-05-03T14:12:35Z",
            "url": "https://github.com/supabase/gotrue/issues/1056",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ZhueA",
                    "body": "If we are considering a noSQL database like MongoDB, then I can take up this issue. ",
                    "author": {
                        "login": "DugarRishab"
                    },
                    "createdAt": "2022-10-04T15:25:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/1056#issuecomment-1502013312"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhueF",
                    "body": "Hey, can I work on this?",
                    "author": {
                        "login": "shawshankkumar"
                    },
                    "createdAt": "2022-12-13T08:28:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1056#issuecomment-1502013317"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhueG",
                    "body": "@J0 How can we request for assignment? Because, I'm interested to help too.",
                    "author": {
                        "login": "ImBIOS"
                    },
                    "createdAt": "2023-02-09T03:47:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/1056#issuecomment-1502013318"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhueJ",
                    "body": "We might add this natively (add an option to allow users to pass in metadata) so we  may not want to document this just yet - will keep y'all posted on what the team decides",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-09T05:59:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1056#issuecomment-1502013321"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhueN",
                    "body": "For those wanting to know the current state of metadata transfer from third-party providers _before_ this is documented: \ud83d\ude01\r\n\r\nLook at the code of PR supabase/gotrue#127 as an example, and then at the [files under `api/provider`](https://github.com/dsumer/gotrue/tree/master/api/provider) to see what metadata is provided by each type of third-party login.\r\n\r\nAs can be seen from the JSON keys defined [here](https://github.com/dsumer/gotrue/blob/9eebf9c/api/provider/provider.go#L10), in most cases third-party providers fill out a subset of the following JSON structure, which will be available in column `auth.users.raw_user_meta_data` after the login:\r\n\r\n```\r\n{\r\n    \"user_name\": \"...\",\r\n    \"avatar_url\": \"...\",\r\n    \"full_name\": \"...\",\r\n    \"slug\": \"...\"\r\n}\r\n```",
                    "author": {
                        "login": "tanius"
                    },
                    "createdAt": "2023-02-20T01:41:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/1056#issuecomment-1502013325"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhueQ",
                    "body": "Ah, re-reading your comment I realise that perhaps I might have misunderstood the issue. Thanks for flagging this @tanius!\r\n\r\nIf the issue is surrounding `metadata` provided by the provider during a sign in we are open to PRs - please feel free to open a PR and tag me - no need for assignment.\r\n\r\nHowever, if this is for PRs surrounding the addition of third party metadata ( not provided by provider) via the `signInWithOAuth` method then we'd suggest waiting as that's not fully supported yet.\r\n\r\nJo",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-20T01:55:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1056#issuecomment-1502013328"
                },
                {
                    "id": "IC_kwDOEKipmc5bYUm-",
                    "body": "Hey team,\r\n\r\nUnfortunately we won't be merging support for passing in metadata for OAuth sign ups. This would entail passing in the metadata in the url which won't be secure as it may contain sensitive information and will be logged on the server. We'll be working on easier ways for users to customize login behavior and insert metadata via webhooks though.\r\n\r\nLet us know if there are any questions/concerns.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-03T14:12:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/1056#issuecomment-1533102526"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jARtn",
            "number": 1057,
            "title": "Allow new auth user accounts from a specific email address domain.",
            "body": "# Feature request\r\n\r\n## Is your feature request related to a problem? Please describe.\r\n\r\nI am building an application where the authenticated users are all from a specific domain.  I want a way to only allow accounts to be created for email addresses from a specific domain.\r\n\r\n## Describe the solution you'd like\r\n\r\nA way to specify a list of allowed domains for new account creation, or an example for how to use the existing system to check for the email address domain and allow/reject with an error, based on that check.\r\n\r\n## Describe alternatives you've considered\r\n\r\nHandling the email validation on the registration form, but this can be bypassed on the client side.",
            "author": {
                "login": "bwklein"
            },
            "state": "OPEN",
            "createdAt": "2022-03-31T21:19:42Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1057",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ZhufJ",
                    "body": "This is my first day playing around with supabase, but maybe you can do this using a RLS rule similar to the one described here? https://supabase.com/docs/guides/auth/row-level-security#verifying-email-domains",
                    "author": {
                        "login": "jjhbw"
                    },
                    "createdAt": "2022-04-03T08:23:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013385"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhufQ",
                    "body": "This definitely seems like a task for RLS\r\n\r\n@bwklein - does @jjhbw 's suggestion work for you?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-04-05T10:38:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013392"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhufU",
                    "body": "@kiwicopple I received this reply from 'silentworks' on Discord about this question.\r\n\r\n\"Similar question was asked in the #ideas-and-suggestions channel. You can do so using a trigger but there is currently a pending issue that stops this from working fully as EXCEPTIONS inside of triggers on signUp don't bubble all the way up to the API level, so your user would be stopped but you wouldn't get an error message explaining why.\"\r\n\r\nI then went to the channel mentioned and found this information.",
                    "author": {
                        "login": "bwklein"
                    },
                    "createdAt": "2022-04-05T14:12:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013396"
                },
                {
                    "id": "IC_kwDOEKipmc5Zhufe",
                    "body": "I raised the question on Discord and was directed to this thread in Ideas/Suggestions there... \r\n\r\n![Screenshot_20220405-074205](https://user-images.githubusercontent.com/12104446/161779941-3446bed5-73c2-492d-81f1-06eeed9393d5.png)\r\n",
                    "author": {
                        "login": "bwklein"
                    },
                    "createdAt": "2022-04-05T14:43:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013406"
                },
                {
                    "id": "IC_kwDOEKipmc5Zhufi",
                    "body": "Ah yes, that sounds accurate - you won't be able to bubble up the error so you will need to \"guess\" that it's failing at the trigger. We definitely want to improve this (in the Auth server, which will require some work to make it work better with Postgres)\r\n\r\nIs this a blocker for you @bwklein? Or is it a reasonable workaround for now?",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2022-04-07T15:03:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013410"
                },
                {
                    "id": "IC_kwDOEKipmc5Zhufl",
                    "body": "I'v used the same method to limit signups to a specific e-mail domain and i'm getting an error as expected:\r\n1. create a `before insert` policy on `auth.users`:\r\n```plpgsql\r\ncreate function check_user()\r\nreturns trigger\r\nlanguage plpgsql\r\nas $$\r\nbegin\r\n  if right(new.email, 11) = '@domain.com' then\r\n    return new;\r\n  else\r\n    return null;\r\n  end if;\r\nend;\r\n$$;\r\n\r\n-- Triggers\r\n--\r\n\r\n-- trigger the function every time before a user is created - if a email is legal create user, otherwise returns an error\r\ncreate trigger on_before_user_created\r\n  before insert on auth.users\r\n  for each row execute procedure check_user();\r\n```\r\n2. signup:\r\n```js\r\n// gmail is not a whitelisted domain\r\nawait supabase.auth.signUp({email: \"blabla@gmail.com\", password: \"...\"})\r\n```\r\n3. then an error is thrown in the console:\r\n```json\r\n{\r\n  \"code\": 500,\r\n  \"error_id\": \"e6044037-cb3d-4a82-a784-34b32d112146\",\r\n  \"msg\": \"Error creating identity\"\r\n}\r\n```\r\nif that helps anyone ",
                    "author": {
                        "login": "rotemrevivo91"
                    },
                    "createdAt": "2022-04-11T15:53:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013413"
                },
                {
                    "id": "IC_kwDOEKipmc5Zhuf3",
                    "body": "I'll have to give it a try myself, but from this it looks like @rotemrevivo91 solution would do the trick.",
                    "author": {
                        "login": "bwklein"
                    },
                    "createdAt": "2022-04-11T17:20:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013431"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhugB",
                    "body": "@rotemrevivo91 does the user receive an email like silentworks mentioned in the reply or does that failure in your trigger stop the process before the email is sent?",
                    "author": {
                        "login": "bwklein"
                    },
                    "createdAt": "2022-04-11T17:29:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013441"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhugG",
                    "body": "> @rotemrevivo91 does the user receive an email like silentworks mentioned in the reply or does that failure in your trigger stop the process before the email is sent?\r\n\r\nI'v disabled the need for users to verify their registration via e-mails, so no e-mail is being sent. I'v faced a few issues with the SMTP service of supabase. But, i'v set up a nodemailer service to do the same, at least temporarily. ",
                    "author": {
                        "login": "rotemrevivo91"
                    },
                    "createdAt": "2022-04-12T07:21:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013446"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhugL",
                    "body": "This should be in the docs https://github.com/supabase/gotrue/issues/1057 versus https://supabase.com/docs/guides/auth/row-level-security#verifying-email-domains\r\nI would mention to newbs that this is run in 'SQL QUERY' then click run and that (maybe obvious to others but the 11 is the length of '@domain.com' so when you update to your domain count your string and update accordingly :)",
                    "author": {
                        "login": "gregpalaci"
                    },
                    "createdAt": "2023-01-08T19:47:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013451"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhugQ",
                    "body": "RLS would seem like a heavy solution for something like this if you can do it on the client side.:((",
                    "author": {
                        "login": "vipulb2"
                    },
                    "createdAt": "2023-01-08T21:31:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013456"
                },
                {
                    "id": "IC_kwDOEKipmc5ZhugW",
                    "body": "I'd like to add that the raising of an exception issue I mentioned in chat with the OP from almost a year ago was fixed.\r\n\r\n@gregpalaci we would have to create a triggers/trigger functions section in the docs for this. The section you mentioned in the docs only covers RLS examples.",
                    "author": {
                        "login": "silentworks"
                    },
                    "createdAt": "2023-01-14T22:12:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013462"
                },
                {
                    "id": "IC_kwDOEKipmc5Zhuga",
                    "body": "I'll transfer this issue to github.com/supabase/gotrue as we've been discussing implementing some form of allowlist / denylist behavior. Still no timeline on it, but best this is tracked there.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-01-21T14:08:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013466"
                },
                {
                    "id": "IC_kwDOEKipmc5Zhugj",
                    "body": "> I'd like to add that the raising of an exception issue I mentioned in chat with the OP from almost a year ago was fixed.\r\n> \r\n> @gregpalaci we would have to create a triggers/trigger functions section in the docs for this. The section you mentioned in the docs only covers RLS examples.\r\n\r\nHey no worries, it came up in my search, I'm glad the original issue was resolved around exceptions \ud83c\udf89 . I reckon the best course of action is the close the issue as solved. \r\n\r\nSorry if I miss commented I just wanted to eloborate on my findings to help new comers doing the same search as me and landing in the same result with some acltionable intel.\r\n\r\nThanks @hf for creating an issue in the correct place, sorry again for polluting your notifications y'all ",
                    "author": {
                        "login": "gregpalaci"
                    },
                    "createdAt": "2023-01-27T13:54:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013475"
                },
                {
                    "id": "IC_kwDOEKipmc5Zhugo",
                    "body": "> I'd like to add that the raising of an exception issue I mentioned in chat with the OP from almost a year ago was fixed.\r\n> \r\n> @gregpalaci we would have to create a triggers/trigger functions section in the docs for this. The section you mentioned in the docs only covers RLS examples.\r\n\r\n@silentworks, are you referring to the email issue or exceptions not being bubbled from signUp function call? I'm on the latest Supabase cli, and exceptions get only bubbled when the account exists, but not upon signup.",
                    "author": {
                        "login": "lauri865"
                    },
                    "createdAt": "2023-03-07T14:23:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1502013480"
                },
                {
                    "id": "IC_kwDOEKipmc5dtz5C",
                    "body": "> I'v used the same method to limit signups to a specific e-mail domain and i'm getting an error as expected:\r\n> \r\n> 1. create a `before insert` policy on `auth.users`:\r\n> \r\n> ```sql\r\n> create function check_user()\r\n> returns trigger\r\n> language plpgsql\r\n> as $$\r\n> begin\r\n>   if right(new.email, 11) = '@domain.com' then\r\n>     return new;\r\n>   else\r\n>     return null;\r\n>   end if;\r\n> end;\r\n> $$;\r\n> \r\n> -- Triggers\r\n> --\r\n> \r\n> -- trigger the function every time before a user is created - if a email is legal create user, otherwise returns an error\r\n> create trigger on_before_user_created\r\n>   before insert on auth.users\r\n>   for each row execute procedure check_user();\r\n> ```\r\n> \r\n> 2. signup:\r\n> \r\n> ```js\r\n> // gmail is not a whitelisted domain\r\n> await supabase.auth.signUp({email: \"blabla@gmail.com\", password: \"...\"})\r\n> ```\r\n> \r\n> 3. then an error is thrown in the console:\r\n> \r\n> ```json\r\n> {\r\n>   \"code\": 500,\r\n>   \"error_id\": \"e6044037-cb3d-4a82-a784-34b32d112146\",\r\n>   \"msg\": \"Error creating identity\"\r\n> }\r\n> ```\r\n> \r\n> if that helps anyone\r\n\r\nHow would I alter this for a list of emails? I'm making an app where I only want certain domains to have access to different types of accounts (only engineering firms can make one account (store an array of whitelisted emails somewhere?) and manufacturers can make other types of accounts (any email can pass through)) ",
                    "author": {
                        "login": "BenLyddane"
                    },
                    "createdAt": "2023-06-01T15:38:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1572290114"
                },
                {
                    "id": "IC_kwDOEKipmc5eCZcH",
                    "body": "Here's my solution: \r\n\r\nStep 1 make a table for your domains you want to verify against (Run these in sql editor) \r\n\r\n`CREATE TABLE allowed_domains (\r\n  domain_name VARCHAR(255) PRIMARY KEY\r\n);`\r\n\r\nAdd the domain names you want to be valid as rows in the allowed_domains table. DO NOT INCLUDE THE '@' symbol. \r\n\r\nexample: \r\n\r\ndomain_name\r\n-----------\r\nexample.com\r\ntest.com\r\nsample.org\r\n\r\nThen add a trigger on auth.users insert \r\n\r\n```\r\nCREATE FUNCTION check_user()\r\nRETURNS TRIGGER\r\nLANGUAGE plpgsql\r\nAS $$\r\nBEGIN\r\n  IF RIGHT(NEW.email, POSITION('@' IN REVERSE(NEW.email)) - 1) = ANY (\r\n    ARRAY(\r\n      SELECT domain_name FROM public.allowed_domains\r\n    )\r\n  ) THEN\r\n    RETURN NEW;\r\n  ELSE\r\n    RETURN NULL;\r\n  END IF;\r\nEND;\r\n$$;\r\n\r\nCREATE TRIGGER validate_user_domain\r\nBEFORE INSERT ON auth.users\r\nFOR EACH ROW\r\nEXECUTE FUNCTION check_user();\r\n```\r\n\r\nThen give your supabase admin permission to select from your domain table\r\n\r\n`GRANT SELECT ON TABLE public.allowed_domains TO supabase_auth_admin;`\r\n\r\n",
                    "author": {
                        "login": "BenLyddane"
                    },
                    "createdAt": "2023-06-05T23:32:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1577686791"
                },
                {
                    "id": "IC_kwDOEKipmc5gyj8U",
                    "body": "For all the people who have created a table with whitelists/blacklists, it only works if you disable the RLS (Row-Level Security) or enable at least the select for anonymous users.",
                    "author": {
                        "login": "epavanello"
                    },
                    "createdAt": "2023-07-06T15:19:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1623867156"
                },
                {
                    "id": "IC_kwDOEKipmc5gyrcj",
                    "body": "> For all the people who have created a table with whitelists/blacklists, it only works if you disable the RLS (Row-Level Security) or enable at least the select for anonymous users.\r\n\r\nThe anon role doesn't require any access to the table and would be a poor practice, as it could give free access to your customer list to anyone.\r\n\r\nEither the `authenticator` role needs to have select granted to the table or the trigger function has to be defined as a `SECURITY DEFINER` (which means that the function is triggered with the privileges of the owner rather than the invoker). RLS you can skip altogether, unless you want the account owners to access their own data for whatever reason.",
                    "author": {
                        "login": "lauri865"
                    },
                    "createdAt": "2023-07-06T15:40:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1623897891"
                },
                {
                    "id": "IC_kwDOEKipmc5pRgaw",
                    "body": "> Here's my solution:\r\n> \r\n> Step 1 make a table for your domains you want to verify against (Run these in sql editor)\r\n> \r\n> `CREATE TABLE allowed_domains ( domain_name VARCHAR(255) PRIMARY KEY );`\r\n> \r\n> Add the domain names you want to be valid as rows in the allowed_domains table. DO NOT INCLUDE THE '@' symbol.\r\n> \r\n> example:\r\n> \r\n> ## domain_name\r\n> example.com test.com sample.org\r\n> \r\n> Then add a trigger on auth.users insert\r\n> \r\n> ```\r\n> CREATE FUNCTION check_user()\r\n> RETURNS TRIGGER\r\n> LANGUAGE plpgsql\r\n> AS $$\r\n> BEGIN\r\n>   IF RIGHT(NEW.email, POSITION('@' IN REVERSE(NEW.email)) - 1) = ANY (\r\n>     ARRAY(\r\n>       SELECT domain_name FROM public.allowed_domains\r\n>     )\r\n>   ) THEN\r\n>     RETURN NEW;\r\n>   ELSE\r\n>     RETURN NULL;\r\n>   END IF;\r\n> END;\r\n> $$;\r\n> \r\n> CREATE TRIGGER validate_user_domain\r\n> BEFORE INSERT ON auth.users\r\n> FOR EACH ROW\r\n> EXECUTE FUNCTION check_user();\r\n> ```\r\n> \r\n> Then give your supabase admin permission to select from your domain table\r\n> \r\n> `GRANT SELECT ON TABLE public.allowed_domains TO supabase_auth_admin;`\r\n\r\n\r\nI wanted to do same logic but with a small difference which is (checking email if it's existed in allowed_emails)\r\n\r\n```\r\n-- limit sign in to the users are pre-defined\r\nCREATE OR REPLACE FUNCTION check_user_email()\r\nRETURNS TRIGGER AS $$\r\nBEGIN\r\n  -- Check if the email is in the allowed_emails table\r\n  IF NEW.email IN (SELECT email FROM allowed_emails) THEN\r\n    RETURN NEW;\r\n  ELSE\r\n    RETURN NULL;\r\n  END IF;\r\nEND;\r\n$$ LANGUAGE plpgsql;\r\n\r\nCREATE TRIGGER check_user_email_trigger\r\nBEFORE INSERT ON auth.users\r\nFOR EACH ROW\r\nEXECUTE FUNCTION check_user_email();\r\n```\r\n\r\ndesipte that email is found in the table it gives the following error:\r\n\r\n```\r\nAuthApiError: Database error saving new user\r\n    at handleError (webpack-internal:///(rsc)/./node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:36:11)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async _handleRequest (webpack-internal:///(rsc)/./node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:84:9)\r\n    at async _request (webpack-internal:///(rsc)/./node_modules/@supabase/gotrue-js/dist/main/lib/fetch.js:63:18)\r\n    at async SupabaseAuthClient.signUp (webpack-internal:///(rsc)/./node_modules/@supabase/gotrue-js/dist/main/GoTrueClient.js:218:23)\r\n    at async eval (webpack-internal:///(rsc)/./app/[locale]/page.tsx:67:33) {\r\n  __isAuthError: true,\r\n  status: 500\r\n}\r\n```\r\n\r\nalso I tried to disable RLS on the allowed_emails table, and tried to grant supabase_auth_admin select permission but it didn't work, any help?",
                    "author": {
                        "login": "E-Naeim"
                    },
                    "createdAt": "2023-10-17T11:11:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1766196912"
                },
                {
                    "id": "IC_kwDOEKipmc5pyjPh",
                    "body": "Try this:\r\n\r\nCREATE OR REPLACE FUNCTION check_user() RETURNS TRIGGER AS $$\r\nBEGIN\r\n    ...\r\nEND;\r\n$$ LANGUAGE plpgsql SECURITY DEFINER;\r\n\r\nand check in which schema the allowed_emails table is. Its import to prefix it with public. (if its is in public)",
                    "author": {
                        "login": "udiedrichsen"
                    },
                    "createdAt": "2023-10-23T10:10:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/1057#issuecomment-1774859233"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jCwjQ",
            "number": 1060,
            "title": "Cannot change email to the same value of existing auth.identities record for non-\"email\" providers",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nUser cannot change email to the same value of existing `auth.identities` record for non-\"email\" providers.\r\n\r\n## To Reproduce\r\n\r\n1. Sign up with \"foo@bar.com\" using `signUp()`.\r\n2. A record is inserted into `auth.identities` table with a value of \"email\" for the `provider` column and a value of \"foo@bar.com\" for the `email` column.\r\n3. Sign in using `signInWithOAuth()` with a Twitter account that has the email address \"foo@bar.com\" registered.\r\n4. A record is inserted into `auth.identities` table with a value of \"twitter\" for the `provider` column and a value of \"foo@bar.com\" for the `email` column.\r\n5. Update the email address with `updateUser({email: 'newEmail@bar.com'})`.\r\n6. The `email` column value for the record with a value of \"email\" in the `provider` column in the `auth.identities` table is changed to \"newEmail@bar.com\".\r\n7. Try to revert the email address back to \"foo@bar.com\" with `updateUser({email: 'foo@bar.com'})`.\r\n8. \"User already registered.\" error occurs.\r\n\r\n## Expected behavior\r\n\r\nIf none of the records in the `auth.identities` table with a value of \"email\" for the `provider` column have the same email address as the one being updated, it is possible to change the email address to that value.",
            "author": {
                "login": "ttskch"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-14T01:57:46Z",
            "closedAt": "2023-04-20T16:41:14Z",
            "url": "https://github.com/supabase/gotrue/issues/1060",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5aZjDN",
                    "body": ":tada: This issue has been resolved in version 2.60.9 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.60.9)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2023-04-20T16:48:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/1060#issuecomment-1516646605"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jCwj1",
            "number": 1061,
            "title": "I'm getting a \"Database error finding user\" on signup using Supabase Auth",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nWhen I try to create a new user using the Auth components by Supabase. My code.\r\n\r\n```\r\nimport { createClient } from '@supabase/supabase-js'\r\nimport { Auth, ThemeSupa } from '@supabase/auth-ui-react'\r\nimport { useSession, useSupabaseClient } from '@supabase/auth-helpers-react'\r\n\r\nexport default function Login() {\r\n  const session = useSession()\r\n  const supabase = createClient('https://jmysiwodgrecdxkhkipl.supabase.co', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpteXNpd29kZ3JlY2R4a2hraXBsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NzY5NDY3MzMsImV4cCI6MTk5MjUyMjczM30.l7Cik5GlWG68effPhbaG4WfM20lYn8f_EreYntnzZWQ')\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"\" style={{ padding: '50px 0 100px 0' }}>\r\n      <div className=\"flex justify-center\">\r\n\r\n      \r\n      {!session ? (\r\n        <Auth supabaseClient={supabase} appearance={{ theme: ThemeSupa }} theme=\"light\" />\r\n      ) : (\r\n        <p>Account page will go here.</p>\r\n      )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Go to the login page with Supabase Auth component\r\n2. Try to create a new user\r\n3. An error is returned \"Database error finding user\" when signing up or \"Database error querying schema\" when login is attempted\r\n\r\nNetwork logs shows:\r\n\r\n```\r\n{code: 500, msg: \"Database error finding user\", error_id: \"7a43a2d5463629b3-MEL\"}\r\ncode: 500\r\nerror_id: \"7a43a2d5463629b3-MEL\"\r\nmsg: \"Database error finding user\"\r\n```\r\n## Expected behavior\r\n\r\nNew user should be created.\r\n\r\n\r\n## Screenshots\r\n\r\nhttps://imgur.com/P10rJaP \r\n\r\n\r\n## System information\r\n\r\n- OS: Windows 11\r\n- Browser (if applies): Chrome\r\n- Version of  \"@supabase/supabase-js\": \"2.8.0\",\r\n- Version of Node.js:  v18.12.1\r\n\r\n## Additional context\r\n\r\nWould my schema have something to do with it?\r\n\r\n```\r\ngenerator client {\r\n  provider        = \"prisma-client-js\"\r\n  previewFeatures = [\"multiSchema\"]\r\n}\r\n\r\ndatasource db {\r\n  provider = \"postgresql\"\r\n  url      = env(\"DATABASE_URL\")\r\n  schemas  = [\"storage\", \"auth\", \"public\"]\r\n}\r\n\r\nmodel audit_log_entries {\r\n  instance_id String?   @db.Uuid\r\n  id          String    @id @db.Uuid\r\n  payload     Json?     @db.Json\r\n  created_at  DateTime? @db.Timestamptz(6)\r\n  ip_address  String    @default(\"\") @db.VarChar(64)\r\n\r\n  @@index([instance_id], map: \"audit_logs_instance_id_idx\")\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel identities {\r\n  id              String\r\n  user_id         String    @db.Uuid\r\n  identity_data   Json\r\n  provider        String\r\n  last_sign_in_at DateTime? @db.Timestamptz(6)\r\n  created_at      DateTime? @db.Timestamptz(6)\r\n  updated_at      DateTime? @db.Timestamptz(6)\r\n  email           String?   @default(dbgenerated(\"lower((identity_data ->> 'email'::text))\"))\r\n  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@id([provider, id])\r\n  @@index([email])\r\n  @@index([user_id])\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel instances {\r\n  id              String    @id @db.Uuid\r\n  uuid            String?   @db.Uuid\r\n  raw_base_config String?\r\n  created_at      DateTime? @db.Timestamptz(6)\r\n  updated_at      DateTime? @db.Timestamptz(6)\r\n\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel mfa_amr_claims {\r\n  session_id            String   @db.Uuid\r\n  created_at            DateTime @db.Timestamptz(6)\r\n  updated_at            DateTime @db.Timestamptz(6)\r\n  authentication_method String\r\n  id                    String   @id(map: \"amr_id_pk\") @db.Uuid\r\n  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@unique([session_id, authentication_method], map: \"mfa_amr_claims_session_id_authentication_method_pkey\")\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel mfa_challenges {\r\n  id          String      @id @db.Uuid\r\n  factor_id   String      @db.Uuid\r\n  created_at  DateTime    @db.Timestamptz(6)\r\n  verified_at DateTime?   @db.Timestamptz(6)\r\n  ip_address  String      @db.Inet\r\n  mfa_factors mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: \"mfa_challenges_auth_factor_id_fkey\")\r\n\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel mfa_factors {\r\n  id             String           @id @db.Uuid\r\n  user_id        String           @db.Uuid\r\n  friendly_name  String?\r\n  factor_type    factor_type\r\n  status         factor_status\r\n  created_at     DateTime         @db.Timestamptz(6)\r\n  updated_at     DateTime         @db.Timestamptz(6)\r\n  secret         String?\r\n  mfa_challenges mfa_challenges[]\r\n  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@index([user_id, created_at], map: \"factor_id_created_at_idx\")\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel refresh_tokens {\r\n  instance_id String?   @db.Uuid\r\n  id          BigInt    @id @default(autoincrement())\r\n  token       String?   @unique(map: \"refresh_tokens_token_unique\") @db.VarChar(255)\r\n  user_id     String?   @db.VarChar(255)\r\n  revoked     Boolean?\r\n  created_at  DateTime? @db.Timestamptz(6)\r\n  updated_at  DateTime? @db.Timestamptz(6)\r\n  parent      String?   @db.VarChar(255)\r\n  session_id  String?   @db.Uuid\r\n  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@index([instance_id])\r\n  @@index([instance_id, user_id])\r\n  @@index([parent])\r\n  @@index([session_id, revoked])\r\n  @@index([token])\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel saml_providers {\r\n  id                String        @id @db.Uuid\r\n  sso_provider_id   String        @db.Uuid\r\n  entity_id         String        @unique\r\n  metadata_xml      String\r\n  metadata_url      String?\r\n  attribute_mapping Json?\r\n  created_at        DateTime?     @db.Timestamptz(6)\r\n  updated_at        DateTime?     @db.Timestamptz(6)\r\n  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@index([sso_provider_id])\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel saml_relay_states {\r\n  id              String        @id @db.Uuid\r\n  sso_provider_id String        @db.Uuid\r\n  request_id      String\r\n  for_email       String?\r\n  redirect_to     String?\r\n  from_ip_address String?       @db.Inet\r\n  created_at      DateTime?     @db.Timestamptz(6)\r\n  updated_at      DateTime?     @db.Timestamptz(6)\r\n  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@index([for_email])\r\n  @@index([sso_provider_id])\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel schema_migrations {\r\n  version String @id @db.VarChar(255)\r\n\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel sessions {\r\n  id             String           @id @db.Uuid\r\n  user_id        String           @db.Uuid\r\n  created_at     DateTime?        @db.Timestamptz(6)\r\n  updated_at     DateTime?        @db.Timestamptz(6)\r\n  factor_id      String?          @db.Uuid\r\n  aal            aal_level?\r\n  not_after      DateTime?        @db.Timestamptz(6)\r\n  mfa_amr_claims mfa_amr_claims[]\r\n  refresh_tokens refresh_tokens[]\r\n  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@index([user_id])\r\n  @@index([user_id, created_at], map: \"user_id_created_at_idx\")\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel sso_domains {\r\n  id              String        @id @db.Uuid\r\n  sso_provider_id String        @db.Uuid\r\n  domain          String\r\n  created_at      DateTime?     @db.Timestamptz(6)\r\n  updated_at      DateTime?     @db.Timestamptz(6)\r\n  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n\r\n  @@index([sso_provider_id])\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel sso_providers {\r\n  id                String              @id @db.Uuid\r\n  resource_id       String?\r\n  created_at        DateTime?           @db.Timestamptz(6)\r\n  updated_at        DateTime?           @db.Timestamptz(6)\r\n  saml_providers    saml_providers[]\r\n  saml_relay_states saml_relay_states[]\r\n  sso_domains       sso_domains[]\r\n\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel users {\r\n  instance_id                 String?       @db.Uuid\r\n  id                          String        @id @db.Uuid\r\n  aud                         String?       @db.VarChar(255)\r\n  role                        String?       @db.VarChar(255)\r\n  email                       String?       @db.VarChar(255)\r\n  encrypted_password          String?       @db.VarChar(255)\r\n  email_confirmed_at          DateTime?     @db.Timestamptz(6)\r\n  invited_at                  DateTime?     @db.Timestamptz(6)\r\n  confirmation_token          String?       @db.VarChar(255)\r\n  confirmation_sent_at        DateTime?     @db.Timestamptz(6)\r\n  recovery_token              String?       @db.VarChar(255)\r\n  recovery_sent_at            DateTime?     @db.Timestamptz(6)\r\n  email_change_token_new      String?       @db.VarChar(255)\r\n  email_change                String?       @db.VarChar(255)\r\n  email_change_sent_at        DateTime?     @db.Timestamptz(6)\r\n  last_sign_in_at             DateTime?     @db.Timestamptz(6)\r\n  raw_app_meta_data           Json?\r\n  raw_user_meta_data          Json?\r\n  is_super_admin              Boolean?\r\n  created_at                  DateTime?     @db.Timestamptz(6)\r\n  updated_at                  DateTime?     @db.Timestamptz(6)\r\n  phone                       String?       @unique\r\n  phone_confirmed_at          DateTime?     @db.Timestamptz(6)\r\n  phone_change                String?       @default(\"\")\r\n  phone_change_token          String?       @default(\"\") @db.VarChar(255)\r\n  phone_change_sent_at        DateTime?     @db.Timestamptz(6)\r\n  confirmed_at                DateTime?     @default(dbgenerated(\"LEAST(email_confirmed_at, phone_confirmed_at)\")) @db.Timestamptz(6)\r\n  email_change_token_current  String?       @default(\"\") @db.VarChar(255)\r\n  email_change_confirm_status Int?          @default(0) @db.SmallInt\r\n  banned_until                DateTime?     @db.Timestamptz(6)\r\n  reauthentication_token      String?       @default(\"\") @db.VarChar(255)\r\n  reauthentication_sent_at    DateTime?     @db.Timestamptz(6)\r\n  is_sso_user                 Boolean       @default(false)\r\n  deleted_at                  DateTime?     @db.Timestamptz(6)\r\n  identities                  identities[]\r\n  mfa_factors                 mfa_factors[]\r\n  sessions                    sessions[]\r\n  profiles                    UserProfile?\r\n\r\n  @@index([instance_id])\r\n  @@schema(\"auth\")\r\n}\r\n\r\nenum aal_level {\r\n  aal1\r\n  aal2\r\n  aal3\r\n\r\n  @@schema(\"auth\")\r\n}\r\n\r\nenum factor_status {\r\n  unverified\r\n  verified\r\n\r\n  @@schema(\"auth\")\r\n}\r\n\r\nenum factor_type {\r\n  totp\r\n  webauthn\r\n\r\n  @@schema(\"auth\")\r\n}\r\n\r\nmodel Ride {\r\n  id                  Int         @id @default(autoincrement())\r\n  title               String\r\n  originLocation      String\r\n  destinationLocation String\r\n  pickupDate          String\r\n  pickupTime          String\r\n  numberOfPassengers  Int\r\n  description         String\r\n  pricePerSeat        Int\r\n  userId              Int\r\n  createdAt           DateTime    @default(now())\r\n  dropoffTime         String\r\n  User                UserProfile @relation(fields: [userId], references: [id])\r\n\r\n  @@schema(\"public\")\r\n}\r\n\r\nmodel UserProfile {\r\n  id          Int      @id @default(autoincrement())\r\n  bio         String?\r\n  firstName   String\r\n  lastName    String\r\n  phoneNumber String\r\n  sex         Gender?\r\n  email       String   @unique\r\n  stripeId    String   @unique\r\n  createdAt   DateTime @default(now())\r\n  rides       Ride[]\r\n  auth        users    @relation(fields: [authId], references: [id], onDelete: Cascade, onUpdate: NoAction)\r\n  authId      String   @unique @db.Uuid\r\n\r\n  @@map(\"User\")\r\n  @@schema(\"public\")\r\n}\r\n\r\nenum Gender {\r\n  Male\r\n  Female\r\n\r\n  @@schema(\"public\")\r\n}\r\n```\r\n",
            "author": {
                "login": "christopheragnus"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-07T15:01:13Z",
            "closedAt": "2023-05-03T14:16:16Z",
            "url": "https://github.com/supabase/gotrue/issues/1061",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Zj9Dt",
                    "body": "There might be more specific information in the dashboard Postgres log right after the error.\r\nI don't think it would be related to the error you are seeing, but do you have a trigger function on auth.users?  If so you might want to disable the trigger just to rule that out.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-03-07T15:55:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1502597357"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9D0",
                    "body": "Also any chance you use the Prisma multiSchema feature?  (I don't know what that is exactly) but at least one other user had their grants on the auth schema messed up by using that.\r\n",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-03-07T16:59:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1502597364"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9D2",
                    "body": "Hey Gary - all my triggers have been disabled. I am using the Prisma multiSchema feature. I have tried restoring grants using this: https://supabase.com/docs/guides/integrations/prisma#missing-grants\r\n\r\nBut the error still occurs.\r\n\r\nI can't even get the project usage statistics to show up...",
                    "author": {
                        "login": "christopheragnus"
                    },
                    "createdAt": "2023-03-08T11:06:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1502597366"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9D5",
                    "body": "All I know is a discord user lost his auth grants using Prisma mulitSchema. The user never said what he did after, but I think started a new instance.\r\n  \r\nThe schema fix shown does not include auth schema I don\u2019t believe. \r\n\r\n I suspect this is something new with Prisma/Supabase based on two of you in a week having it and not seeing this before.   ",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-03-08T13:06:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1502597369"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9D7",
                    "body": "I also get this error :\r\n\r\n**Describe the bug**\r\nI'm trying to create a new user with supabase-js and the local dev environment in a unit test. before test runs, I call \r\n\r\n`supabase db reset`\r\n\r\n`const { data, error } = await supabase.auth.signUp({ email: \"user1aaa@emailasdf.com\", password: \"password-1\", });`\r\n\r\nthis call give me :\r\n```\r\n data: { user: null, session: null },\r\n error: AuthApiError: Database error finding user\r\n```\r\n\r\nevery thing work fine on the second and all other call",
                    "author": {
                        "login": "marc-tech"
                    },
                    "createdAt": "2023-03-31T21:09:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1502597371"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9D_",
                    "body": "Same here, the lack of documentation and issues ive been facing with local Supabase development (using Prisma and the Supabase client) definitely has me reconsidering my decision to use Supabase as a BaaS for our startup. Hopefully we can resolve work to resolve this issue soon as I was looking forward to using Supabase.",
                    "author": {
                        "login": "estebangarcia21"
                    },
                    "createdAt": "2023-04-07T01:59:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1502597375"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9EB",
                    "body": "For me I resolved the issue by running `supabase stop` and then `supabase start`. Hopefully this can help someone out.",
                    "author": {
                        "login": "estebangarcia21"
                    },
                    "createdAt": "2023-04-07T18:32:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1502597377"
                },
                {
                    "id": "IC_kwDOEKipmc5Z_p6X",
                    "body": "this was a supabase key missing for me, check your env and auth token and add --debug to see if any other error can occur",
                    "author": {
                        "login": "marc-tech"
                    },
                    "createdAt": "2023-04-15T14:40:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1509858967"
                },
                {
                    "id": "IC_kwDOEKipmc5aSjmS",
                    "body": "hello everyone, you can take a look at the detailed error returned from the logs explorer on the dashboard: https://app.supabase.com/project/_/logs/explorer and reach out to us at support (https://app.supabase.com/support/new) if you see something strange.\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-04-19T14:14:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1514813842"
                },
                {
                    "id": "IC_kwDOEKipmc5bYWDS",
                    "body": "Hey @christopheragnus, @marc-tech, @estebangarcia21, i'm not really familiar with prisma's multi schema feature, but it would be great you guys can suggest possible remediation steps or solutions that worked for you. If Prisma makes modifications to the auth schema under the hood, it will cause gotrue to fail since the auth schema is supposed to be managed by gotrue only. \r\n\r\nI'll be closing this issue since it's not related to gotrue but feel free to reopen it or comment in this thread.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:16:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1533108434"
                },
                {
                    "id": "IC_kwDOEKipmc5cRG9X",
                    "body": "I have a similar error : \r\n**Describe the bug**\r\nAfter doing a migration, I am no longer able to log in or sign up. I used to be able to. \r\nI have an error 500 saying nothing else but I when I look at my log I see these errors : \r\n![image](https://github.com/supabase/gotrue/assets/122353423/a5edf481-bbc1-4e0f-980c-82a2fcc0f3dc)\r\n\r\nIf anyone found the magic answer after a week, I'm interested.\r\n",
                    "author": {
                        "login": "NicolasChusseau"
                    },
                    "createdAt": "2023-05-15T14:32:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/1061#issuecomment-1547988823"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jCwkN",
            "number": 1062,
            "title": "Magic link doesn't send after changing user email with supabase.auth.admin.updateUserById",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nI have an obfuscate user function which changes the users email to deactivated@...\r\nWhen the user tries to create a new account with the original email they don't receive it\r\n\r\n## To Reproduce\r\n\r\n1. Create a user with a magic link: supabase.auth.signInWithOtp({email: user@domain.com})\r\n2. Verify the account with the link / token\r\n3. Change the email with supabase.auth.admin.updateUserById(id, { email: 'deactivated@domain.com' })\r\n4. Create a new user with the original email: supabase.auth.signInWithOtp({email: user@domain.com})\r\n5. No email is received\r\n\r\n## Expected behavior\r\n\r\nThe user should receive an email with a token\r\n\r\n## Additional context\r\n\r\nSome observations, might or might not be related:\r\n\r\n- In the dashboard the email isn't changed in the \"protected schemas > auth > identities\" table, it still shows the old email\r\n- I tried to force the email to confirm right after changing it with supabase.auth.admin.updateUserById(id, { email_confirm: true })\r\n- If I force a magic link via the supabase dashboard they do receive the email\r\n",
            "author": {
                "login": "Lewitje"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-01T21:28:37Z",
            "closedAt": "2023-05-03T14:19:00Z",
            "url": "https://github.com/supabase/gotrue/issues/1062",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Zj9EE",
                    "body": "Any update on this?",
                    "author": {
                        "login": "Lewitje"
                    },
                    "createdAt": "2023-03-13T18:11:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1062#issuecomment-1502597380"
                },
                {
                    "id": "IC_kwDOEKipmc5aXoDa",
                    "body": "Hi @Lewitje, I'm unable to reproduce this on the current version of gotrue, can you please reach out to us at [support](https://app.supabase.com/support/new) with your project reference so we can take a look at the issue?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-04-20T11:10:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1062#issuecomment-1516142810"
                },
                {
                    "id": "IC_kwDOEKipmc5bYXIh",
                    "body": "Hi @Lewitje, please feel free to reopen the issue if you are still facing this problem. You can also reach out to us at support and we can take a look at your project in detail.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:19:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1062#issuecomment-1533112865"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jCwkn",
            "number": 1063,
            "title": "Signups not allowed for otp with phone ",
            "body": "Hey guys, \r\n\r\nI am getting the error when I try to use signInWithOtp => **Signups not allowed for otp**, version I am using is 2.8.0\r\n\r\nThis is the code block that I am using to trigger the function:\r\n\r\n```\r\nconst { data, error } = await supabase.auth.signInWithOtp({\r\n    phone,\r\n    options: {\r\n      shouldCreateUser: false,\r\n    },\r\n  });\r\n```\r\n\r\nAny help with it",
            "author": {
                "login": "kresogalic8"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-23T09:58:50Z",
            "closedAt": "2023-04-17T06:22:42Z",
            "url": "https://github.com/supabase/gotrue/issues/1063",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Zj9Ea",
                    "body": "Did you enable phone provider in auth providers from the Ui?",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-02-23T13:45:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1063#issuecomment-1502597402"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Ec",
                    "body": "Hey @kresogalic8,\r\n\r\nAuth team here \ud83d\udc4b Wanted to check in - did you manage to resolve this after enabling the phone provider?\r\n\r\nLet us know!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-27T23:36:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/1063#issuecomment-1502597404"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Ef",
                    "body": "Hey, @J0 i didnt resolve the problem. @GaryAustin1 yes, i enabled the phone provider. \r\n\r\n",
                    "author": {
                        "login": "kresogalic8"
                    },
                    "createdAt": "2023-03-02T11:59:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1063#issuecomment-1502597407"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Ei",
                    "body": "Hi @kresogalic8 \r\nCould it be because of shouldCreateUser: false in options?\r\n\r\n```\r\n options: {\r\n      shouldCreateUser: false,\r\n    },\r\n```\r\n\r\nAs per the [docs](https://supabase.com/docs/reference/javascript/auth-signinwithotp), \r\n\r\n> If the user doesn't exist, signInWithOtp() will signup the user instead. To restrict this behaviour, you can set shouldCreateUser in SignInWithPasswordlessCredentials.options to false.\r\n\r\nI'd suggest updating the value to true and trying once whether the signup is working. ",
                    "author": {
                        "login": "anishsrinivasan"
                    },
                    "createdAt": "2023-03-02T20:34:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1063#issuecomment-1502597410"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9En",
                    "body": "@anishsrinivasan i dont want to create a user on signInWithOtp, thats the point. and when i provide false it gives me an error",
                    "author": {
                        "login": "kresogalic8"
                    },
                    "createdAt": "2023-03-04T23:56:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1063#issuecomment-1502597415"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Ep",
                    "body": "Hi @kresogalic8, this is intended behaviour. The `shouldCreateUser` option was added because signInWithOtp creates a user by default if the user doesn't exist yet. By setting `shouldCreateUser = false`, it blocks `signInWithOtp` from creating a new user.\r\n\r\nThis means that you will need to call the sign up method first, verify the email / phone number and then call `signInWithOtp` to login.\r\n\r\nSeems like you are trying to call `signInWithOtp` with `shouldCreateUser = false` for a user that doesn't exist yet?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-22T14:56:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1063#issuecomment-1502597417"
                },
                {
                    "id": "IC_kwDOEKipmc5aDJU2",
                    "body": "closing the issue because it seems stale - feel free to reopen if my comment didn't help @kresogalic8 ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-04-17T06:22:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/1063#issuecomment-1510774070"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jCwkv",
            "number": 1064,
            "title": "Add shouldCreateUser option to signInWithOAuth",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nEven though the documentation states \"Log in an **existing** user via a third-party provider\", this function creates a new user if it does not exist.\r\n\r\n## To Reproduce\r\n\r\nTry the signInWithOAuth function for a new user (has not signed up using the same email with any other method).\r\n\r\n## Expected behavior\r\n\r\nThis is a bit like the signInWithOtp function, which is used for both sign ups and sign ins, but at least you have a shouldCreateUser option.\r\n\r\nI would expect to also have a shouldCreateUser option here.",
            "author": {
                "login": "alexbaramilis"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-21T13:19:15Z",
            "closedAt": "2023-05-03T14:21:15Z",
            "url": "https://github.com/supabase/gotrue/issues/1064",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Zj9Ex",
                    "body": "The documentation definitely needs updating.  signInWithOAuth will create a user if they do not exist.  This is the way 3rd party auth has always worked with Supabase.\r\nAs far as adding the option to not create like in OTP that would be an enhancement as nothing is in place to do that.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-02-21T14:42:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/1064#issuecomment-1502597425"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9E0",
                    "body": "Thanks. I edited the title to make it more clear.",
                    "author": {
                        "login": "alexbaramilis"
                    },
                    "createdAt": "2023-02-23T10:26:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/1064#issuecomment-1502597428"
                },
                {
                    "id": "IC_kwDOEKipmc5aSnfl",
                    "body": "Hi @alexbaramilis, can you please describe your use case for wanting to have this param? The problem with this approach is that it can be easily bypassed at the API level and a smart user can easily sign in even though they are a new user. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-04-19T14:23:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/1064#issuecomment-1514829797"
                },
                {
                    "id": "IC_kwDOEKipmc5aS9Qg",
                    "body": "Hi @kangmingtay. My use case is that I have a separate login and register page, with the register page requiring some options to be selected before creating an account. Therefore I didn't want someone to create an account via the login page, without selecting these options first. This was easy with signInWithOtp and the shouldCreateUser option and I expected I could do the same with signInWithOAuth. Of course, there are workarounds that I can write after login/register to require these options to be filled so it's not a serious issue for me. If you think it's not appropriate or feasible, please feel free to close the issue.",
                    "author": {
                        "login": "alexbaramilis"
                    },
                    "createdAt": "2023-04-19T15:16:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1064#issuecomment-1514918944"
                },
                {
                    "id": "IC_kwDOEKipmc5bYX_Z",
                    "body": "Hey @alexbaramilis,\r\n\r\nUnfortunately I don't think we'll be fixing this immediately but we'll be looking allowing users to customize behaviour via webhooks. We'll take this use case into account and try to support it. Going to close the issue for now in favour of tracking it internally.\r\n\r\nLet us know if there are any questions or concerns.\r\n\r\nThanks!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-03T14:21:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1064#issuecomment-1533116377"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jCwla",
            "number": 1066,
            "title": "Documentation to make authentication with Google incomplete",
            "body": "# Improve documentation\r\n\r\nI could bring the user data using a Google auth method following the code bellow:\r\n\r\n```tsx\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport * as Google from \"expo-auth-session/providers/google\";\r\n\r\nimport \"react-native-url-polyfill/auto\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { IAuthResponse } from \"./interface\";\r\n\r\nexport default function App() {\r\n  const { SUPABASE_URL } = process.env\r\n  const { SUPABASE_ANON_KEY } = process.env\r\n\r\n  const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\r\n\r\n  const [req, _res, promptAsync] = Google.useAuthRequest({\r\n    expoClientId: \"\",\r\n    iosClientId: \"\",\r\n    androidClientId: \"\",\r\n  });\r\n\r\n  const loginWithGoogle = async () => {\r\n    promptAsync({\r\n      url: `${SUPABASE_URL}/auth/v1/authorize?provider=google&redirect_to=${req?.redirectUri}`,\r\n    })\r\n      .then(async (res: any) => {\r\n        let response: IAuthResponse = res;\r\n\r\n        const { user, session, error } = await supabase.auth.signIn({\r\n          refreshToken: response.params.refresh_token,\r\n        });\r\n        console.log(\"user: \", user, \"session: \", session, \"error: \", error);\r\n      })\r\n      .catch((error) => console.log(\"error: \", error));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"auto\" />\r\n      <Text style={styles.text}>Supabase login</Text>\r\n\r\n      <Button title=\"Login with Google\" onPress={loginWithGoogle} />\r\n    </View>\r\n  );\r\n}\r\n\r\n```\r\n\r\nBut the problem is that this way is with an old version of supabase library: `\"@supabase/supabase-js\": \"1.35.6\"`\r\n\r\nCould you help me to make the code works with the latest version of `\"@supabase/supabase-js\": \"2.7.0\"`?\r\n\r\nI tried to use this new version, but inside of data only returned to me: `data:  {\"provider\": \"google\", \"url\": \"https://***supabase.co/auth/v1/authorize?provider=google\"}\r\n`.\r\n\r\nThe current documentation it's not clear to me, I have to do more steps? \r\nShould I use `expo-auth-session`? But how can I built with it?\r\n\r\nI followed all the steps described into your documentation:\r\n\r\n1 - Create the Google Cloud consent screen  (but this screen even open inside the emulator)\r\n![screencapture-console-cloud-google-apis-credentials-consent-edit-2023-02-04-21_20_34 (1)](https://user-images.githubusercontent.com/21963291/216788210-dd2b8f73-cf9d-4ce3-a227-57bef3840294.png)\r\n\r\n2 - Create the credentials\r\n![Screenshot 2023-02-04 at 21 25 22](https://user-images.githubusercontent.com/21963291/216788257-271a3c4e-dc60-4f41-bd4c-afee9e484538.png)\r\n\r\n3 - Insert the credentials inside Supabase Google Provider configs:\r\n![Screenshot 2023-02-04 at 21 26 46](https://user-images.githubusercontent.com/21963291/216788311-b917cf89-94ad-4c6d-913e-6eda61d3728e.png)\r\n\r\n4 - Add the code\r\n\r\n```tsx\r\nimport React from \"react\";\r\nimport { View, Text, Button } from \"react-native\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst Login = (): JSX.Element => {\r\n  const { SUPABASE_URL } = process.env\r\n  const { SUPABASE_ANON_KEY } = process.env\r\n\r\n  const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\r\n\r\n  async function signInWithGoogle() {\r\n    const { data, error } = await supabase.auth.signInWithOAuth({\r\n      provider: \"google\",\r\n    });\r\n\r\n    if (data) {\r\n      console.log(\"data: \", data);\r\n    }\r\n\r\n    if (error) {\r\n      console.log(\"error: \", error);\r\n    }\r\n  }\r\n\r\n  async function signout() {\r\n    const { error } = await supabase.auth.signOut();\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Text style={{ marginVertical: 40, fontSize: 24, alignSelf: \"center\" }}>\r\n        Login\r\n      </Text>\r\n\r\n      <Button title=\"Signin with Google\" onPress={signInWithGoogle} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n```\r\n\r\nCould you help me describing in steps?\r\n\r\nI have tried a lot of solutions, included I saw this video of one of supabase's developers\r\n\r\n**https://www.youtube.com/watch?v=dE2vtnv83Fc&t=240s**\r\n\r\nBut it's outdated as well.\r\n\r\nI would love utilize this method of authentication.",
            "author": {
                "login": "ildaneta"
            },
            "state": "CLOSED",
            "createdAt": "2023-02-09T22:16:55Z",
            "closedAt": "2023-05-03T14:23:50Z",
            "url": "https://github.com/supabase/gotrue/issues/1066",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Zj9FX",
                    "body": "Hey @ildaneta,\r\n\r\nThanks for your detailed query! \r\n\r\nThe code you've described in Step 4 should return `data:  {\"provider\": \"google\", \"url\": \"https://***supabase.co/auth/v1/authorize?provider=google\"}` as you've mentioned. You will need to make a redirect to `data.url` in order to trigger the OAuth flow.\r\n\r\nI've also personally stepped through the OAuth flow to ensure that it is working - see supabase/supabase#12684 \r\n\r\nHope this helps and let me know if I've misunderstood your query or if there are any further issues\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-02-26T11:48:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597463"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Fg",
                    "body": "hello @J0! I'm in the same boat. How do I make a redirect to data.url?",
                    "author": {
                        "login": "connor-ashton-dev"
                    },
                    "createdAt": "2023-03-02T17:33:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597472"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Fk",
                    "body": "Hey @connor-ashton-dev,\r\n\r\nIt varies depending on what device/language/framework you are using - do you mind telling me more about what you're working with?\r\n\r\nIf you have a `window` or equivalent polyfill you can set `window.location`",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-03T10:32:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597476"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Fo",
                    "body": "@J0 \n\nI'm using react native with expo. Thanks!",
                    "author": {
                        "login": "connor-ashton-dev"
                    },
                    "createdAt": "2023-03-03T13:49:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597480"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Fu",
                    "body": "Same problem here, has anyone resolved?",
                    "author": {
                        "login": "sndrgb"
                    },
                    "createdAt": "2023-03-13T17:26:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597486"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9Fx",
                    "body": "@connor-ashton-dev , @sndrgb \r\n\r\nShould work with React Native + Expo - you'll probably want to use a polyfill for react native",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-14T02:32:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597489"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9F0",
                    "body": "@J0 How would I go about it? What are the next steps after getting the url from google?",
                    "author": {
                        "login": "connor-ashton-dev"
                    },
                    "createdAt": "2023-03-14T04:24:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597492"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9F3",
                    "body": "@connor-ashton-dev you would probably need to redirect to the URL provided (i.e. `window.location.replace`) \r\n\r\nI haven't tested this on React Native but I'm putting together a [testing app](https://github.com/J0/supabase_react_native_testing_app) to test it out - will post it here once done. In the meantime, would appreciate if you could give it a try on your end as well",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-03-14T09:21:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597495"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9F6",
                    "body": "Any solutions? React native TypeScript Expo ",
                    "author": {
                        "login": "Mathias2860DK"
                    },
                    "createdAt": "2023-03-21T20:54:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1502597498"
                },
                {
                    "id": "IC_kwDOEKipmc5bYY-B",
                    "body": "Hi everyone, i'm not too familiar with react native but i'll try my best to answer some questions:\r\n\r\n> Should I use expo-auth-session?\r\n\r\nI don't think this is necessary if you don't mind being redirected to a web page from the mobile app. \r\n\r\nYou will need to open the URL returned by `signInWithOAuth` in the mobile app since i think it doesn't automatically redirect the user to the web browser. \r\n\r\nI'm gonna be closing this issue now but if anyone has any questions or comments about this, feel free to drop them and reopen the issue.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-03T14:23:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1533120385"
                },
                {
                    "id": "IC_kwDOEKipmc5d6hSh",
                    "body": "@ildaneta I have ended up at the same position as you describe in your original post, did you ever find a solution for this?  I'm really struggling to find a complete example that actually works in Expo.",
                    "author": {
                        "login": "caprica"
                    },
                    "createdAt": "2023-06-04T16:00:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1575621793"
                },
                {
                    "id": "IC_kwDOEKipmc5eIPkN",
                    "body": "i also am having a tough time with the Google Auth sign in using Expo/ReactNative.  The main reason being that we need to open a browser in your mobile device to handle the auth, I think, something like this:\r\n\r\n```ts\r\nconst signInWithGoogle = async () => {\r\n// first signInWithOAuth to get the URL to visit\r\n    const { data, error } = await supabase.auth.signInWithOAuth({\r\n      provider: 'google',\r\n      options: {\r\n        redirectTo: 'mfi://sign-in', // this might be wrong?\r\n      },\r\n    });\r\n    if (error) {\r\n      setMessage(['error', error.message]);\r\n      return;\r\n    }\r\n// then open a browser in your mobile device\r\n    if (data.url) {\r\n      const result = await openAuthSessionAsync(\r\n        data.url,\r\n        \"mfi://sign-in\" // scheme per expo app.config\r\n      );\r\n// gets stuck here\r\n      console.log(result);\r\n    }\r\n  };\r\n```\r\n\r\nWhat's more concerning is that the supabase client is not getting any update...despite seeing my user show up in the admin dashboard.\r\n\r\n```ts\r\nuseEffect(() => {\r\n    async function getSession() {\r\n      console.log('getSession');\r\n\r\n      const {\r\n        data: { session },\r\n        error,\r\n      } = await supabase.auth.getSession();\r\n      console.log('getSession', { session });\r\n\r\n      if (error) {\r\n        setMessage(['error', error.message]);\r\n      } else {\r\n        setSession(session ?? null);\r\n      }\r\n    }\r\n    try {\r\n      setIsLoading(true);\r\n      getSession();\r\n    } catch (e) {\r\n      setMessage(['error', (e as Error).message]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    const {\r\n      data: { subscription },\r\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\r\n      console.log('onAuthStateChange');\r\n      console.log(_event);\r\n      console.log(session);\r\n\r\n      setSession(session ?? null);\r\n    });\r\n\r\n    return () => {\r\n      subscription?.unsubscribe();\r\n    };\r\n  }, [setMessage]);\r\n```\r\n\r\nafter success auth from google, redirect fails, tries for localhost: after success auth from google, redirect fails\r\n![image](https://github.com/supabase/gotrue/assets/15162169/c66c39f2-bbca-420f-bf4c-89ad179e2270=200)\r\n\r\n\r\nWhy does it try localhost; Is it my linking schema? Or something else?\r\n\r\nIs there a way for the expo-web-browser to close automatically after success? I tried adding a Linking.addEventListener, but it also doesn't fire.",
                    "author": {
                        "login": "lucksp"
                    },
                    "createdAt": "2023-06-06T17:57:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1579219213"
                },
                {
                    "id": "IC_kwDOEKipmc5eKWZb",
                    "body": "hi @lucksp,\r\n\r\n> Why does it try localhost; Is it my linking schema? Or something else?\r\n\r\nThe redirect defaults to your site URL if the redirectTo param specified is not in the allow list\r\n\r\nIn your code, i noticed that you didn't specify a `redirectTo` param in the `signInWithOAuth` method. Can you try specifying a mobile deeplink so that google redirects back to your application after successfully completing the oauth flow?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-07T02:27:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1579771483"
                },
                {
                    "id": "IC_kwDOEKipmc5eKhSw",
                    "body": "> In your code, i noticed that you didn't specify a `redirectTo` param in the `signInWithOAuth` method. Can you try specifying a mobile deeplink so that google redirects back to your application after successfully completing the oauth flow?\r\n\r\nThanks @kangmingtay .  I did try some things, but my code snippet wasn't clear.  I have updated the original.\r\n\r\nAccording to my expo `app.config`, my scheme name is `mfi`, so therefore, I would think my 2nd argument should be `mfi://${route}` where `route` is back to the `sign-in` page, so it should be `mfi://sign-in` if I am understanding this correctly.  If so, the completed OAuth flow still gets stuck on localhost...",
                    "author": {
                        "login": "lucksp"
                    },
                    "createdAt": "2023-06-07T03:26:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1579816112"
                },
                {
                    "id": "IC_kwDOEKipmc5eKmQU",
                    "body": "@lucksp have you updated the [allow list for redirect urls](https://app.supabase.com/project/_/auth/url-configuration) in the dashboard to include `mfi://sign-in` ? you can take a look at [this guide](https://supabase.com/docs/guides/auth#redirect-urls-and-wildcards) for configuring the allow list for your redirect URLs",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-07T03:50:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1579836436"
                },
                {
                    "id": "IC_kwDOEKipmc5eKr3U",
                    "body": "wow, completely missed that in the docs.  let me give it a try \ud83d\ude4f",
                    "author": {
                        "login": "lucksp"
                    },
                    "createdAt": "2023-06-07T04:19:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1066#issuecomment-1579859412"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jCwlp",
            "number": 1067,
            "title": "Permissions issue for postgres user on auth table objects (unable to drop triggers)",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nThe supabase examples sometimes take advantage of creating a trigger against the `auth.users` table - so that on sign up (or update of user information) you can also subsequently populate another table (e.g. your own application's `public.profile` table via a function that is called from the trigger). \r\n\r\nTo do this, supabase provides a `postgres` db user. In the default setup, the `postgres` user is able to create a trigger on `auth.users`.\r\n\r\n## To Reproduce\r\n\r\nConnect to your supabase db using the `postgres` user with the connection details provided by supabase console.\r\n\r\nCreate a function to populate your own `profile` table when a user signs up.\r\n\r\n``\r\ncreate or replace function public.handle_new_user() \r\nreturns trigger as $$\r\nbegin\r\n  insert into public.users (id, email)\r\n  values (new.id, new.email);\r\n  return new;\r\nend;\r\n$$ language plpgsql security definer;\r\n``\r\n\r\nWorks fine.\r\n\r\nNow add a trigger to call this function when data is inserted into `auth.users`\r\n\r\n``\r\n  create trigger on_auth_user_created\r\n  after insert on auth.users\r\n  for each row execute procedure public.handle_new_user();\r\n``\r\n\r\nWorks fine.\r\n\r\nHowever, subsequently try and drop the trigger.\r\n\r\n``\r\ndrop trigger if exists on_auth_user_created on auth.users;\r\n``\r\n\r\nThis errors with \r\n\r\n``\r\nERROR:  must be owner of relation users\r\n``\r\n\r\nUnderstandably the internal auth schema is owned by a separate internal account `supabase_auth_admin` but some looks like perhaps the permission to create trigger has been granted to `postgres` user but not drop. \r\n\r\n## Expected behavior\r\n\r\nShould be able to drop the trigger after creating it.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n",
            "author": {
                "login": "jamesallchin"
            },
            "state": "CLOSED",
            "createdAt": "2021-10-07T14:33:14Z",
            "closedAt": "2023-05-03T14:26:14Z",
            "url": "https://github.com/supabase/gotrue/issues/1067",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Zj9F5",
                    "body": "Bump",
                    "author": {
                        "login": "jtparrett"
                    },
                    "createdAt": "2021-10-07T14:39:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597497"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9F8",
                    "body": "@jtparrett, no need to bump issues 7 minutes after they're created \ud83d\ude05 \r\n\r\nChecking the replication steps @jamesallchin - will get back to you",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-10-07T14:46:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597500"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9F_",
                    "body": "Confirmed. This is a symptom of the way we have set up security on the auth table. At the moment the workaround is to drop the trigger from the [Dashboard](app.supabase.io)  (`drop trigger if exists on_auth_user_created on auth.users;`)\r\n\r\nI'll keep this open so that we can find a better permissions model. We're reluctant to make `postgres` the owner of the `auth` schema, but really there isn't much of a workaround because Postgres requires table owner permissions for dropping triggers.",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-10-07T16:20:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597503"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9GB",
                    "body": "Thanks @kiwicopple for following up. Yes would be great to keep this on the radar. It's preventing us from automating our teardown and reset of the supabase db for dev / ci purposes.",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-10-07T17:31:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597505"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9GD",
                    "body": "Is this in a self-hosted setup or on the Supabase platform @jamesallchin ? If it's for self-hosting, you could set `postgres` as the owner of the `auth.users` table - it wouldn't be entirely safe (so we won't be able to do it on the platform), but it would be fine for CI purposes",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-10-07T20:17:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597507"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9GG",
                    "body": "For the self-hosted setup `postgres` is superuser so this shouldn't be a problem.",
                    "author": {
                        "login": "soedirgo"
                    },
                    "createdAt": "2021-10-08T01:25:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597510"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9GK",
                    "body": "Thanks for this - yep good thought on the local setup and the workarounds @kiwicopple @soedirgo. \r\n\r\nI think tho this still remains an issue for us. Really we want to be in a position to automate releases on continuous deployment (this includes db setup and modifications for a particular release). At the moment we wouldn't be able to drop the trigger and replace it in a new release on our hosted production and test supabase environments. \r\n\r\nFor the moment we can just handle this as an edge case that we will have to go via the dashboard manually for auth table based triggers.",
                    "author": {
                        "login": "jamesallchin"
                    },
                    "createdAt": "2021-10-08T09:09:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597514"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9GM",
                    "body": "We discussed this internally and think we have a solution using our [supautils](https://github.com/supabase/supautils) extension. I'll update once we have tested a few ideas",
                    "author": {
                        "login": "kiwicopple"
                    },
                    "createdAt": "2021-10-08T10:38:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597516"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9GQ",
                    "body": "> @jtparrett, no need to bump issues 7 minutes after they're created \ud83d\ude05\r\n\r\nMy bad, sorry! \ud83d\ude04  thanks for looking into it so quickly",
                    "author": {
                        "login": "jtparrett"
                    },
                    "createdAt": "2021-10-08T12:02:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597520"
                },
                {
                    "id": "IC_kwDOEKipmc5Zj9GU",
                    "body": "FWIW dropping any functions you've hooked up as triggers on `auth.users` with `CASCADE` seems to do the trick:\r\n\r\n```\r\npostgres=> drop function if exists handle_new_user() cascade;\r\nNOTICE:  drop cascades to trigger on_auth_user_created on table auth.users\r\nDROP FUNCTION\r\n```\r\n\r\nHopefully this will help someone in the meantime.",
                    "author": {
                        "login": "evhan"
                    },
                    "createdAt": "2022-02-11T02:22:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1502597524"
                },
                {
                    "id": "IC_kwDOEKipmc5bYZ9s",
                    "body": "Hey all,\r\n\r\nClosing this issue as it seems to have gone stale. Moving forward, we've cut back on references in the docs in terms of adding triggers to the `auth.users` table. Instead, we are now recommending the creation of a profiles table with a foreign key table to auth.users. We'll be looking at a webhook based solution to allow users to react to events (e.g. signup/in). \r\n\r\n\r\nLet us know if there are any questions or concerns.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-03T14:26:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/1067#issuecomment-1533124460"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jWMmo",
            "number": 1077,
            "title": "Can't logging the user with email and password - \"Email not confirmed\"",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nAfter creating a user with the signInWithOtp method using a phone and then adding an email for that user using updateUser, I need to login the user with the email using calling signInWithPassword and get a **Email not confirmed** error.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create a user using `SupabaseClient.auth.signInWithOtp(phone: \"XXXXXXXX\");`\r\n2. Verify the phone with `SupabaseClient.auth.verifyOTP( phone: \"XXXXXXXX\", token: \"XXXX\", type: OtpType.sms);`\r\n3. Add an email for the user calling `SupabaseClient.auth.updateUser(UserAttributes(phone: \"XXXXXXXX\", email: \"XXX@XXX.XX\", password: \"XXXXX\"));`\r\n4. Verify the OTP code sent to the email for confirmation using `SupabaseClient.auth.verifyOTP(email: \"XXX@XXX.XX\", token: \"XXXX\", type: OtpType.emailChange);`\r\n5. Create a session using email and password using `SupabaseClient.auth.signInWithPassword(password: \"XXXXX\", email: \"XXX@XXX.XX\",);`\r\n6. See an exception `AuthException(message: Email not confirmed, statusCode: 400)`\r\n\r\n## Expected behavior\r\n\r\nLogging user successfully  \r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- Version of supabase_flutter: 1.5.0\r\n- Version of Flutter: 3.7.3\r\n\r\n## Additional context\r\n\r\nIf you logged the user with the registered phone number, it logging successfully.\r\nIt can be associated to the issue reported before: https://github.com/supabase/gotrue/issues/897 ",
            "author": {
                "login": "SolMendiola"
            },
            "state": "CLOSED",
            "createdAt": "2023-04-13T16:42:21Z",
            "closedAt": "2023-04-14T12:00:17Z",
            "url": "https://github.com/supabase/gotrue/issues/1077",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5Z6HHL",
                    "body": ":tada: This issue has been resolved in version 2.60.5 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.60.5)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2023-04-14T12:07:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1077#issuecomment-1508405707"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5jyGK0",
            "number": 1089,
            "title": "SAML SSO for Projects documentation not aligned with observed behavior",
            "body": "# Improve documentation\r\n\r\n## Link \r\n\r\nhttps://supabase.com/docs/guides/auth/sso/auth-sso-saml#user-accounts-and-identities\r\n\r\n## Describe the problem\r\n\r\nThe docs clearly say there is \"no automatic linking\"\r\n`Each user account verified using a SSO identity provider will not be automatically linked to existing user accounts in the system. That is, if a user jane.doe@company.com had signed up with a password, and then uses their company SSO login with your project, there will be two jane.doe@company.com user accounts in the system.`\r\n\r\nHowever, this is absolutely not the behavior that I am seeing in my supabase project with Azure AD SAML SSO configured.\r\n\r\nIf you first log in with SSO, a user is created with provider: sso-[id]. Any attempt to create a user manually with the same id (send an invitation, create user, sign up from app side if signups are enabled) does not create a duplicate. In fact, the first two fail, and the third returns a success but does not create a duplicate.\r\n\r\nIf you first sign up with the email provider (either from the client side, or by invitation or direct creation by admin), and then sign in with SSO, there are two cases:\r\n\r\n* if the user is invited but not verified, the user is confirmed with provider: sso-[id]\r\n* if the email provider user is verified, sso sign in works, but the user is still marked as provider: email.\r\n\r\nIn any case, SSO identities are kept in auth.identities table, linked to the original user_id, and the auth.users table never gets duplicates.\r\n\r\nThe only way I got duplicates was by using multiple SSO providers who claim ownership of the same email address.\r\n\r\n## Describe the improvement\r\n\r\nThe docs should clearly explain that identities are, in fact, linked, when mixing email provider and SAML SSO. The provider column in the users table shows the provider at time of confirmation and sticks to it, but both methods of identification work and point to the same user.\r\n\r\n## Additional context\r\n\r\nI'm using Azure AD as my identity provider. Integrated by following the new SAML SSO guide docs that we are talking about in this issue.",
            "author": {
                "login": "irreal"
            },
            "state": "CLOSED",
            "createdAt": "2023-04-18T21:10:48Z",
            "closedAt": "2023-06-07T11:20:05Z",
            "url": "https://github.com/supabase/gotrue/issues/1089",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5aPopZ",
                    "body": "Thanks for the detailed report @irreal. @kangmingtay can you confirm if this behaviour is expected?",
                    "author": {
                        "login": "gregnr"
                    },
                    "createdAt": "2023-04-18T23:03:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/1089#issuecomment-1514048089"
                },
                {
                    "id": "IC_kwDOEKipmc5bBejy",
                    "body": "any updates? would love to help out any way I can.",
                    "author": {
                        "login": "irreal"
                    },
                    "createdAt": "2023-04-28T07:26:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1089#issuecomment-1527113970"
                },
                {
                    "id": "IC_kwDOEKipmc5eNawH",
                    "body": "Hey @irreal this was fixed in #1098. The release v2.66.0 that includes the change is being deployed to all projects as we speak.\r\n\r\nThank you for raising the issue!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:20:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1089#issuecomment-1580575751"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5kdFwA",
            "number": 1095,
            "title": "Resend endpoint issue (resend email change issue)",
            "body": "# Bug report\r\n\r\nThe endpoint /[resend](https://github.com/supabase/gotrue/pull/912/files) is not working properly. When you have a user that was registered by phone, and it's confirmed. Then if you add an email to the user and try to resend the verification email using /resend endpoint, the confirmation email is not sent.\r\n\r\n\r\n## Describe the bug\r\n\r\n1. Register a user with a phone\r\n2. Verify the phone\r\n3. Add email to that user, using the method `updateUser` (the confirmation email is sent)\r\n4. Call the endpoint /resend to resend the confirmation email (the mail is not sent)\r\n\r\nIssue: \r\nTo invoke 4, we are calling the `resend` endpoint with two parameters:\r\n```\r\n{\r\n          'email': email,\r\n          'type': 'email_change',\r\n        },\r\n``` \r\n\r\nThen, if I take a look at your code:\r\n```go\r\n\tif params.Email != \"\" {\r\n\t\tuser, err = models.FindUserByEmailAndAudience(db, params.Email, aud)\r\n\t} else if params.Phone != \"\" {\r\n\t\tuser, err = models.FindUserByPhoneAndAudience(db, params.Phone, aud)\r\n\t}\r\n\r\n\tif err != nil {\r\n\t\tif models.IsNotFoundError(err) {\r\n\t\t\treturn sendJSON(w, http.StatusOK, map[string]string{})\r\n\t\t}\r\n\t\treturn internalServerError(\"Unable to process request\").WithInternalError(err)\r\n\t}\r\n\r\n```\r\nThe server finds the user by the email address. However in the DB table, the email address is null, and the email is in `email_change` column. The reason is that the email is not associated with the user because it's not verified.\r\n\r\nTo fix this issue, in the case that the user has not had a confirmed email, the resend method should accept the phone number as the identifier (the confirmed method).",
            "author": {
                "login": "mirland"
            },
            "state": "CLOSED",
            "createdAt": "2023-04-26T16:26:11Z",
            "closedAt": "2023-05-08T16:08:35Z",
            "url": "https://github.com/supabase/gotrue/issues/1095",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5bq5pT",
                    "body": "Hi @mirland, thanks for catching this! We just put up a PR for this already so it should be fixed soon.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-08T08:35:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1095#issuecomment-1537972819"
                },
                {
                    "id": "IC_kwDOEKipmc5btk1x",
                    "body": ":tada: This issue has been resolved in version 2.65.1 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.65.1)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2023-05-08T16:17:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1095#issuecomment-1538674033"
                },
                {
                    "id": "IC_kwDOEKipmc5fE-WR",
                    "body": "Hi @kangmingtay thanks for the fix. However, I'm testing exactly the same case and it's not working.\r\nI'm invoking the same endpoint with the same data, the server returns 200 but the email is not sent.\r\nCan you help me? \r\n\r\nBTW: I checked and the email is in `email_change` column. \r\nAlso I testing sending the resend with type `email_change` and also with `signup` but it's not working",
                    "author": {
                        "login": "mirland"
                    },
                    "createdAt": "2023-06-16T18:49:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1095#issuecomment-1595139473"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5lVFGw",
            "number": 1101,
            "title": "Password is truncuated when sign up",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nOnly the first 72 characters of password are significant\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Start gotrue & postgres\r\n2. Create a new user a long password\r\n3. Sign in with a shorter password\r\n4. Observe successful login\r\n\r\n## Expected behavior\r\n\r\nPasswords must not be truncated \r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: **N/A**\r\n- Browser (if applies) [e.g. chrome, safari] **N/A**\r\n- Version of supabase-js: [e.g. 6.0.2] **N/A**\r\n- Version of Node.js: [e.g. 10.10.0] **N/A**\r\n- Gotrue image used `ghcr.io/supabase/gotrue:v2.64.0`\r\n\r\n## Additional context\r\n\r\n**Configuration used for testing**\r\n\r\n<details><summary>.env</summary>\r\n\r\n```\r\nSITE_URL=http://localhost:3000\r\nADDITIONAL_REDIRECT_URLS=\r\nJWT_EXPIRY=3600\r\nDISABLE_SIGNUP=false\r\nAPI_EXTERNAL_URL=http://localhost:8000\r\n\r\n## Mailer Config\r\nMAILER_URLPATHS_CONFIRMATION=\"/auth/v1/verify\"\r\nMAILER_URLPATHS_INVITE=\"/auth/v1/verify\"\r\nMAILER_URLPATHS_RECOVERY=\"/auth/v1/verify\"\r\nMAILER_URLPATHS_EMAIL_CHANGE=\"/auth/v1/verify\"\r\n\r\n## Email auth\r\nENABLE_EMAIL_SIGNUP=true\r\nENABLE_EMAIL_AUTOCONFIRM=true\r\nSMTP_ADMIN_EMAIL=admin@example.com\r\nSMTP_HOST=supabase-mail\r\nSMTP_PORT=2500\r\nSMTP_USER=fake_mail_user\r\nSMTP_PASS=fake_mail_password\r\nSMTP_SENDER_NAME=fake_sender\r\n\r\n## Phone auth\r\nENABLE_PHONE_SIGNUP=true\r\nENABLE_PHONE_AUTOCONFIRM=true\r\n```\r\n\r\n</details> \r\n\r\n<details><summary>docker-compose.yml (gotrue)</summary>\r\n\r\n```yml\r\nversion: '3.8'\r\n\r\nnetworks:\r\n  supa:\r\n    external: true\r\n\r\nservices:\r\n  auth:\r\n    container_name: supabase-auth\r\n    image: supabase/gotrue:v2.60.7\r\n    healthcheck:\r\n      test:\r\n        [\r\n          'CMD',\r\n          'wget',\r\n          '--no-verbose',\r\n          '--tries=1',\r\n          '--spider',\r\n          'http://localhost:9999/health'\r\n        ]\r\n      timeout: 5s\r\n      interval: 5s\r\n      retries: 3\r\n    restart: unless-stopped\r\n    ports:\r\n      - 9999:9999\r\n    networks:\r\n      - supa\r\n    environment:\r\n      GOTRUE_API_HOST: 0.0.0.0\r\n      GOTRUE_API_PORT: 9999\r\n      API_EXTERNAL_URL: ${API_EXTERNAL_URL}\r\n      \r\n      GOTRUE_DB_DRIVER: postgres\r\n      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}\r\n      \r\n      GOTRUE_SITE_URL: ${SITE_URL}\r\n      GOTRUE_URI_ALLOW_LIST: ${ADDITIONAL_REDIRECT_URLS}\r\n      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP}\r\n      \r\n      GOTRUE_JWT_ADMIN_ROLES: service_role\r\n      GOTRUE_JWT_AUD: authenticated\r\n      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated\r\n      GOTRUE_JWT_EXP: ${JWT_EXPIRY}\r\n      GOTRUE_JWT_SECRET: ${JWT_SECRET}\r\n      \r\n      GOTRUE_EXTERNAL_EMAIL_ENABLED: ${ENABLE_EMAIL_SIGNUP}\r\n      GOTRUE_MAILER_AUTOCONFIRM: ${ENABLE_EMAIL_AUTOCONFIRM}\r\n      # GOTRUE_MAILER_SECURE_EMAIL_CHANGE_ENABLED: true\r\n      # GOTRUE_SMTP_MAX_FREQUENCY: 1s\r\n      GOTRUE_SMTP_ADMIN_EMAIL: ${SMTP_ADMIN_EMAIL}\r\n      GOTRUE_SMTP_HOST: ${SMTP_HOST}\r\n      GOTRUE_SMTP_PORT: ${SMTP_PORT}\r\n      GOTRUE_SMTP_USER: ${SMTP_USER}\r\n      GOTRUE_SMTP_PASS: ${SMTP_PASS}\r\n      GOTRUE_SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}\r\n      GOTRUE_MAILER_URLPATHS_INVITE: ${MAILER_URLPATHS_INVITE}\r\n      GOTRUE_MAILER_URLPATHS_CONFIRMATION: ${MAILER_URLPATHS_CONFIRMATION}\r\n      GOTRUE_MAILER_URLPATHS_RECOVERY: ${MAILER_URLPATHS_RECOVERY}\r\n      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: ${MAILER_URLPATHS_EMAIL_CHANGE}\r\n      \r\n      GOTRUE_EXTERNAL_PHONE_ENABLED: ${ENABLE_PHONE_SIGNUP}\r\n      GOTRUE_SMS_AUTOCONFIRM: ${ENABLE_PHONE_AUTOCONFIRM}\r\n      MFA_ENABLED: ${MFA_ENABLED}\r\n```\r\n\r\n</details> \r\n\r\n<details><summary>docker-compose.yml (postgres)</summary>\r\n\r\n```yml\r\nversion: \"3\"\r\n\r\nnetworks:\r\n  supa:\r\n    external: true\r\n  host:\r\n    external: true\r\n\r\nservices:\r\n  db:\r\n    container_name: supabase-db\r\n    image: supabase/postgres:15.1.0.54-rc0\r\n    healthcheck:\r\n      test: pg_isready -U postgres -h localhost\r\n      interval: 5s\r\n      timeout: 5s\r\n      retries: 10\r\n    command:\r\n      - postgres\r\n      - -c\r\n      - config_file=/etc/postgresql/postgresql.conf\r\n      - -c\r\n      - log_min_messages=fatal # prevents Realtime polling queries from appearing in logs\r\n    restart: unless-stopped\r\n    networks:\r\n      - supa\r\n    ports:\r\n      - 5432:5432\r\n    environment:\r\n      POSTGRES_HOST: /var/run/postgresql\r\n      PGPORT: ${POSTGRES_PORT}\r\n      PGPASSWORD: ${POSTGRES_PASSWORD}\r\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}\r\n      PGDATABASE: ${POSTGRES_DB}\r\n      POSTGRES_DB: ${POSTGRES_DB}\r\n    volumes:\r\n      - ./volumes/db/realtime.sql:/docker-entrypoint-initdb.d/migrations/99-realtime.sql:Z\r\n      # Must be superuser to create event trigger\r\n      - ./volumes/db/webhooks.sql:/docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql:Z\r\n      # Must be superuser to alter reserved role\r\n      - ./volumes/db/roles.sql:/docker-entrypoint-initdb.d/init-scripts/99-roles.sql:Z\r\n```\r\n\r\n</details> \r\n\r\n> **Note**: postgres and gotrue are in separate docker-compose files to decouple the database from supabase. See [Managing your database](https://supabase.com/docs/guides/self-hosting#managing-your-database)\r\n\r\n<details><summary>HTTP requests</summary>\r\n\r\n```http\r\n### Send POST request to sign up\r\nPOST localhost:9999/signup\r\nContent-Type: application/json\r\n\r\n{\r\n    \"email\": \"email123@example.com\",\r\n    \"password\": \"qoqytjmwobnycqkxjjgjrlaxnbcjdyayibxryvuffrbmnhrhfijuabheqzxsbudryghoebqlnycazcniewbmlblhmtxh\"\r\n}\r\n\r\n### Send POST request to sign in\r\nPOST localhost:9999/token?grant_type=password\r\nContent-Type: application/json\r\n\r\n{\r\n    \"email\": \"email123@example.com\",\r\n    \"password\": \"qoqytjmwobnycqkxjjgjrlaxnbcjdyayibxryvuffrbmnhrhfijuabheqzxsbudryghoebql\"\r\n}\r\n```\r\n\r\n</details> \r\n\r\n\r\n\r\nRef: https://github.com/hamza1311/firestorm/issues/1",
            "author": {
                "login": "hamza1311"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-08T10:48:20Z",
            "closedAt": "2023-05-08T10:50:15Z",
            "url": "https://github.com/supabase/gotrue/issues/1101",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5brpG8",
                    "body": "This is known behavior with the bcrypt password hashing function, and we do not plan on making adjustments to the way we handle passwords exceeding 72 characters.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-05-08T10:50:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1101#issuecomment-1538167228"
                },
                {
                    "id": "IC_kwDOEKipmc5brp5B",
                    "body": "This behavior should be documented somewhere so downstream users can at least show UI for it. Many password managers generate passwords longer than 72 characters so it would be helpful to show a message that their password is too long",
                    "author": {
                        "login": "hamza1311"
                    },
                    "createdAt": "2023-05-08T10:53:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/1101#issuecomment-1538170433"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ls4N2",
            "number": 1102,
            "title": "500: Database error granting user",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nAs per the recommendation of Supabase support, I recently upgraded from Postgres 12 to Postgres 15. This was done by [pausing & restoring](https://supabase.com/docs/guides/platform/migrating-and-upgrading-projects#upgrade-your-project) my project.\r\n\r\nSubsequently user authentication stopped working. Any attempt to authenticate a user results in a \"500: Database error granting user\"\r\n\r\n## To Reproduce\r\n\r\nFor example:\r\nhttps://{my-sb-id}.supabase.co/auth/v1/token?grant_type=password\r\nResponse:\r\n`{\r\n    \"code\": 500,\r\n    \"msg\": \"Database error granting user\",\r\n    \"error_id\": \"7bc3ce1b94d31afd-AMS\"\r\n}`\r\n\r\nLog Event Message:\r\n`{\r\n    \"auth_event\": {\r\n        \"action\": \"login\",\r\n        \"actor_id\": \"21fee682-xxxx-xxxx-xxxx-6e1e46d84a91\",\r\n        \"actor_username\": \"email@domain.com\",\r\n        \"actor_via_sso\": false,\r\n        \"log_type\": \"account\",\r\n        \"traits\": {\r\n            \"provider\": \"email\"\r\n        }\r\n    },\r\n    \"component\": \"api\",\r\n    \"error\": \"error update users last_sign_in field: ERROR: record \\\"new\\\" has no field \\\"last_login_at\\\" (SQLSTATE 42703)\",\r\n    \"level\": \"error\",\r\n    \"method\": \"POST\",\r\n    \"msg\": \"500: Database error granting user\",\r\n    \"path\": \"/token\",\r\n    \"referer\": \"http://localhost:3000/\",\r\n    \"remote_addr\": \"195.240.6.207\",\r\n    \"time\": \"2023-04-23T05:46:16Z\",\r\n    \"timestamp\": \"2023-04-23T05:46:16Z\"\r\n}`\r\n\r\n## Expected behavior\r\n\r\nFor the user auth to work as before.\r\n\r\n## System information\r\n\r\n- Version of supabase-js: 1.21.0\r\n- Version of Node.js: 19.9.0\r\n\r\n\r\n",
            "author": {
                "login": "brucemclachlan"
            },
            "state": "CLOSED",
            "createdAt": "2023-04-23T06:42:31Z",
            "closedAt": "2023-05-22T03:28:59Z",
            "url": "https://github.com/supabase/gotrue/issues/1102",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5cDfI6",
                    "body": "Hey @brucemclachlan,\r\n\r\nAuth team here. Thanks for the query - could we trouble you to reach out to us via https://app.supabase.com/support/new? This will allow us to identify and fix the relevant project.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-11T17:37:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/1102#issuecomment-1544417850"
                },
                {
                    "id": "IC_kwDOEKipmc5cxdCE",
                    "body": "Hey @brucemclachlan ,\r\n\r\nGoing to close this issue in favour of the ticket but do let us know if you run into issues reaching us via the support system.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-22T03:28:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1102#issuecomment-1556467844"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5l3BoW",
            "number": 1104,
            "title": "Confirmation URL in Email Template not giving back link with subdirectory",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nMy app sits in a subdirectory of the homepage e.g.  https://my-page.com/app. Therefore I obviously need the {{ .ConfirmationURL }} in the email template of my \"confirm signup\" settings to put the access token at the end of /app and not the base URL. \r\n\r\nMy email configuration looks to be correct (see first screenshot) but the link I get back when I sign up with a new user points to the base URL and puts the access-token there (see second screenshot). It seems to ignore the /app in the site URL. So I guess there's a bug in the creation of the .ConfirmationURL?\r\n\r\n\r\n\r\n## Expected behavior\r\n\r\nTo generate the .ConfirmationURL with the correct Site URL even with subdirectory apps.\r\n\r\n## Screenshots\r\n![SiteURL](https://github.com/supabase/gotrue/assets/97043252/d5b0cd6e-c93c-4105-a3d1-58d9d2c6286b)\r\n![Email URL](https://github.com/supabase/gotrue/assets/97043252/e018fc4a-21e1-4625-81b9-89446aea5756)\r\n\r\n\r\n\r\n",
            "author": {
                "login": "derseitenschneider"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-14T12:14:22Z",
            "closedAt": "2023-06-07T11:08:23Z",
            "url": "https://github.com/supabase/gotrue/issues/1104",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5cM7tr",
                    "body": "Is this occurring on a live project? If not, what version of GoTrue are you using?",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-05-14T12:55:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/1104#issuecomment-1546894187"
                },
                {
                    "id": "IC_kwDOEKipmc5cM716",
                    "body": "yes, in a live project thats deployed",
                    "author": {
                        "login": "derseitenschneider"
                    },
                    "createdAt": "2023-05-14T12:57:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1104#issuecomment-1546894714"
                },
                {
                    "id": "IC_kwDOEKipmc5cWFJX",
                    "body": "hi @derseitenschneider, are you using a custom domain here?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-16T09:11:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1104#issuecomment-1549292119"
                },
                {
                    "id": "IC_kwDOEKipmc5cXJn3",
                    "body": "@kangmingtay  My app is on a custom domain https://my-domain.net/app",
                    "author": {
                        "login": "derseitenschneider"
                    },
                    "createdAt": "2023-05-16T12:31:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1104#issuecomment-1549572599"
                },
                {
                    "id": "IC_kwDOEKipmc5eDF-1",
                    "body": "hi @derseitenschneider, can you please provide a snippet of the code you're using for the signup? are you using the supabase-js library?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-06T04:02:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/1104#issuecomment-1577869237"
                },
                {
                    "id": "IC_kwDOEKipmc5eNUkX",
                    "body": "@derseitenschneider I think it's best if you could reach out to [Supabase support](https://supabase.com/dashboard/support/new) as this appears to be an issue with your project and not with this open-source codebase. If we identify a bug, then we can create a fix immediately or open an issue here for tracking.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:08:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/1104#issuecomment-1580550423"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5l-euJ",
            "number": 1106,
            "title": "signInWithOtp \"Database error finding user\" for new user with create_user: true",
            "body": "I'm using supabase.auth.signInWithOtp() to sign in/create a user (using email). With a brand-new database and the user NOT present in the database, I sometimes (it's intermittent) get the following error (this is a copy and paste from the request/response in browser:\r\n\r\nRequest:\r\n```json\r\n{\"email\":\"user@example.com\",\"data\":{},\"create_user\":true,\"gotrue_meta_security\":{},\"code_challenge\":null,\"code_challenge_method\":null}\r\n```\r\n\r\nResponse:\r\n```json\r\n{\r\n    \"code\": 500,\r\n    \"msg\": \"Database error finding user\",\r\n    \"error_id\": \"d8899365-2eea-46ce-a1ec-561724b7e743\"\r\n}\r\n```\r\n\r\nIs I hit my GUI button one more time to trigger signInWithOtp() again, it works, the user gets created in the DB and everything is dandy.\r\n\r\nPlease note that this is using a local development Supabase environment as provided by supabase-cli. \r\n\r\nI have not been able to test on my remote servers yet.\r\n\r\nI'm not sure where to start troubleshooting this. I think gotrue runs in the Kong container. The logs tab for Kong in Docker Desktop has nothing worthwhile, just the HTTP log.",
            "author": {
                "login": "user72356"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-15T21:37:43Z",
            "closedAt": "2023-05-25T04:20:34Z",
            "url": "https://github.com/supabase/gotrue/issues/1106",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5cWER4",
                    "body": "Hi @user72356, can you please contact our support at https://app.supabase.com/support/new and reference this PR so that our support team knows that I asked you to contact us? We'll need to dig into your project to figure out the root cause. Alternatively, you can also take a look at your [project's auth logs](https://app.supabase.com/project/_/logs/explorer) to observe the underlying error",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-16T09:09:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/1106#issuecomment-1549288568"
                },
                {
                    "id": "IC_kwDOEKipmc5dHe00",
                    "body": "closing this issue since we haven't heard back but feel free to reopen it or email us at support if you are still facing issues",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-25T04:20:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/1106#issuecomment-1562242356"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5mJh0u",
            "number": 1109,
            "title": "Users not getting merge when signing in first with Google and then with Apple",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\n1. Sign in with Google first and then with Apple: It fails to merge users\r\n2. Sign in with Apple first and then with Google: Everything is ok\r\n\r\n## To Reproduce\r\n\r\nI use native sign in with Apple:\r\n\r\n```js\r\nconst result = await supabase.auth.signInWithIdToken({\r\n  provider: 'apple',\r\n  token <THE_ONE_I_GOT_NATIVELY>,\r\n});\r\n```\r\n\r\nThat works ok. For Google I use `supabase.auth.signInWithOAuth`. It also works ok.\r\n\r\nBoth using same email. If I sign in first with Apple and then with Google, everything is ok (users are merged because same email).\r\n\r\nBut If I sign in using Google first (user gets created) and then I try to sign in with Apple (same email), I get the following error:\r\n\r\n```\r\nduplicate key value violates unique constraint \"users_email_partial_key\"\r\n```\r\n\r\n## Expected behavior\r\n\r\nI think sign in method should not matter, if email is the same, users should get merged.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- React Native: `0.70.7`\r\n- Version of supabase-js: `2.10.0`\r\n- Version of Node.js: `16.18.1`\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "ferrannp"
            },
            "state": "CLOSED",
            "createdAt": "2023-03-06T20:00:18Z",
            "closedAt": "2023-05-17T12:15:09Z",
            "url": "https://github.com/supabase/gotrue/issues/1109",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5cdroO",
                    "body": "hey @ferrannp, can you email us at our [support channel](https://app.supabase.com/support/new) and we'll investigate the issue with your project",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-08T08:14:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284750"
                },
                {
                    "id": "IC_kwDOEKipmc5cdroT",
                    "body": "Hello @kangmingtay, I already open a ticket to the support channel. @hf came back with a response that this issue is a known problem and it has been reported a few times. To be honest this seems pretty critical to me. Basically:\r\n\r\n1. If you sign it with Apple first, no problem to then sign in with Google or Apple again (on Android or iPhone)\r\n2. If you sign it with Google, then I cannot sign in with Apple (forever stuck to Google). This is really bad for users that might change their devices ",
                    "author": {
                        "login": "ferrannp"
                    },
                    "createdAt": "2023-03-08T17:17:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284755"
                },
                {
                    "id": "IC_kwDOEKipmc5cdrob",
                    "body": "hey @ferrannp, i've replied to your support ticket with a detailed explanation but for transparency, i'll also include my response here so the community can reference it:\r\n\r\n> This happens because only OAuth logins are automatically linked to existing accounts. The behaviour is similar for other auth flows as well. For example, if you use signInWithOAuth for google and then try to signUp with email and password or magiclink, it will return an error that a user is already registered.\r\nPerhaps we can make the error here more explicit instead of returning an error like \"Database error saving user\". We won't be allowing automatic linking for the flow you mentioned: \r\n> 1. signInWithOAuth for google\r\n> 2. signInWithIdToken for apple\r\n\r\n> If you signInWithIdToken first and signInWithOAuth, the 2 accounts will be automatically linked if they have the same email because signInWithOAuth uses the automatic linking logic here. The automatic linking logic was already implemented for some time and it makes it hard to remove it (for backward compatibility reasons). This is also a huge blocker for another issue which is to remove the requirement for emails on OAuth logins.\r\n\r\n> We also do not have docs around signInWithIdToken because it's experimental at this point and we will most likely change the API around it. I understand that this is a pretty common use case where you'd want a user to have access to both the web and mobile app but automatically linking accounts here is not the solution we are planning for. We plan to expose an API which allows developers the freedom to link accounts easily rather than deciding to automatically link them on the user's behalf.\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-09T03:13:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284763"
                },
                {
                    "id": "IC_kwDOEKipmc5cdroi",
                    "body": "Hello again \ud83d\udc4b . Posting my answer here for the community too:\r\n\r\n> Thanks for your explanation. Actually my use case is between iOS users and Android users.\r\n> \r\n> Apple forces native sign in so my idea was to offer Apple and Google on iPhone and Google on Android. As far as I > understand, the only way to comply with Apple is using signInWithIdToken, correct?\r\n> \r\n> What recommendation would you give to me then? Should I ditch Google authentication and only go with Apple + username and password?",
                    "author": {
                        "login": "ferrannp"
                    },
                    "createdAt": "2023-03-09T22:45:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284770"
                },
                {
                    "id": "IC_kwDOEKipmc5cdron",
                    "body": "this is happening when users are created via inviteByEmail, then try to oauth into google",
                    "author": {
                        "login": "bigp34ch"
                    },
                    "createdAt": "2023-03-12T20:32:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284775"
                },
                {
                    "id": "IC_kwDOEKipmc5cdrow",
                    "body": "hey @bigp34ch, can you please email us at [support](https://app.supabase.com/support/new) so we can look into the issue for your project? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-03-13T03:45:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284784"
                },
                {
                    "id": "IC_kwDOEKipmc5cdro3",
                    "body": "@kangmingtay are there any plans that no matter how the user signs in, if they have the same email, we can choose the accounts to be merged? Like some setting in the Supabase dashboard?",
                    "author": {
                        "login": "ferrannp"
                    },
                    "createdAt": "2023-03-13T22:59:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284791"
                },
                {
                    "id": "IC_kwDOEKipmc5cdrpB",
                    "body": "> hey @bigp34ch, can you please email us at [support](https://app.supabase.com/support/new) so we can look into the issue for your project?\r\n\r\nhey, @kangmingtay. we did. ",
                    "author": {
                        "login": "bigp34ch"
                    },
                    "createdAt": "2023-03-14T01:38:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284801"
                },
                {
                    "id": "IC_kwDOEKipmc5cdrpK",
                    "body": "Same problem here. User created with email+password, and can't log in with gmail. After reaching out to support we only received this:\r\n```\r\nHey there\u200b,\r\n\r\nThank you for reaching out to Supabase Support.\r\n\r\nWe appreciate your inquiry. While we would love to be able to assist with all aspects of your project, our support is primarily focused on addressing instance-related issues, such as server connectivity/bugs or configuration problems.\r\n\r\nIf need help with your code or a function you have written, we recommend contacting community support on GitHub Discussions or on Discord. The community is made up of experienced developers who may be able to provide guidance and support with code-related issues.\r\n\r\nTo get the most helpful response from the community, providing clear and detailed information about your problem and any error messages you may be encountering is important. Be sure to also include any relevant code snippets in your message.\r\n\r\nIf you have further questions, please don't hesitate to contact us again.\r\n\r\nThanks,\r\nKevin Brolly\r\nSupabase Support Engineer\r\n```",
                    "author": {
                        "login": "ksaitor"
                    },
                    "createdAt": "2023-03-16T09:35:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284810"
                },
                {
                    "id": "IC_kwDOEKipmc5cdrpP",
                    "body": "Hey @ksaitor, sorry about that. \r\n\r\nIn general though we're now trying to address this in https://github.com/supabase/gotrue/pull/1108. \r\n\r\nI'll transfer this issue to the backend repo.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-05-17T12:14:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551284815"
                },
                {
                    "id": "IC_kwDOEKipmc5cdrzx",
                    "body": "Duplicate of #313.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-05-17T12:15:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1109#issuecomment-1551285489"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5mXfGw",
            "number": 1111,
            "title": "Error loading template from /home/mail/templates/invite.html: Unable to fetch mail template",
            "body": "# Bug report\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nI have changed the docker-compose file such that the gotrue container will now have a volume mount:\r\n```\r\n      GOTRUE_MAILER_TEMPLATES_INVITE: '/var/lib/mail/templates/invite.html'\r\nvolumes:\r\n      - ./volumes/mail/templates/:/var/lib/mail/templates:z\r\n```\r\nI've used `docker exec -it supabase-auth /bin/sh` to confirm the volume is mounted correctly and the file invite.html exists.\r\n\r\nWhen I send an invite email however, I get the following in the logs of the supabase-auth container:\r\n```\r\n2023/05/19 15:19:27 Error loading template from /var/lib/mail/templates/invite.html: Unable to fetch mail template\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Follow basic instructions to self-host supabase\r\n2. Edit docker-compose as described above\r\n3. Add the mentioned volume\r\n4. Add a invite.html file with any contents\r\n5. Invite a user\r\n6. Observe the logs\r\n\r\n## Expected behavior\r\n\r\nThe template should be used to send the email\r\n",
            "author": {
                "login": "rienheuver"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-19T15:26:08Z",
            "closedAt": "2023-05-31T16:13:33Z",
            "url": "https://github.com/supabase/gotrue/issues/1111",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5cq8pZ",
                    "body": "Hey @rienheuver,\r\n\r\nIf I'm not mistaken, the template system uses HTTP(S) to fetch the templates. There have been a few issues we've seen internally with this library we're using to do the fetching, which is unmaintained. We've got plans to re-do the whole templating system, but for now if you could expose the template on a server somewhere it should fix your problems.\r\n\r\nLet me know if this helps!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-05-19T15:34:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/1111#issuecomment-1554762329"
                },
                {
                    "id": "IC_kwDOEKipmc5crEcg",
                    "body": "Hey @hf,\r\nThanks for the quick reply! That explains a lot.. An http URL does indeed work. Perhaps the documentation can be updated? The following wasn't clear enough for me at least ;-)\r\n\r\n`URL path to an email template to use`\r\n\r\nWould love to see this be expanded in the future! Great feature to have for self hosted ",
                    "author": {
                        "login": "rienheuver"
                    },
                    "createdAt": "2023-05-19T16:03:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1111#issuecomment-1554794272"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5mx2_3",
            "number": 1118,
            "title": "Custom Storage Provider Polling Too Frequently",
            "body": "# Bug report\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. (I tried two different frameworks, I'm not sure if they are specific to my implementation or supabase)\r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nI've been trying to create a customStorageAdapter and noticed that `getItem` and `removeItem` were running every few seconds repeatedly and indefinitely. I am calling them on the server so the console logs appear in my server terminal.\r\n\r\nI'm not sure if this is because I am not correctly declaring them but could not stop it from basically polling while my site was on idle despite turning `persistSession: 'false'` I noticed this on both nextjs and sveltekit.\r\n\r\n```ts\r\nconst db = createClient(PUBLIC_SUPABASE_URL, PUBLIC_SUPABASE_ANON_KEY, {\r\n\tauth: {\r\n\t\tstorage: {\r\n\t\t\tgetItem(key) {\r\n\t\t\t\tconsole.log('getItem has run');\r\n\t\t\t\treturn key;\r\n\t\t\t},\r\n\t\t\tsetItem(key, value) {\r\n\t\t\t\tconsole.log('setItem has run');\r\n\t\t\t\t\treturn;\r\n\t\t\t},\r\n\t\t\tremoveItem(key) {\r\n\t\t\t\tconsole.log('removeItem has run');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\n## Expected behavior\r\n\r\nTo be run on initialization and when called on auth events (signIn, signOut, etc)\r\n\r\n",
            "author": {
                "login": "hjaber"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-24T16:13:46Z",
            "closedAt": "2023-05-27T02:04:21Z",
            "url": "https://github.com/supabase/gotrue/issues/1118",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5dHemj",
                    "body": "Hey @hjaber, what did you set your JWT expiry duration to? We also use the methods in the custom storage adapter in the background to ensure that the session is refreshed. Can you try setting `autoRefreshToken` to `false` and see if that helps to solve the problem?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-05-25T04:19:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1118#issuecomment-1562241443"
                },
                {
                    "id": "IC_kwDOEKipmc5dHnja",
                    "body": "Thanks for your prompt reply @kangmingtay \r\n\r\n> what did you set your JWT expiry duration to?\r\n\r\nI didn't get that far yet as I am trying to understand the storage provider better. I am trying to build a server-sided backend with `pkce` and use cookies as my `customStorageAdapter` instead of localStorage.\r\n\r\nWould not having a JWT expiry trigger the auth storage provider to run over 20x in a minute?\r\n\r\nI'm away from my computer but I'll give setting `authRefreshToken: 'false'` a try, but I thought that was a useful setting to keep on.\r\n\r\n I'd like `getItem` and `setItem` to appropriately refresh the token when necessary (in my situation, set the cookie with a new value when necessary such as upon expiration)\r\n\r\n",
                    "author": {
                        "login": "hjaber"
                    },
                    "createdAt": "2023-05-25T05:10:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1118#issuecomment-1562278106"
                },
                {
                    "id": "IC_kwDOEKipmc5dSlb_",
                    "body": " When I use `autoRefreshToken: 'false'` there seems to be less polling but it still is unpredictable behavior on the server, it is running every few minutes.\r\n\r\nSwitching tabs and refocusing causes predictable behavior on the client, the supabase client reruns on every  focus event. But, when using the  supabase client on the server, I'm unable to trace why the supabase client is re-running.\r\n\r\nI'm going to close and wait until pkce is more stable with auth helpers before attempting my own `customStorageAdapter`. ",
                    "author": {
                        "login": "hjaber"
                    },
                    "createdAt": "2023-05-27T02:04:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/1118#issuecomment-1565153023"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5m5oEV",
            "number": 1119,
            "title": "user or account does not exist",
            "body": "hello there, it would be nice if you could add the return: user or account does not exist.\r\nCurrently when user does not exist it just returns: Invalid login credentials.",
            "author": {
                "login": "NuvensCorporation"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-25T19:32:45Z",
            "closedAt": "2023-05-30T07:59:58Z",
            "url": "https://github.com/supabase/gotrue/issues/1119",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ddQ3j",
                    "body": "Hey, ,\r\n\r\nThanks for the feedback! This is actually intended as we don't wish to disclose whether or not a user is signed up on the platform. We're working to make the login flow more extensible though - this is one of the use cases that we'll keep in mind.\r\n\r\nGoing to close this issue for now but feel free to re-open if there are further questions/concerns or if I've misunderstood the query.\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-30T07:59:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/1119#issuecomment-1567952355"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5nElgD",
            "number": 1120,
            "title": "Unable to use OAuth login when captcha is enabled",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nAfter enabling hCaptcha protection in the Auth settings of my project, I'm unable to sign in users using OAuth, getting a `AuthApiError: hCaptcha verification process failed` error message anytime I redirect users to an API route afterwards that has the following code:\r\n\r\n```ts\r\nconst code = url.searchParams.get(\"code\");\r\n\r\nif (code) {\r\n  await supabase.auth.exchangeCodeForSession(code);\r\n}\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Enable hCaptcha protection in Auth settings\r\n2. Run the `supabase.auth.signInWithOAuth({ provider: \"...\", options: { redirectTo: \"...\" } })` method on the client with the `options.redirectTo` parameter set to an API route that executes the aforementioned code\r\n3. Complete the OAuth flow\r\n4. See error mentioned above\r\n\r\n## Expected behavior\r\n\r\nSession should be created without expecting a captcha token, or captchaToken should be accepted in the options parameter of the `supabase.auth.signInWithOAuth()` method\r\n\r\n## System information\r\n\r\n- Version of supabase-js: 2.23.0\r\n- Version of Node.js: 18.12.1\r\n",
            "author": {
                "login": "aarushthukral"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-28T07:17:55Z",
            "closedAt": "2023-06-07T11:05:55Z",
            "url": "https://github.com/supabase/gotrue/issues/1120",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5dXNc8",
                    "body": "Thank you for reporting this issue, we are currently looking into it.",
                    "author": {
                        "login": "silentworks"
                    },
                    "createdAt": "2023-05-29T01:36:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1120#issuecomment-1566365500"
                },
                {
                    "id": "IC_kwDOEKipmc5dmX9l",
                    "body": "The following error is returned when trying to use the `signInWithOAuth` method, which doesn't appear when captcha is disabled in the auth settings:\r\n```json\r\n{\r\n  \"message\": \"An invalid response was received from the upstream server\"\r\n}\r\n```",
                    "author": {
                        "login": "aarushthukral"
                    },
                    "createdAt": "2023-05-31T14:24:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1120#issuecomment-1570340709"
                },
                {
                    "id": "IC_kwDOEKipmc5dmnhN",
                    "body": "Hey @aarushthukral,\r\n\r\nThanks for reporting the issue! We've [put out a fix](https://github.com/supabase/gotrue/pull/1121) but we've yet to release it to all projects.  It will probably go out with the next deploy which will probably happen within the next 2 weeks. If you need the fix urgently do feel free to reach out to us via [our support channel](https://app.supabase.com/support/new)\r\n\r\nHope this helps!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-05-31T15:00:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/1120#issuecomment-1570404429"
                },
                {
                    "id": "IC_kwDOEKipmc5eNTNu",
                    "body": "Closing this as fixed, as the deploy is already scheduled for next week.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:05:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/1120#issuecomment-1580544878"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5nMUwB",
            "number": 1122,
            "title": "Gotrue unable to send webhook to localhost",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n\r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\nI ran into a problem with webhook gotrue. The problem is that with all authorization / authentication events, GoTrue cannot send a webhook request to the local supabase edge functions runtime (on the docker compose network) server. When you try to authorize, you receive a response with the 502 bad gateway code:\r\n```\r\n{\r\n     code: 502\r\n     \"msg\": \"Failed to connect to http://web:9000/webhook\",\r\n     \"error_id\": \"65b9e205-cf0a-4add-9f5c-6c5cc0868ffc\"\r\n}\r\n```\r\nWhat is most interesting about this error is that it only happens after 10-15 authorization attempts (yes, I thought :)). After that the request passes and I get my webhook data.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\nTo repeat my mistake, you can raise supabase/gotrue and supabase/edge-runtime in the docker compose network, and create a function in edge-runtime \"webhook\", write any code that will accept a post request and use it as a webhook-url in gotrue.\r\nHere is my function code:\r\n\r\nGoTrue webhook config:\r\n\r\n`  \r\n      GOTRUE_WEBHOOK_URL: \"http://web:9000/webhook\"\r\n      GOTRUE_WEBHOOK_SECRET: \"\"\r\n      GOTRUE_WEBHOOK_RETRIES: 10\r\n      GOTRUE_WEBHOOK_TIMEOUT_SEC: 30\r\n      GOTRUE_WEBHOOK_EVENTS: \"signup\"\r\n`\r\n\r\n```\r\nimport {serve} from \"https://deno.land/std@0.177.0/http/server.ts\";\r\n\r\nconsole.log('\ud83e\udd95Listening to GoTrue webhooks on port 8000...\ud83e\udd95');\r\n\r\nasync function handler(_req: Request): Response {\r\n     try {\r\n         console.time(\"webhook start\")\r\n         const body = await _req.json();\r\n         // Process the received data from the webhook\r\n         console.log('Webhook received:', JSON.stringify(body));\r\n         // Further processing...\r\n         // Sending data to the file server.\r\n         // const response = await fetch('https://localhost:3000/user/init', {\r\n         // method: 'POST',\r\n         // headers: {\r\n         // 'Content-Type': 'application/json',\r\n         // },\r\n         // body: JSON.stringify(body),\r\n         // });\r\n\r\n         // if (!response.ok) {\r\n         // throw new Error(`Error sending data: ${response.status} ${response.statusText}`);\r\n         // }\r\n         const headers = new headers();\r\n         headers.append(\"Content-type\", \"applications/json\");\r\n         console.timeEnd(\"webhook start\")\r\n         return new Response(JSON.stringify({message: \"\"}), {headers: headers, status: 200,})\r\n     } catch (error) {\r\n         console.timeEnd(\"webhook start\")\r\n         console.error('Error processing webhook:', error);\r\n         const headers = new headers();\r\n         headers.append(\"Content-type\", \"application/json\");\r\n         return new Response({error: error}, {headers: headers, status: 500})\r\n     }\r\n}\r\n\r\nserve(handler, { port: 8000 });\r\n```\r\n\r\n## Expected behavior\r\n\r\nWhen deploying my edge-runtime function on fly.io, requests went through immediately, and without errors, when working locally, everything does not work correctly, as I described in the bug description\r\n\r\n## Screenshots\r\n\r\n<img width=\"897\" alt=\"\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\" src=\"https://github.com/supabase/gotrue/assets/81327678/620f9b59-57d4-4287-a80c-9ea36fb4d89c\">\r\n\r\n## GoTrue logs\r\n{\"auth_event\":{\"action\":\"user_signedup\",\"actor_id\":\"d4d71e95-7a37-46fd-b2c2-67aa6568d59b\",\"actor_username\":\"exampleuser2@mail.ru\",\"log_type\":\"team\",\"traits\":{\"provider\":\"email\"}},\"component\":\"api\",\"error\":\"502: Failed to connect to http://web:9000/webhook\",\"level\":\"error\",\"method\":\"POST\",\"msg\":\"502: Failed to connect to http://web:9000/webhook\",\"path\":\"/signup\",\"referer\":\"\",\"remote_addr\":\"172.28.0.5:54180\",\"timestamp\":\"2023-05-29T22:10:00Z\"}\r\n\r\n<img width=\"1011\" alt=\"\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\" src=\"https://github.com/supabase/gotrue/assets/81327678/b6705a39-06ce-4534-8def-01e7dff1a517\">\r\n\r\n## System information\r\n\r\n- OS: macOS Ventura 13.0\r\n- Version of GoTrue: supabase/gotrue:latest\r\n- Version of Edge runtime: ghcr.io/supabase/edge-runtime:v1.2.18\r\n- Version of docker: Docker version 23.0.5, Docker Compose version v2.17.3 \r\n",
            "author": {
                "login": "iowathe3rd"
            },
            "state": "CLOSED",
            "createdAt": "2023-05-29T22:18:38Z",
            "closedAt": "2023-06-07T11:04:33Z",
            "url": "https://github.com/supabase/gotrue/issues/1122",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5eNSb-",
                    "body": "The \"webhook\" support in GoTrue is inherited from Netlify and all references to it are for basic backward compatibility. Supabase's GoTrue does not use it nor do we plan to maintain those code paths. We are working on a different approach to webhooks and should have something about it this year.\r\n\r\nI'll close this issue as not planned.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:04:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1122#issuecomment-1580541694"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ng04H",
            "number": 1123,
            "title": "Cannot update user password/metadata for unconfirmed signups",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nIf a user was created but has not been confirmed in the database and a signup request is made, the existing user's password is not updated.\r\n\r\nWe want to be able to update the password of new users upon registration if they are unclaimed. We know they are unclaimed because we store this state in the user metadata.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create a user via SQL or the admin API. This user must be created without confirmation.\r\n2. Run the `signup` API command and pass user metadata and a password.\r\n3. The user metadata nor password are updated.\r\n\r\n## Expected behavior\r\n\r\nIf the user exists and is still not yet confirmed and a new signup request is received for the existing email, it would be good to allow the password to be set with the data received in the payload.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- Version of supabase-js: 2.24.0\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "bombillazo"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-01T16:12:00Z",
            "closedAt": "2023-06-07T02:30:50Z",
            "url": "https://github.com/supabase/gotrue/issues/1123",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5duBnF",
                    "body": "I believe this is the reason \r\nhttps://github.com/supabase/gotrue/blob/577a97e7aad241fcb8562ded195f8c2e55250272/internal/api/signup.go#L145-L151",
                    "author": {
                        "login": "bombillazo"
                    },
                    "createdAt": "2023-06-01T16:13:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1123#issuecomment-1572346309"
                },
                {
                    "id": "IC_kwDOEKipmc5d9MCt",
                    "body": "@bombillazo you can call the `updateUser` method after the user has been confirmed if you want to update the user metadata or password subsequently",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-05T08:16:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/1123#issuecomment-1576321197"
                },
                {
                    "id": "IC_kwDOEKipmc5eKW19",
                    "body": "Ok gotcha",
                    "author": {
                        "login": "bombillazo"
                    },
                    "createdAt": "2023-06-07T02:30:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/1123#issuecomment-1579773309"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5nsPZ2",
            "number": 1126,
            "title": "how to use kakao provider??",
            "body": "I know that the Kakao provider has recently been merged.\r\nBut my project auth doesn't have kakao in it.\r\nWhen can I check it?\r\n\r\n![\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2023-06-04 \u110b\u1169\u110c\u1165\u11ab 12 02 01](https://github.com/supabase/gotrue/assets/119643740/55707ccf-8091-4d0c-a237-edc05c3de8da)\r\n",
            "author": {
                "login": "artifacts3"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-03T16:09:24Z",
            "closedAt": "2023-06-03T18:12:45Z",
            "url": "https://github.com/supabase/gotrue/issues/1126",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5d4jW3",
                    "body": "Hey, this project is the open-source version of Supabase Auth. Features merged here take a while to be added to the platform itself. ",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-03T18:12:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1126#issuecomment-1575105975"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5nyE2K",
            "number": 1127,
            "title": "how to use kakao provider?",
            "body": "i use \r\n```\r\nsupabase.auth.signInWithOAuth(Provider.kakao)\r\n```\r\n{\r\n  \"code\": 400,\r\n  \"msg\": \"Unsupported provider: Provider kakao could not be found\"\r\n}\r\n\r\n\r\n\r\n![Simulator Screen Shot - iPhone SE (3rd generation) - 2023-06-03 at 23 36 34](https://github.com/supabase/supabase-flutter/assets/119643740/493a2f25-6cd2-4855-89ab-4d5119ab12e7)\r\n",
            "author": {
                "login": "artifacts3"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-03T14:39:35Z",
            "closedAt": "2023-06-07T11:02:05Z",
            "url": "https://github.com/supabase/gotrue/issues/1127",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5d86_q",
                    "body": "You need to enable that provider in your dashboard. If it's not available, you may need to [pause and restore your project](https://supabase.com/docs/guides/platform/migrating-and-upgrading-projects#upgrade-your-project)",
                    "author": {
                        "login": "Vinzent03"
                    },
                    "createdAt": "2023-06-03T14:47:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1127#issuecomment-1576251370"
                },
                {
                    "id": "IC_kwDOEKipmc5d86_5",
                    "body": "@Vinzent03 please\r\ni not available, so pause and restore my project\r\nbut not show kakao provider\r\n\r\n![\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2023-06-04 \u110b\u1169\u110c\u1165\u11ab 12 01 49](https://github.com/supabase/supabase-flutter/assets/119643740/676868f9-00c5-4331-934c-0fcd47291bd2)\r\n\r\n![\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2023-06-04 \u110b\u1169\u110c\u1165\u11ab 12 02 01](https://github.com/supabase/supabase-flutter/assets/119643740/bb3859bb-59be-47dd-9e6c-b823f71c7e56)\r\n",
                    "author": {
                        "login": "artifacts3"
                    },
                    "createdAt": "2023-06-03T15:02:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1127#issuecomment-1576251385"
                },
                {
                    "id": "IC_kwDOEKipmc5d8_qW",
                    "body": "@artifacts3 and @Vinzent03 we haven't deployed the change to the Supabase platform yet but we're planning to do so by the end of the week",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-06-05T07:56:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/1127#issuecomment-1576270486"
                },
                {
                    "id": "IC_kwDOEKipmc5eNRBr",
                    "body": "Actually may take a bit longer than end of week until the UI and everything is connected. Check the monthly updates newsletter to see when it arrives exactly.\r\n\r\nI'll close the issue now as it's not related to this project specifically.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-06-07T11:02:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1127#issuecomment-1580535915"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5oM4wa",
            "number": 1131,
            "title": "Apple Social login secret gen tool doesn't work on Safari. ",
            "body": "Apple Social login secret gen tool doesn't work on Safari. Works fine in Chrome. \r\n\r\nDocs need to be updated to mention the tool is broken in Safari or will never work in Safari.\r\n\r\nhttps://supabase.com/docs/guides/auth/social-login/auth-apple#generate-a-client-secret\r\n\r\n",
            "author": {
                "login": "rtorcato"
            },
            "state": "OPEN",
            "createdAt": "2023-06-08T15:56:31Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1131",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5oZtcd",
            "number": 1133,
            "title": "Discord Auth Identity Object possibly needs to be updated for new ``global_name`` value",
            "body": "Discord's recent update to a unique username system also brought with it a new global \"Display Name\" (known as ``global_name`` in user structure) for users.\r\n\r\nThe ``identities`` object included in the metadata received from Auth doesn't include that value.\r\n\r\n[Structure from Discord](https://discord.com/developers/docs/resources/user#user-object-user-structure)\r\n\r\n_Note: this value can be empty and would be ``null``/not included in response._\r\n\r\n[Supabase discord.go auth provider](https://github.com/supabase/gotrue/blob/aab7c3481219f136729d80d37731aa64fb8c380a/internal/api/provider/discord.go)\r\n",
            "author": {
                "login": "Flohhhhh"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-11T19:22:48Z",
            "closedAt": "2023-07-06T05:20:39Z",
            "url": "https://github.com/supabase/gotrue/issues/1133",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ejSuG",
                    "body": "I'm not familiar with GO or the back-end of Auth, but this is a quick example of how I would imagine it being changed:\r\n![image](https://github.com/supabase/gotrue/assets/48927090/e5f07948-0f95-498b-bdcb-60f9e3ff156f)\r\nI did not test this exact code.\r\n",
                    "author": {
                        "login": "Flohhhhh"
                    },
                    "createdAt": "2023-06-11T19:33:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1133#issuecomment-1586310022"
                },
                {
                    "id": "IC_kwDOEKipmc5gu76g",
                    "body": "hey @Flohhhhh, thanks for reporting this issue, we have a fix in place [here](https://github.com/supabase/gotrue/pull/1171)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-06T03:35:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/1133#issuecomment-1622916768"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ornO9",
            "number": 1136,
            "title": "Prometheus server shut down - invalid memory address or nil pointer dereference",
            "body": "When setting the env vars `GOTRUE_METRICS_ENABLED` to `true` and `GOTRUE_METRICS_EXPORTER` to `prometheus`, gotrue crashes right after starting with the following log output:\r\n```json\r\n{\"level\":\"info\",\"msg\":\"Go runtime metrics collection started\",\"time\":\"2023-06-14T07:09:16Z\"}\r\n{\"level\":\"info\",\"msg\":\"prometheus server listening on 0.0.0.0:9100\",\"time\":\"2023-06-14T07:09:16Z\"}\r\n{\"level\":\"info\",\"msg\":\"received graceful shutdown signal\",\"time\":\"2023-06-14T07:09:16Z\"}\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x60 pc=0x5f85b4]\r\n\r\ngoroutine 1 [running]:\r\nnet/url.(*URL).Query(0xc00004a017?)\r\n\t/usr/local/go/src/net/url/url.go:1118 +0x14\r\ngithub.com/supabase/gotrue/cmd.migrate(0x0?, {0x0?, 0x0?, 0x0?})\r\n\t/go/src/github.com/supabase/gotrue/cmd/migrate_cmd.go:55 +0x23c\r\ngithub.com/supabase/gotrue/cmd.glob..func3(0x19a9060, {0x19fb890?, 0x0?, 0x0?})\r\n\t/go/src/github.com/supabase/gotrue/cmd/root_cmd.go:17 +0x25\r\ngithub.com/spf13/cobra.(*Command).execute(0x19a9060, {0xc00003e230, 0x0, 0x0})\r\n\t/go/pkg/mod/github.com/spf13/cobra@v1.6.1/command.go:920 +0x847\r\ngithub.com/spf13/cobra.(*Command).ExecuteC(0x19a9060)\r\n\t/go/pkg/mod/github.com/spf13/cobra@v1.6.1/command.go:1044 +0x3bd\r\ngithub.com/spf13/cobra.(*Command).Execute(...)\r\n\t/go/pkg/mod/github.com/spf13/cobra@v1.6.1/command.go:968\r\ngithub.com/spf13/cobra.(*Command).ExecuteContext(0x1283a38?, {0x12848e0?, 0xc00009d8c0?})\r\n\t/go/pkg/mod/github.com/spf13/cobra@v1.6.1/command.go:961 +0x4a\r\nmain.main()\r\n\t/go/src/github.com/supabase/gotrue/main.go:31 +0x10c\r\n```\r\n\r\nI'm running gotrue in an AKS environment with the following deployment manifest:\r\n```yaml\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  labels:\r\n    app: gotrue\r\n    app.kubernetes.io/instance: gotrue\r\n    app.kubernetes.io/name: gotrue\r\n    app.kubernetes.io/version: v2.72.0\r\n    version: v2.72.0\r\n  name: gotrue\r\n  namespace: gotrue\r\nspec:\r\n  progressDeadlineSeconds: 600\r\n  replicas: 1\r\n  revisionHistoryLimit: 10\r\n  selector:\r\n    matchLabels:\r\n      app.kubernetes.io/instance: gotrue\r\n      app.kubernetes.io/name: gotrue\r\n      app.kubernetes.io/version: v2.72.0\r\n  strategy:\r\n    rollingUpdate:\r\n      maxSurge: 25%\r\n      maxUnavailable: 25%\r\n    type: RollingUpdate\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: gotrue\r\n        app.kubernetes.io/instance: gotrue\r\n        app.kubernetes.io/name: gotrue\r\n        app.kubernetes.io/version: v2.72.0\r\n        version: v2.72.0\r\n    spec:\r\n      containers:\r\n      - env:\r\n        - name: GOTRUE_SITE_URL\r\n          value: example.com\r\n        - name: GOTRUE_JWT_SECRET\r\n          valueFrom:\r\n            secretKeyRef:\r\n              key: secret\r\n              name: gotrue-jwt\r\n        - name: LOG_LEVEL\r\n          value: debug\r\n        - name: DB_HOST\r\n          value: example.com\r\n        - name: DB_PORT\r\n          value: \"5432\"\r\n        - name: DB_USER\r\n          valueFrom:\r\n            secretKeyRef:\r\n              key: username\r\n              name: gotrue-psql\r\n        - name: DB_PASSWORD\r\n          valueFrom:\r\n            secretKeyRef:\r\n              key: password\r\n              name: gotrue-psql\r\n        - name: GOTRUE_DB_DATABASE_URL\r\n          value: $(DB_DRIVER)://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?search_path=auth&sslmode=$(DB_SSL)\r\n        - name: GOTRUE_DB_DRIVER\r\n          value: postgres\r\n        - name: GOTRUE_METRICS_ENABLED\r\n          value: \"true\"\r\n        - name: GOTRUE_METRICS_EXPORTER\r\n          value: prometheus\r\n        image: supabase/gotrue:v2.72.0\r\n        imagePullPolicy: IfNotPresent\r\n        name: gotrue\r\n        ports:\r\n        - containerPort: 9999\r\n          name: http\r\n          protocol: TCP\r\n        - containerPort: 9100\r\n          name: http-metrics\r\n          protocol: TCP\r\n        resources:\r\n          limits:\r\n            memory: 100Mi\r\n          requests:\r\n            cpu: 100m\r\n            memory: 100Mi\r\n        securityContext:\r\n          capabilities:\r\n            drop:\r\n            - ALL\r\n          readOnlyRootFilesystem: true\r\n          runAsNonRoot: true\r\n          runAsUser: 1000\r\n        terminationMessagePath: /dev/termination-log\r\n        terminationMessagePolicy: File\r\n      dnsPolicy: ClusterFirst\r\n      initContainers:\r\n      - args:\r\n        - |\r\n          until pg_isready -h $(DB_HOST) -p $(DB_PORT) -U $(DB_USER); do\r\n          echo \"Waiting for database to start...\"\r\n          sleep 2\r\n          done\r\n        - echo \"Database is ready\"\r\n        command:\r\n        - /bin/sh\r\n        - -c\r\n        env:\r\n        - name: DB_HOST\r\n          value: example.com\r\n        - name: DB_PORT\r\n          value: \"5432\"\r\n        - name: DB_USER\r\n          valueFrom:\r\n            secretKeyRef:\r\n              key: username\r\n              name: gotrue-psql\r\n        image: postgres:14-alpine\r\n        imagePullPolicy: IfNotPresent\r\n        name: init-db\r\n        resources:\r\n          limits:\r\n            memory: 100Mi\r\n          requests:\r\n            cpu: 100m\r\n            memory: 100Mi\r\n        terminationMessagePath: /dev/termination-log\r\n        terminationMessagePolicy: File\r\n      restartPolicy: Always\r\n      schedulerName: default-scheduler\r\n      securityContext:\r\n        fsGroup: 2000\r\n      serviceAccount: gotrue\r\n      serviceAccountName: gotrue\r\n      terminationGracePeriodSeconds: 30\r\n```\r\n",
            "author": {
                "login": "mmianl"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-14T07:39:39Z",
            "closedAt": "2023-06-14T07:50:20Z",
            "url": "https://github.com/supabase/gotrue/issues/1136",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5o2FQY",
            "number": 1140,
            "title": "Auth schema changes made by supabase causing prisma drift detection",
            "body": "## Describe the bug\r\n\r\nI need clarification on auth schema changes. I have been using prisma with a lot of success and enjoying a really good dev experience. I use multischema and pull auth and public to start, update a few lines in the auth schema, and add the helper functions to the initial migration and in order to successfully sync the shadow db with an initial migrate diff. \r\n\r\nBeyond that initial step, I'm able to define RLS policies, add triggers and functions as well as the standard schema evolution using prisma migrate, and everything is great. \r\n\r\nHowever, yesterday my auth schema changed in the following way: \r\n\r\n```\r\nDrift detected: Your database schema is not in sync with your migration history.\r\n\r\nThe following is a summary of the differences between the expected database schema given your migrations files, and the actual schema of the database.\r\n\r\nIt should be understood as the set of changes to get from the expected schema to the actual schema.\r\n\r\n[*] Changed the `flow_state` table\r\n  [+] Added index on columns (created_at)\r\n\r\n[*] Changed the `refresh_tokens` table\r\n  [+] Added index on columns (updated_at)\r\n\r\n[*] Changed the `saml_relay_states` table\r\n  [+] Added index on columns (created_at)\r\n\r\n[*] Changed the `sessions` table\r\n  [+] Added index on columns (not_after)\r\n```\r\n\r\nI didn't add those indexes, supabase did. My question is how often do you plan on changing the auth schema and do you have any plan to work with supabase devs who work with prisma to guard against random drift brought on by supabase making unannounced changes to the auth schema? \r\n\r\nSecondarily, I can easily identify the 4 new indexes that my shadow db needs to know about, so if there is a way to inform the shadowdb of the new changes without resetting the db, that would be helpful.",
            "author": {
                "login": "ODreelist"
            },
            "state": "OPEN",
            "createdAt": "2023-06-15T01:29:22Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1140",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5e9p6z",
                    "body": "I won't speak for the Supabase dev's, but in general you should not modify the Auth schema at all (except for triggers on auth.users table as documented in user management starter).  The auth schema changes regularly with new features, so columns can change and new tables can be added.  Several times indexes have changed, unique columns like email have changed etc.  Anytime gotrue (server) updates there could be changes to the auth schema.\r\n\r\n\r\nJust a couple of Supabase dev remarks...\r\n\r\n`Supabase Auth component([gotrue](https://github.com/supabase/gotrue/)) depends on the auth.users table and runs migrations against it. So really auth.users is a private table and you shouldn't change it - doing so might cause gotrue to fail.`\r\n\r\n`If Prisma makes modifications to the auth schema under the hood, it will cause gotrue to fail since the auth schema is supposed to be managed by gotrue only.`\r\n",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-06-15T02:56:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1593220787"
                },
                {
                    "id": "IC_kwDOEKipmc5e9p7B",
                    "body": "From the docs...  https://supabase.com/docs/guides/auth/managing-user-data\r\n![image](https://github.com/supabase/supabase/assets/54564956/7118507d-be28-434b-9dc6-c00d1778176a)\r\n",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-06-15T03:15:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1593220801"
                },
                {
                    "id": "IC_kwDOEKipmc5e9qFd",
                    "body": "I appreciate the response. I can live with that disclaimer as I am adhering to that principle explained and outlined in the user management starter snippet. The only relationship I establish to the auth schema is with my public.profiles table via auth.users PK.\r\n\r\nThat said, in order for me to efficiently use prisma migrate to manage things like RLS policies, functions, and triggers, is for the shadow db to remain in sync with both the auth and the public schema (utilizing prisma multiSchema). \r\n\r\nIn my initial migration.sql I add the helper functions as they are defined by supabase and update a couple auth schema model attributes (as they do not get introspected correctly by prisma)  so the shadow db understands what auth.jwt() and auth.uid() are and can successfully apply the initial migration. At that point I can add triggers/functions/RLS policies that use the auth helper functions without issue, and with the benefits of prisma.\r\n\r\nA lot of the setup can be attributed to this write up here: [Prisma with supabase RLS](https://medium.com/@ngoctranfire/using-prisma-with-supabase-row-level-security-and-multi-schema-7c53418adba3)\r\n\r\nThe only problem is that In this current and otherwise ideal situation, I would be forced to randomly encounter drift detection of the auth schema, and thus have to manually resolve changes by comparing the changes made by supabase against my migration history, generating manual migration.sql that reflects the changes and then using prisma migrate resolve in order to overcome the detected drift. \r\n\r\nI think the ability to manage RLS policies, triggers, and functions using the auth.jwt() or auth.uid() helpers via prisma migrate is far to valuable to give up on. \r\n\r\nIdeally, we could inform the prisma shadow db of the auth helper functions while leaving the auth schema out of prisma's datasources entirely, but I'm not sure how that is possible. ",
                    "author": {
                        "login": "ODreelist"
                    },
                    "createdAt": "2023-06-15T04:12:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1593221469"
                },
                {
                    "id": "IC_kwDOEKipmc5e9qFt",
                    "body": "You might try this thread one of the Supabase devs commented on. https://github.com/supabase/gotrue/issues/1061#issuecomment-1533108434",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-06-15T11:28:38Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1593221485"
                },
                {
                    "id": "IC_kwDOEKipmc5e9qGD",
                    "body": "Thanks, but that thread is unrelated. I don't have those problems, I do not reset the auth schema, in fact I never touch the auth schema outside of Prisma introspection (db pull) on initial project setup. \r\n\r\nI would really appreciate a supabase team member's perspective on this because I need to know if supabase is actually supporting us developers that want to use supabase with supabase auth and prisma.\r\n\r\nI cannot stress enough how well the dev experience has gone for my team, we can easily keep track of changes related to our public schema, triggers, and RLS policies that take advantage of the core auth helpers that supabase encourages us to make use of. \r\n\r\nAgain, if multiSchema is necessary to achieve this quality dev experience, all we need is a proper method to handle this:\r\n\r\n1. Supabase team makes changes to customers auth schema\r\n2. Our team goes to make a migration and prisma detects drift on the auth schema\r\n3. Our team can somehow synchronize those changes to resolve the detected drift\r\n4. Our team makes the migration we attempted in step 2 and can continue developing the project\r\n\r\nI appreciate all the feedback. ",
                    "author": {
                        "login": "ODreelist"
                    },
                    "createdAt": "2023-06-15T14:28:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1593221507"
                },
                {
                    "id": "IC_kwDOEKipmc5e9q6D",
                    "body": "I moved this to auth.   FYI, This is where I believe the changes to auth schema get documented.... https://github.com/supabase/gotrue/tree/master/migrations",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-06-15T14:54:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1593224835"
                },
                {
                    "id": "IC_kwDOEKipmc5fXmVW",
                    "body": "having the same issue, exact issue using the create-t3-turbo template. https://github.com/supabase-community/create-t3-turbo",
                    "author": {
                        "login": "michaelkremenetsky"
                    },
                    "createdAt": "2023-06-21T03:31:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1600021846"
                },
                {
                    "id": "IC_kwDOEKipmc5fXyXD",
                    "body": "maybe this? https://github.com/prisma/prisma/issues/1122#issuecomment-1510359508",
                    "author": {
                        "login": "michaelkremenetsky"
                    },
                    "createdAt": "2023-06-21T04:54:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1600071107"
                },
                {
                    "id": "IC_kwDOEKipmc5fh15n",
                    "body": "> maybe this? [prisma/prisma#1122 (comment)](https://github.com/prisma/prisma/issues/1122#issuecomment-1510359508)\r\n\r\nThis issue/approach is not technically related and far less less mature than my current solution.\r\n\r\nWith the help of @GaryAustin1 and his link above, I find that manually keeping the shadow db up to date with supabase gotrue auth schema changes is a small sacrifice to make compared to the sheer number of benefits we get from this solution.",
                    "author": {
                        "login": "ODreelist"
                    },
                    "createdAt": "2023-06-22T14:07:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1602707047"
                },
                {
                    "id": "IC_kwDOEKipmc5gu8gN",
                    "body": "Hey @ODreelist, I've got a couple of questions:\r\n1. Are you able to disable prisma's drift detection on the auth schema? \r\n2. Can you describe when you get the drift detection error from prisma? Is it usually after running `prisma db pull`? \r\n3. We are working on a way to pull the same gotrue image version as the linked project so that your local development will receive those migration changes. That way, you will be able to sync your local development with your remote before you run your prisma commands. \r\n\r\nLet me know what you guys think of (3)!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-06T03:38:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1622919181"
                },
                {
                    "id": "IC_kwDOEKipmc5g6m33",
                    "body": "Hello,\r\n\r\nThanks for the response, I'll do my best to answer.\r\n\r\n1. No, I think they discussed that at length on the prisma issue tracker as it's highly requested. But I am able to resolve the drift detection of auth schema changes with a manual migration/migrate resolve. If we were able to inform prisma and the shadow DB that the auth schema exists and could be referenced, but doesn't need to be tracked, that would solve this problem outright. \r\n\r\n2. I'm using a migrate/push strategy so typically when I make public schema changes and try to run a migration with `prisma migrate dev` is when I get warned about drift detection (see the original post for what the drift detection looks like). At that point I can typically track the auth schema changes that triggered the drift detection to the gotrue migration repo (See: https://github.com/supabase/gotrue/tree/master/migrations). I then update my schema accordingly and create a manual migration which will apply the detected changes to the shadow db via `prisma migrate resolve` and I will have solved the drift detection.  At that point I can continue, with my public schema migrations.\r\n\r\n3. I think that would be helpful, but let me make sure I'm understanding you correctly. You are saying we will be able to pull a docker image that's in sync with our supabase project? And that it would apply the latest auth schema changes? If so I'm sure that would help but keep in mind I use a live supabase environment for dev and a separate one for prod so all of the discussion here applies to hosted supabase instances, not local supabase spun up in docker (we have not used supabase local yet).\r\n\r\nI think the most important question I have is this: Does my pattern of manually resolving gotrue->supabase auth schema changes using the migration repo (linked above) as a guide/early warning system of what/when changes will be propagated to supabase customer databases sufficient? does my plan make sense?\r\n\r\nIt's a simple enough process to essentially resync my shadow db when supabase makes changes to the auth schema. I wish I didn't have to, but assuming the auth schema changes you guys make are relatively infrequent and small like the one I mentioned in the first post, the benefits of prisma being aware of the auth schema for its magic functions (auth.jwt(), auth.uid(), etc.) and being able to use them to define/track RLS policies, functions and triggers inside of prisma migrations as well as manage the public schema through prisma, far outweigh this drawback.",
                    "author": {
                        "login": "ODreelist"
                    },
                    "createdAt": "2023-07-07T19:37:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1625976311"
                },
                {
                    "id": "IC_kwDOEKipmc5oao8n",
                    "body": "@ODreelist I'm facing the same issue after following the same deploy procedure for multi-schema migrations. I've tried running the missing migrations from gotrue repo, but prisma's migration still returns the same drift errors. What are the steps you're following to keep the shadow DB up to date with gotrue changes?\r\n\r\n\r\nUpdate: I've managed to do it doing the following:\r\n- Execute missing migrations from gotrue's repo in you shadow DB (in my case 1 `alter table` and 1 `create index`)\r\n- Copy those changes into your initial prisma db pull migration file (`0_init_prisma_db_pull` for ex.)\r\n- Generate a new checksum for the previously edited migration file using `shasum -a 256 prisma/migrations/0_init_prisma_db_pull/migration.sql`\r\n- Replace the value in the corresponding row in `_prisma_migrations`\r\n- Now prisma thinks these changes were with us all along",
                    "author": {
                        "login": "cfpg"
                    },
                    "createdAt": "2023-10-07T20:42:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1140#issuecomment-1751813927"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5o4ADF",
            "number": 1142,
            "title": "Unable to specify `emailRedirectTo` for resend of type 'signup'",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nUnlike `auth.signup` which accepts a `option.emailRedirectTo` parameter, `resend` with `{ type: 'signup' }` does not allow this option to be specified.\r\n\r\n## To Reproduce\r\n\r\nN/A\r\n\r\n## Expected behavior\r\n\r\n`auth.resend` accepts a `emailRedirectTo` parameter similarly to `auth.signup`\r\n\r\n## Screenshots\r\n\r\nN/A\r\n\r\n## System information\r\n\r\nN/A\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "lucadalli"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-15T20:32:59Z",
            "closedAt": "2023-07-06T05:20:53Z",
            "url": "https://github.com/supabase/gotrue/issues/1142",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5gsg1S",
                    "body": "Same issue here, when will this be fixed?\n\nWithout this auto login is not working in next.js.",
                    "author": {
                        "login": "Elvincth"
                    },
                    "createdAt": "2023-07-05T18:40:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1142#issuecomment-1622281554"
                },
                {
                    "id": "IC_kwDOEKipmc5gu4Yu",
                    "body": "hey @Elvincth and @lucadalli, thanks for reporting this - we've made the fix in the client library in [this PR](https://github.com/supabase/gotrue-js/pull/724) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-06T03:15:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1142#issuecomment-1622902318"
                },
                {
                    "id": "IC_kwDOEKipmc5gvSKD",
                    "body": "> hey @Elvincth and @lucadalli, thanks for reporting this - we've made the fix in the client library in [this PR](https://github.com/supabase/gotrue-js/pull/724)\r\n\r\nThanks a lot!",
                    "author": {
                        "login": "Elvincth"
                    },
                    "createdAt": "2023-07-06T05:22:02Z",
                    "url": "https://github.com/supabase/gotrue/issues/1142#issuecomment-1623007875"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5o4wbX",
            "number": 1143,
            "title": "Cleanup for session tables doesn't run",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\nWhen a user deletes the browser local storage session, new sessions are created in auth.sessions table for that users even if one already exists.\r\nThis PR #875 was added to cleanup the session tables.\r\n\r\nI can see the cleanup SQL runs on every request. This is the SQL for the session table (there is similar SQL for the other tables) cleanup in this [code](https://github.com/supabase/gotrue/blob/aba0e241b56bd13b0a24e5064a52824fcc1ff208/internal/models/cleanup.go)\r\n\r\n`fmt.Sprintf(\"delete from %q where id in (select id from %q where not_after < now() - interval '72 hours' limit 10 for update skip locked);\", tableSessions, tableSessions)`\r\n\r\nHowever the column not_after allows nulls and has nulls for the session data in the session table and I can't see in the code where it ever gets a value? So the cleanup will never happens?\r\n\r\nThis is where the column not_after was added which also said its not used PR #810 \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Login using Supabase auth\r\n2. Check session is created in auth.sessions table\r\n3. Delete session data from browser local storage. This forces browser logout\r\n4. Login again using same user\r\n5. Check auth.sessions. There is 2 sessions for the same user.\r\n\r\n## Expected behavior\r\n\r\nAll related unused session/token data to be cleaned up/deleted from supabase. This also counts towards database storage.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: Mac\r\n- Browser: Safari\r\n- Version of supabase-js: 2.25.0\r\n- Version of Node.js: 18.16.0\r\n\r\n## Additional context\r\n\r\nI came across this because I was looking into how you could see what active sessions there is. Is there another way to do this?\r\n",
            "author": {
                "login": "jwhits"
            },
            "state": "OPEN",
            "createdAt": "2023-06-16T00:24:26Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1143",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5o-Dp3",
            "number": 1146,
            "title": "Change mail multiple times is not working",
            "body": "# Bug report\r\nSuppose that you want to change your the email, so you have to call an update of the `/user` with the new email. Then suppose that you enter a wrong email and you want to change it. The server returns `message: duplicate key value violates unique constraint \"identities_pkey\", statusCode: 500`\r\n\r\n\r\n## To Reproduce\r\n\r\n1. Create an user using a phone\r\n2. Verify the OTP code\r\n3. Add an email (call the /user) (The email is added in the `email_change` column)\r\n3. Change that email (call /user with another email)\r\n\r\n## Expected behavior\r\n\r\nYou should be able to change the email before confirming the previous one. If you make a mistake adding a wrong email, your user is locked \r\n\r\n\r\n## System information\r\n\r\n- Flutter SDK \r\n\r\n",
            "author": {
                "login": "mirland"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-16T18:09:24Z",
            "closedAt": "2023-06-26T02:45:16Z",
            "url": "https://github.com/supabase/gotrue/issues/1146",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5fwWO8",
                    "body": "I tested and in the latest version is working. Thanks ",
                    "author": {
                        "login": "mirland"
                    },
                    "createdAt": "2023-06-26T02:45:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1146#issuecomment-1606509500"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5pBKEs",
            "number": 1147,
            "title": "Seemingly impossible to handle auth flow yourself",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nMy app lets users Sign in with Steam, which uses OpenID 2.0. I have implemented this in my SvelteKit app with the help of [node-steam-openid](https://github.com/LeeviHalme/node-steam-openid). It simply returns the user's unique `steam_id` once authenticated.\r\n\r\nI need to then link this with Supabase auth, in order to create policies like this example on my `public.users` table:\r\n```\r\n((((auth.jwt() -> 'user_metadata'::text) ->> 'steam_id'::text))::bigint = steam_id)\r\n```\r\n\r\nI want to use SSR sometimes, so I was trying to follow the [SvelteKit auth-helper example](https://github.com/supabase/auth-helpers/tree/main/examples/sveltekit). \r\n\r\nHowever, the bug is that there is seemingly a blind spot for auth that works like this. I can't create a user without supplying an email/password, which clearly does not apply in this case.\r\n\r\nAm I missing something, or is there absolutely no way to use Supabase RLS auth (including letting it handle sessions, refresh tokens etc.,) unless you use email/password, one of the OAuth providers, phone, magic link, SSO, or OTP? I've been really shocked by this after banging my head against the wall for several days.\r\n\r\n\r\n",
            "author": {
                "login": "oliv-tree"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-17T16:17:51Z",
            "closedAt": "2023-07-31T17:24:57Z",
            "url": "https://github.com/supabase/gotrue/issues/1147",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5guwuq",
                    "body": "Hey @oliv-tree, unfortunately, we don't really support creating a user through a custom token (in this case, the `steam_id`). However, as a workaround, you can always just the `POST /admin/users` method to create a user with email + a random password and set `email_confirm = true`. Are you able to get the steam user's email from the API? If you aren't able to get a steam user's email, you can come up with a fake email like `<steam_id>@example.com`. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-06T02:38:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/1147#issuecomment-1622870954"
                },
                {
                    "id": "IC_kwDOEKipmc5i39Ri",
                    "body": "hey @oliv-tree, i'm gonna be closing this PR since it has been stale for a month, but feel free to reopen it if you wish to discuss this further ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:24:57Z",
                    "url": "https://github.com/supabase/gotrue/issues/1147#issuecomment-1658836066"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5pLk8Z",
            "number": 1150,
            "title": "Provider error redirects: Handle redirect URLs with query parameters",
            "body": "# Bug report\r\n\r\n- [X] I confirm this is a bug with Supabase, not with my own application. \r\n- [X] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions). \r\n\r\n## Describe the bug\r\n\r\nWhen an OAuth flow using a provider fails, users are redirected to the redirect URL with the `?error=...&error_description=...` query parameters appended:\r\nhttps://github.com/supabase/gotrue/blob/02cb9273ec759b2ff55bea1f6eedb7b8db7a2880/internal/api/external.go#L557-L566\r\n\r\nHowever, if the redirect URL has a query parameter already, this will result in the appended error detail query parameters being appended to the back of the last query parameter in the URL, which causes the `error` query parameter to effectively \"disappear\".\r\n\r\nEg. `http://REDIRECT_URL/path?existing=query?error=...&description=...`\r\n\r\n## To Reproduce\r\n\r\nProvide a redirect URL containing a query parameter and sign in using an provider which causes an error to be triggered.\r\n\r\n## Expected behavior\r\n\r\nThe redirect URL should be parsed, and if it contains a query parameter, the error details should be appended using `&` instead.\r\n\r\n",
            "author": {
                "login": "bnjmnt4n"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-20T05:02:15Z",
            "closedAt": "2023-09-06T07:46:26Z",
            "url": "https://github.com/supabase/gotrue/issues/1150",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5i383e",
                    "body": "hey @bnjmnt4n, i think this should've been resolved by @J0 's PR: https://github.com/supabase/gotrue/pull/1129",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:24:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1150#issuecomment-1658834398"
                },
                {
                    "id": "IC_kwDOEKipmc5kQJuM",
                    "body": "Hey @kangmingtay, I don't think it has been fixed: there hasn't been any change to the code block I linked to:\r\nhttps://github.com/supabase/gotrue/blob/02cb9273ec759b2ff55bea1f6eedb7b8db7a2880/internal/api/external.go#L557-L566",
                    "author": {
                        "login": "bnjmnt4n"
                    },
                    "createdAt": "2023-08-17T09:36:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1150#issuecomment-1681955724"
                },
                {
                    "id": "IC_kwDOEKipmc5kV4BW",
                    "body": "I'll file a PR for this today. Thanks both for flagging!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-18T07:09:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/1150#issuecomment-1683456086"
                },
                {
                    "id": "IC_kwDOEKipmc5ly46A",
                    "body": "Going to close as it should be resolved by #1224 but feel free to re-open if issue persists",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-09-06T07:46:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/1150#issuecomment-1707839104"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5prZPQ",
            "number": 1155,
            "title": "Docker database fails to initialize on Windows",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nWhen following the Quick Start documentation to run Gotrue via Docker, the database fails to initialize after running `make dev` on Windows. \r\n\r\nThe Gotrue container builds and runs properly but the Postgres container fails to initialize the database and shuts down early on the initial run. \r\nThe log for the Postgres container shows the following message before exiting:\r\n```\r\n/usr/local/bin/docker-entrypoint.sh: line 170: /docker-entrypoint-initdb.d/init.sh: cannot execute: required file not found\r\n```\r\n\r\nAdditionally, if both containers are restarted, the logs from the Gotrue container show that it fails to connect using the admin user that should've been created from the `init_postgres.sh` script.\r\n\r\n## To Reproduce\r\n\r\nClone the repo to a Windows machine and follow the 'If you have docker installed' instructions under Quick Start.\r\n\r\n## Expected behavior\r\n\r\nThe Gotrue and Postgres containers should build, run, and communicate without errors.\r\n\r\n## System information\r\n\r\n- OS: Windows 10\r\n",
            "author": {
                "login": "Sammy-T"
            },
            "state": "CLOSED",
            "createdAt": "2023-06-25T00:37:41Z",
            "closedAt": "2023-06-26T04:39:20Z",
            "url": "https://github.com/supabase/gotrue/issues/1155",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ftrRN",
                    "body": "So it seems that the issue was that the `init_postgres.sh` script was being copied into the container with Windows line endings. When the repository files are switched to use `LF` line endings, it builds and runs as expected.",
                    "author": {
                        "login": "Sammy-T"
                    },
                    "createdAt": "2023-06-25T01:16:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1155#issuecomment-1605809229"
                },
                {
                    "id": "IC_kwDOEKipmc5gBKBj",
                    "body": ":tada: This issue has been resolved in version 2.77.0 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.77.0)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2023-06-28T07:33:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1155#issuecomment-1610915939"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5qDPmg",
            "number": 1160,
            "title": "auth-token cookie exceeds 4096 bytes and is rejected by Chrome",
            "body": "# Bug report\r\n\r\n- [X] I confirm this is a bug with Supabase, not with my own application. \r\n- [X] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nUsing the [PKCE flow](https://supabase.com/docs/guides/auth/server-side-rendering), under certain conditions the auth-token (JWT) returned by Azure causes the total cookie size to exceed the 4096-byte limit, so it is rejected by the browser. This causes the session not to be set and the user is signed out.\r\n\r\nFor me, this only happens in production when adding extra scopes. On localhost, because the cookie name `sb-localhost-auth-token` is less characters, the cookie just fits (4094 bytes).\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n(I realize these steps involve a closed-source deployment. I can develop a minimal, open-source reproduction in the future if needed.)\r\n\r\n1. Go to divvy.day and sign in. Only common, non-sensitive scopes are requested and the PKCE works well.\r\n2. Authorize calendar read access, which adds two scopes.\r\n3. This time, using the same PKCE flow (which works in development) the cookie is too large which results in the user being signed out.\r\n\r\n## Expected behavior\r\n\r\nThe auth-token cookie must be kept within the limit so it is set.\r\n\r\n## Screenshots\r\n\r\n![Screenshot 2023-06-28 at 11 40 40 AM](https://github.com/supabase/gotrue/assets/1422164/07266243-bacc-4fda-a670-c45f1b688beb)\r\n\r\n(Yes, I understand the risk of sharing auth tokens. This is only a fraction of the token.)\r\n\r\n![Screenshot 2023-06-28 at 11 41 27 AM](https://github.com/supabase/gotrue/assets/1422164/7564eebe-8ec3-409a-a5b5-631c93af9518)\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser: Chrome\r\n- Version of supabase-js: 2.26.0\r\n- Version of @supabase/auth-helpers-remix: 0.2.1\r\n- Running on Cloudflare Pages",
            "author": {
                "login": "KrisBraun"
            },
            "state": "OPEN",
            "createdAt": "2023-06-28T15:48:46Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1160",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5mc1SE",
                    "body": "Hey @KrisBraun, did you ever find a solution to this? I'm getting something similar but it only occurs when trying to sign into a single account. All other accounts work",
                    "author": {
                        "login": "yndotdev"
                    },
                    "createdAt": "2023-09-14T06:24:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/1160#issuecomment-1718834308"
                },
                {
                    "id": "IC_kwDOEKipmc5mgMix",
                    "body": "Yes, I found that using a two-character cookie name just barely allows the value to fit.  So:\r\n\r\n```\r\ncreateClient/createServerClient/CreateBrowserClient(\r\n  ...\r\n   {\r\n    cookieOptions: {name: \"au\"},\r\n    ...\r\n   }\r\n)\r\n```",
                    "author": {
                        "login": "KrisBraun"
                    },
                    "createdAt": "2023-09-14T15:51:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/1160#issuecomment-1719716017"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5q2pUL",
            "number": 1172,
            "title": "signInWithIdToken (Google One Tap) requires captcha token if captcha is enabled",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x ] I confirm this is a bug with Supabase, not with my own application. \r\n- [ x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nWhen I use the Google One Tap sign-in method, my website throws an error about a missing captcha token instead of logging me in.\r\nI have captcha enabled on my website .\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Setup a Google Oauth Client\r\n2. Enable Google Auth\r\n3. Enable captcha protection\r\n4. Login with google one tap (signInWithIdToken)\r\n## Expected behavior\r\n\r\nIt logs me in and bypasses captcha like other Oauth requests\r\n",
            "author": {
                "login": "LehuyH"
            },
            "state": "CLOSED",
            "createdAt": "2023-07-07T03:54:16Z",
            "closedAt": "2023-07-10T17:19:31Z",
            "url": "https://github.com/supabase/gotrue/issues/1172",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5hHrJO",
                    "body": ":tada: This issue has been resolved in version 2.82.3 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.82.3)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2023-07-10T17:26:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1172#issuecomment-1629401678"
                },
                {
                    "id": "IC_kwDOEKipmc5hIE5y",
                    "body": "Thank you @kangmingtay! How long does it usually take for these changes to be pushed to the Supabase cloud?",
                    "author": {
                        "login": "LehuyH"
                    },
                    "createdAt": "2023-07-10T18:44:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1172#issuecomment-1629507186"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5rEYlC",
            "number": 1174,
            "title": "Confirmation URL Broken",
            "body": "Hello, my confirmation link({{ .ConfirmationURL }}) used to work without any problems it used to redirect to my app. But out of nowhere it started sending the link to a url1556.....com and when I click on the confirmation button on the email, ex. signup confirmation it just says page can not be found and it doesn't redirect. Is there a way to change the url for the {{ .ConfirmationURL }} in the Email Templates? I couldn't figure out where it gets that url from. \r\n\r\nThank you.",
            "author": {
                "login": "mreky"
            },
            "state": "CLOSED",
            "createdAt": "2023-07-09T04:59:12Z",
            "closedAt": "2023-07-11T17:00:50Z",
            "url": "https://github.com/supabase/gotrue/issues/1174",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5hEYfn",
                    "body": "I have fixed it by changing the url for the button to: \"mycustomdomain/auth/v1/verify?token={{ .TokenHash }}&amp;type=signup&amp;redirect_to=myappredirectlink\" Is this the right way to handle this issue since the {{ .ConfirmationURL }} provided by supabase seems to not work? Also if this is the way then how can I get the api link for resetting password since this is only for signup confirmation?",
                    "author": {
                        "login": "mreky"
                    },
                    "createdAt": "2023-07-09T05:23:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1174#issuecomment-1628538855"
                },
                {
                    "id": "IC_kwDOEKipmc5hEYf2",
                    "body": "Thanks for reporting this @mreky. \r\n\r\nLet me transfer this issue to the gotrue repo for the auth team to take a look. ",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2023-07-10T09:01:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/1174#issuecomment-1628538870"
                },
                {
                    "id": "IC_kwDOEKipmc5hGf2x",
                    "body": "hi @mreky, can you please create a support ticket through https://app.supabase.com/support/new so we can take a look at the issue with your project?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-10T14:29:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/1174#issuecomment-1629093297"
                },
                {
                    "id": "IC_kwDOEKipmc5hGkrA",
                    "body": "@kangmingtay Done, thank you!",
                    "author": {
                        "login": "mreky"
                    },
                    "createdAt": "2023-07-10T14:40:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1174#issuecomment-1629113024"
                },
                {
                    "id": "IC_kwDOEKipmc5hOcNT",
                    "body": "This issue has been resolved, we found out that using SendGrid as a custom SMTP provider in Supabase resulted in the email links sent being overwritten when link tracking is enabled (https://docs.sendgrid.com/ui/account-and-settings/tracking). To ensure that the email links sent by gotrue works, you need to disable link tracking on your Sendgrid account.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-11T17:00:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/1174#issuecomment-1631175507"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5rfNLZ",
            "number": 1181,
            "title": "feat: add plasgate sms provider",
            "body": "## Feature request\r\n\r\nSMS like Twilio in SE Asia countries are expensive and currently we are using PlasGate as local SMS provider. I would to see if it can implement in Supabase. I would like to make PR for that. \r\n\r\n>\u26a0\ufe0f Disclaimer: I'm not working with PlasGate, I just want to implement this for our community and for our project with supabase.\r\n\r\n- Docs: https://documenter.getpostman.com/view/10217000/TVmQevza\r\n- Web: https://www.plasgate.com/\r\n\r\n\r\n",
            "author": {
                "login": "Dominic-Preap"
            },
            "state": "OPEN",
            "createdAt": "2023-07-13T16:11:41Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1181",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5rpfhk",
            "number": 1186,
            "title": "`signInWithOtp()` not working with Twillio if we provide an `Service Sid` instead of phone number.",
            "body": "# Bug report\r\n\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nIt appears that providing a `Twilio Message Service Sid` instead of a phone number as shown in the docs [here](https://supabase.com/docs/guides/auth/phone-login/twilio#steps) will throw an exception from twillio itself. but I think the problem is from gotrue side not Twillio duo to the fact that it working normally when try it using `cURL` like this:\r\n```bash\r\ncurl 'https://verify.twilio.com/v2/Services/[Service Sid]/Verifications' -X POST \\\r\n--data-urlencode 'To=+XXXXXXXXX' \\\r\n--data-urlencode 'Channel=sms' \\\r\n-u [Account Sid]:[Auth Token]\r\n```\r\n\r\n## Error\r\n```bash\r\nAuthException(message: Error sending confirmation sms: The 'From' number [Service Sid] is not a valid phone number, shortcode, or alphanumeric sender ID. More information: https://www.twilio.com/docs/errors/21212, statusCode: 400)\r\n```",
            "author": {
                "login": "hasanmhallak"
            },
            "state": "CLOSED",
            "createdAt": "2023-07-15T12:00:31Z",
            "closedAt": "2023-08-21T08:26:58Z",
            "url": "https://github.com/supabase/gotrue/issues/1186",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5hk68L",
                    "body": "Same issue here. +1",
                    "author": {
                        "login": "azlekov"
                    },
                    "createdAt": "2023-07-16T12:13:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/1186#issuecomment-1637068555"
                },
                {
                    "id": "IC_kwDOEKipmc5hov54",
                    "body": "Hey all,\r\n\r\nThanks for taking the time to file an issue. Quick check - the link below:\r\n> curl 'https://verify.twilio.com/v2/Services/[Service Sid]/Verifications' -X POST  \r\n\r\nlooks like a Twilio Verify link - were y'all hoping to use Twilio Verify with Supabase auth?",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-07-17T12:47:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/1186#issuecomment-1638071928"
                },
                {
                    "id": "IC_kwDOEKipmc5ho1Fc",
                    "body": "hey @J0, I'me not sure what you meant by *hoping to use Twilio Verify with Supabase auth* but I tried this link to try and check if the `Twilio Message Service Sid` will work or not as Twillio docs said. And it works fine.\r\n\r\nGiven the exception I had, I can bet that supabase implementation uses the `SID` in the `From` field. Because when putting a number purchased from Twillio like the video in the docs it works fine.  \r\n\r\n\r\nPurchasing a number from twillio will cost a monthly fee to preserve that number, and in this case using the `Service Sid` is more convenient.\r\n\r\nFor the record I tried to use the verify api by `Vonage` and it works fine.",
                    "author": {
                        "login": "hasanmhallak"
                    },
                    "createdAt": "2023-07-17T12:58:54Z",
                    "url": "https://github.com/supabase/gotrue/issues/1186#issuecomment-1638093148"
                },
                {
                    "id": "IC_kwDOEKipmc5ho6yR",
                    "body": "The SID can be checked if is a messaging or verify  SID. Based on that different APIs should be used.\r\n\r\nReferences:\r\n- https://github.com/nhost/hasura-auth/blob/main/src/routes/signin/passwordless/sms/sms.ts#L103-L127\r\n- https://github.com/nhost/hasura-auth/blob/main/src/utils/twilio.ts#L5",
                    "author": {
                        "login": "azlekov"
                    },
                    "createdAt": "2023-07-17T13:12:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1186#issuecomment-1638116497"
                },
                {
                    "id": "IC_kwDOEKipmc5hpBns",
                    "body": "Hey @hasanmhallak,\r\n\r\nApologies, I re-read the message and realized that it could be potentially be interpreted as curt and even offensive. That was not my intention and I apologize if it came across that way. \r\n\r\nFor context, we have a similar but separate provider, Twilio Verify, which is currently feature flagged and due to go out shortly. To make use of Twilio Verify we'd need to enable a flag on the project to allow the use of the feature. The flag would toggle `signInWithOtp` to use a separate API endpoint specific to Verify SIDs.  We'd previously release and retracted the documentation so wanted to check if y'all were part of the set of users who had seen the documentation and were trying to use the feature. I could have explained myself better - sorry about that.\r\n\r\nLet me confirm that the endpoint is working with a Message Service ID and I'll also check if we're ready to unflag the Twilio Verify endpoint shortly after.\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-07-17T13:27:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/1186#issuecomment-1638144492"
                },
                {
                    "id": "IC_kwDOEKipmc5hpIeP",
                    "body": "no need to be, really. I did't take it as an offensive or anything, it's just I thought maybe I'm using this feature in the wrong way, cause you know there is a message and a verify api.  \r\n\r\nI indeed use `signInWithOtp` and here is the code from the client side written in dart.\r\n```dart \r\n Future<Either<Failure, String>> createAccoutWithPhone(\r\n    String phoneNumber,\r\n  ) async {\r\n    try {\r\n      await Supabase.instance.client.auth.signInWithOtp(\r\n        phone: phoneNumber,\r\n      );\r\n      return right(phoneNumber);\r\n    } on AuthException catch (e) {\r\n      print(e);\r\n      late int code;\r\n      if (e.statusCode == '422') {\r\n        code = ErrorType.invalidPhoneNumber.errorCode;\r\n      } else {\r\n        code = ErrorType.unknownErrorCodeFromServer.errorCode;\r\n      }\r\n      return left(\r\n        Failure.server(\r\n          code: code,\r\n          message: e.message,\r\n          stackTrace: StackTrace.current,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n```\r\nWhen I switched to use Vonage I also used this verify api and it works fine:\r\n```bash\r\ncurl -X GET \"https://api.nexmo.com/verify/json\r\n```\r\nHope this might be more useful to you.",
                    "author": {
                        "login": "hasanmhallak"
                    },
                    "createdAt": "2023-07-17T13:42:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/1186#issuecomment-1638172559"
                },
                {
                    "id": "IC_kwDOEKipmc5kfIZU",
                    "body": "Hey all,\r\n\r\nThanks for your patience. Going to close this issue since we've since rolled out Twilio Verify and it should be possible to use the Twilio Verify provider with a Verification Service ID now. Do let us know if there are any further issues using Twilio with a Message Service ID or Twilio Verify with a Verification Service ID and we'll re-open issue.\r\n\r\nThanks everyone!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-21T08:26:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/1186#issuecomment-1685882452"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5sGO2C",
            "number": 1191,
            "title": "Yahoo Auth Provider",
            "body": "# Feature\r\n\r\n## Describe the Feature\r\nImplementing Yahoo Auth Provider\r\n\r\n## Additional context\r\n\r\nThis aims to implement YAHOO as an authentication provider",
            "author": {
                "login": "Mutondi"
            },
            "state": "CLOSED",
            "createdAt": "2023-07-20T09:36:51Z",
            "closedAt": "2023-07-31T17:20:04Z",
            "url": "https://github.com/supabase/gotrue/issues/1191",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5i36CO",
                    "body": "closing in view of adding this to the megathread: https://github.com/supabase/gotrue/issues/451#issuecomment-1658821687",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:20:04Z",
                    "url": "https://github.com/supabase/gotrue/issues/1191#issuecomment-1658822798"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5sN4us",
            "number": 1194,
            "title": "Undocumented required configuration \"API_EXTERNAL_URL\"",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nIt seems like using GoTrue with the minimal configuration is not possible. While performing e.g. a request to login a user the following message is logged:\r\n`{\"component\":\"api\",\"level\":\"warning\",\"method\":\"POST\",\"msg\":\"parse \\\"\\\": empty url\",\"path\":\"/token\",\"referer\":\"$REFERRER\",\"remote_addr\":\"$IP\",\"request_url\":\"\",\"time\":\"2023-07-21T09:31:17Z\",\"timestamp\":\"2023-07-21T09:31:17Z\"}` and the request returns with a http 500.\r\n\r\nThe reason for this behaviour is that API_EXTERNAL_URL is not set but seems to be necessary (although it is allowed to be empty according to internal/conf/configuration.go )\r\n\r\nFurthermore the readme does not refer to this parameter at all or mark this parameter as required. \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Clone the repository\r\n2. Rename example.docker.env to .env.docker\r\n3. Run docker-compose -f docker-compose-dev.yml up and wait for the application to start\r\n4. Perform a request to POST http://localhost:9999/token?grant_type=password with any email and password as payload\r\n5. See error\r\n\r\n## Expected behavior\r\n\r\n- There is no error, as API_EXTERNAL_URL is a required configuration (thus also it would need to be checked why this might be empty in tests...)\r\n- API_EXTERNAL_URL is referenced in the documentation\r\n- API_EXTERNAL_URL is part of all example configurations\r\n\r\n## System information\r\n\r\n- OS: Windows WSL2 (Ubuntu 22.04.2)\r\n- Version of gotrue: 2.84.0\r\n",
            "author": {
                "login": "szczepad"
            },
            "state": "CLOSED",
            "createdAt": "2023-07-21T10:37:01Z",
            "closedAt": "2023-08-09T21:22:30Z",
            "url": "https://github.com/supabase/gotrue/issues/1194",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5iuFK9",
                    "body": "On a similar note there are more things which I noticed while setting Gotrue up.\r\n- Additionally to the parameters which are described in the readme as required for E-Mail signup at least the parameter GOTRUE_URLPATHS_CONFIRMATION needs to be set. (Most likely also *_INVITE , *_RECOVERY and *_EMAIL_CHANGE) \r\n- The parameters mentioned in the point above currently default to \"/\" which does not lead to a working setup. For Gotrue as standalone application the default seems to be \"/verify\" which does not seem to be mentioned anywhere.\r\n- The parameters under the mailer configuration do not use the GOTRUE_* prefix in the readme. I didn't check whether this prefix is required here, but at least in the example files the prefix is set. IMO the consistency could be improved here to avoid errors in the future.\r\n\r\nI guess these points depend on whether Gotrue is planned to be used as standalone application without the full supabase stack. If that's the case give me a sign and I might attempt to improve the points mentioned in this issue :) ",
                    "author": {
                        "login": "szczepad"
                    },
                    "createdAt": "2023-07-28T19:59:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1194#issuecomment-1656246973"
                },
                {
                    "id": "IC_kwDOEKipmc5i3yPY",
                    "body": "Hey @szczepad, thanks for pointing out these issues! wrt to your question:\r\n\r\n>  Gotrue is planned to be used as standalone application without the full supabase stack\r\n\r\nYes! gotrue can be used as a standalone application and you can self-host it without supabase. We'd welcome any help with improving the docs around this. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:08:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/1194#issuecomment-1658790872"
                },
                {
                    "id": "IC_kwDOEKipmc5jNusV",
                    "body": "Hey @kangmingtay ! \r\nThanks for the clarification. I've created a PR for the mentioned topics. Feel free to comment. :)\r\n\r\nHowever I didn't add the GOTRUE_ prefix to the values in the documentation as those do not seem to be set explicitely as envvars in configuration.go and I'm not sure whether this prefix might break settings in this scenario as there seems to be some implicit stuff going on in the envconfig lib. (See https://github.com/kelseyhightower/envconfig/issues/148 ) ",
                    "author": {
                        "login": "szczepad"
                    },
                    "createdAt": "2023-08-03T19:40:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1194#issuecomment-1664543509"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5s_pmB",
            "number": 1201,
            "title": "Auth.SignUp forces email or phone",
            "body": "I want to create a user to have both email and phone provider auth and it is proving rather difficult to get past the following implemented  [goTrue-dart line](https://github.com/supabase/supabase-flutter/blob/main/packages/gotrue/lib/src/gotrue_client.dart).\r\n\r\n149 - assert((email != null && phone == null) || (email == null && phone != null),\r\n150 - 'You must provide either an email or phone number');\r\n\r\nThe ability to create a user with both email and phone parameters makes things a lot easier when verifying both before future authentications.\r\n\r\nIs there a reason for this implementation? Can it be tweaked for the condition where both phone and email providers are being used?\r\n\r\n",
            "author": {
                "login": "andrhubb"
            },
            "state": "CLOSED",
            "createdAt": "2023-07-16T16:44:39Z",
            "closedAt": "2023-07-31T17:22:29Z",
            "url": "https://github.com/supabase/gotrue/issues/1201",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5i0QPg",
                    "body": "Let me transfer this issue to the Gotrue repo to see what the auth team thinks about this question.",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2023-07-31T07:58:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/1201#issuecomment-1657865184"
                },
                {
                    "id": "IC_kwDOEKipmc5i37Ob",
                    "body": "@andrhubb you can always call signUp with either email / phone first and then call the updateUser method subsequently, there are quite a few edge cases around allowing one to signUp with both email and phone which aren't trivial to tackle.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:21:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1201#issuecomment-1658827675"
                },
                {
                    "id": "IC_kwDOEKipmc5i37z4",
                    "body": "i'm gonna close this issue for now since we don't plan to work on this but feel free to reopen it if i've misunderstood the issue, thanks!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-07-31T17:22:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1201#issuecomment-1658830072"
                },
                {
                    "id": "IC_kwDOEKipmc5i3-MU",
                    "body": "Thanks yeah I figured it out. signUp with phone, verify, updateUser and verify. Although you need to adapt the modify email template.\r\n\r\nGood to know\r\n\r\nKind regards,\r\nAndrew\r\n\r\nOn Mon, 31 Jul 2023 at 18:22, Kang Ming ***@***.***> wrote:\r\n\r\n> i'm gonna close this issue for now since we don't plan to work on this but\r\n> feel free to reopen it if i've misunderstood the issue, thanks!\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/supabase/gotrue/issues/1201#issuecomment-1658830072>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AGRZ2VZNAUS3E4FUH2K6OCDXS7SWBANCNFSM6AAAAAA253VH5A>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
                    "author": {
                        "login": "andrhubb"
                    },
                    "createdAt": "2023-07-31T17:26:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1201#issuecomment-1658839828"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5tIYjB",
            "number": 1205,
            "title": "[BUG]: Supabase does not work with React Native Google signin",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\nSupabase describes in their docs for google signin on native:\r\n```\r\nPlease take a look at these open-source projects which may help you obtain an ID token directly from the OS:\r\n   [react-native-google-signin/google-signin](https://github.com/react-native-google-signin/google-signin).\r\n```\r\n\r\nHowever this integration is not currently possible. `react-native-google-signin/google-signin` does not provide the raw nonce value that Supabase expects to be present. As of right now I cannot find any way of implementing google login with react native and supabase.\r\n\r\nSee linked issue [here](https://github.com/react-native-google-signin/google-signin/issues/1176)\r\n\r\n## To Reproduce\r\n\r\n1. Create a Supabase project with Google signin provider\r\n2. Create a React Native project\r\n3. Install `react-native-google-signin/google-signin` and `supabase`\r\n4. Try to integrate them.\r\n",
            "author": {
                "login": "Eirmas"
            },
            "state": "OPEN",
            "createdAt": "2023-07-21T07:57:14Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1205",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5i8XfP",
                    "body": "I can confirm; getting error 'AuthApiError: Passed nonce and nonce in id_token should either both exist or not.' when using signInWithIdToken() ",
                    "author": {
                        "login": "timdobranski"
                    },
                    "createdAt": "2023-07-21T22:02:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1659992015"
                },
                {
                    "id": "IC_kwDOEKipmc5i8Xfb",
                    "body": "Yes, this is a pretty major blocker for us as well, has anyone found a workaround?  I'm using this [google auth capacitor ](https://github.com/CodetrixStudio/CapacitorGoogleAuth)library, and we also do not have access to the raw nonce.",
                    "author": {
                        "login": "nick-barth"
                    },
                    "createdAt": "2023-07-26T15:12:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1659992027"
                },
                {
                    "id": "IC_kwDOEKipmc5i8Xfq",
                    "body": "I'm experiencing the same issue. I followed all the steps described in this post: https://supabase.com/blog/native-mobile-auth\r\n\r\nUsing:\r\n- For Google sign-in: https://github.com/react-native-google-signin/google-signin\r\n- For Apple sign-in: https://github.com/invertase/react-native-apple-authentication\r\n\r\nFor both auth providers I get the same error: \"Passed nonce and nonce in id_token should either both exist or not.\"\r\n\r\nNeither Apple nor Google sign-in works. Any help would be much appreciated.",
                    "author": {
                        "login": "Ngineer101"
                    },
                    "createdAt": "2023-07-31T20:27:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1659992042"
                },
                {
                    "id": "IC_kwDOEKipmc5i8Xfw",
                    "body": "> I'm experiencing the same issue. I followed all the steps described in this post: https://supabase.com/blog/native-mobile-auth\r\n> \r\n> Using:\r\n> \r\n> * For Google sign-in: https://github.com/react-native-google-signin/google-signin\r\n> * For Apple sign-in: https://github.com/invertase/react-native-apple-authentication\r\n> \r\n> For both auth providers I get the same error: \"Passed nonce and nonce in id_token should either both exist or not.\"\r\n> \r\n> Neither Apple nor Google sign-in works. Any help would be much appreciated.\r\n\r\n@Ngineer101 it appears that your library allows you to create the raw nonce, so after you've received a idToken you should be able to pass Supabase the raw nonce and it should match.",
                    "author": {
                        "login": "nick-barth"
                    },
                    "createdAt": "2023-08-01T09:01:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1659992048"
                },
                {
                    "id": "IC_kwDOEKipmc5i8Xf7",
                    "body": "Hey everyone, I chatted with @nick-barth through our support channel and was wondering about the following:\r\n\r\n> Seems like the issue here is that after completing the authentication with google, google returns an id token that contains a nonce in it. Based on what I've gathered from this thread, it seems like this nonce is being set by google and you don't have access to the raw value? \r\n> Is it possible for you to send us an example of the id token issued by google too? Also, it would be great if you can point us to the relevant google auth API endpoint that capacitor uses under the hood and we can investigate further.\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-08-01T10:04:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1659992059"
                },
                {
                    "id": "IC_kwDOEKipmc5i830l",
                    "body": "@kangmingtay Looks like my capacitor plugin is using GoogleSignIn-OS under the hood, which has [this issue](https://github.com/google/GoogleSignIn-iOS/issues/135), which also links this not-implemented [PR](https://github.com/google/GoogleSignIn-iOS/pull/244).  If I'm interpreting these correctly, the Nonce values are created by AppAuth, but as of yet, there is no way in the GoogleSignIn-OS library to supply the rawNonce.  The react-native folks using React-Native-Google-Signin seem to have an identical [open issue](https://github.com/react-native-google-signin/google-signin/issues/1176).  Both have been known issues for over a year.  \r\n\r\nSo from where I'm standing, the best solution would be to allow nonce passing in the underlying libraries.  The quickest solution would be loosen the requirement in Supabase for identical nonces, but I'm not familiar enough with the risk of replay attacks to make that decision.",
                    "author": {
                        "login": "nick-barth"
                    },
                    "createdAt": "2023-08-01T11:27:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1660124453"
                },
                {
                    "id": "IC_kwDOEKipmc5jASNM",
                    "body": "> > I'm experiencing the same issue. I followed all the steps described in this post: https://supabase.com/blog/native-mobile-auth\r\n> > Using:\r\n> > \r\n> > * For Google sign-in: https://github.com/react-native-google-signin/google-signin\r\n> > * For Apple sign-in: https://github.com/invertase/react-native-apple-authentication\r\n> > \r\n> > For both auth providers I get the same error: \"Passed nonce and nonce in id_token should either both exist or not.\"\r\n> > Neither Apple nor Google sign-in works. Any help would be much appreciated.\r\n> \r\n> @Ngineer101 it appears that your library allows you to create the raw nonce, so after you've received a idToken you should be able to pass Supabase the raw nonce and it should match.\r\n\r\n@nick-barth do you have an example of how I can do this? I searched the Google sign-in docs and the React Native Google sign-in library docs (https://github.com/react-native-google-signin/google-signin) and I can't find an example of passing the raw nonce to Google when initiating the sign-in process. If this can be done I assume the issue would be solved, but I can't find how to do it.",
                    "author": {
                        "login": "Ngineer101"
                    },
                    "createdAt": "2023-08-01T20:13:59Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1661018956"
                },
                {
                    "id": "IC_kwDOEKipmc5jBwbD",
                    "body": "@nick-barth unfortunately the nonce is necessary to avoid replay attacks here as highlighted in this thread: https://github.com/google/GoogleSignIn-iOS/issues/135\r\n\r\nIt would be impossible to tell whether the id token was sent by the same client that requested for it without a nonce.\r\n\r\nThis issue is blocked on this PR getting approved: https://github.com/google/GoogleSignIn-iOS/pull/244",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-08-02T02:43:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1661404867"
                },
                {
                    "id": "IC_kwDOEKipmc5jXcrG",
                    "body": "This blog post makes it sound like this feature was implemented: https://supabase.com/blog/native-mobile-auth\n\nThat said I'm seeing the same nonce error. Curious how this could have ever worked as described in the post.",
                    "author": {
                        "login": "johnryan"
                    },
                    "createdAt": "2023-08-07T02:22:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1667091142"
                },
                {
                    "id": "IC_kwDOEKipmc5jXk9C",
                    "body": "@johnryan You can use the [AppAuth plugin](https://github.com/openid/AppAuth-iOS) directly to make native auth work. ",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2023-08-07T03:18:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1667125058"
                },
                {
                    "id": "IC_kwDOEKipmc5jcZxb",
                    "body": "> @johnryan You can use the [AppAuth plugin](https://github.com/openid/AppAuth-iOS) directly to make native auth work.\r\n\r\n@dshukertjr That's helpful, but that post specifically calls out using `react-native-google-signin` to get this to work with react native (and is what I tried to use per the recommendation). Since that lib uses `GoogleSignIn` under the hood it's hard to understand how that could work. Maybe that blog post should be updated to remove that rec.",
                    "author": {
                        "login": "johnryan"
                    },
                    "createdAt": "2023-08-07T18:29:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1668389979"
                },
                {
                    "id": "IC_kwDOEKipmc5nK_Fw",
                    "body": "hello, react native google sign in maintainer here.\r\n\r\nyou can use workarounds for both Android and iOS: https://github.com/react-native-google-signin/google-signin/issues/1176#issuecomment-1730925708\r\n\r\nIndeed, if you want to use the official SDK, this is blocked on Google's side here https://github.com/google/GoogleSignIn-iOS/pull/244\r\n\r\nI'm attempting to unblock that here https://github.com/openid/AppAuth-iOS/pull/788 and then get back to the PR above\r\n\r\n",
                    "author": {
                        "login": "vonovak"
                    },
                    "createdAt": "2023-09-22T07:24:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1730933104"
                },
                {
                    "id": "IC_kwDOEKipmc5nQqS_",
                    "body": "Facing the same issue, would be great if this resolved soon! Thanks for all the work you do @vonovak & Supabase team\ud83d\ude4f",
                    "author": {
                        "login": "sonipranjal"
                    },
                    "createdAt": "2023-09-23T22:14:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1732420799"
                },
                {
                    "id": "IC_kwDOEKipmc5nRVC0",
                    "body": "\r\nHi everyone, I got it working by using the browser\r\n\r\nMade a gist for everyone who is struggling to solve this:\r\n\r\nhttps://gist.github.com/sonipranjal/f4a66f35924ede2e2f4a8d5b66199857\r\n\r\n",
                    "author": {
                        "login": "sonipranjal"
                    },
                    "createdAt": "2023-09-24T15:21:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1732595892"
                },
                {
                    "id": "IC_kwDOEKipmc5nu9I-",
                    "body": "> I'm experiencing the same issue. I followed all the steps described in this post: https://supabase.com/blog/native-mobile-auth\r\n> \r\n> Using:\r\n> \r\n> * For Google sign-in: https://github.com/react-native-google-signin/google-signin\r\n> * For Apple sign-in: https://github.com/invertase/react-native-apple-authentication\r\n> \r\n> For both auth providers I get the same error: \"Passed nonce and nonce in id_token should either both exist or not.\"\r\n> \r\n> Neither Apple nor Google sign-in works. Any help would be much appreciated.\r\n\r\n\r\nI confirm that with Apple sign-in: https://github.com/invertase/react-native-apple-it is necessary to ensure that the initial step has been completed. https://github.com/invertase/react-native-apple-authentication/blob/main/docs/INITIAL_SETUP.md\r\n\r\nUnfortunately, I have not succeeded with Google.\r\n\r\n",
                    "author": {
                        "login": "wootsbot"
                    },
                    "createdAt": "2023-09-29T06:13:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1740362302"
                },
                {
                    "id": "IC_kwDOEKipmc5nvBG0",
                    "body": "> This blog post makes it sound like this feature was implemented: https://supabase.com/blog/native-mobile-auth\r\n> \r\n> That said I'm seeing the same nonce error. Curious how this could have ever worked as described in the post.\r\n\r\nIt seems that everything points to using the version provided to sponsors.",
                    "author": {
                        "login": "wootsbot"
                    },
                    "createdAt": "2023-09-29T06:34:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1740378548"
                },
                {
                    "id": "IC_kwDOEKipmc5nvX13",
                    "body": "EDIT: I didn't see your last comment for Apple. \r\n\r\n@wootsbot `expo-apple-authentication` works well for Apple Id Token.\r\n```\r\nimport * as AppleAuthentication from 'expo-apple-authentication'\r\n...\r\n  async function authWithApple() {\r\n    try {\r\n      const credential = await AppleAuthentication.signInAsync({\r\n        requestedScopes: [\r\n          AppleAuthentication.AppleAuthenticationScope.FULL_NAME,\r\n          AppleAuthentication.AppleAuthenticationScope.EMAIL,\r\n        ],\r\n      })\r\n      console.log(credential.user)\r\n      const authResult = await supabase!.auth.signInWithIdToken({\r\n        provider: 'apple',\r\n        token: credential.identityToken!,\r\n      })\r\n      console.log(authResult)\r\n      // signed in\r\n    } catch (err) {\r\n      // @ts-expect-error err unknown\r\n      if (err.code === 'ERR_REQUEST_CANCELED') {\r\n        // handle that the user canceled the sign-in flow\r\n      } else {\r\n        // handle other errors\r\n      }\r\n    }\r\n  }\r\n...\r\n\r\n          <AppleAuthentication.AppleAuthenticationButton\r\n            buttonType={AppleAuthentication.AppleAuthenticationButtonType.SIGN_IN}\r\n            buttonStyle={AppleAuthentication.AppleAuthenticationButtonStyle.WHITE_OUTLINE}\r\n            cornerRadius={8}\r\n            style={{ width: '100%', height: 45 }}\r\n            onPress={authWithApple}\r\n          />\r\n\r\n```",
                    "author": {
                        "login": "mrkpatchaa"
                    },
                    "createdAt": "2023-09-29T07:58:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1205#issuecomment-1740471671"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5taKLX",
            "number": 1209,
            "title": "Spotify changed their \"avatar\" implementation and it's returning a really small image by default now",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nI noticed 1-2 weeks ago that the profile images for new users with Spotify Auth are small (64x64), whereas they used to be (300x300). After further investigation, it looks like Spotify's array of `images` no longer sorts images in reverse size order, so images[0].url is the smaller image now. This looks bad in most avatar implementations.\r\n\r\n## Expected behavior\r\n\r\nThe avatars should be sorted by size (`Width` or `Height`) and we should return the `Url` of the largest one.\r\n\r\n## Additional context\r\n\r\nSpotify docs here: https://developer.spotify.com/documentation/web-api/reference/get-current-users-profile\r\n\r\nWhere to fix: https://github.com/supabase/gotrue/blob/5caacc1f81ff20f8f09f4598b510c767e589a1c5/internal/api/provider/spotify.go#L83C1-L85C3\r\n\r\nThis seems like a simple fix but I've never written go before. I may attempt it!\r\n",
            "author": {
                "login": "william-matz"
            },
            "state": "OPEN",
            "createdAt": "2023-08-03T19:00:19Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1209",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5jNgj2",
                    "body": "ChatGPT is guiding me towards something like this:\r\n\r\n```go\r\nvar avatarURL string\r\n\r\nif len(u.Avatars) >= 1 {\r\n\tlargestAvatar := u.Avatars[0]\r\n\t\r\n\tfor _, avatar := range u.Avatars {\r\n\t\tif avatar.Height * avatar.Width > largestAvatar.Height * largestAvatar.Width {\r\n\t\t\tlargestAvatar = avatar\r\n\t\t}\r\n\t}\r\n\t\r\n\tavatarURL = largestAvatar.Url\r\n}\r\n```",
                    "author": {
                        "login": "william-matz"
                    },
                    "createdAt": "2023-08-03T19:04:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1209#issuecomment-1664485622"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5txctZ",
            "number": 1214,
            "title": "Magic Links are invalidated by corporate link scanning software",
            "body": "# Bug report\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nWe have a customer using the Barracuda SafeLinks platform, and apparently Office 365 offers something similar, which scans all links before opening them via a wrapper link it puts on all incoming email. This invalidates Magic Links as the link scanning platform triggers expiration when the user opens the link.\r\n\r\nNext Auth has a similar scenario and seems to recommend responding to HEAD requests with a 200 without invalidating the link as a fix. See this https://next-auth.js.org/tutorials/avoid-corporate-link-checking-email-provider for more.\r\n\r\n## To Reproduce\r\n\r\nThis is a bit difficult as you likely have to configure MS Defender on Office 365 at the least to test a relevant scenario. \r\n\r\n## Expected behavior\r\n\r\nIdeally the user doesn't see a link expired error and is able to use the link successfully.\r\n\r\n## Additional context\r\nFor those with access to IT security policy the organization can disable scanning of supabase links via https://learn.microsoft.com/en-us/microsoft-365/security/office-365-security/safe-links-about?view=o365-worldwide#do-not-rewrite-the-following-urls-lists-in-safe-links-policies for the MS platform at least\r\n",
            "author": {
                "login": "kav"
            },
            "state": "OPEN",
            "createdAt": "2023-08-08T16:55:33Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1214",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5qP1iY",
                    "body": "That's not a bug. I do find the solution helpful, but it still does not make this a bug IMO but a Feature Request.\r\nThe given solution however would still not solve other Crawlers that do visit the page without just a HEAD request.\r\n\r\nIn either case you can just build your own Magic Link system to solve it. Via `generateLink` you get the token you need to call `verifyOTP` and hence log in the user, so there's no specific need to use the Supabase links.\r\n\r\n",
                    "author": {
                        "login": "activenode"
                    },
                    "createdAt": "2023-10-27T08:46:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1214#issuecomment-1782536344"
                },
                {
                    "id": "IC_kwDOEKipmc5shd_W",
                    "body": "Hi,\r\n\r\nHTTP safe calls  (get/head)should be idempotent, ie. the effect on the server (login in) of a single request is the same as the effect of making several identical requests.\r\n\r\nArguably, a \"single use\" link (http get) is a bug, it should be implemented by requiring a second action (eg a click or js) on the page of that url.\r\n\r\nBy allowing multiple http head calls, this could be seen as fixing a bug (http head would be indempotent) and solve the problem for users of office 365\r\n\r\nWould you see any potential issues to changing the way head is handled? it feels safe, but I might be missing something.\r\n\r\nI'm aware it would \"only\" be fixing office 365 crawler and not others, but given the market share, it would solve the pain for a lot of users AND the odds of other crawlers following how 365 works (head not get) are rather high.\r\n\r\n",
                    "author": {
                        "login": "tttp"
                    },
                    "createdAt": "2023-11-21T11:11:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1214#issuecomment-1820712918"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5t8abo",
            "number": 1215,
            "title": "Login with linkedin not working `Unable to exchange external code`",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nLinked with login not working.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. add secrets to initialize  client\r\n2.  Run the application and click on login with linkedin\r\n\r\n\r\n## Expected behavior\r\n\r\nShould print detail of user on console.\r\n\r\n\r\n\r\n## System information\r\n\r\n- OS:Mac Os\r\n- Browser  Chrome\r\n\r\n\r\n## Additional context\r\n\r\nI have used supabase client \"@supabase/supabase-js\": \"^2.31.0\", as a dependency and tried to login with linkedin. but after completing login process it will redirect me again in login screen. after debugging  found error=server_error&error_description=Unable+to+exchange+external+code%3A+AQQhjojAPKLH_qXa7lER3WXaXuC2YJw4oFDNNWDvjHBe3G0chE68H4ru5Z7Bo0P5qDg7WkY-XJcXOBJDYctFydyGiXvGT54_WhNTL00Mw7l1VIzFUtmeLhdfePPnFsL_bQujzz0cULxyNLn0ISihBmAJSFinab7ZK2VGD3tCuFlVx2vlzIaIZCuL5f78b10OW33XELo58mKBRcVRtPY this redirection. \r\n\r\nI saw others issue on github. there is one or two issue related to  linkedin login. one is due to invalid secretkey/ space in secret key and another when there is no profile image on linkedin which was already solved. I checked the key and secret twice and also i have image on my linkedin profile.\r\n\r\n\r\nAppears this is a gotrue error when trying to grab the oauth code from linked in.\r\n\r\nhttps://github.com/supabase/gotrue/blob/master/internal/api/external_oauth.go#L80\r\n\r\nDiscord fourm: https://discord.com/channels/839993398554656828/1137991384616419338\r\nLinkedin login simple implementation with react: git@github.com:aryanhimself/linkedinlogin-supabase.git\r\n",
            "author": {
                "login": "aryanhimself"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-10T07:07:43Z",
            "closedAt": "2023-08-21T09:19:17Z",
            "url": "https://github.com/supabase/gotrue/issues/1215",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5kfbbu",
                    "body": "Duplicate of #1225 ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-21T09:19:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/1215#issuecomment-1685960430"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5uFK9p",
            "number": 1216,
            "title": "\"unauthorized_scope_error\" for LinkedIn - Current LinkedIn OAuth method is deprecated: migrate to OIDC ",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nWhen attempting to log in with LinkedIn on a new Supabase project, I get this error:\r\n\r\n![image](https://github.com/supabase/gotrue/assets/13189762/6bf5477c-c2aa-42a9-b42e-d810ff9cc590)\r\n \r\nHere is the URL of the error page:\r\n\r\n```\r\nhttps://api.linkedin.com/oauth/v2/authorization?client_id=78l5s566gf425m&redirect_to=http%3A%2F%2Flocalhost%3A8080%2Fapp%2F%3Ferror%3Dunauthorized_scope_error%26error_description%3DScope%2B%2526quot%253Br_emailaddress%2526quot%253B%2Bis%2Bnot%2Bauthorized%2Bfor%2Byour%2Bapplication%2F&redirect_uri=https%3A%2F%2Fdbtdfqgdpjdmqjuozvfn.supabase.co%2Fauth%2Fv1%2Fcallback&response_type=code&scope=r_emailaddress+r_liteprofile&state=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2OTE3NjAxNTIsInNpdGVfdXJsIjoiaHR0cHM6Ly9taW5kZnVsZGF0YWFpLmNvbS9hcHAiLCJpZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsImZ1bmN0aW9uX2hvb2tzIjpudWxsLCJwcm92aWRlciI6ImxpbmtlZGluIiwicmVmZXJyZXIiOiJodHRwczovL21pbmRmdWxkYXRhYWkuY29tL2FwcCIsImZsb3dfc3RhdGVfaWQiOiIifQ.HzKX4BvpLoNIycBomDeJPDohliL2ANnDZkR40hO2dHo\r\n```\r\n\r\nThere does seem to be an error embedded in the URL: 'unauthorized_scope_error: scope \"r_emailaddress\" is not authorized for your application.'\r\n\r\nAfter some digging, I found that `r_emailaddress` is the scope you get through the now deprecated \"Sign In with LinkedIn\" product. From https://www.linkedin.com/pulse/how-get-signin-linkedin-work-taric-andrade/, \r\n![image](https://github.com/supabase/gotrue/assets/13189762/277892c0-e86b-4b6b-9aeb-f5de44d8f9f3)\r\n\r\nHowever, as **Sign In with LinkedIn has been deprecated since Aug 1 2023,** ([deprecation notice](https://learn.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/sign-in-with-linkedin)), this option is no longer available to new app developers.\r\n\r\nMy app has the following products enabled with the following scopes:\r\n\r\n![image](https://github.com/supabase/gotrue/assets/13189762/380f331e-885b-4310-9688-557dc3304914)\r\n\r\n![image](https://github.com/supabase/gotrue/assets/13189762/34c42219-0565-472e-970d-4f3aa83607ba)\r\n\r\n## To Reproduce\r\n\r\n1. Follow the steps for LinkedIn Auth from [Log In with LinkedIn](https://supabase.com/docs/guides/auth/social-login/auth-linkedin) with a new LinkedIn app\r\n2. Request the scopes for \"Sign In With LinkedIn using OpenID Connect\"\r\n3. Attempt to log in with LinkedIn \r\n4. See error\r\n\r\n## Expected behavior\r\n\r\nWe should be able to log in with the scopes available to app developers. \r\n\r\n## Screenshots\r\n\r\nSee Additional Context.\r\n\r\n## System information\r\n\r\n- OS: [e.g. macOS, Windows]\r\n- Browser (if applies) [e.g. chrome, safari]\r\n- Version of supabase-js: [e.g. 6.0.2]\r\n- Version of Node.js: [e.g. 10.10.0]\r\n\r\n## Additional context\r\n\r\nThe code to login was pulled from the [Log In with LinkedIn](https://supabase.com/docs/guides/auth/social-login/auth-linkedin) docs:\r\n```ts\r\n  const { data, error } = await supabaseClient.auth.signInWithOAuth({\r\n    provider,\r\n  });\r\n```\r\n\r\nSupabase seems to automatically attempt to request these scopes even though they are now impossible to get. https://github.com/supabase/gotrue/blob/4ff1fe058cfab418c445808004091e89dcf87124/internal/api/provider/linkedin.go#L78 \r\n\r\n\r\n",
            "author": {
                "login": "jack-michaud"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-11T13:42:17Z",
            "closedAt": "2023-10-19T14:19:28Z",
            "url": "https://github.com/supabase/gotrue/issues/1216",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5j7Q02",
                    "body": "I'm having the same issue",
                    "author": {
                        "login": "juliabower"
                    },
                    "createdAt": "2023-08-13T22:26:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1676479798"
                },
                {
                    "id": "IC_kwDOEKipmc5j8iuD",
                    "body": "Generally switching to OIDC shouldn't be too hard. Some community help would be appreciated as the team won't be able to pick this up too quickly.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-08-14T07:28:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1676815235"
                },
                {
                    "id": "IC_kwDOEKipmc5kF2_r",
                    "body": "We have run into the same issue, r_emailaddress has been changed to email for us. Needs to be checked out more though.",
                    "author": {
                        "login": "Cpt0Teemo"
                    },
                    "createdAt": "2023-08-15T16:29:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1679257579"
                },
                {
                    "id": "IC_kwDOEKipmc5kH8tN",
                    "body": "I also run to the issue, when creating a new app in Linkedln, the Oauth no longer work, get error like Uncaught ReferenceError: require is not defined and the api.linkdln.com/li/track 404 not found.\r\n",
                    "author": {
                        "login": "ShueiYang"
                    },
                    "createdAt": "2023-08-16T00:40:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1679805261"
                },
                {
                    "id": "IC_kwDOEKipmc5kKQAl",
                    "body": "I've tried seeing what happens if we modify just the scopes added by gotrue to see if it was just a quick fix to change the scopes \"r_emailaddress\" and \"r_liteprofile\" to openid, profile and email. This sends us to the correct linkedin login page with the successful consent page before successfully redirecting us to the correct supabase callback. The callback is called with the query parameters \"code\" and \"state\".\r\nSadly supabase then redirects to our website with the following error:\r\n`/?error=server_error&error_description=Error+getting+user+email+from+external+provider`\r\nI am unsure on whether supabase was expecting an email in the JWT giving in \"state\", which does not have one (unsure if it did give one before), or if there is another call or should now have another call done by supabase trying to retrieve the email from linkedIn after the login using the token returned.",
                    "author": {
                        "login": "Cpt0Teemo"
                    },
                    "createdAt": "2023-08-16T11:11:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1680408613"
                },
                {
                    "id": "IC_kwDOEKipmc5kLggn",
                    "body": "> Generally switching to OIDC shouldn't be too hard. Some community help would be appreciated as the team won't be able to pick this up too quickly.\r\n\r\n@hf Is the [Apple provider](https://github.com/supabase/gotrue/blob/4ff1fe058cfab418c445808004091e89dcf87124/internal/api/provider/apple.go#L21) a good starting point to draw inspiration from? Are there any pitfalls to be aware of here?",
                    "author": {
                        "login": "jack-michaud"
                    },
                    "createdAt": "2023-08-16T14:36:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1680738343"
                },
                {
                    "id": "IC_kwDOEKipmc5kL-hb",
                    "body": "> I've tried seeing what happens if we modify just the scopes added by gotrue to see if it was just a quick fix to change the scopes \"r_emailaddress\" and \"r_liteprofile\" to openid, profile and email. This sends us to the correct linkedin login page with the successful consent page before successfully redirecting us to the correct supabase callback. The callback is called with the query parameters \"code\" and \"state\". Sadly supabase then redirects to our website with the following error: `/?error=server_error&error_description=Error+getting+user+email+from+external+provider` I am unsure on whether supabase was expecting an email in the JWT giving in \"state\", which does not have one (unsure if it did give one before), or if there is another call or should now have another call done by supabase trying to retrieve the email from linkedIn after the login using the token returned.\r\n\r\nI have the exact same experience currently.\r\n\r\nSeems like the oauthScopes on lines 78-79 should be changed?\r\n\r\nhttps://github.com/supabase/gotrue/blob/master/internal/api/provider/linkedin.go#L16",
                    "author": {
                        "login": "alexcraig043"
                    },
                    "createdAt": "2023-08-16T15:48:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1680861275"
                },
                {
                    "id": "IC_kwDOEKipmc5kqHZy",
                    "body": "Can you test it with the scopes in the LinkedIn docs after changing it, @alexcraig043?\r\nI think this might be what's required to fix the issue.\r\n\r\nhttps://learn.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/sign-in-with-linkedin-v2?context=linkedin%2Fconsumer%2Fcontext#validating-id-tokens\r\n\r\n```json\r\n{\r\n    \"issuer\": \"https://www.linkedin.com\",\r\n    \"authorization_endpoint\": \"https://www.linkedin.com/oauth/v2/authorization\",\r\n    \"token_endpoint\": \"https://www.linkedin.com/oauth/v2/accessToken\",\r\n    \"userinfo_endpoint\": \"https://api.linkedin.com/v2/userinfo\",\r\n    \"jwks_uri\": \"https://www.linkedin.com/oauth/openid/jwks\",\r\n    \"response_types_supported\": [\r\n        \"code\"\r\n    ],\r\n    \"subject_types_supported\": [\r\n        \"pairwise\"\r\n    ],\r\n    \"id_token_signing_alg_values_supported\": [\r\n        \"RS256\"\r\n    ],\r\n    \"scopes_supported\": [\r\n        \"openid\",\r\n        \"profile\",\r\n        \"email\"\r\n    ],\r\n    \"claims_supported\": [\r\n        \"iss\",\r\n        \"aud\",\r\n        \"iat\",\r\n        \"exp\",\r\n        \"sub\",\r\n        \"name\",\r\n        \"given_name\",\r\n        \"family_name\",\r\n        \"picture\",\r\n        \"email\",\r\n        \"email_verified\",\r\n        \"locale\"\r\n    ]\r\n}\r\n```",
                    "author": {
                        "login": "mansueli"
                    },
                    "createdAt": "2023-08-22T19:00:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1688761970"
                },
                {
                    "id": "IC_kwDOEKipmc5kqzxK",
                    "body": "Hello,\r\n\r\nWhile I'm not well-versed in Go development, I've made an attempt to address the issue. I kindly request a Go developer to review my proposed solution located at: https://github.com/tobias-istvan/gotrue/tree/fix/linkedin-auth.\r\n\r\nI tested the solution locally and successfully managed to log in using GoTrueJs. I was able to obtain an access code; however, I encountered a challenge when attempting to proceed with further testing. Could someone with expertise in this area please assess and validate the provided solution?\r\n\r\nChanged file: https://github.com/tobias-istvan/gotrue/blob/fix/linkedin-auth/internal/api/provider/linkedin.go\r\n\r\nThank you.",
                    "author": {
                        "login": "tobias-istvan"
                    },
                    "createdAt": "2023-08-22T21:16:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1688943690"
                },
                {
                    "id": "IC_kwDOEKipmc5k3VuI",
                    "body": "> Can you test it with the scopes in the LinkedIn docs after changing it, @alexcraig043? I think this might be what's required to fix the issue.\r\n> \r\n> https://learn.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/sign-in-with-linkedin-v2?context=linkedin%2Fconsumer%2Fcontext#validating-id-tokens\r\n> \r\n> ```json\r\n> {\r\n>     \"issuer\": \"https://www.linkedin.com\",\r\n>     \"authorization_endpoint\": \"https://www.linkedin.com/oauth/v2/authorization\",\r\n>     \"token_endpoint\": \"https://www.linkedin.com/oauth/v2/accessToken\",\r\n>     \"userinfo_endpoint\": \"https://api.linkedin.com/v2/userinfo\",\r\n>     \"jwks_uri\": \"https://www.linkedin.com/oauth/openid/jwks\",\r\n>     \"response_types_supported\": [\r\n>         \"code\"\r\n>     ],\r\n>     \"subject_types_supported\": [\r\n>         \"pairwise\"\r\n>     ],\r\n>     \"id_token_signing_alg_values_supported\": [\r\n>         \"RS256\"\r\n>     ],\r\n>     \"scopes_supported\": [\r\n>         \"openid\",\r\n>         \"profile\",\r\n>         \"email\"\r\n>     ],\r\n>     \"claims_supported\": [\r\n>         \"iss\",\r\n>         \"aud\",\r\n>         \"iat\",\r\n>         \"exp\",\r\n>         \"sub\",\r\n>         \"name\",\r\n>         \"given_name\",\r\n>         \"family_name\",\r\n>         \"picture\",\r\n>         \"email\",\r\n>         \"email_verified\",\r\n>         \"locale\"\r\n>     ]\r\n> }\r\n> ```\r\n\r\nBro I've been struggling to set this up in Next Auth. I'm trying to authenticate users with LinkedIn. I just can't figure it out. Any help please? I get the message: 'jwks_uri must be configured on the issuer'\r\n",
                    "author": {
                        "login": "AMUZY"
                    },
                    "createdAt": "2023-08-24T18:42:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1692228488"
                },
                {
                    "id": "IC_kwDOEKipmc5lM7ZT",
                    "body": "Hey everyone, the current linkedin oauth provider in gotrue will only work for linkedin oauth apps created before this API change - we haven't started on the new implementation for OIDC yet due to the lack of bandwidth. As @hf mentioned (https://github.com/supabase/gotrue/issues/1216#issuecomment-1676815235), some community help here would be appreciated! \r\n\r\nI see that @tobias-istvan has kindly contributed a PR for this but it can't modify the existing linkedin oauth provider since it's a breaking change as existing oauth apps rely on it. A new linkedin provider needs to be created - you can consider naming it `linkedin-oidc` or `linkedin-v2`.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-08-29T17:51:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1697887827"
                },
                {
                    "id": "IC_kwDOEKipmc5lND5M",
                    "body": "@kangmingtay would the fix be as simple as making a separate `linkedin-oidc` file that has @tobias-istvan's updated code?",
                    "author": {
                        "login": "alexcraig043"
                    },
                    "createdAt": "2023-08-29T18:18:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1697922636"
                },
                {
                    "id": "IC_kwDOEKipmc5lNFue",
                    "body": "@alexcraig043 unfortunately, no. There are some other places where changes need to be made like adding a case for the new provider [here](https://github.com/supabase/gotrue/blob/2c0e0a1e44b073770e02b101a357e80a11ba5b6e/internal/api/external.go#L509). Ideally, you would also want to be able to run gotrue locally and test out the new provider implementation to be sure that it works before making the PR. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-08-29T18:24:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1697930142"
                },
                {
                    "id": "IC_kwDOEKipmc5l2cI7",
                    "body": "I decided to skip using Supabase for logging in with LinkedIn. There's a very clear page on how to login with LinkedIn on one of their documentation pages. It helped me a lot so far: [Authorization Code Flow (3-legged OAuth)](https://learn.microsoft.com/en-us/linkedin/shared/authentication/authorization-code-flow)",
                    "author": {
                        "login": "thomastilkema"
                    },
                    "createdAt": "2023-09-06T16:58:50Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1708769851"
                },
                {
                    "id": "IC_kwDOEKipmc5mfqPz",
                    "body": "Having the same problem as well and so is Auth0.  Who is going to fix it first?",
                    "author": {
                        "login": "ajstokar"
                    },
                    "createdAt": "2023-09-14T14:34:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1719575539"
                },
                {
                    "id": "IC_kwDOEKipmc5najOw",
                    "body": "Need a fix please \ud83d\ude4f\ud83c\udffb",
                    "author": {
                        "login": "elmaester"
                    },
                    "createdAt": "2023-09-26T07:51:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1735013296"
                },
                {
                    "id": "IC_kwDOEKipmc5nemc6",
                    "body": "hey everyone, @josmo has kindly contributed a fix for this and we're just reviewed and merged the changes! we're looking at a rough timeline of 1-2 weeks before this is rolled out to all projects on the platform. There are bunch of backward compatibility checks we need to iron out before this goes out to prevent existing apps using the old linkedin API from breaking. \r\n\r\nthanks so much for everyone's patience! ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-09-26T18:34:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1736075066"
                },
                {
                    "id": "IC_kwDOEKipmc5osNpw",
                    "body": "Hi @kangmingtay any eta on this being rolled out now it's been 2 weeks?",
                    "author": {
                        "login": "samducker"
                    },
                    "createdAt": "2023-10-10T23:10:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1756420720"
                },
                {
                    "id": "IC_kwDOEKipmc5pIP26",
                    "body": "Any ETA on on this issue? ",
                    "author": {
                        "login": "meera"
                    },
                    "createdAt": "2023-10-16T05:46:10Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1763769786"
                },
                {
                    "id": "IC_kwDOEKipmc5pkLVt",
                    "body": "hey @samducker and @meera and everyone else here, we've released the linkedin oidc provider to prod already - please check out the updated docs [here](https://supabase.com/docs/guides/auth/social-login/auth-linkedin#linkedin-open-id-connect-oidc) \r\n\r\nwith [supabase-js v2.38.2](https://github.com/supabase/supabase-js/releases/tag/v2.38.2), you should be able to do the following to use the new linkedin provider\r\n\r\n```\r\nconst { data, error } = await supabase.auth.signInWithOAuth({\r\n  provider: 'linkedin_oidc'\r\n})\r\n```\r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-19T14:19:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1771091309"
                },
                {
                    "id": "IC_kwDOEKipmc5sgc9M",
                    "body": "@kangmingtay Hello! I'm using `supabase-js v 2.38.4` via `@nuxtjs/supabase` and keep getting this error on redirect: \r\n\r\n**Unsupported provider: Provider linkedin_oidc could not be found**\r\n\r\nMy URL looks like: `/auth/v1/authorize?provider=linkedin_oidc`",
                    "author": {
                        "login": "prnews-io-tech"
                    },
                    "createdAt": "2023-11-21T08:27:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/1216#issuecomment-1820446540"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5uZESm",
            "number": 1218,
            "title": "DB_NAMESPACE other than \"auth\" causes error in migrations",
            "body": "# Bug report\r\n\r\n- [X] I confirm this is a bug with Supabase, not with my own application. \r\n- [X] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nUsing `DB_NAMESPACE=public` on a fresh database gives the error \"ERROR: schema \"auth\" does not exist\".\r\n\r\nThe reason is that after #669, at least [one instance of `auth.X`](https://github.com/supabase/gotrue/blob/4ff1fe058cfab418c445808004091e89dcf87124/migrations/00_init_auth_schema.up.sql#L78) was not updated to use the `DB_NAMESPACE`.\r\n\r\nI have not checked the other migration files.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Use a fresh install of postgresql with just the public schema (default)\r\n2. Use `DB_NAMESPACE=public`  as part of the environment variables\r\n3. Run the server and receive the error on startup.\r\n\r\n## Expected behavior\r\n\r\nI expected that `DB_NAMESPACE` would allow me to use the `public` schema.\r\n\r\nFor now, I will just create an `auth` schema an use that.\r\n\r\n## Screenshots\r\n\r\nN/A\r\n\r\n## System information\r\n\r\n- OS: Linux\r\n- Browser (if applies): N/A\r\n- Version of supabase-js: N/A\r\n- Version of Node.js: N/A\r\n\r\n## Additional context\r\n\r\nWith the current pattern of using a dynamically inserted environment variable for schema selection e.g. `{{ index .Options \"Namespace\" }}.users`, I find it quite likely that this could occur again for new migrations. This could be mitigated with a test that runs all migrations for a fresh database with a non-\"auth\" schema (and without the `auth` schema present).\r\n\r\nThe name `DB_NAMESPACE` is also a little bit misleading, since it's unclear what it does from the documentation, and since it doesn't really work for anything other than `auth` anyway, it could be an opportunity to perhaps rename it to `DB_SCHEMA` which would be much clearer for all Postgres user.\r\n\r\nThis is just my opinion, and you can of course feel free to ignore it :slightly_smiling_face: \r\n\r\nThank you for a great library.",
            "author": {
                "login": "dlebech"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-15T20:16:23Z",
            "closedAt": "2023-10-20T21:27:27Z",
            "url": "https://github.com/supabase/gotrue/issues/1218",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5prAS4",
                    "body": "Hey @kangmingtay (shamelessly tagging you as you've liked that proposal :P )\r\nI've fixed the issues in the existing migrations to allow other namespaces.\r\n\r\nAlthough I think the other aspects mentioned have a very valid point. In regards of testing this there were 2 ways I initially saw: \r\n- Adding e.g. testcontainers and running migration (and possibly other integration tests) with those. -> This would introduce another dependency\r\n- Extending the /hack directory and adding/adapting existing Makefile-targets to also test this scenario. \r\n\r\nI think the first way makes more sense, as the 'hacks' impose a bigger barrier of entry for new gotrue users. Instead I would try to decrease the logic there. e.g. by moving the user creation into the Dockerfile of the DB where most users would expect it etc.\r\n\r\nFeel free to share your thoughts and I migh extend the PR with that info. :)",
                    "author": {
                        "login": "szczepad"
                    },
                    "createdAt": "2023-10-20T14:48:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1218#issuecomment-1772881080"
                },
                {
                    "id": "IC_kwDOEKipmc5ptDma",
                    "body": "Hey @szczepad, thanks for taking the time to contribute #1279 - a nice way to catch this from happening again in the future would be to set up some sort of linting rule to ensure that the resources referenced in the migrations are not hard-coded to a specific schema and use the `{{ index .Options \"Namespace\" }}` go template ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-20T21:30:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1218#issuecomment-1773418906"
                },
                {
                    "id": "IC_kwDOEKipmc5ptErN",
                    "body": ":tada: This issue has been resolved in version 2.104.3 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.104.3)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2023-10-20T21:35:28Z",
                    "url": "https://github.com/supabase/gotrue/issues/1218#issuecomment-1773423309"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5ub7Gx",
            "number": 1219,
            "title": "Keycloak Provider should include openid scope",
            "body": "With Keycloak version 22, openid scope is needed, or else the auth server won't receive any userinfo.\r\n\r\nRef: https://github.com/keycloak/keycloak/pull/14237",
            "author": {
                "login": "yos1p"
            },
            "state": "OPEN",
            "createdAt": "2023-08-16T09:02:10Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1219",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5uzUdz",
            "number": 1225,
            "title": "Login with linkedin not working `Unable to exchange external code`",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nLinked with login not working.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. add secrets to initialize  client\r\n2.  Run the application and click on login with linkedin\r\n\r\n\r\n## Expected behavior\r\n\r\nShould print detail of user on console.\r\n\r\n\r\n\r\n## System information\r\n\r\n- OS:Mac Os\r\n- Browser  Chrome\r\n\r\n\r\n## Additional context\r\n\r\nI have used supabase client \"@supabase/supabase-js\": \"^2.31.0\", as a dependency and tried to login with linkedin. but after completing login process it will redirect me again in login screen. after debugging  found error=server_error&error_description=Unable+to+exchange+external+code%3A+AQQhjojAPKLH_qXa7lER3WXaXuC2YJw4oFDNNWDvjHBe3G0chE68H4ru5Z7Bo0P5qDg7WkY-XJcXOBJDYctFydyGiXvGT54_WhNTL00Mw7l1VIzFUtmeLhdfePPnFsL_bQujzz0cULxyNLn0ISihBmAJSFinab7ZK2VGD3tCuFlVx2vlzIaIZCuL5f78b10OW33XELo58mKBRcVRtPY this redirection. \r\n\r\nI saw others issue on github. there is one or two issue related to  linkedin login. one is due to invalid secretkey/ space in secret key and another when there is no profile image on linkedin which was already solved. I checked the key and secret twice and also i have image on my linkedin profile.\r\n\r\n\r\nAppears this is a gotrue error when trying to grab the oauth code from linked in.\r\n\r\nhttps://github.com/supabase/gotrue/blob/master/internal/api/external_oauth.go#L80\r\n\r\nDiscord fourm: https://discord.com/channels/839993398554656828/1137991384616419338\r\nLinkedin login simple implementation with react: git@github.com:aryanhimself/linkedinlogin-supabase.git\r\n",
            "author": {
                "login": "aryanhimself"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-15T09:58:14Z",
            "closedAt": "2023-10-19T14:22:14Z",
            "url": "https://github.com/supabase/gotrue/issues/1225",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5kfZAl",
                    "body": "Seems like the issue linked in Discord  https://github.com/supabase/gotrue/issues/1216\r\nis the same thing?\r\n\r\nThis is the root cause of that one.  Linked in no longer supports the method Supabase uses to work with 3rd parties...\r\nhttps://learn.microsoft.com/en-us/linkedin/consumer/integrations/self-serve/sign-in-with-linkedin",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-15T16:03:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/1225#issuecomment-1685950501"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZAp",
                    "body": "Not the same issue. there is discussion on that issue on this discord forum https://discord.com/channels/839993398554656828/1137991384616419338 ",
                    "author": {
                        "login": "aryanhimself"
                    },
                    "createdAt": "2023-08-16T10:55:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1225#issuecomment-1685950505"
                },
                {
                    "id": "IC_kwDOEKipmc5kgPIa",
                    "body": "This is happening on my side also @aryanhimself . linkedIn auth is not working",
                    "author": {
                        "login": "ProfiroiuMihai"
                    },
                    "createdAt": "2023-08-21T11:42:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/1225#issuecomment-1686172186"
                },
                {
                    "id": "IC_kwDOEKipmc5kgPgJ",
                    "body": "Not working on my side too.",
                    "author": {
                        "login": "FlutterTester"
                    },
                    "createdAt": "2023-08-21T11:43:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1225#issuecomment-1686173705"
                },
                {
                    "id": "IC_kwDOEKipmc5lM9LO",
                    "body": "hey @aryanhimself, @ProfiroiuMihai and @FlutterTester, can you please check your project's auth logs (https://supabase.com/dashboard/project/_/logs/auth-logs) for any underlying errors related to this? If you're unable to figure out a solution based on the error you're observing, can you create a ticket with Supabase (https://app.supabase.com/support/new) so we can investigate the issue for your projects? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-08-29T17:57:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1225#issuecomment-1697895118"
                },
                {
                    "id": "IC_kwDOEKipmc5pkMkr",
                    "body": "Hey everyone, i'm closing this issue because i'm unable to reproduce it, if your issue is related to the linkedin oauth API being deprecated - please take a look at [this thread](https://github.com/supabase/gotrue/issues/1216#issuecomment-1771091309)",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-19T14:22:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1225#issuecomment-1771096363"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5uzUgh",
            "number": 1226,
            "title": "Adding a new User through dashboard doesn't send confirmation email",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [X] I confirm this is a bug with Supabase, not with my own application. \r\n- [X] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nWhen adding a new user through the Supabase dashboard, no confirmation email is sent to the user. \r\n\r\n## To Reproduce\r\n\r\n1. Go to Supabase and enter a project.\r\n2. Go to Authentication\r\n3. At the top right, Click on Add User and select the Create New User option.\r\n4. Enter a valid email address and password. **Make sure to uncheck the Auto Confirm User option**.\r\n5. Check the email you provided in step 4 to see if you received an email.  As the bug description states above, you should have received no email. (Both inbox and spam)\r\n\r\n## Expected behavior\r\n\r\nUpon adding a new user, The user should receive an email asking them to confirm their email address which will provide a link to allow them to validate their account.\r\n\r\n\r\n## System information\r\n\r\n- OS: Windows\r\n- Browser Chrome, Brave, Firefox\r\n- Version of supabase-js: 2.32.0\r\n- Version of Node.js: 19. 3.0\r\n\r\n## Additional context\r\n\r\nI understand there may be several other factors that may stop such an email from being sent other than a bug. However, I have been successful at sending the same email when adding a user programatically and by clicking the 'Send Magic Link' option from the dashboard after waiting at times for up to 20 minutes after adding that same user. In both cases, the email arrived almost instantaneously. Furthermore, this also rules out any errors with the email as well. Another factor that could affect this is the rate limit on the number of emails that can be sent per hour. I have also eliminated this factor since the rate limit was set to 60 and I never exceeded the limit during testing.",
            "author": {
                "login": "SatanshuMishra"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-11T15:33:28Z",
            "closedAt": "2023-11-01T04:08:12Z",
            "url": "https://github.com/supabase/gotrue/issues/1226",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5kfZCs",
                    "body": "I would like to work on this issue\r\n\r\n\r\n",
                    "author": {
                        "login": "NIKET79"
                    },
                    "createdAt": "2023-08-17T16:18:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/1226#issuecomment-1685950636"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZCw",
                    "body": "hey #NIKET79 i have figured out the problem but i am not able set the storage can you guide me \r\nNIKET79\r\n",
                    "author": {
                        "login": "priyanshu2k3"
                    },
                    "createdAt": "2023-08-19T18:18:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/1226#issuecomment-1685950640"
                },
                {
                    "id": "IC_kwDOEKipmc5qmHeI",
                    "body": "Hey @NIKET79, @priyanshu2k3 and @SatanshuMishra, the add user method on the supabase dashboard uses the admin create user endpoint in your project (which is identical to `supabase.auth.admin.createUser`). This method does not send out a confirmation email. \r\n\r\nIf you want to send out a confirmation email to the user, you should select the \"invite user\" option on the dashboard instead.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-11-01T04:08:12Z",
                    "url": "https://github.com/supabase/gotrue/issues/1226#issuecomment-1788376968"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5uzUjc",
            "number": 1227,
            "title": "getSession being run on server? No storage option exists",
            "body": "I'm using Next.js, with 'use client' I'm still getting this message, this only happens on the initial load of starting the server but not after if i do refresh.\r\n```\r\nNo storage option exists to persist the session, which may result in unexpected behavior when using auth.\r\n        If you want to set persistSession to true, please provide a storage option or you may set persistSession to false to disable this warning.\r\n```\r\n\r\nI have also tried on SolidStart and noticed same but also when building in SolidStart i'm getting extra issues \r\n```\r\nnode_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/module/lib/fetch.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/module/lib/fetch.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+functions-js@2.1.2/node_modules/@supabase/functions-js/dist/module/FunctionsClient.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+functions-js@2.1.2/node_modules/@supabase/functions-js/dist/module/FunctionsClient.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+realtime-js@2.7.3/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+realtime-js@2.7.3/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+realtime-js@2.7.3/node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+realtime-js@2.7.3/node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+gotrue-js@2.46.1/node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js (1:14) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+gotrue-js@2.46.1/node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js (1:22) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+functions-js@2.1.2/node_modules/@supabase/functions-js/dist/module/helper.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+functions-js@2.1.2/node_modules/@supabase/functions-js/dist/module/helper.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+gotrue-js@2.46.1/node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js (1:14) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+gotrue-js@2.46.1/node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js (1:22) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/lib/helpers.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/lib/helpers.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/lib/fetch.js (1:17) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\nnode_modules/.pnpm/@supabase+storage-js@2.5.1/node_modules/@supabase/storage-js/dist/module/lib/fetch.js (1:25) The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten\r\n```",
            "author": {
                "login": "MariuzM"
            },
            "state": "OPEN",
            "createdAt": "2023-08-09T16:32:39Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1227",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5kfZEj",
                    "body": "This is a warning that you should use persistSession:false in createClient to avoid this issue: https://github.com/supabase/gotrue-js/issues/539\r\n\r\n",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-09T19:08:42Z",
                    "url": "https://github.com/supabase/gotrue/issues/1227#issuecomment-1685950755"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZEq",
                    "body": "@GaryAustin1 this is the point I'm trying to make that I'm trying to run on client but i'm getting this issue that for split second it run on server. `persistSession:false` is bad answer because then i lose on client token persistence, so do i open new ticket? ",
                    "author": {
                        "login": "MariuzM"
                    },
                    "createdAt": "2023-08-10T00:31:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1227#issuecomment-1685950762"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZEr",
                    "body": "I'm reopening it.\r\nDoes your code work and you just get the warning?   \r\nAs I understand the warning is you don't have a local storage solution available when createClient runs.  It is not required to do persistSession:false if you do not need to actually persist the session.\r\n\r\nBut I'll let you and the Supabase dev's sort it out.\r\nSorry if I acted to quickly.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-10T00:50:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/1227#issuecomment-1685950763"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZEv",
                    "body": "Yes the code and everything still works on client and it creates my tokens in localStorage, no issues, but its that log that keeps printing in terminal that leads me to believes its trying to run on server for split second when it starts. I'm creating a demo in Next.js will upload soon. \r\n\r\nWhen i use SolidStart then when doing pnpm build, i'm getting that big log issue, and i have a feeling its related. ",
                    "author": {
                        "login": "MariuzM"
                    },
                    "createdAt": "2023-08-10T00:53:40Z",
                    "url": "https://github.com/supabase/gotrue/issues/1227#issuecomment-1685950767"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZEy",
                    "body": "Yeah it was added because we doing forum support were dealing with users who spent hours/days debugging why getSession() wiped their session on a server and they needed persistSession:false.   Seems like the boomerang effect with \"false\" errors, although in your case does seem odd it flags and then does not.\r\n ",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-10T00:56:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/1227#issuecomment-1685950770"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZE1",
                    "body": "Here is the repo for next.js also noticed extra more errors about package so not sure whats that about\r\n\r\nRepo: https://github.com/MariuzM/supabase-nextjs\r\nhttps://github.com/MariuzM/supabase-nextjs/blob/main/src/Supabase.tsx\r\n\r\n1. run `pnpm dev`\r\n2. go to browser and click page refresh\r\n3. error should appear in terminal \r\n4. check in browser to have some token stored in local storage for this function to work, but it does print for me with my token session.\r\n\r\nNode.js v18.17.0\r\n\r\n```\r\n- wait compiling /page (client and server)...\r\n- warn ./node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib/index.js\r\nModule not found: Can't resolve 'encoding' in '/Users/marius/supabase-nextjs/node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib'\r\n\r\nImport trace for requested module:\r\n./node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib/index.js\r\n./node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/node-ponyfill.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/lib/fetch.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/SupabaseClient.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/index.js\r\n./src/Supabase.tsx\r\nNo storage option exists to persist the session, which may result in unexpected behavior when using auth.\r\n        If you want to set persistSession to true, please provide a storage option or you may set persistSession to false to disable this warning.\r\n- warn ./node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib/index.js\r\nModule not found: Can't resolve 'encoding' in '/Users/marius/supabase-nextjs/node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib'\r\n\r\nImport trace for requested module:\r\n./node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib/index.js\r\n./node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/node-ponyfill.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/lib/fetch.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/SupabaseClient.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/index.js\r\n./src/Supabase.tsx\r\n- wait compiling /favicon.ico/route (client and server)...\r\n- warn ./node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib/index.js\r\nModule not found: Can't resolve 'encoding' in '/Users/marius/supabase-nextjs/node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib'\r\n\r\nImport trace for requested module:\r\n./node_modules/.pnpm/node-fetch@2.6.12/node_modules/node-fetch/lib/index.js\r\n./node_modules/.pnpm/cross-fetch@3.1.8/node_modules/cross-fetch/dist/node-ponyfill.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/lib/fetch.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/SupabaseClient.js\r\n./node_modules/.pnpm/@supabase+supabase-js@2.32.0/node_modules/@supabase/supabase-js/dist/main/index.js\r\n./src/Supabase.tsx\r\n```",
                    "author": {
                        "login": "MariuzM"
                    },
                    "createdAt": "2023-08-10T01:07:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/1227#issuecomment-1685950773"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZE9",
                    "body": "I'm receiving the same error as @MariuzM",
                    "author": {
                        "login": "guylepage3"
                    },
                    "createdAt": "2023-08-16T16:04:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1227#issuecomment-1685950781"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5uzUmp",
            "number": 1228,
            "title": "Broken Invitation Links  - http://kong is the domain",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nCurrently, when sending an invitation to a user, the invitation link in the email is `http://kong/auth/v1/verify?token=xxx` rather than the proper domain.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behaviour, please provide code snippets or a repository:\r\n\r\n1. Setup docker Supabase\r\n2. Go to the authentication\r\n3. Click \"Add user\"\r\n4. Select \"Send Invitation\"\r\n5. Check the invitation link in the email\r\n\r\n## Expected behaviour\r\n\r\nIt was expected that the invitation URL to contain the configured URLs in the `.env` file rather than `http://kong` as the domain.\r\n",
            "author": {
                "login": "iarata"
            },
            "state": "OPEN",
            "createdAt": "2023-08-07T10:38:51Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1228",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5nLyN8",
                    "body": "I think this was introduced in PR #999, where a bit of magic is used to determine the hostname regardless of the configured `API_EXTERNAL_URL` in the function `isValidExternalHost` [here](https://github.com/supabase/gotrue/pull/999/files#diff-97dfc3310e5139b4d9c7a160bd077aeb81ca1e7b8d7cfa837a402f54b4c03a3dR194), although I'm not sure I understand it completely.\r\n\r\nIn my case the host in the confirmation mails is set to `supabase-kong`, which of course doesn't resolve outside of the docker network. It used to just use the `API_EXTERNAL_URL` correctly. This makes it difficult to test the sign-up flow during development.\r\n\r\n",
                    "author": {
                        "login": "rmvh"
                    },
                    "createdAt": "2023-09-22T09:54:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1731142524"
                },
                {
                    "id": "IC_kwDOEKipmc5n19vv",
                    "body": "There is some breaking change in a minor release: `v2.67.1` (https://github.com/supabase/gotrue/compare/v2.67.0...v2.67.1).\r\n\r\nIn our case, after upgrading Docker image to anything above `v2.67.1` (including current latest) turns the account confirmation URL from `https` to `https`, there are also some other minor changes.\r\n\r\nv2.67.0 (correct)\r\n```\r\nhttps://auth.domain.app/auth/v1/verify?token=token&type=signup&redirect_to=https://web.domain.app/login\r\n```\r\n\r\nv2.67.1 (broken)\r\n```\r\nhttp://auth.domain.app/auth/v1/verify?redirect_to=https%3A%2F%2Fweb.domain.app%2Flogin&token=token&type=signup\r\n```\r\n\r\nI've tried to reproduce this outside of the docker environment, kong etc. by injecting our configuration through `.env`, so I can run the debugger on `main.go`. I've set up breakpoints on: `ConfirmationMail` and `isValidExternalHost` and problem doesn't exist for some reason.\r\n\r\nUnfortunately I don't have much time currently to add some additional logging to the code, compile the binary and debug/run it from the Docker context, to understand at which stage the URL does get broken.",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-10-01T20:58:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1742199791"
                },
                {
                    "id": "IC_kwDOEKipmc5n2CAK",
                    "body": "I suspect that it's part of the: `isValidExternalHost` function which unintentionally modifies the URL, specifically:\r\n\r\n```golang\r\nbaseUrl := config.API.ExternalURL\r\n\txForwardedHost := req.Header.Get(\"X-Forwarded-Host\")\r\n\txForwardedProto := req.Header.Get(\"X-Forwarded-Proto\")\r\n\tif xForwardedHost != \"\" && xForwardedProto != \"\" {\r\n\t\tbaseUrl = fmt.Sprintf(\"%s://%s\", xForwardedProto, xForwardedHost)\r\n\t} else if req.URL.Scheme != \"\" && req.URL.Hostname() != \"\" {\r\n\t\tbaseUrl = fmt.Sprintf(\"%s://%s\", req.URL.Scheme, req.URL.Hostname())\r\n\t}\r\n```\r\nSorry for mentioning you directly: @kangmingtay, but perhaps you could help us to understand the intention behind these two `if/else` cases where `baseUrl`  (initially set from env) is overriden by the headers or request data.\r\n\r\nIn our case we run Kong in the HTTP context, as we terminate SSL at the upper layer. I suspect that because of Kong running in `http` context, it sets the: `X-Forwarded-Proto` (https://github.com/Kong/kong/issues/2202) header to `HTTP` and: `isValidExternalHost` function overrides the value specified in the `API_EXTERNAL_URL` header. I need to confirm that claim, but at this stage sounds plausible.\r\n",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-10-01T22:07:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1742217226"
                },
                {
                    "id": "IC_kwDOEKipmc5n2D4T",
                    "body": "Our infamous fix is here: https://github.com/supabase/gotrue/compare/master...tomekit:gotrue:master it's likely not something that should be merged to `supabase/gotrue`, but it gives an idea where the problem is.",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-10-01T22:39:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1742224915"
                },
                {
                    "id": "IC_kwDOEKipmc5n8LIx",
                    "body": "@tomekit we use those headers to determine the hostname to use for email links and the `baseUrl` defaults to use the `API_EXTERNAL_URL` env var if those headers are missing.\r\n\r\nIn the supabase context, the `API_EXTERNAL_URL` is set to `https://project_ref.supabase.co/auth/v1`. With custom domains or vanity subdomains, the `baseUrl` can be either the custom domain, the vanity subdomain or the default domain assigned and it should be based on the hostname used in the request. \r\n\r\n> In our case we run Kong in the HTTP context, as we terminate SSL at the upper layer. I suspect that because of Kong running in http context, it sets the: X-Forwarded-Proto (https://github.com/Kong/kong/issues/2202) header to HTTP and: isValidExternalHost function overrides the value specified in the API_EXTERNAL_URL header. I need to confirm that claim, but at this stage sounds plausible.\r\n\r\ndoes kong forward the original request url in a header? ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-02T21:57:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1743827505"
                },
                {
                    "id": "IC_kwDOEKipmc5oWx7n",
                    "body": "I'm facing the same problem. \r\nMy temporary fix is to switch to \"supabase/gotrue:v2.67.0\" in my docker-compose.yml",
                    "author": {
                        "login": "timkister"
                    },
                    "createdAt": "2023-10-06T14:44:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1750802151"
                },
                {
                    "id": "IC_kwDOEKipmc5oW5-E",
                    "body": "> does kong forward the original request url in a header?\r\n\r\nI am not sure, I am using default kong setup from: https://supabase.com/docs/guides/self-hosting/docker  \r\nWhat header are we talking about? Would that be X-Forwarded-Path?",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-10-06T15:00:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1750835076"
                },
                {
                    "id": "IC_kwDOEKipmc5pzsSz",
                    "body": "I'm also having this issue (as reported in the original issue, with `http://kong` in the confirmation email) with a mostly default self-hosting docker-compose.yml + .env.\r\n\r\nThe issue is present with `supabase/gotrue:v2.67.1` but goes away with `supabase/gotrue:v2.67.0`.",
                    "author": {
                        "login": "donalffons"
                    },
                    "createdAt": "2023-10-23T13:10:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1775158451"
                },
                {
                    "id": "IC_kwDOEKipmc5r9oOh",
                    "body": "I'm not sure if anyone has realized but in the docker-compose.yml it states `SUPABASE_URL: http://kong/` changing this to use the `API_EXTERNAL_URL` variable should solve your issue. Or so one would think I have changed it to the local ip and i am getting it in the email link but I don't get the port. Which in my case  is 8000 the api is supposed to be directed too.",
                    "author": {
                        "login": "EasternIndustries-IT"
                    },
                    "createdAt": "2023-11-14T21:11:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1228#issuecomment-1811317665"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5uzUpF",
            "number": 1229,
            "title": "Auth rate limit in Next.js Server Actions",
            "body": "I've been integrating the latest Next.js auth example and I find it extremely helpful, but there is a missing piece not documented, or not easy to find, the rate limiting when using React Server Actions.\r\n\r\nAccording to the available [documentation](https://supabase.com/docs/guides/platform/going-into-prod#auth-rate-limits), rate limits are of different types. Some of them suggest that there is a rate limit based on `Request IP`, such as `Verification requests`.\r\n\r\nIf I pass the user Verification Request call to a React Server Actions, then call Supabase from the server using `createServerActionClient`, this means that all requests will have the server's IP address and it will be limited.\r\n \r\nIs there any alternative or should I move everything back to the client?",
            "author": {
                "login": "arobert93"
            },
            "state": "OPEN",
            "createdAt": "2023-08-06T16:46:15Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1229",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5kfZIM",
                    "body": "If you are on a pro plan you might contact support and see if they can address the limit for your instance.  There is a note about contacting them here: https://supabase.com/docs/guides/platform/going-into-prod#rate-limiting-resource-allocation--abuse-prevention",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-06T16:57:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1229#issuecomment-1685950988"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZIO",
                    "body": "Hi @GaryAustin1. I do not have a pro plan and I do not think that it should matter. I do believe that it should be specified since most of Next.js developers will try to use it and they will face the same issue.",
                    "author": {
                        "login": "arobert93"
                    },
                    "createdAt": "2023-08-06T17:09:35Z",
                    "url": "https://github.com/supabase/gotrue/issues/1229#issuecomment-1685950990"
                },
                {
                    "id": "IC_kwDOEKipmc5kfZIX",
                    "body": "OK, was just an idea.  You'll have to see what someone from Supabase responds with.  You flagged this as documentation issue though but seem to be looking for a change.   I'll add auth tag to it.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-06T18:10:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1229#issuecomment-1685950999"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5vH7ws",
            "number": 1233,
            "title": "Signing in via Native Google login, and then via native Apple login throws an exception",
            "body": "# Bug report\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nAfter setting up native Google and Apple login for my remote Supabase instance, I sign in a user via native Google login. After that, I sign out and then sign in via native Apple login with the same email address. This signing in with native Apple login throws `Unacceptable audience in id_token` error on Gotrue. \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Setup native Google and Apple login.\r\n2. Sign in via native Google login\r\n3. Sign out\r\n4. Sign in via native Apple login with the same email address and observe the exception thrown from Gotrue\r\n\r\n## Expected behavior\r\n\r\nPerforming Google login and Apple login on the same email address works fine. \r\n\r\n## System information\r\n\r\n- OS: iOS\r\n- Version of supabase-flutter: 1.10.14\r\n\r\n## Additional context\r\n\r\nRelated https://github.com/supabase/supabase-flutter/issues/5#issuecomment-1687945257\r\n",
            "author": {
                "login": "dshukertjr"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-24T03:46:51Z",
            "closedAt": "2023-09-11T08:39:05Z",
            "url": "https://github.com/supabase/gotrue/issues/1233",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ly6rF",
                    "body": "Is there any solution? I am facing it with `singInWithApple()` on ios and also i have implemented native login and get idtoken and then pass it to the `signInWithIdToken()` but still same error. \r\n\r\n> AuthException(message: Unacceptable audience in id_token, statusCode:400)",
                    "author": {
                        "login": "Dr-Usman"
                    },
                    "createdAt": "2023-09-06T07:51:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1233#issuecomment-1707846341"
                },
                {
                    "id": "IC_kwDOEKipmc5ly_pc",
                    "body": "@Dr-Usman Approximately when did you setup Sign in with Apple on your Supabase dashboard? We have reports saying when they turned Sign in with Apple off and back on again fixed this issue. ",
                    "author": {
                        "login": "dshukertjr"
                    },
                    "createdAt": "2023-09-06T08:05:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/1233#issuecomment-1707866716"
                },
                {
                    "id": "IC_kwDOEKipmc5lzr_W",
                    "body": "Thank you for replying @dshukertjr . I implemented 2 months ago and i have checked and tested last month it was working fine.  It stopped working suddenly in last week.\r\nThank you for the answer. It solves the issue and working fine now. \u2705\ud83d\ude00",
                    "author": {
                        "login": "Dr-Usman"
                    },
                    "createdAt": "2023-09-06T10:05:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1233#issuecomment-1708048342"
                },
                {
                    "id": "IC_kwDOEKipmc5mIN-b",
                    "body": "Hey everyone. We did some digging on this, it appears that we had introduced a bug temporarily with the handling of these configs. If you had setup Apple or Google sign in then, the configs were likely saved incorrectly. This appears to have been a very low number of projects affected, but we've now fixed all of the project's settings. \r\n\r\nSorry about that!\r\n\r\nI'll close this issue for now.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-09-11T08:39:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1233#issuecomment-1713430427"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5vhVAE",
            "number": 1235,
            "title": "No way to use appHash optional parameter when using Twilio Verify",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nThere is no way to send the optional parameter **appHash** [(https://www.twilio.com/docs/verify/api/verification)](https://www.twilio.com/docs/verify/api/verification) when using Twilio Verify with **supabase_flutter**. This would get appended to the OTP SMS so Android could read the OTP code from SMS automatically.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n\r\n\r\n## Expected behavior\r\n\r\nA way to send **appHash** with **signInWithOtp()** method -> OTP SMS contains the appended **appHash**.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n\r\n\r\n## Additional context\r\n\r\n\r\n",
            "author": {
                "login": "Kypsis"
            },
            "state": "OPEN",
            "createdAt": "2023-07-25T23:06:30Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1235",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5lJDOn",
                    "body": "Is there any tentative timeline for this feature to become a reality yet?",
                    "author": {
                        "login": "Kypsis"
                    },
                    "createdAt": "2023-08-28T22:39:23Z",
                    "url": "https://github.com/supabase/gotrue/issues/1235#issuecomment-1696871335"
                },
                {
                    "id": "IC_kwDOEKipmc5lJK5y",
                    "body": "Hey @Kypsis,\r\n\r\nThanks for bumping this. No tentative timeline at the moment as we're looking into custom a more general approach towards SMS providers.  If it's a hard  blocker for you I can raise it for discussion this week though.\r\n\r\nQuick question: how is the `appHash` used after it is received in the response and is it dynamically generated?\r\n\r\n I don't have a strong familiarity with the `appHash` but am wondering if it be possible to manually append the `appHash`  to the message template for now if it is statically generated. \r\n\r\nLet me know!\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-08-29T07:20:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/1235#issuecomment-1696902770"
                },
                {
                    "id": "IC_kwDOEKipmc5lNaP0",
                    "body": "App hash (signature) can be precomputed or fetched on runtime:[https://developers.google.com/identity/sms-retriever/verify#computing_your_apps_hash_string](https://developers.google.com/identity/sms-retriever/verify#computing_your_apps_hash_string). Then it would get get appended to the SMS via the `appHash` optional parameter when doing POST request to `https://verify.twilio.com/v2/Services/{ServiceSid}/Verifications`. On an Android device the SMS Retriever API would read the OTP from SMS automatically via the `appHash` identifier in the SMS response and would then allow for the OTP auto-fill functionality to work. Which leads to very nice frictionless UX for the user.\r\n\r\nFrom my POV having an option to manually append the appHash would be totally fine as well (seeing as that's what I had to do anyway when using the regular Twilio SMS API, just statically append it to the SMS message on the dashboard).",
                    "author": {
                        "login": "Kypsis"
                    },
                    "createdAt": "2023-08-29T19:30:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/1235#issuecomment-1698014196"
                },
                {
                    "id": "IC_kwDOEKipmc5rM7Pn",
                    "body": "Any progress on this issue?",
                    "author": {
                        "login": "Kypsis"
                    },
                    "createdAt": "2023-11-07T13:45:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/1235#issuecomment-1798550503"
                },
                {
                    "id": "IC_kwDOEKipmc5rf2Io",
                    "body": "Hey @Kypsis,\r\n\r\nThanks for waiting, we are working on a solution for this  via auth hooks and it'll probably land close to our next launch week in December. Do check back then and lmk if there are any immediate concerns.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-09T09:56:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1235#issuecomment-1803510312"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5vtVS-",
            "number": 1236,
            "title": "Email rate limit is triggered even in scenarios where an email doesn't end up being sent",
            "body": "# Bug report\r\n\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nFailed signups still count towards the email rate limit even though no user record is created and no email ends up being sent, leading to unwarranted `AuthApiError: Email rate limit exceeded` errors. Misuse of the registration process (by well-intentioned would-be users or deliberate bad actors) can very quickly lead to a denial of service whereby nobody can sign up for an account, even if no emails have been sent.\r\n\r\nI've tried my best to report this in the right repository tracing through the calls I think the `/signup` flow makes starting with the Supabase Auth TypeScript helpers at the top of the stack. Apologies if this isn't the right place after all.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\nNot the best reproduction steps here, sorry. In effect, using the built-in SMTP testing rate limits just by way of example, calling something like `await supabase.auth.signUp({email: \"a@b.com\", password: \"x\"})` 5 times in an hour with default minimum password length restrictions in place will result in error responses as follows:\r\n\r\n```\r\nAuthApiError: Password should be at least 6 characters\r\nAuthApiError: Password should be at least 6 characters\r\nAuthApiError: Password should be at least 6 characters\r\nAuthApiError: Password should be at least 6 characters\r\nAuthApiError: Email rate limit exceeded\r\n```\r\n\r\nOf course, users are encouraged **not** to use the test SMTP endpoint - I'm only doing so as an example here. Even if users provide their own, they're encouraged to set sensible rate limits to mitigate abuse. The point is that no emails are actually being sent here.\r\n\r\n## Expected behavior\r\n\r\nIn the scenario above I would not expect to ever hit the \"email rate limit exceeded\" error, since no emails had been sent and no new users had been added to the database.\r\n\r\n## Screenshots\r\n\r\nI don't think this helps much as you can't see the full implementation, but here's the tail of some logs of me deliberately entering a short password until hitting the rate limit (I'd previously been testing while writing this bug, hence why I only managed two \"password should be...\" errors before hitting the limit again).\r\n\r\n<img width=\"783\" alt=\"image\" src=\"https://github.com/supabase/gotrue/assets/278461/9b59b49e-32d3-48b1-80b5-7fba4b504cc8\">\r\n\r\n## System information\r\n\r\n- OS: macOS, but don't think it's relevant\r\n- Browser (if applies): N/A\r\n- Version of supabase-js:\r\n\"@supabase/auth-helpers-nextjs\": \"^0.7.3\"\r\n\"@supabase/supabase-js\": \"^2.31.0\"\r\n- Version of Node.js: 20.5.1\r\n\r\n## Additional context\r\n\r\nI don't know Go at all, but a quick glance at  `internal/api/api.go` around line 107/108 within this repo made me wonder if the rate limiter middleware is always invoked before the actual call, regardless of whether that call does the thing it's expected to or not.",
            "author": {
                "login": "makeusabrew"
            },
            "state": "OPEN",
            "createdAt": "2023-08-30T18:14:17Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1236",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ruxUV",
                    "body": "@makeusabrew Indeed.\r\n\r\nIt seems the Signup API is using the the so called [`sharedLimiter`]( https://github.com/supabase/gotrue/blob/93e5f82ced83c08799ce99020be9dea82fc56d24/internal/api/api.go#L122C13-L122C13), which is a middleware that wraps a [third party tool named tollboth](https://github.com/didip/tollbooth).\r\nThis middleware calls [`tollbooth.LimitByKeys`](https://github.com/supabase/gotrue/blob/93e5f82ced83c08799ce99020be9dea82fc56d24/internal/api/middleware.go#L114) to check if the limit was exceeded or not.\r\nIf the limit was exceeded, it returns an early response. If not, it delegates the control to the next handler in the chain.\r\n\r\nBy design, at least `/invite`, `/signup`, `/recover`, `/resend` `/magiclink` and  `/otp` share the same limiting strategy. So this same problem might happen in all of those endpoints.\r\n\r\nI think it would be interesting if we could move the limiter from a *before-middleware* to an *after-middleware* and trigger the rate limiter depending on return value of the API handler, as it returns an error if something went wrong.\r\n\r\nThis implies a change of the design, but it would be cool.\r\n\r\n\r\n\r\n ",
                    "author": {
                        "login": "LautaroJayat"
                    },
                    "createdAt": "2023-11-13T03:29:32Z",
                    "url": "https://github.com/supabase/gotrue/issues/1236#issuecomment-1807422741"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5vviUe",
            "number": 1237,
            "title": "HandshakeException: Handshake error in client",
            "body": "# Bug report\r\n\r\n<!-- \r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [ ] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nI keep getting \r\n```\r\nHandshakeException: Handshake error in client (OS Error: TLSV1_ALERT_DECODE_ERROR(tls_record.cc:592))\r\n```\r\nwhen doing SignUp and SignIn but a few minutes later, it Auth now works.\r\nBut this happens from intermittently.\r\n\r\nWhile looking at the logs in the Dashboard, I found\r\n```\r\nLog ID\r\n7b4d1be6-2169-46b2-945d-a19253a88bd4\r\n\r\nLog Timestamp (UTC)\r\n2023-08-31T03:19:50.000Z\r\n\r\nLog Event Message\r\n{\"error\":\"http: Server closed\",\"level\":\"error\",\"msg\":\"prometheus server (0.0.0.0:9122) shut down\",\"time\":\"2023-08-31T03:19:50Z\"}\r\n\r\nLog Metadata\r\n[\r\n  {\r\n    \"message\": null,\r\n    \"timestamp\": null,\r\n    \"__MONOTONIC_TIMESTAMP\": null,\r\n    \"CODE_FUNC\": null,\r\n    \"instance_id\": null,\r\n    \"status\": null,\r\n    \"_CMDLINE\": null,\r\n    \"method\": null,\r\n    \"_SYSTEMD_CGROUP\": null,\r\n    \"CODE_FILE\": null,\r\n    \"EXECUTABLE\": null,\r\n    \"_EXE\": null,\r\n    \"UNIT\": null,\r\n    \"level\": \"error\",\r\n    \"_COMM\": null,\r\n    \"duration\": null,\r\n    \"issuer\": null,\r\n    \"_LINE_BREAK\": null,\r\n    \"_SOURCE_REALTIME_TIMESTAMP\": null,\r\n    \"msg\": \"prometheus server (0.0.0.0:9122) shut down\",\r\n    \"action\": null,\r\n    \"login_method\": null,\r\n    \"_UID\": null,\r\n    \"host\": \"db-kanqsugbggxybesautls\",\r\n    \"PRIORITY\": null,\r\n    \"_CAP_EFFECTIVE\": null,\r\n    \"_PID\": null,\r\n    \"INVOCATION_ID\": null,\r\n    \"_SYSTEMD_UNIT\": null,\r\n    \"source_type\": null,\r\n    \"SYSLOG_FACILITY\": null,\r\n    \"request_id\": null,\r\n    \"CODE_LINE\": null,\r\n    \"path\": null,\r\n    \"component\": null,\r\n    \"project\": null,\r\n    \"user_id\": null,\r\n    \"auth_event\": [],\r\n    \"args\": [],\r\n    \"referer\": null,\r\n    \"factor_id\": null,\r\n    \"provider\": null,\r\n    \"client_id\": null,\r\n    \"remote_addr\": null,\r\n    \"_SYSTEMD_SLICE\": null,\r\n    \"_SYSTEMD_INVOCATION_ID\": null,\r\n    \"header\": null,\r\n    \"_MACHINE_ID\": null,\r\n    \"_AUDIT_LOGINUID\": null,\r\n    \"_TRANSPORT\": null,\r\n    \"_SELINUX_CONTEXT\": null,\r\n    \"MESSAGE_ID\": null,\r\n    \"__REALTIME_TIMESTAMP\": null,\r\n    \"metadata\": [],\r\n    \"_STREAM_ID\": null,\r\n    \"metering\": null,\r\n    \"time\": null,\r\n    \"_GID\": null,\r\n    \"_BOOT_ID\": null,\r\n    \"SYSLOG_IDENTIFIER\": null,\r\n    \"_AUDIT_SESSION\": null,\r\n    \"error\": \"http: Server closed\"\r\n  }\r\n]\r\n\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Sign Up or Sign In\r\n\r\n## Expected behavior\r\n\r\nShould be consistent\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- supabase_flutter: ^1.10.14\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "totzk9"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-31T03:39:50Z",
            "closedAt": "2023-09-26T18:59:51Z",
            "url": "https://github.com/supabase/gotrue/issues/1237",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5nevrG",
                    "body": "@totzk9 if you're still running into this error, please reach out to https://supabase.com/dashboard/support/new - gonna close this issue as it seems like a platform specific error rather than an issue with the auth service",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-09-26T18:59:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/1237#issuecomment-1736112838"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5v4wuS",
            "number": 1238,
            "title": "Enabling custom SMTP with bad credentials then disabling custom SMTP breaks sending of confirmation emails",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nWhen enabling custom smtp in auth settings, then providing incorrect/bad entries in the custom smtp fields, saving changes, then disabling custom smtp, confirmation email for new user sign up keeps failing to send with error \"Error sending confirmation email\".\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Go to [Project Auth Settings](https://supabase.com/dashboard/project/PROJECT_NAME/settings/auth)\r\n2. Scroll down to 'SMTP Settings'\r\n3. Click on 'Enable Custom SMTP'\r\n4. Enter incorrect/bad SMTP provider entries in given fields\r\n5. Save changes\r\n6. Click on 'Enable Custom SMTP' to disable it\r\n7. Save changes\r\n8. Attempt to sign up new user\r\n9. Error produced, failed to send confirmation email despite sign up working fine previously before even having touched custom smtp settings, and even with custom SMTP off.\r\n\r\n## Expected behavior\r\n\r\nEnabling custom smtp with bad data, saving, then disabling custom smtp and saving, should make verification emails come from supabase built in smtp service.\r\n\r\n## Screenshots\r\nCustom SMTP is off, and yet supabase is still using the incorrect credentials I provided for a custom smtp provider, to send emails\r\n\r\n![image](https://github.com/supabase/supabase/assets/77121499/709a6c9c-6156-484e-b53d-56b7b3abada5)\r\n\r\nError received when making request to my API endpoint which handles user signup(the api itself works fine, I've been testing it for a couple hours now)\r\n\r\n![image](https://github.com/supabase/supabase/assets/77121499/b14da5dc-2b4f-4d46-abf0-e3711bad670f)\r\n\r\n## System information\r\n\r\n- OS: Windows\r\n- Browser: Chrome\r\n- Version of supabase-js: v2.26.0\r\n- Version of Node.js: v18.16.1\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "IMakeDiscordBots"
            },
            "state": "CLOSED",
            "createdAt": "2023-08-01T19:09:35Z",
            "closedAt": "2023-09-09T18:26:11Z",
            "url": "https://github.com/supabase/gotrue/issues/1238",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5lelL9",
                    "body": "I confirmed this with the user and reproduced on my instance.  It is interesting in the failing case if you turn back on custom SMTP you see the Sender Name and Password still there, but the other URL and User Name fields are empty.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-01T20:26:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515453"
                },
                {
                    "id": "IC_kwDOEKipmc5lelL_",
                    "body": "https://github.com/supabase/supabase/pull/16044\r\nNot sure if this pull request is involved.\r\n\r\nI have to assume this is a recent bug as don't ever recall hitting it before.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-08-01T20:55:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515455"
                },
                {
                    "id": "IC_kwDOEKipmc5lelMB",
                    "body": "Also having this issue, trying to set up smtp with a google workspace, and i thought i entered the credentials wrong, so i toggled it off and it won't send any more emails",
                    "author": {
                        "login": "Mike92988"
                    },
                    "createdAt": "2023-08-01T20:58:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515457"
                },
                {
                    "id": "IC_kwDOEKipmc5lelMF",
                    "body": "> Also having this issue, trying to set up smtp with a google workspace, and i thought i entered the credentials wrong, so i toggled it off and it won't send any more emails\r\n\r\nWhen working through it with @GaryAustin1 , we found that entering correct credentials and trying it, had fixed it. While that is a solution, that shouldn't be how this works. Turning off the custom smtp settings should make supabase default to using the built-in smtp and instead it tries to use the incorrect credentials to send emails, which isn't the correct function.",
                    "author": {
                        "login": "IMakeDiscordBots"
                    },
                    "createdAt": "2023-08-01T23:01:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515461"
                },
                {
                    "id": "IC_kwDOEKipmc5lelMK",
                    "body": "I found that as well, using the correct credentials (Ended up going with resend instead) and it seems to be working fine now \r\n",
                    "author": {
                        "login": "Mike92988"
                    },
                    "createdAt": "2023-08-02T12:11:20Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515466"
                },
                {
                    "id": "IC_kwDOEKipmc5lelMR",
                    "body": "I have a similar issue only mine wont update after setting the correct credentials. I had it working then updated the password for the email and it keeps returning`Error sending confirmation email: 535 Authentication Failed` however I confirmed that the credentials are correct so I feel like it is not updating on supabases end",
                    "author": {
                        "login": "oldbettie"
                    },
                    "createdAt": "2023-08-07T04:24:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515473"
                },
                {
                    "id": "IC_kwDOEKipmc5lelMV",
                    "body": "~~Getting 500 HTTP errors from Resend integration with no logs showing on their side, not sure if this is related.~~\n\nEdit: unrelated",
                    "author": {
                        "login": "sannajammeh"
                    },
                    "createdAt": "2023-08-21T18:10:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515477"
                },
                {
                    "id": "IC_kwDOEKipmc5lelMW",
                    "body": "Moving this to [supabase/gotrue](https://github.com/supabase/gotrue) since it looks like a backend issue.",
                    "author": {
                        "login": "ivasilov"
                    },
                    "createdAt": "2023-09-01T10:15:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702515478"
                },
                {
                    "id": "IC_kwDOEKipmc5le6vO",
                    "body": "I don't seem to be able to reproduce this. When you do see it, please [open a support ticket](https://supabase.com/dashboard/support/new) so that we can investigate your project's setup privately.",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-09-01T11:31:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702603726"
                },
                {
                    "id": "IC_kwDOEKipmc5lgNwu",
                    "body": "It is no longer happening for me either.",
                    "author": {
                        "login": "GaryAustin1"
                    },
                    "createdAt": "2023-09-01T15:36:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/1238#issuecomment-1702943790"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5wHASF",
            "number": 1242,
            "title": "Multiple accounts with the same email address in the same linking domain detected",
            "body": "# Bug report\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nThe bug is described here, along with reproduction and expected behavior https://github.com/supabase/auth-helpers/issues/574",
            "author": {
                "login": "hexcowboy"
            },
            "state": "OPEN",
            "createdAt": "2023-09-04T21:31:45Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1242",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc5wXT8p",
            "number": 1243,
            "title": "Textlocal send OTP not working",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nTextlocal send OTP not working. Giving an error: \"400: Error sending sms OTP: nil\"\r\nlog event:\r\n{\r\n    \"auth_event\": {\r\n        \"action\": \"user_recovery_requested\",\r\n        \"actor_id\": \"f532886f-ea19-4db5-bf28-3058b5d3114a\",\r\n        \"actor_username\": \"919284103047\",\r\n        \"actor_via_sso\": false,\r\n        \"log_type\": \"user\",\r\n        \"traits\": {\r\n            \"channel\": \"sms\"\r\n        }\r\n    },\r\n    \"component\": \"api\",\r\n    \"error\": \"400: Error sending sms OTP: \\u003cnil\\u003e\",\r\n    \"level\": \"info\",\r\n    \"method\": \"POST\",\r\n    \"msg\": \"400: Error sending sms OTP: \\u003cnil\\u003e\",\r\n    \"path\": \"/otp\",\r\n    \"referer\": \"http://localhost:3000\",\r\n    \"remote_addr\": \"167.88.158.75\",\r\n    \"time\": \"2023-09-07T05:32:12Z\",\r\n    \"timestamp\": \"2023-09-07T05:32:12Z\"\r\n}\r\n<img width=\"568\" alt=\"Screenshot 2023-09-07 at 11 22 38 AM\" src=\"https://github.com/supabase/gotrue/assets/59016883/a647e80d-9976-4a4b-889f-d215e885fb8f\">\r\n",
            "author": {
                "login": "iamshivkumar"
            },
            "state": "CLOSED",
            "createdAt": "2023-09-07T05:48:56Z",
            "closedAt": "2023-09-13T12:03:24Z",
            "url": "https://github.com/supabase/gotrue/issues/1243",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5l--dH",
                    "body": "@hf ",
                    "author": {
                        "login": "iamshivkumar"
                    },
                    "createdAt": "2023-09-08T02:57:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1711007559"
                },
                {
                    "id": "IC_kwDOEKipmc5mGLLX",
                    "body": "Even I'm facing this exact issue. I'm getting the same error response as @iamshivkumar when trying to implement sms OTP-based login.\r\n@J0 @kangmingtay @hf @devkiran ",
                    "author": {
                        "login": "sgbud"
                    },
                    "createdAt": "2023-09-10T17:42:18Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1712894679"
                },
                {
                    "id": "IC_kwDOEKipmc5mMcO3",
                    "body": "I am facing the same issue too. Calling TextLocal API is working but when called through supabase it gives this error.",
                    "author": {
                        "login": "mahes-2"
                    },
                    "createdAt": "2023-09-11T20:32:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1714537399"
                },
                {
                    "id": "IC_kwDOEKipmc5mN-3r",
                    "body": "Hey team,\r\n\r\nUnfortunately, we're unable to test the integration as the Auth team isn't currently in possession of a phone number with the +91 prefix. However, if anyone would like to pick this up (and provide corresponding guide) I'd be happy to provide guidance.\r\n\r\nLet us know!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-09-12T04:25:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1714941419"
                },
                {
                    "id": "IC_kwDOEKipmc5mOmpW",
                    "body": "It's working. There is no problem from Supabase side you have to contact Textlocal they will approve template and then it will start working. Hope this will help.",
                    "author": {
                        "login": "acetrondi"
                    },
                    "createdAt": "2023-09-12T06:51:58Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1715104342"
                },
                {
                    "id": "IC_kwDOEKipmc5mO1ln",
                    "body": "> It's working. There is no problem from Supabase side you have to contact Textlocal they will approve template and then it will start working. Hope this will help.\r\n\r\nThis is not correct. We are using a template approved by TextLocal (more complete info - it's a template approved by DLT and uploaded on TextLocal). The TextLocal API is working fine when called directly, but failing when using Supabase.",
                    "author": {
                        "login": "sgbud"
                    },
                    "createdAt": "2023-09-12T07:37:52Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1715165543"
                },
                {
                    "id": "IC_kwDOEKipmc5mO8Fs",
                    "body": "> \r\n\r\nI had previously approved the template for use in Supabase. However, I encountered an issue, so I reached out to the TextLocal team for assistance, and they promptly resolved it within 1-1.5 hours.",
                    "author": {
                        "login": "acetrondi"
                    },
                    "createdAt": "2023-09-12T07:53:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1715192172"
                },
                {
                    "id": "IC_kwDOEKipmc5mXuLz",
                    "body": "\r\nI connected to the Textlocal team. There was a template issue. In the template, I used the same variable name for both variables, one for OTP code and another for the hash key. Variable names should be unique.\r\n\r\nIncorrect:\r\nCompany Name: Your code is %%|name^{\"inputtype\" : \"text\", \"maxlength\" : \"8\"}%% %%|name^{\"inputtype\" : \"text\", \"maxlength\" : \"12\"}%% - App Name\r\n\r\nCorrect:\r\nCompany Name: Your code is %%|otp^{\"inputtype\" : \"text\", \"maxlength\" : \"8\"}%% %%|hash^{\"inputtype\" : \"text\", \"maxlength\" : \"12\"}%% - App Name\r\n\r\n",
                    "author": {
                        "login": "iamshivkumar"
                    },
                    "createdAt": "2023-09-13T12:02:46Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1717494515"
                },
                {
                    "id": "IC_kwDOEKipmc5mcztX",
                    "body": "Thanks team for jumping in and working together to fix the issue. Glad the issue was resolved! Feel free to let us know if there are any further questions\r\n\r\nWe'd still very much appreciate a guide similar to our [twilio and messagebird](https://github.com/supabase/supabase/tree/master/apps/docs/pages/guides/auth/phone-login) examples if anyone is keen to contribute.\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-09-14T06:18:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1718827863"
                },
                {
                    "id": "IC_kwDOEKipmc5miCDb",
                    "body": "  const {data, error} = await supabase.auth.signInWithOtp({\r\n        phone: phone,\r\n      });\r\n      \r\n      data logs  AuthApiError: Error sending sms OTP: <nil>\r\n      \r\n      i am running supabase locally and also enabled \r\n      [auth.sms]\r\n# Allow/disallow new user signups via SMS to your project.\r\nenable_signup = true\r\n# If enabled, users need to confirm their phone number before signing in.\r\nenable_confirmations = true\r\ni also added the twilo config into config.toml file.. HELP@ME\r\n\r\n",
                    "author": {
                        "login": "emmyduruc"
                    },
                    "createdAt": "2023-09-14T21:47:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1720197339"
                },
                {
                    "id": "IC_kwDOEKipmc5pwevG",
                    "body": "Hey @emmyduruc,\r\n\r\n Are you attempting to send via Textlocal? If so you should probably add the textlocal config into the `config.toml` file instead of the Twilio config",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-10-23T02:01:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1243#issuecomment-1774316486"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5wghcF",
            "number": 1244,
            "title": "no sub key in typing library",
            "body": "why the type doesn't come with the \"sub\" key?\r\n\r\nvar user ={\"aud\":\"authenticated\",\"exp\":1694117743,\"iat\":1694114143,\"iss\":\"https://https://xxxxxxxxxxx.supabase.co/auth/v1\",\"sub\":\"xxxxxxxxxxx\",\"email\":\"contacto@xxxxxx.com\",\"phone\":\"\",\"app_metadata\":{\"provider\":\"email\",\"providers\":[\"email\"]},\"user_metadata\":{},\"role\":\"authenticated\",\"aal\":\"aal1\",\"amr\":[{\"method\":\"password\",\"timestamp\":1694110550}],\"session_id\":\"XXXXXXXXXXXXXXXX\"}\r\n\r\n\r\nbut the typing from the library goes like this:\r\n\r\n<img width=\"509\" alt=\"image\" src=\"https://github.com/supabase/supabase/assets/26209122/42e058dc-18d9-403c-a49b-740377447b17\">\r\n",
            "author": {
                "login": "Nicolasvegam"
            },
            "state": "CLOSED",
            "createdAt": "2023-09-07T19:38:44Z",
            "closedAt": "2023-09-26T18:58:20Z",
            "url": "https://github.com/supabase/gotrue/issues/1244",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5neumx",
                    "body": "@Nicolasvegam the sub key is unique to the user's identity and not the user - you can find it by looking at the `user.identities.identity_data['sub']` ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-09-26T18:58:01Z",
                    "url": "https://github.com/supabase/gotrue/issues/1244#issuecomment-1736108465"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5w4P_R",
            "number": 1245,
            "title": "`GenerateTokenHash` is highly questionable",
            "body": "https://github.com/supabase/gotrue/blob/577e3207aab8ee4c4661f5a8148f02296210f1d8/internal/crypto/crypto.go#L41-L43\r\n\r\nThis function gives the false security to developers that there's 224-bits of entropy when they see the `TokenHash` in an email.\r\n\r\ne.g. when I saw `TokenHash` in an email, I thought `3f4cef3ebadfa21c8a4559e025966e5806dcc6081d3cf657444c0054` definitely couldn't be brute forced, so it would be safe to have a high OTP token lifetime.\r\n\r\nThen... I realized that if you know the email address...\r\n\r\n```sh\r\ndave@mbp yep % printf \"gotrue@testing.email.ai.moda131337\" | sha224sum\r\n3f4cef3ebadfa21c8a4559e025966e5806dcc6081d3cf657444c0054  -\r\n```\r\n\r\nAnd there you have it, what I thought was 224-bits of entropy, is actually less than 20-bits.",
            "author": {
                "login": "Manouchehri"
            },
            "state": "CLOSED",
            "createdAt": "2023-09-13T05:53:33Z",
            "closedAt": "2023-10-19T14:25:24Z",
            "url": "https://github.com/supabase/gotrue/issues/1245",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5mV0yV",
                    "body": "Ah, found our internal ticket on this from a few months ago. Here's the URL to brute-force:\r\n\r\n```sh\r\ncurl -v \"https://your_instance_id_here.supabase.co/auth/v1/verify?token=calculated_hash_here&type=magiclink&redirect_to=http://127.0.0.1:31337\"\r\n```\r\n\r\nYou will hit rate limiting. I personally don't feel comfortable with rate limiting being the primary layer of defense, the OTP token should not be <20-bits to begin with.",
                    "author": {
                        "login": "Manouchehri"
                    },
                    "createdAt": "2023-09-13T06:02:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1716997269"
                },
                {
                    "id": "IC_kwDOEKipmc5nechR",
                    "body": "Hi @Manouchehri, thanks for raising this concern up! There is a tradeoff between security and UX here that we had to make. To provide more context, this should also support email and phone OTPs which require the user to enter a 6-10 digit OTP. Obviously, it would be pretty annoying to have your users enter a hash manually (yes they can copy and paste but we have had customers who reported that their users view the OTP on a separate device / don't know how to copy and paste the OTP). \r\n\r\nWe like the idea of having a defence in-depth solution, which is also why we allow you to customise the length of the OTP for a slightly higher entropy. However, we don't want it to compromise the UX too. I don't think that these are mutually exclusive choices and I think we can definitely improve on this solution by separating the logic for generating the OTPs and the token hash embedded in the email links. That way, developers who are developing more security-sensitive applications can opt to use the email link over the OTP. At this point, we feel that rate limiting protection is pretty sufficient considering that the OTPs expire after 24hrs too. \r\n\r\nGiven our existing rate limits and an attacker who attempts to brute force the OTP, they would have a less than 1% chance of doing so successfully: (360 req / hr) * (24 hrs) / (1000000 possible OTPs).",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-09-26T18:07:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1736034385"
                },
                {
                    "id": "IC_kwDOEKipmc5nec3w",
                    "body": "I'm not sure why I understand the point of hashing at all here?",
                    "author": {
                        "login": "Manouchehri"
                    },
                    "createdAt": "2023-09-26T18:08:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1736035824"
                },
                {
                    "id": "IC_kwDOEKipmc5neeh5",
                    "body": "@Manouchehri you don't want to have the raw values stored in the database - this is akin to hashing a user's password",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-09-26T18:11:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1736042617"
                },
                {
                    "id": "IC_kwDOEKipmc5nefkU",
                    "body": "With the way you're doing the hash, it's pointless; it can always be cracked in seconds.",
                    "author": {
                        "login": "Manouchehri"
                    },
                    "createdAt": "2023-09-26T18:14:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1736046868"
                },
                {
                    "id": "IC_kwDOEKipmc5nekqc",
                    "body": "@Manouchehri i think the assumption you're making here is that the attacker has access to the database system already, at which point, there are more severe issues at hand than compromising a single user's account. \r\n\r\ni definitely do see where you're coming from, and one of the benefits of an open-source community is that we can leverage different expertise to make the product better. It would be nice if you also supplemented your points with potential solutions too, whilst noting [the tradeoffs](https://github.com/supabase/gotrue/issues/1245#issuecomment-1736034385) i mentioned above. \r\n\r\nWe also have a security policy [here](https://supabase.com/.well-known/security.txt) and if you do find any other potential vulnerabilities, we would really appreciate it if you communicate them through that channel. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-09-26T18:29:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1736067740"
                },
                {
                    "id": "IC_kwDOEKipmc5nf-lO",
                    "body": "I'm not sure I see how this is similar to hashing a password; you hash a password so the plaintext version is difficult to recover. This is more like obfuscation, but like I mentioned at the beginning, it ends up being obfuscation for the _developer_, not to an attacker.\r\n\r\n> with potential solutions\r\n\r\nChange `TokenHash` to be a uniquely random (i.e. not a hash of known value).\r\n\r\nFrom a quick glance, it looks like you're more or less using `TokenHash` like a `code` in a Authorization Code Flow.\r\n\r\n> we would really appreciate it if you communicate them through that channel.\r\n\r\nAs you correctly pointed out in https://github.com/supabase/gotrue/issues/1245#issuecomment-1736034385, this is hopefully mitigated by rate limiting. (I am slightly concerned that the rate limiting is per-IP and not per target user.)\r\n\r\nI don't think this is really a security bug. There is no increased risk in using `TokenHash` over `Token`; the problem is that `TokenHash` is basically still `Token`, but gives developers the false impression that it's something else.",
                    "author": {
                        "login": "Manouchehri"
                    },
                    "createdAt": "2023-09-26T23:25:39Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1736436046"
                },
                {
                    "id": "IC_kwDOEKipmc5nlJio",
                    "body": "@Manouchehri Thanks for the issue. I think the discussion is getting a bit sidetracked, so could I please ask you to provide a list of short steps outlining an \"attack\" scenario so we can focus on identifying the severity and class of this issue.\r\n\r\nIf you feel uncomfortable doing it in public, you can always use security@supabase.com to responsibly disclose security issues. This is outlined in our [security.txt](https://supabase.com/.well-known/security.txt) file.\r\n\r\nAs for the following:\r\n\r\n> the problem is that TokenHash is basically still Token, but gives developers the false impression that it's something else.\r\n\r\nI don't fully agree with you about the impression bit, but I do see the point in that better docs or possibly name should have been chosen. My disagreement comes from the fact that the word _hash_ in this case means hash value from a one-way (non-password) hashing function. It's not wise to expect everyone to have a deep knowledge of hash functions, but it's generally widely known that hash functions don't change the \"entropy\" of the hashed value. Therefore, if `TokenHash` is important to you, in the context of the email message, then it's safe to assume that it's coming from the `Token` value.\r\n\r\nWe'll try to plan for a change in the Supabase Dashboard and docs that this makes this more prominent, but we do also accept community contributions if you have some ideas!",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-09-27T17:15:41Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1737791656"
                },
                {
                    "id": "IC_kwDOEKipmc5nlLDF",
                    "body": "Using the word \"hash\" is any security related context (like logging in) is fairly going to be assumed to be a cryptographic hash. The comment at https://github.com/supabase/gotrue/issues/1245#issuecomment-1736042617 seems to be saying that this hashing was incorrectly intended to provide a security benefit.",
                    "author": {
                        "login": "Manouchehri"
                    },
                    "createdAt": "2023-09-27T17:20:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1737797829"
                },
                {
                    "id": "IC_kwDOEKipmc5nlNGy",
                    "body": "To simplify the discussion, can you clarify these two questions:\n\n1. What *is* the purpose of TokenHash?\n\n2. What is the intended reason to use TokenHash over Token?",
                    "author": {
                        "login": "Manouchehri"
                    },
                    "createdAt": "2023-09-27T17:27:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1737806258"
                },
                {
                    "id": "IC_kwDOEKipmc5nn2By",
                    "body": "Yes, hashing provides a security benefit. There are multiple layers of security here, entropy is just one aspect of the issue.\r\n\r\nInside GoTrue / the database, token hash provides these layers of security:\r\n\r\n1. Prevents read-only users to the database from impersonating real users.\r\n2. Prevents large-scale account takeover attacks by binding the email address with the OTP code, so that a separate dictionary of hashes of the OTP code must be used per account, not just one set of hashes for all possible OTP codes. This also makes it more difficult to use rainbow tables techniques to \"reverse\" the hash function and guess the OTP code.\r\n\r\n(Again, the method of \"attack\" in the above scenario is an attack from within, such as: disgruntled employee / staff member, partial or total data leak.)\r\n\r\nOutside of GoTrue, when sent out in an email:\r\n\r\n1. Does not have a different security benefit than just using the Token, both can be used interchangably depending on the application's use case (as pointed out by @kangmingtay).\r\n\r\nThis is why I'm not super clear what is questionable in the function, or the hashing, and would like to see an attack outline before we can have a reasonable discussion about the security of the system.\r\n\r\n> What is the intended reason to use TokenHash over Token?\r\n\r\nWhen you use Token, you need to build a UI that takes in the email *in addition to the OTP value* -- as this is the only way that GoTrue can verify the token (since it holds a hash of those two values).\r\n\r\nThis does not fit well with certain applications, such as those who intend to use Server-Side Rendering, where the \"token verification\" has to be done on the backend instead (especially with PKCE). By allowing the use of TokenHash, we give applications the ability (which is not by default) to build out those flows as well.\r\n",
                    "author": {
                        "login": "hf"
                    },
                    "createdAt": "2023-09-28T05:37:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1738498162"
                },
                {
                    "id": "IC_kwDOEKipmc5pkOEB",
                    "body": "closing this issue since it's more of a discussion rather than a bug with gotrue",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-19T14:25:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1771102465"
                },
                {
                    "id": "IC_kwDOEKipmc5pkQEa",
                    "body": "The solution is to remove GenerateTokenHash.\r\n\r\nI think you meant to close this as won\u2019t fix, not complete?",
                    "author": {
                        "login": "Manouchehri"
                    },
                    "createdAt": "2023-10-19T14:29:55Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1771110682"
                },
                {
                    "id": "IC_kwDOEKipmc5pkbtv",
                    "body": "I am with @Manouchehri on this.\r\n\r\nIn my opinion if you really aim to [\"build the best Auth solution\"](https://www.reddit.com/r/Supabase/comments/123yogq/comment/jerf67a/?utm_source=share&utm_medium=web2x&context=3) not just shiny play tool you need to focus on security pretty seriously.\r\n\r\nValid points were raised. There are couple possible resolutions here and likely longer discussion is required, but closing it doesn't solves anything and only discourages people from taking their time to report potential security issues.",
                    "author": {
                        "login": "tomekit"
                    },
                    "createdAt": "2023-10-19T14:54:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1771158383"
                },
                {
                    "id": "IC_kwDOEKipmc5pknht",
                    "body": "@tomekit @Manouchehri we will fix this by separating the logic for TokenHash and OTP. The `TokenHash` flow will be generated with much higher entropy and the OTP will continue to be a 6-digit code returned. \r\n\r\n@tomekit i agree fully, if you feel that there are any security concerns that should be raised, the team would really appreciate making the disclosure through the appropriate channel (https://supabase.com/.well-known/security.txt) . \r\n\r\n",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-19T15:19:37Z",
                    "url": "https://github.com/supabase/gotrue/issues/1245#issuecomment-1771206765"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5xNgGA",
            "number": 1252,
            "title": "Phone auth not working with testing phone numbers when using Twilio Verify",
            "body": "![](https://user-images.githubusercontent.com/2267270/266400333-7d74c123-210e-47ac-9ef0-9289dce63919.png)\r\n\r\nI have configured Twilio Verify with some testing phone numbers and test OTP.\r\nOn sign up or phone number change using a test phone number, SMS is being send via Twilio, on production nothing happens. \r\n\r\nWhen trying to enter the test OTP agains the test phone number entered before that I got:\r\n\r\n```\r\nToken has expired or is invalid\r\n```\r\n\r\nI checked the `GoTrue` source code and I think I found the issue. It looks that when Twilio Verify is configured all the OTP verification in done against it, can be observed here:\r\n\r\nhttps://github.com/supabase/gotrue/blob/6ea135aa5e6745ff7cbd2e2df242218a66025ca8/internal/api/verify.go#L603-L618\r\n\r\nThe expectation is when a test phone number is used, to be verified against the test OTP, instead.\r\n\r\nUnfortunately I'm not experienced in Go, so I cannot help with a PR, but I hope I helped with this analysis.\r\n\r\nThis issue is important as I saw many discussions and issues regarding AppStore GooglePlay reviews. Our mobile apps are also blocked being reviewed because of missing test phone auth.\r\n\r\nWe will be happy to see this quickly resolved and shipped, so we can continue using this great Supabase platform in production.",
            "author": {
                "login": "azlekov"
            },
            "state": "CLOSED",
            "createdAt": "2023-09-16T09:03:54Z",
            "closedAt": "2023-10-11T08:53:48Z",
            "url": "https://github.com/supabase/gotrue/issues/1252",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5ovGhj",
                    "body": "Hey Team,\r\n\r\nThis should be patched now -  going to close but please let us know if there are still issues.\r\n\r\nThank you \ud83d\ude4f ",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-10-11T08:53:48Z",
                    "url": "https://github.com/supabase/gotrue/issues/1252#issuecomment-1757177955"
                },
                {
                    "id": "IC_kwDOEKipmc5qp003",
                    "body": "@J0 getting the same error when using test numbers on local supabase\r\nalso, test numbers don't have to be tied to the sms provider right?",
                    "author": {
                        "login": "jibin2706"
                    },
                    "createdAt": "2023-11-01T17:19:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/1252#issuecomment-1789349175"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5yRSqq",
            "number": 1257,
            "title": "auth.users: add UNIQUE constraint to emails",
            "body": "This will allow to reference `auth.users` based on `email`, for example to record the author of a post, a comment or an article.",
            "author": {
                "login": "imageck"
            },
            "state": "CLOSED",
            "createdAt": "2023-09-27T10:52:58Z",
            "closedAt": "2023-10-03T05:51:43Z",
            "url": "https://github.com/supabase/gotrue/issues/1257",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5npKhn",
                    "body": "Moving this issue to gotrue repo as the `auth` schema is entirely managed by gotrue.",
                    "author": {
                        "login": "sweatybridge"
                    },
                    "createdAt": "2023-09-28T09:58:07Z",
                    "url": "https://github.com/supabase/gotrue/issues/1257#issuecomment-1738844263"
                },
                {
                    "id": "IC_kwDOEKipmc5n9zhc",
                    "body": "@imageck we won't be adding this because the `email` column is not necessarily unique. For example, currently, we allow a SAML SSO user and a normal user to have 2 different accounts with the same email. If we add a unique constraint to the email column, it doesn't allow for that use case.\r\n\r\nIn the future, we're also planning to update the oauth logins such that it does not rely on unique emails. \r\n\r\nIf you need to reference a user based on email, it would be better if you include a foreign key constraint on the `auth.users.id` column and retrieve the email of the user using a join.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-03T05:51:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1257#issuecomment-1744255068"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5zH7tL",
            "number": 1265,
            "title": "Cannot signup user, missing `identities` table",
            "body": "# Bug report\r\n\r\nI am deploying `gotrue` using Docker Compose and I am having some trouble signing up. I initially used the hosted instance on Supabase and that worked fine, which is why I'm confused why this is causing me problems. It looks like when looking up identities on signup, it is ignoring the schema (`DB_NAMESPACE`) that I have defined, causing the query to fail since the table does not exist. \r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n  - I could find a similar issue but it looks like it is unsolved: https://github.com/orgs/supabase/discussions/16860\r\n\r\n## Describe the bug\r\n\r\nWe are currently trying to look up user identities in the `identities` table, however it is actually located in `auth.identities`. \r\n\r\n```\r\n{\"component\":\"api\",\"error\":\"unable to find identity by email for duplicates: unable to fetch records: ERROR: relation \\\"identities\\\" does not exist (SQLSTATE 42P01)\",\"level\":\"error\",\"method\":\"POST\",\"msg\":\"500: Database error finding user\",\"path\":\"/signup\",\"referer\":\"http://localhost\",\"remote_addr\":\"172.19.0.1\",\"time\":\"2023-10-07T17:16:48Z\",\"timestamp\":\"2023-10-07T17:16:48Z\"}\r\n```\r\n\r\nDo these queries not respect the `DB_NAMESPACE=auth` environment variable that I have set? The migrations are clearly applied (as pictured in Screenshots) however it does not look like it's querying with this prefix in mind.\r\n\r\n## To Reproduce\r\n\r\n1. Deploy `gotrue v2.99.0` & PostgreSQL using Docker Compose \r\n2. Try to sign-up using `auth.signUp(...)`\r\n\r\n## Expected behavior\r\n\r\nTo lookup the identities in `auth.identities` when creating a new user.\r\n\r\n## Screenshots\r\n\r\n<img width=\"279\" alt=\"image\" src=\"https://github.com/supabase/gotrue/assets/8661089/132dd6fd-f9f7-4cf6-a78f-7ea49f886ddf\">\r\n\r\n## System information\r\n\r\n- OS: Docker\r\n- Browser (if applies) [e.g. chrome, safari]\r\n- Version of gotrue-js: 2.55.0\r\n\r\n## Additional context\r\n\r\n**Compose:**\r\n```\r\ngotrue:\r\n    image: supabase/gotrue:v2.99.0\r\n    ports:\r\n      - \"9999:9999\"\r\n    environment:\r\n      DATABASE_URL: MY_DATABASE_URL\r\n      GOTRUE_JWT_SECRET: MY_SECRET_TOKEN\r\n      GOTRUE_JWT_EXP: 3600\r\n      GOTRUE_DB_DRIVER: postgres\r\n      DB_NAMESPACE: auth\r\n      API_EXTERNAL_URL: http://localhost\r\n      GOTRUE_API_HOST: 0.0.0.0\r\n      PORT: 9999\r\n      GOTRUE_DISABLE_SIGNUP: \"false\"\r\n      GOTRUE_SITE_URL: http://localhost\r\n      GOTRUE_LOG_LEVEL: DEBUG\r\n      GOTRUE_OPERATOR_TOKEN: MY_OPERATOR_TOKEN\r\n      GOTRUE_EXTERNAL_PHONE_ENABLED: 'true'\r\n      GOTRUE_MAILER_AUTOCONFIRM: \"true\"\r\n      GOTRUE_SMS_AUTOCONFIRM: 'true'\r\n      GOTRUE_SMS_PROVIDER: \"twilio\"\r\n    depends_on:\r\n      - postgres\r\n      - api\r\n    restart: \r\n      on-failure\r\n```\r\n",
            "author": {
                "login": "gmisail"
            },
            "state": "CLOSED",
            "createdAt": "2023-10-07T18:39:31Z",
            "closedAt": "2023-10-11T02:45:06Z",
            "url": "https://github.com/supabase/gotrue/issues/1265",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5obDh1",
                    "body": "After some experimentation, it seems that everything works as expected once I add my `DB_NAMESPACE` as a prefix to every table name. Maybe all that is needed is a quick patch to prepend this string, if it exists. Unless this is intended behavior and I'm missing another configuration somewhere? ",
                    "author": {
                        "login": "gmisail"
                    },
                    "createdAt": "2023-10-08T05:10:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1265#issuecomment-1751922805"
                },
                {
                    "id": "IC_kwDOEKipmc5ocxrC",
                    "body": "This is happenint to be as well, where did you set the prefix? @gmisail ",
                    "author": {
                        "login": "Jonatthu"
                    },
                    "createdAt": "2023-10-09T05:39:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/1265#issuecomment-1752373954"
                },
                {
                    "id": "IC_kwDOEKipmc5ocybj",
                    "body": "@gmisail this is what postgres logs are \r\n```\r\n2023-10-09 05:43:27.288 UTC [86] ERROR:  relation \"identities\" does not exist at character 168\r\n2023-10-09 05:43:27.288 UTC [86] STATEMENT:  SELECT identities.created_at, identities.id, identities.identity_data, identities.last_sign_in_at, identities.provider, identities.updated_at, identities.user_id FROM identities AS identities WHERE email = $1\r\n```",
                    "author": {
                        "login": "Jonatthu"
                    },
                    "createdAt": "2023-10-09T05:44:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/1265#issuecomment-1752377059"
                },
                {
                    "id": "IC_kwDOEKipmc5ocz4Z",
                    "body": "Only reason failing is because the ORM does not generate auth.identities with auth prefix\r\n\r\nSELECT identities.created_at, identities.id, identities.identity_data, identities.last_sign_in_at, identities.provider, identities.updated_at, identities.user_id FROM auth.identities AS identities WHERE email = 'jonathan'",
                    "author": {
                        "login": "Jonatthu"
                    },
                    "createdAt": "2023-10-09T05:53:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/1265#issuecomment-1752383001"
                },
                {
                    "id": "IC_kwDOEKipmc5oc1-E",
                    "body": "Create a custom connection string with a custom search path, that's the fix.",
                    "author": {
                        "login": "Jonatthu"
                    },
                    "createdAt": "2023-10-09T06:05:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/1265#issuecomment-1752391556"
                },
                {
                    "id": "IC_kwDOEKipmc5otJBP",
                    "body": "Yeah that was the fix, thank you for the help.",
                    "author": {
                        "login": "gmisail"
                    },
                    "createdAt": "2023-10-11T02:45:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1265#issuecomment-1756663887"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5zssv1",
            "number": 1270,
            "title": "Bug: user is not created in auth user table even though I get a 200 back with a full correct looking object.",
            "body": "# Bug report\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nOn certain circumstances (I'm struggling to lock down exactly what it is) when I run supabase.createUser it is responding with a 200, with a full object of my user, but when I look at the auth users table the user is not there. \r\n\r\n## To Reproduce\r\n\r\nI create a user by doing this:\r\n```\r\nexport const createUser = async (clientData: ClientData, userRole: Role): Promise<QueryResponse<AuthUser>> => {\r\n  const { email, password } = clientData\r\n\r\n  const supabase = authSupabase.auth.admin\r\n  // Access auth admin api\r\n  const signupAttempt = await supabase.createUser({\r\n    email,\r\n    password,\r\n    app_metadata: { role: userRole },\r\n    email_confirm: true,\r\n  })\r\n  if (signupAttempt.error) {\r\n    return respondCleanly({ error: signupAttempt.error.message }) as ErrorQueryResponse\r\n  }\r\n  return respondCleanly(signupAttempt) as QueryResponse<AuthUser>\r\n}\r\n```\r\nThen when I use this function in my signup flow I can console log out my response:\r\n```\r\n{\r\n  status: 200,\r\n  data: {\r\n    user: {\r\n      id: '3f3330bf-57f1-449b-9e46-fee95ed43c6e',\r\n      aud: 'authenticated',\r\n      role: 'authenticated',\r\n      email: 'xxxxx@gmail.com',\r\n      emailConfirmedAt: '2023-09-13T10:39:22.437394179Z',\r\n      phone: '',\r\n      appMetadata: [Object],\r\n      userMetadata: {},\r\n      identities: [Array],\r\n      createdAt: '2023-09-13T10:39:22.429531Z',\r\n      updatedAt: '2023-09-13T10:39:22.437662Z'\r\n    }\r\n  }\r\n}\r\n```\r\nBut then I use that auth user id to create a 'client' in my client table that has a foreign key requirement, and it fails because there is no user created in the auth users table. \r\n\r\n## Expected behavior\r\n\r\nI expect that if I get a 200 back with a full object that it will always be in the auth users table.\r\n\r\n## Screenshots\r\n![Screenshot 2023-10-12 at 11 19 32](https://github.com/supabase/supabase-js/assets/22392943/b18e62f1-a0f4-4aaa-81b1-d8bd076c5d0d)\r\n![Screenshot 2023-10-12 at 11 25 41](https://github.com/supabase/supabase-js/assets/22392943/b90fec1c-6ff9-4780-93ba-a3d25176c69d)\r\n\r\n## System information\r\n\r\n- OS: MacOs\r\n- Browser (if applies): Chrome\r\n- Version of supabase-js: 2.32.0\r\n- Version of Node.js: 18.16.0\r\n\r\n",
            "author": {
                "login": "rvermootenct"
            },
            "state": "CLOSED",
            "createdAt": "2023-10-12T09:24:51Z",
            "closedAt": "2023-10-19T14:24:30Z",
            "url": "https://github.com/supabase/gotrue/issues/1270",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5o8XKj",
                    "body": "Ok, I've been able to drill down a little on this problem, it seems to have something to do with the password I am setting. If I set my password as Ryan12!@ it has the above response. If I make it RyanMakesAStrongPassword12!@ it actually creates the user in my auth table and everything works as expected. ",
                    "author": {
                        "login": "rvermootenct"
                    },
                    "createdAt": "2023-10-12T09:45:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1270#issuecomment-1760653987"
                },
                {
                    "id": "IC_kwDOEKipmc5o8XKn",
                    "body": "Even if I make the password Jame12! it works. This happens every time.",
                    "author": {
                        "login": "rvermootenct"
                    },
                    "createdAt": "2023-10-12T09:55:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/1270#issuecomment-1760653991"
                },
                {
                    "id": "IC_kwDOEKipmc5o8XKp",
                    "body": "hey @rvermootenct, can you reach out to us via support at https://supabase.com/dashboard/support/new so we can investigate further?",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-13T02:02:11Z",
                    "url": "https://github.com/supabase/gotrue/issues/1270#issuecomment-1760653993"
                },
                {
                    "id": "IC_kwDOEKipmc5pkNqD",
                    "body": "hey @rvermootenct, are you still facing this issue? can you reach out to us via the support form above if you are? I'll be closing this issue since i'm unable to reproduce it but i would really like to help you debug further and find out the root cause via our support channel.",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-19T14:24:30Z",
                    "url": "https://github.com/supabase/gotrue/issues/1270#issuecomment-1771100803"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc5z-aL2",
            "number": 1271,
            "title": "RedirectTo URL no longer works for PKCE SSR use cases ",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [ X] I confirm this is a bug with Supabase, not with my own application. \r\n- [X ] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\nIn the `auth/callback` code, I use the 'next' searchParam to redirect my user after the code exchange has occurred. I accomplish this by using `emailRedirectTo with `next` searchParams when I call\u00a0[supabse.auth.signInWithOtp](https://supabase.com/docs/reference/javascript/auth-signinwithoauth).\u00a0\r\n\r\nHowever, with `[auth/confirm](https://supabase.com/docs/guides/auth/server-side/email-based-auth-with-pkce-flow-for-ssr#create-api-endpoint-for-handling-tokenhash)` approach, despite having the `next` searchParams in the code, I can't use the emailRedirectTo at all. This is because\u00a0the email templates only take .TokenHash and .SiteURL as params and I would have to hard code the next param (see [Invite user Template](https://supabase.com/docs/guides/auth/server-side/email-based-auth-with-pkce-flow-for-ssr#update-email-templates-with-url-for-api-endpoint)).\r\n\r\nWith the .ConfirmationURL, it would append the auth/callback?next=/location as a redirect_to parameter. However, that's not possible if I update the templates\u00a0for PKCE flow with SSR.\u00a0\r\n\r\ntl;dr - .ConfirmationURL supports redirectTo in the url allowing me to redirect users after `auth/callback`. Using `auth/confirm` in email templates, prevents me from using `redirectTo` as a result I can't dynamically route users post authentication.\r\n\r\n## To Reproduce\r\n\r\nUsing emailRedirectTo in signInWithOtp will not redirect user if using SSR and SiteURL email templates with Token Hash appended to Auth/confirm url. \r\n\r\n## Expected behavior\r\n\r\nThe expectation is that previous capability of emailRedirectTo works with SSR. \r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## Additional context\r\nOur use case is that when we have a user that can be invited to be an instructor across many of our customers. So when they are invited, the next url links them to a customer specific page.\r\n\r\nWe are able to do that with non-SSR cases using the redirect to param.\r\n\r\nWe have another situation where a user need to authenticate themselves before checkout can occur. We use the redirect to param, today, to forward them to the next link.\r\n",
            "author": {
                "login": "djshubs"
            },
            "state": "CLOSED",
            "createdAt": "2023-10-16T17:28:46Z",
            "closedAt": "2023-10-17T23:44:02Z",
            "url": "https://github.com/supabase/gotrue/issues/1271",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc50GraX",
            "number": 1274,
            "title": "Azure ID Error",
            "body": "# Bug report\r\n\r\nAs of `2023-10-17T08:59:15.000Z`, I have started seeing the following errors in my Azure auth:\r\n\r\n```\r\nazure: ID token issuer \\\"https://login.microsoftonline.com/TENANT-UUID/v2.0\\\" does not match expected issuer \\\"https://login.microsoftonline.com/organizations/v2.0\\\"\",\"level\":\"error\",\"method\":\"GET\",\"msg\":\"500: Error getting user email from external provider\"\r\n```\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nAzure login in is no longer working for my multitenant app. It might be related to this: https://github.com/supabase/gotrue/pull/1269.\r\n\r\n## To Reproduce\r\n\r\nI'm not sure -- i haven't changed anything in my app since yesterday and started seeing these errors.\r\n\r\n## Expected behavior\r\n\r\nThere should be no errors.\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: Running in Supabase cloud.\r\n- Version of supabase-js: ^2.36.0\r\n- Version of Node.js: 18.2\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "mosnicholas"
            },
            "state": "CLOSED",
            "createdAt": "2023-10-17T17:23:56Z",
            "closedAt": "2023-10-17T20:28:06Z",
            "url": "https://github.com/supabase/gotrue/issues/1274",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5pUNB3",
                    "body": "I see the same thing. I think its has to do with appending\"2.0\" to the issuer, but I don't have a good way to verify:\r\nhttps://github.com/supabase/gotrue/blob/4c50357841c51c2da0eff4d7f8920aed5e640df2/internal/api/provider/azure.go#L62\r\n\r\n\r\nDocs state to omit that for Active directory 1.0 apps:\r\n![unnamed (1)](https://github.com/supabase/gotrue/assets/129017605/0e95818b-18fe-46bc-b9a0-2a9ed92ebc4c)\r\n\r\nhttps://learn.microsoft.com/en-us/azure/container-apps/authentication-azure-active-directory\r\n\r\nOur app has been down for our users, hopefully this gets resolved soon. ",
                    "author": {
                        "login": "aaron-xandria"
                    },
                    "createdAt": "2023-10-17T18:00:19Z",
                    "url": "https://github.com/supabase/gotrue/issues/1274#issuecomment-1766903927"
                },
                {
                    "id": "IC_kwDOEKipmc5pUO92",
                    "body": "@hf was there a deploy for Supabase auth related to the changes you made yesterday? I don't know where to check, but I saw you merged in some changes to gotrue that seem related?",
                    "author": {
                        "login": "mosnicholas"
                    },
                    "createdAt": "2023-10-17T18:06:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1274#issuecomment-1766911862"
                },
                {
                    "id": "IC_kwDOEKipmc5pUZXy",
                    "body": "It seems we're hitting this error: https://github.com/supabase/gotrue/pull/1269/files#diff-ea3c11f35c15f1496340532424b81c805cc3f6fb541800add5cd6f497548b324R130. I believe the changes here should have fixed it: https://github.com/supabase/gotrue/pull/1272/files, but I'm still seeing this error in production.\r\n\r\n@hf given this is affecting production customers, it would be great to know if your team can act on this asap.",
                    "author": {
                        "login": "mosnicholas"
                    },
                    "createdAt": "2023-10-17T18:33:34Z",
                    "url": "https://github.com/supabase/gotrue/issues/1274#issuecomment-1766954482"
                },
                {
                    "id": "IC_kwDOEKipmc5pUrbX",
                    "body": "@mosnicholas not sure if your situation allows, but I was able to resolve my issue by switching my from Azure Tenant URL from:\r\n\r\nhttps://login.microsoftonline.com/organizations to https://login.microsoftonline.com/common see the following for info:\r\n\r\nhttps://learn.microsoft.com/en-us/azure/active-directory/develop/msal-client-application-configuration\r\n\r\nI was also required to add email to the login scope:\r\n\r\n... = await supabase.auth.signInWithOAuth({\r\n            ...\r\n            options: {\r\n                scopes: 'email,profile',\r\n..\r\n            },\r\n        });",
                    "author": {
                        "login": "aaron-xandria"
                    },
                    "createdAt": "2023-10-17T19:25:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/1274#issuecomment-1767028439"
                },
                {
                    "id": "IC_kwDOEKipmc5pUxQ7",
                    "body": "Thank you for updating here @aaron-xandria ",
                    "author": {
                        "login": "mosnicholas"
                    },
                    "createdAt": "2023-10-17T19:40:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1274#issuecomment-1767052347"
                },
                {
                    "id": "IC_kwDOEKipmc5pVB_M",
                    "body": "hey everyone, we've fixed this issue in #1275 and will roll it out to all affected projects on Supabase. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-17T20:28:51Z",
                    "url": "https://github.com/supabase/gotrue/issues/1274#issuecomment-1767120844"
                },
                {
                    "id": "IC_kwDOEKipmc5pVEX0",
                    "body": ":tada: This issue has been resolved in version 2.104.1 :tada:\n\nThe release is available on [GitHub release](https://github.com/supabase/gotrue/releases/tag/v2.104.1)\n\nYour **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",
                    "author": {
                        "login": "github-actions"
                    },
                    "createdAt": "2023-10-17T20:35:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1274#issuecomment-1767130612"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc50gOEm",
            "number": 1280,
            "title": "Create User with AppMetadata",
            "body": "App metadata seems to be the recommended way to pass app-specific information to the user create flow. If it is specified in the createUser api call, it should be used in the create user GoTrue function.\r\n\r\nI'm trying to pass the following flag to `app_metadata: { is_invited: true }` to be able to use in a Postgres trigger and use different logic based on whether a user was invited or not.\r\n\r\nI'll be using user_metadata for now, but feels like app_metadata is more appropriate?\r\n\r\n```\r\n/**\r\n   * A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.\r\n   *\r\n   * Only a service role can modify.\r\n   *\r\n   * The `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\r\n   * access control information.\r\n   */\r\n  app_metadata?: object\r\n```\r\n\r\nhttps://github.com/supabase/gotrue/blob/40aed622f24066b2718e4509a001026fe7d4b76d/internal/api/admin.go#L352-L362",
            "author": {
                "login": "mosnicholas"
            },
            "state": "OPEN",
            "createdAt": "2023-10-20T16:06:06Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1280",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5pwVTN",
                    "body": "Hey @mosnicholas,\r\n\r\nYes, It is possible to create a user and set `app_metadata` as you wish when creating a user.\r\n\r\n```\r\nconst { data, error } = await supabase.auth.admin.createUser({\r\n  email: 'user@email.com',\r\n  password: 'password',\r\n  app_metadata: { is_invited: 'true' }\r\n})\r\n```\r\n\r\nYou can choose between using `user_metadata` and `app_metadata` as needed. Please let us know if you run into any issues while using the flow or if there are any doubt/concerns that we haven't  addressed.\r\n\r\nLet us know!\r\nJoel",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-10-23T01:18:06Z",
                    "url": "https://github.com/supabase/gotrue/issues/1280#issuecomment-1774277837"
                },
                {
                    "id": "IC_kwDOEKipmc5p0mP4",
                    "body": "@J0 -- I am using a Postgres trigger to check whether users are allowed to sign up / sign in. If a user is invited, I want to short circuit that logic, and always allow the user to be created in our db. I'm passing the `is_invited` flag through the API call to ensure that my postgres trigger can act on the different logic paths based on whether a user was invited or is signing up from the app. \r\n\r\nMy understanding from the docs is that the best place to put this flag (`is_invited`) is in the `app_metadata` (ie. app-specific access control info). However, the user is being created in the DB before the `app_metadata` object is passed into the user row, and as a result, I have to use the `user_metadata` object to pass the flag back to the Postgres trigger.\r\n\r\nThis is why I raised the issue -- essentially, we're creating the app_metadata object as a fixed object, and then updating the user object _after creation_. Feels like maybe we should create the app_metadata object with the values passed to the API on the first pass instead of updating it after the user row is created?\r\n\r\nFor reference, here's my Postgres trigger:\r\n```\r\nCREATE OR REPLACE FUNCTION public.check_user_email_signup()\r\n RETURNS trigger\r\n LANGUAGE plpgsql\r\n SECURITY DEFINER\r\nAS $function$\r\nDECLARE\r\n  email_domain text;\r\n  domain_exists boolean;\r\n  all_domains text[];\r\nBEGIN\r\n    -- Check if the current user was invited\r\n    IF NEW.raw_user_meta_data->>'is_invited' = 'true' THEN\r\n      return NEW;\r\n    END IF;\r\n\r\n    -- If not, check that user is allowed to sign up\r\n    ...\r\n\r\n    -- If not, raise an exception\r\n    RAISE EXCEPTION 'Email domain is not allowed';\r\nEND;\r\n$function$\r\n;\r\n```",
                    "author": {
                        "login": "mosnicholas"
                    },
                    "createdAt": "2023-10-23T14:56:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1280#issuecomment-1775395832"
                },
                {
                    "id": "IC_kwDOEKipmc5rXEf4",
                    "body": "Hey @mosnicholas,\r\n\r\nThanks for the comprehensive overview - I may be missing something but I agree that we should probably set the `params.AppMetadata` together with the provider fields before creating a user.\r\n\r\nAt the same time, an issue with changing the behaviour is that people may have update triggers or similar depend on the existing behaviour where the update is performed after the user object is created.\r\n\r\nI'll discuss with the team and get back.\r\nThanks!\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-08T07:05:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/1280#issuecomment-1801209848"
                },
                {
                    "id": "IC_kwDOEKipmc5sd3Cn",
                    "body": "Hey @J0 any progress on your conversations here? :) I've had to hijack the `raw_user_meta_data` json which has resulted in a bit of data loss :(\r\n\r\n<img width=\"432\" alt=\"Screenshot 2023-11-20 at 3 35 04\u202fPM\" src=\"https://github.com/supabase/gotrue/assets/3606778/0f0641b6-7c8c-4145-b85a-c1184e82b6af\">\r\n",
                    "author": {
                        "login": "mosnicholas"
                    },
                    "createdAt": "2023-11-20T20:36:27Z",
                    "url": "https://github.com/supabase/gotrue/issues/1280#issuecomment-1819766951"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc50-NCe",
            "number": 1283,
            "title": "auth.resend() is not sending emails with `type: 'email_change'`",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\nEmail change confirmation triggered from `resend()` is not being sent out.\r\n\r\n## To Reproduce\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Go to my example I created from the Supabase SvelteKit auth template https://github.com/igorlanko/supabase-resend-bug and clone it.\r\n2. I'm facing this issue both locally using Supabase CLI and on a hosted instance, so try using the CLI first.\r\n3. Sign up as a new user. Open Inbucket, verify your email.\r\n4. After logging in, go to https://localhost:3001/dashboard and change your user email by entering a different (any if it's local) email and hit \u201cUpdate\u201d.\r\n5. To validate previous step, go to the Studio http://localhost:54323 and open `auth.users` table. Find your user and see if the `email_change` column has a value of the email you just entered.\r\n6. Then go to Inbucket http://localhost:54324/monitor and see if you received a \u201cConfirm Email Change\u201d email. _Do not_ click on a link in it.\r\n7. Now go back to the Dsahboard page https://localhost:3001/dashboard and click \u201cResend email confirmation\u201d. \r\n\r\n## Expected behavior\r\nAfter step 7 a new \u201cConfirm Email Change\u201d email should be sent to Inbucket.\r\n\r\n## System information\r\n\r\n- OS: macOS Sonoma 14.0\r\n- supabase-js: 2.33.1\r\n- Node.js: 20.7.0\r\n- Supabase CLI 1.106.1\r\n\r\n## Additional context\r\n\r\n- An initial email change confirmation is always sent out fine for every user I tried, but it's the resend specifically that doesn't do anything;\r\n- I can't see any errors logs in Supabase. Auth log shows `/user request started` event followed by `/user request completed` with status `200`;\r\n- `email_change_sent_at` column in `auth.users` matches with the initial email. Not updated with `resend()`;\r\n- No errors on the client either;\r\n- The code responsible for the resend is in `src/routes/(app)/dashboard/+page.server.ts` of the example repo, but basically it's this:\r\n```ts\r\nresendEmailConfirmation: async ({ locals: { supabase } }) => {\r\n  const userData = await supabase.auth.getUser()\r\n  const newEmail = userData.data.user?.new_email\r\n\r\n  const { error: resendEmailConfirmationError } = await supabase.auth.resend({\r\n    type: 'email_change',\r\n    email: newEmail\r\n  })\r\n\r\n  if (resendEmailConfirmationError) {\r\n    console.log('Could not resend email verification email', resendEmailConfirmationError)\r\n    return fail(500)\r\n  }\r\n\r\n  console.log('email change confirmation resent')\r\n}\r\n```",
            "author": {
                "login": "igorlanko"
            },
            "state": "CLOSED",
            "createdAt": "2023-10-25T23:41:27Z",
            "closedAt": "2023-11-07T15:58:12Z",
            "url": "https://github.com/supabase/gotrue/issues/1283",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5qdoKG",
                    "body": "hey @igorlanko, can you please reach out to us via support so we can look into your project? (https://supabase.com/dashboard/support/new) ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-30T22:34:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1283#issuecomment-1786151558"
                },
                {
                    "id": "IC_kwDOEKipmc5q7FaZ",
                    "body": "@shakatakas helped debug this. Turns out you need to pass _current_ user email as an argument to `auth.resend({})`, not _new_. I had no idea, and it's not immediately clear here from the documentation https://supabase.com/docs/reference/javascript/auth-resend?example=resend-email-change-email.\r\n\r\n@kangmingtay, would it make sense to add a note in the docs there about it? Happy to create a PR.",
                    "author": {
                        "login": "igorlanko"
                    },
                    "createdAt": "2023-11-05T22:59:17Z",
                    "url": "https://github.com/supabase/gotrue/issues/1283#issuecomment-1793873561"
                },
                {
                    "id": "IC_kwDOEKipmc5rOuL9",
                    "body": "@igorlanko ah yes, that's correct, feel free to create a PR and tag me to review it",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-11-07T15:58:13Z",
                    "url": "https://github.com/supabase/gotrue/issues/1283#issuecomment-1799021309"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc51FIyR",
            "number": 1284,
            "title": "Invite OTPs can't be verified by POST /verify endpoint",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nThe invite link that is included in the invite email does not validate using the `POST /verify` endpoint. It results in `HTTP 400` \"Error: Only an email address or phone number should be provided on verify\".\r\n\r\nThis means that OTPs in the invite email cannot be used with e.g. the `gotrue-js` `verifyOtp()` method.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Invite a user by POST /invite `{\"email\":\"user@example.com\"}`\r\n2. The user receives an email with a link such as: `https://frontend.example.com/verify?token=066b180ce6f9e6db6ab803cde4d43c880133cbeca173b3db8a12a5a7&type=invite&redirect_to=https://frontend.example.com`. Note that this has been customized using GOTRUE_MAILER_URLPATHS_INVITE to point to a frontend page which uses `gotrue-js` rather than pointing to the GoTrue API directly.\r\n3. That page uses gotrue-js's `verifyOtp()` to make a POST request to the GoTrue API: `https://gotrue.example.com/verify` with the body: `{\"token\":\"066b180ce6f9e6db6ab803cde4d43c880133cbeca173b3db8a12a5a7\", \"type\":\"invite\"}`\r\n\r\n## Expected behavior\r\n\r\nThe verify endpoint should accept the token and result in a valid session so that the user can continue to e.g. set their initial password.\r\n\r\n## System information\r\n\r\n- Version of gotrue-js: 2.57.0\r\n- Version of gotrue: 2.105.0\r\n\r\n## Additional context\r\n\r\nThe expected behaviour used to work (possibly not since many versions ago).\r\n\r\nIt looks like the GET and POST versions of the `/verify` endpoint behave differently. I expect I could use the GET instead of the POST and would have my expected behaviour. However that would require modifying `gotrue-js` which currently uses the POST request. Also using a `GET /verify` seems weird since it'd decidedly a non-idempotent operation.\r\n",
            "author": {
                "login": "lukecyca"
            },
            "state": "CLOSED",
            "createdAt": "2023-10-26T19:58:22Z",
            "closedAt": "2023-10-30T16:04:49Z",
            "url": "https://github.com/supabase/gotrue/issues/1284",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5qbTI6",
                    "body": "hey @lukecyca, this is not a bug, you need to pass the `email` of the invitee in the body when you make the post request to `/verify` ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-30T16:04:49Z",
                    "url": "https://github.com/supabase/gotrue/issues/1284#issuecomment-1785541178"
                },
                {
                    "id": "IC_kwDOEKipmc5qbZnC",
                    "body": "Hi @kangmingtay, thanks for the response. I did see from reading the codebase that it wants the email supplied as well. I still think something is amiss with this, because:\r\n* The email field is not available when verifying a generated link, because gotrue's link generator does not include it. How should we be able to get the email when verifying an invite link?\r\n* [The documentation says](https://github.com/supabase/gotrue#post-verify) the email field is not required for the `POST /verify` endpoint.\r\n\r\nPresumably I'm missing something here. How is an invite link supposed to be verified?",
                    "author": {
                        "login": "lukecyca"
                    },
                    "createdAt": "2023-10-30T16:18:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1284#issuecomment-1785567682"
                },
                {
                    "id": "IC_kwDOEKipmc5qcuwm",
                    "body": "@lukecyca if you are generating a link and sending the email link to a user's email, clicking on the link invokes a `GET /verify` request and not `POST /verify` \r\n\r\n`GET /verify` doesn't require an email because it contains a unique token that can be used to identify which user requested for the email link \r\n\r\nah good point, the documentation is incorrect and we'll need to update it, thanks for catching it!",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-30T19:39:09Z",
                    "url": "https://github.com/supabase/gotrue/issues/1284#issuecomment-1785916454"
                },
                {
                    "id": "IC_kwDOEKipmc5qcx8g",
                    "body": "I have overridden the `GOTRUE_MAILER_URLPATHS_INVITE` to point to a page that requires the user to click a button before actually verifying the token, as a workaround to #1214.\r\n\r\nWhen they click the button, I'm using `gotrue-js` to hit the `POST /verify` endpoint. I suppose I could redo this flow to send the user to `GET /verify` instead.\r\n\r\nUnfortunately the fact that `GET /verify` is not idempotent (calling it expires the token) is the root issue in #1214.\r\n\r\nEdit: In addition to #1214, there is more discussion over at supabase/gotrue-js#342. And #713.",
                    "author": {
                        "login": "lukecyca"
                    },
                    "createdAt": "2023-10-30T19:48:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1284#issuecomment-1785929504"
                },
                {
                    "id": "IC_kwDOEKipmc5qePs3",
                    "body": "@lukecyca have you seen https://supabase.com/docs/guides/auth/auth-email-templates#email-prefetching ? `GET /verify` cannot be idempotent because it is dangerous for the email link to be reused. If you are already using `POST /verify`, why not display a screen for the user to enter the 6 digit OTP?  ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-31T01:55:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/1284#issuecomment-1786313527"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc51YcET",
            "number": 1289,
            "title": "Unable to update user email",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [ x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x ] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nUnable to update a user's email if they have an outstanding email change request already.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Create a user using a provider other than email (i.e. signInWithOtp())\r\n2. Add an email to the same user using \"supabase.auth.updateUser({ email: emailToVerify })\"\r\n3. Before confirming this email, attempt the change the email of this user by calling again \"supabase.auth.updateUser({ email: emailToVerify })\" but with a different value of emailToVerify\r\n4. Will get an error \"duplicate key value violates unique constraint 'identities_pkey'\"\r\n\r\n## Expected behavior\r\n\r\nIf a user accidentally enters an incorrect email on their first attempt, they will want to update to the correct email. But there is no way to change the email unless the original email entered is confirmed, which may be impossible if the user made a typo. Therefore if a user enters an incorrect email on their first attempt, the only way to resolve the issue is through an admin account. \r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Version of supabase-js: 2.25\r\n\r\n## Additional context\r\n\r\nAdd any other context about the problem here.\r\n",
            "author": {
                "login": "connormeany"
            },
            "state": "OPEN",
            "createdAt": "2023-06-14T15:04:54Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1289",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5qdrN9",
                    "body": "Hi, I'd like to contribute to fixing this bug.",
                    "author": {
                        "login": "jithenms"
                    },
                    "createdAt": "2023-06-17T16:38:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1289#issuecomment-1786164093"
                },
                {
                    "id": "IC_kwDOEKipmc5qdrOB",
                    "body": "Potential related Issues / PRs:\r\n\r\n- [Twitter OAuth Signup Failure](https://github.com/supabase/supabase/issues/2853): This issue discusses a bug where Twitter OAuth signup fails if the user does not have an email connected to their Twitter account. The issue provides context and steps to reproduce the bug. While it may not directly address your issue, it provides insights into how Supabase handles OAuth signup and the limitations it currently has with Twitter accounts that do not have an email address connected. Understanding this limitation can help you troubleshoot your issue and explore potential workarounds.\r\n- [Confirm Email Change with Email Template](https://github.com/supabase/supabase/issues/3422): This issue discusses the behavior of the \"Confirm Email Change\" feature in Supabase. It highlights that when a user changes their email, they receive two emails: one with a custom template set up for \"Confirm Signup\" and another with the default template. While it may not directly address your issue, it provides insights into the behavior of the email confirmation feature in Supabase. Understanding this behavior can help you troubleshoot any issues related to email confirmation in your application.\r\n\r\nThis message was generated by AI from www.triagetickets.com\r\n",
                    "author": {
                        "login": "matthewwong525"
                    },
                    "createdAt": "2023-06-23T16:18:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/1289#issuecomment-1786164097"
                },
                {
                    "id": "IC_kwDOEKipmc5qdrOF",
                    "body": "Please fix this issue. ;(",
                    "author": {
                        "login": "yjgaia"
                    },
                    "createdAt": "2023-09-21T12:46:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1289#issuecomment-1786164101"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc51hLUm",
            "number": 1290,
            "title": "Gracefully handling \"Invalid Refresh Token: Already Used\"",
            "body": "# Bug report\r\n\r\n## Describe the bug\r\n\r\nPeriodically, the browser console reports the thrown error: \"Invalid Refresh Token: Already Used\" on page load for an app session that was previously authenticated.\r\n\r\nThis effectively indicates that the current session is invalid, so the app returns to the login screen. This is fine.\r\n\r\nHowever, because of this error, the user can't log back in because the `supabase.auth` sign in actions still return \"Invalid Refresh Token: Already Used\".\r\n\r\nI tried detecting this error and calling `signOut` before attempting sign in again, but the error is still thrown.\r\n\r\nThe easy fix is to clear all session cookies from the browser and sign in again, but this is a terrible user experience and I would like to know how best to handle this error gracefully within the app.\r\n\r\n## To Reproduce\r\n\r\nI have been struggling with this for many months and as the issue is intermittent I have been unable to reliably reproduce it. Only that every now and then in my deployed environment, the session will fail to return successfully and the \"Invalid Refresh Token\" error will appear, and I will have to clear the browser cookies before it will work again.\r\n\r\nI have tried extending and shortening the JWT expiry limit as recommended in some other similar issues but this doesn't help, just changes how long before it is likely to happen again.\r\n\r\n## Expected behavior\r\n\r\nI would like to know how to prevent this error from occurring or know the supabase recommended way of detecting and resolving the issue without forcing users to manually clear their browser session before being able to sign in again.\r\n\r\nIs there a way to etcha-sketch the supabase session stuff entirely when this error occurs so users can cleanly sign in again?\r\n\r\n## System information\r\n\r\nI am not using Auth UI, but I am using:\r\n\r\n* \"@supabase/auth-helpers-nextjs\": \"^0.8.4\"\r\n* \"@supabase/auth-helpers-react\": \"^0.4.2\"\r\n\r\nAnd used the supabase documentation + video guides for the auth-helpers for NextJS Page routing to implement authentication.\r\n\r\n## Additional context\r\n\r\nSide note: I am not using the new `@supabase/ssr` because I'm using the NextJS Pages router and the migration documentation does not cover this. I am also not using the app router because I have been unable to get NextJS 13 app router + supabase working. This is not a matter I wish to address at this time.\r\n",
            "author": {
                "login": "solace"
            },
            "state": "CLOSED",
            "createdAt": "2023-11-01T03:30:42Z",
            "closedAt": "2023-11-01T05:47:24Z",
            "url": "https://github.com/supabase/gotrue/issues/1290",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5qmYaQ",
                    "body": "Typical. After I submit a ticket I find some other possible solutions for this.\r\n\r\nCombined these two:\r\nhttps://github.com/supabase/gotrue-js/issues/46#issuecomment-821275075\r\nhttps://github.com/vercel/next.js/issues/40146#issuecomment-1236392823\r\n\r\nAnd use `middleware.ts` to identify if `supabase.auth.getSession()` returns an error and if it does, delete the cookie. Which prevents the `Invalid Refresh Token` from getting thrown on page load and locking up the other auth functions.\r\n\r\nThis appears to be a workaround, but I will be unable to confirm that it successfully manages the problem until it surfaces again as the issue is intermittent and I cannot repro even with adjusting expiries and I don't know how to forcibly trigger the error to throw in a way that will accurately replicate what is occurring.\r\n\r\nhttps://github.com/supabase/auth-helpers/issues/436 discusses a similar error and in that case suggests erroring is acceptable behaviour. But either way, it's not a great user or developer experience especially if it causes subsequent auth calls to fail (as in this scenario) rather than just clearing out the session and letting users carry on.\r\n\r\nClosing out as I have my possible workaround. And 436 may have overlap.\r\n\r\nFeel free to reopen if this looks like it bears further investigation.",
                    "author": {
                        "login": "solace"
                    },
                    "createdAt": "2023-11-01T05:47:24Z",
                    "url": "https://github.com/supabase/gotrue/issues/1290#issuecomment-1788446352"
                },
                {
                    "id": "IC_kwDOEKipmc5rsolW",
                    "body": "@solace Would you be so kind to share the the specific code? thanks!",
                    "author": {
                        "login": "bernatfortet"
                    },
                    "createdAt": "2023-11-11T16:47:26Z",
                    "url": "https://github.com/supabase/gotrue/issues/1290#issuecomment-1806862678"
                },
                {
                    "id": "IC_kwDOEKipmc5rtZXs",
                    "body": "@bernatfortet:\r\n\r\nHere's the gist for `middleware.ts` placed in my Next.js source root. I am using v12. \r\n\r\nhttps://gist.github.com/solace/0414f12616f3fb362787d35a7b499d31\r\n\r\nYMMV. As I said, I'm not sure if this actually fixes the problem and am basically waiting for it to happen again, so good luck to both of us. ;)",
                    "author": {
                        "login": "solace"
                    },
                    "createdAt": "2023-11-12T09:01:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/1290#issuecomment-1807062508"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc51mCUP",
            "number": 1293,
            "title": "Test OTP verify not working on supabase local",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\nVerifying OTP with Test emails is giving the following error\r\n\r\n```\r\nAuthApiError: Token has expired or is invalid\r\n    at le (https://esm.sh/v133/@supabase/gotrue-js@2.56.0/esnext/gotrue-js.mjs:2:5282)\r\n    at eventLoopTick (ext:core/01_core.js:183:11)\r\n    at async Ie (https://esm.sh/v133/@supabase/gotrue-js@2.56.0/esnext/gotrue-js.mjs:2:6069)\r\n    at async h (https://esm.sh/v133/@supabase/gotrue-js@2.56.0/esnext/gotrue-js.mjs:2:5806)\r\n    at async g.verifyOtp (https://esm.sh/v133/@supabase/gotrue-js@2.56.0/esnext/gotrue-js.mjs:2:21397)\r\n    at async Object.handler (file:///home/deno/functions/test/index.ts:14:27)\r\n    at async handleHttp (ext:sb_core_main_js/js/http.js:66:17) {\r\n  __isAuthError: true,\r\n  name: \"AuthApiError\",\r\n  status: 401\r\n}\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\n1. Run Local Instance of Supabase\r\n2. Modify `config.toml`\r\n```\r\n[auth.sms]\r\n# Allow/disallow new user signups via SMS to your project.\r\nenable_signup = true\r\n# If enabled, users need to confirm their phone number before signing in.\r\nenable_confirmations = true\r\n\r\n# Use pre-defined map of phone number to OTP for testing.\r\n[auth.sms.test_otp]\r\n7333333333 = \"123456\"\r\n```\r\n3. Run the following js code\r\n```\r\nconst supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {})\r\nconst { data, error } = await supabase.auth.verifyOtp({\r\n\t\tphone: '7333333333',\r\n\t\ttoken: '123456',\r\n\t\ttype: 'sms',\r\n\t})\r\n```\r\n\r\n## Expected behavior\r\n\r\nVerify the user and login\r\n\r\n## Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n## System information\r\n\r\n- OS: [e.g. macOS, Windows]\r\n- Version of supabase-cli: 1.110.1\r\n- Version of Node.js: [e.g. 18.x.x]\r\n\r\n## Additional context\r\n\r\nSimilar to #1252\r\n",
            "author": {
                "login": "jibin2706"
            },
            "state": "CLOSED",
            "createdAt": "2023-11-01T18:43:57Z",
            "closedAt": "2023-11-15T07:32:00Z",
            "url": "https://github.com/supabase/gotrue/issues/1293",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5rXD70",
                    "body": "Hey team,\r\n\r\nThanks for flagging this! This looks to be an error with how the `TEST_OTP` config is parsed in the CLI. We'll look into a fix and get back to you once it's out.\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-08T07:03:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1801207540"
                },
                {
                    "id": "IC_kwDOEKipmc5rs9Fg",
                    "body": "HI all!\r\n\r\nI found something that might help the debugging of this problem.\r\n\r\n# TL;DR\r\nIt seems the Supabase-CLI is reading  `config.toml` OK but when it creates the envs that Gotrue will use later, it messes the expected format.\r\n\r\nMaybe changing the method used to generate the value for `GOTRUE_SMS_TEST_OTP` should be implemented.\r\n\r\n# On the CLI side\r\n\r\nIf we see [line 421 of `start.go`](https://github.com/supabase/cli/blob/main/internal/start/start.go#L421), the value for that env being produced by calling `testOTP.String()`, which produces something like the following: `{\"7333333333\":\"123456\"}`.\r\n\r\nLike a [total \"grug\"](https://imgs.search.brave.com/7YfZeZVvGQGOorEoV1ewE5886-qz7ek8rDZQpTIvkQU/rs:fit:500:0:0/g:ce/aHR0cHM6Ly9ncnVn/YnJhaW4uZGV2L2dy/dWcucG5n) I've done what is in the screenshot bellow to check what is being produced.\r\n\r\n![Screenshot from 2023-11-11 20-16-02](https://github.com/supabase/gotrue/assets/48366106/5827ce23-b736-48b6-82ed-84e3688cf341)\r\n\r\nThe actual output that will be used as env is shown in the screenshot bellow.\r\n\r\n![Screenshot from 2023-11-11 20-10-13](https://github.com/supabase/gotrue/assets/48366106/e6adfb64-1409-49c1-9676-a4bbab97a5ae)\r\n\r\n# On the Gotrue side\r\n\r\nNow, on Gotrue, we are using the [envconfig package](https://github.com/kelseyhightower/envconfig) to parse the environments and convert them into the actual types the program expects.\r\n\r\nIf we add some logs into the [`conf.LoadGlobal` function](https://github.com/supabase/gotrue/blob/master/internal/conf/configuration.go#L384), we can check what is being produced.\r\n\r\n![Screenshot from 2023-11-11 20-32-41](https://github.com/supabase/gotrue/assets/48366106/b3b8ce60-8afc-429a-a37b-6dd05797be70)\r\n\r\n\r\nWhen using `GOTRUE_SMS_TEST_OTP={\"7333333333\":\"123456\"}` we got the following:\r\n\r\n![Screenshot from 2023-11-11 20-43-47](https://github.com/supabase/gotrue/assets/48366106/fc625ed0-ee7e-4203-b585-828d42da93fa)\r\n\r\n\r\nWhen we remove the curly brackets and the double quotes from the env value and pass `GOTRUE_SMS_TEST_OTP=7333333333:123456` we got this:\r\n\r\n![Screenshot from 2023-11-11 20-42-42](https://github.com/supabase/gotrue/assets/48366106/6be3d0b4-6c5c-47bd-9c8f-db4228fe31d2)\r\n\r\n\r\nFYI: @J0 & @jibin2706 \r\n\r\nPS: Sorry for the amount of screenshots, I didn't find a better way to explain myself.",
                    "author": {
                        "login": "LautaroJayat"
                    },
                    "createdAt": "2023-11-11T23:51:45Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1806946656"
                },
                {
                    "id": "IC_kwDOEKipmc5rtOy5",
                    "body": "Hey @LautaroJayat,\r\n\r\nThanks for writing this up! That is indeed to issue I observed as well - I think the explanation is accurate- the `GOTRUE_TEST_OTP` should be a string `<number>:<otp>,<number>:<otp>` instead of the map you have illustrated above.\r\n\r\nI haven't quite found the time to fix this but if anyone has the time to jump in please feel free. Otherwise I'll see if I can find a slot or check in with the CLI team tmrw to see if they have bandwidth.\r\n\r\nRepo is here: https://github.com/supabase/cli",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-12T06:31:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1807019193"
                },
                {
                    "id": "IC_kwDOEKipmc5rtPCG",
                    "body": "Hi @J0!\r\nI will send a PR this Sunday :)\r\nHave a nice weekend.",
                    "author": {
                        "login": "LautaroJayat"
                    },
                    "createdAt": "2023-11-12T06:37:56Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1807020166"
                },
                {
                    "id": "IC_kwDOEKipmc5rtZ90",
                    "body": "Thank you! Let me know if you need any assistance there and feel free to tag me for review",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-12T09:10:36Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1807064948"
                },
                {
                    "id": "IC_kwDOEKipmc5ruYJZ",
                    "body": "@J0 I think I saw a comment from @jibin2706 requesting a new env in the cli to configure he code template.\r\nShould I create another PR for that?",
                    "author": {
                        "login": "LautaroJayat"
                    },
                    "createdAt": "2023-11-13T00:57:15Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1807319641"
                },
                {
                    "id": "IC_kwDOEKipmc5rwEoe",
                    "body": "@LautaroJayat created a PR for sms template https://github.com/supabase/cli/pull/1655",
                    "author": {
                        "login": "jibin2706"
                    },
                    "createdAt": "2023-11-13T09:30:44Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1807763998"
                },
                {
                    "id": "IC_kwDOEKipmc5rzbua",
                    "body": "@J0 @jibin2706 \r\nThe fix for the env value format was addressed here https://github.com/supabase/cli/pull/1654\r\nShall we close this issue?",
                    "author": {
                        "login": "LautaroJayat"
                    },
                    "createdAt": "2023-11-13T17:31:21Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1808645018"
                },
                {
                    "id": "IC_kwDOEKipmc5r0IT6",
                    "body": "@LautaroJayat Still getting same error\r\n\r\nThe env is the following format\r\n```\r\nGOTRUE_SMS_TEST_OTP=917045386164:123456,917123123232:123456,917213123233:123456\r\n```\r\n\r\n I guess we have to make changes to the gotrue repo as well",
                    "author": {
                        "login": "jibin2706"
                    },
                    "createdAt": "2023-11-13T19:00:53Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1808827642"
                },
                {
                    "id": "IC_kwDOEKipmc5r3NkC",
                    "body": "@LautaroJayat Thanks so much \ud83d\ude4f  Appreciate your contribution\r\n\r\n@jibin2706 we shouldn't need to change the GoTrue repo I think. Can I check that you're on the latest version of the CLI?",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-14T06:50:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1809635586"
                },
                {
                    "id": "IC_kwDOEKipmc5r6bO_",
                    "body": "@J0 Using the latest version",
                    "author": {
                        "login": "jibin2706"
                    },
                    "createdAt": "2023-11-14T15:39:08Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1810478015"
                },
                {
                    "id": "IC_kwDOEKipmc5r_zt-",
                    "body": "@jibin2706  do you mind sharing how you're making the verification? Here's my setup:\r\n\r\n```\r\nconst { data, error } = await supabase.auth.signInWithOtp({\r\n      phone: '12345678'\r\n    })\r\n```\r\n\r\n\r\n\r\n```\r\nconst res = await supabase.auth.verifyOtp({\r\n\t\t  phone: '12345678',\r\n\t\t  token: '555555',\r\n\t\t  type: 'sms',\r\n\r\n    })\r\n```\r\n\r\nand my `config.toml` contains\r\n\r\n```\r\n[auth.sms.test_otp]\r\n<my_number> = \"123456\"\r\n12345678 = \"555555\"\r\n```\r\n\r\n`supabase -v` gives me `1.112.0`\r\n\r\nSorry for the barrage of information - am able to verify with this set up so trying to identify where the issue is coming from\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-15T06:41:05Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1811889022"
                },
                {
                    "id": "IC_kwDOEKipmc5r___S",
                    "body": "working now @J0 \r\nI was using  `auth.admin.createUser` instead of `supabase.auth.signInWithOtp`",
                    "author": {
                        "login": "jibin2706"
                    },
                    "createdAt": "2023-11-15T07:30:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1811939282"
                },
                {
                    "id": "IC_kwDOEKipmc5sAAbY",
                    "body": "Thanks @jibin2706! Going to close for now but let us know if there are any further issues.",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-15T07:32:00Z",
                    "url": "https://github.com/supabase/gotrue/issues/1293#issuecomment-1811941080"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc51nAaf",
            "number": 1294,
            "title": "Getting \"500: Unable to exchange external code\" when using signInWithOAuth for Slack",
            "body": "# Bug report\r\n\r\n<!-- \r\n\r\n\u26a0\ufe0f We receive a lot of bug reports which have already been solved or discussed. If you are looking for help, please try these first:\r\n\r\n- Docs: https://docs.supabase.com\r\n- Discussions: https://github.com/supabase/supabase/discussions\r\n- Discord: https://discord.supabase.com\r\n\r\nBefore opening a bug report, please verify the following: \r\n\r\n-->\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nWhen using the simple \"Sign in with Slack\"  things work normally. If I customise the request to add certain required query_params, then I get these two error messages:\r\n\r\n\"server response missing access_token\"\r\n\"500: Unable to exchange external code\"\r\n\r\nHere's an example of the full error response:\r\n\r\n```\r\n{\"component\":\"api\",\"error\":\"oauth2: server response missing access_token\",\"level\":\"error\",\"method\":\"GET\",\"msg\":\"500: Unable to exchange external code: 7788618443378.6134758635009.924ff79a34f487e4781425c976g50aa0c8a5d6fb7c8f623c8a624b961fd6e576\",\"path\":\"/callback\",\"referer\":\"https://develop.asyncbrain.com\",\"remote_addr\":\"206.32.96.26\",\"time\":\"2023-10-31T13:12:29Z\",\"timestamp\":\"2023-10-31T13:12:28Z\"}\r\nTimestamp\r\n2023-10-31T13:12:29.000Z\r\n\r\nMetadata\r\n[\r\n  {\r\n    \"message\": null,\r\n    \"timestamp\": \"2023-10-31T13:12:28Z\",\r\n    \"__MONOTONIC_TIMESTAMP\": null,\r\n    \"CODE_FUNC\": null,\r\n    \"instance_id\": null,\r\n    \"status\": null,\r\n    \"_CMDLINE\": null,\r\n    \"method\": \"GET\",\r\n    \"_SYSTEMD_CGROUP\": null,\r\n    \"CODE_FILE\": null,\r\n    \"EXECUTABLE\": null,\r\n    \"_EXE\": null,\r\n    \"UNIT\": null,\r\n    \"level\": \"error\",\r\n    \"_COMM\": null,\r\n    \"duration\": null,\r\n    \"issuer\": null,\r\n    \"_LINE_BREAK\": null,\r\n    \"_SOURCE_REALTIME_TIMESTAMP\": null,\r\n    \"msg\": \"500: Unable to exchange external code: 7788618443378.6134758635009.924ff79a34f487e4781425c976g50aa0c8a5d6fb7c8f623c8a624b961fd6e576\",\r\n    \"action\": null,\r\n    \"login_method\": null,\r\n    \"_UID\": null,\r\n    \"host\": \"db-xxxxxxxxxxxxxxxx\",\r\n    \"PRIORITY\": null,\r\n    \"_CAP_EFFECTIVE\": null,\r\n    \"_PID\": null,\r\n    \"INVOCATION_ID\": null,\r\n    \"_SYSTEMD_UNIT\": null,\r\n    \"source_type\": null,\r\n    \"SYSLOG_FACILITY\": null,\r\n    \"request_id\": null,\r\n    \"CODE_LINE\": null,\r\n    \"path\": \"/callback\",\r\n    \"component\": \"api\",\r\n    \"project\": null,\r\n    \"user_id\": null,\r\n    \"auth_event\": [],\r\n    \"args\": [],\r\n    \"referer\": \"https://develop.domain.com\",\r\n    \"factor_id\": null,\r\n    \"provider\": null,\r\n    \"client_id\": null,\r\n    \"remote_addr\": \"203.32.98.28\",\r\n    \"_SYSTEMD_SLICE\": null,\r\n    \"_SYSTEMD_INVOCATION_ID\": null,\r\n    \"header\": null,\r\n    \"_MACHINE_ID\": null,\r\n    \"_AUDIT_LOGINUID\": null,\r\n    \"_TRANSPORT\": null,\r\n    \"_SELINUX_CONTEXT\": null,\r\n    \"MESSAGE_ID\": null,\r\n    \"__REALTIME_TIMESTAMP\": null,\r\n    \"metadata\": [],\r\n    \"_STREAM_ID\": null,\r\n    \"metering\": null,\r\n    \"time\": null,\r\n    \"_GID\": null,\r\n    \"_BOOT_ID\": null,\r\n    \"SYSLOG_IDENTIFIER\": null,\r\n    \"_AUDIT_SESSION\": null,\r\n    \"error\": \"oauth2: server response missing access_token\"\r\n  }\r\n]\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior, please provide code snippets or a repository:\r\n\r\nSet the below to the onClick of a button.\r\n\r\n```typescript\r\nclient.auth.signInWithOAuth({\r\n  provider: 'slack',\r\n  options: {\r\n    redirectTo: redirectFullURL,\r\n    queryParams: {\r\n      scope:\r\n        'chat:write,commands,users.profile:read,users:read.email,users:read',\r\n      user_scope: 'openid,email,profile',\r\n      granular_bot_scope: '1',\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe login should succeed which would also install the slack app on this user's slack workplace.\r\n\r\n## Screenshots\r\n\r\nThis is the authorise screen on Slack that still works. But after clicking to  \"allow\" we get the errors mentioned on the top.\r\n\r\n<img width=\"598\" alt=\"Screenshot 2023-10-31 at 11 11 01 pm\" src=\"https://github.com/supabase/gotrue-js/assets/1548368/7e6a1e58-dd09-49ec-bd20-93573e76e8f5\">\r\n\r\n## System information\r\n\r\n- OS: macOS\r\n- Browser (if applies) chrome\r\n- Version of Node.js: v18.16.0\r\n\r\n## Additional context\r\n\r\nIf you remove the entire \"queryParams\" from the code above , then everything works.\r\n",
            "author": {
                "login": "betocmn"
            },
            "state": "OPEN",
            "createdAt": "2023-10-31T13:21:16Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1294",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5qrTO2",
                    "body": "Hi @betocmn, thanks for bringing this to our attention, it seems like the OAuth API we use for slack has been moved to \"Legacy\" and they now have a V2 API. \r\n\r\nSome of the fields passed into the `queryParam` option are not supported by the Legacy API:\r\n* \"user_scope\"\r\n* \"chat:write\"\r\n\r\nRemoving these scopes will allow the oauth2.0 flow to succeed, although it might not return a provider access token with the full set of permissions you want. We can put this on the roadmap but it's not going to be prioritised because the team is quite tight on bandwidth right now. ",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-31T23:33:31Z",
                    "url": "https://github.com/supabase/gotrue/issues/1294#issuecomment-1789735862"
                },
                {
                    "id": "IC_kwDOEKipmc5qrTO7",
                    "body": "If you want to use the legacy bot APIs, it only accepts the \"bot\" scope. See https://api.slack.com/authentication/token-types#bot for reference",
                    "author": {
                        "login": "kangmingtay"
                    },
                    "createdAt": "2023-10-31T23:39:29Z",
                    "url": "https://github.com/supabase/gotrue/issues/1294#issuecomment-1789735867"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc52L59a",
            "number": 1300,
            "title": "Email OTP on SignUp or SignIn sends same otp code every time and fail to verifyOtp",
            "body": "# Bug report\r\nThe 6-digit otp within email when signing up or resending email or passwordless signing in is always same, and could not pass verifyOtp and therefore user cannot confirm that email to complete register.\r\n\r\n- [yes] I confirm this is a bug with Supabase, not with my own application. \r\n- [yes] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nI am implementing email auth in my application. When I sign up user as below, the email with otp is received.\r\n```typescript\r\n    const { data, error } = await this._client.auth.signUp({\r\n      email: email,\r\n      password: password,\r\n    });\r\n```\r\n\r\nBut when I then call verify otp like below, it says 'Token has expired or is invalid. An unusual behavior here is that every time I resend email otp for signup, or completely delete that user to signup again, it always give me the same otp code, which of course would not be valid, but it is not giving me the correct otp. \r\n```typescript\r\n    const { data, error } = await this._client.auth.verifyOtp({\r\n      email: email,\r\n      token: code,\r\n      type: 'email',\r\n    });\r\n```\r\n\r\nBut If I also include the {{ .TokenHash }} and {{ .ConfirmationURL }} in email and click that confimration url, which just included the token hash in query string. The email is confirmed and I am able to sign in by password. But after that, still passwordless email sign in with otp is not working, same behaivour as signup above, always same otp.\r\n\r\nI can confirm that I passed in correct paramters when calling those auth functions by supabase auth lib.\r\n\r\nThe only similar problem in github issues is here, and one user might encountered similar problem, email otp auth, I quoted reply that one as well. I checked the things mentioned in this issue, I do see a confirmation token existing after I call signup, and this token disappeared after I clicked on the confirmation url with hashed token.\r\nhttps://github.com/supabase/gotrue/issues/905#issuecomment-1801017617\r\n\r\nI have tried both the default email provider and my own email provider.\r\n\r\nI leave the discord link here as well: https://discord.com/channels/839993398554656828/1171442476364607498\r\n\r\n## Expected behavior\r\n\r\nUser email should receive the correct otp when they signup with email and pass in the 6-digit otp to verifyOtp should confirm the email and complete the signup process. Then I think passwordless signin with email would have been resolved together.\r\n\r\n## System information\r\n\r\n- OS: Linux\r\n- Version of supabase-js: 2.38.4\r\n- Version of Node.js: 20",
            "author": {
                "login": "willieee802"
            },
            "state": "CLOSED",
            "createdAt": "2023-11-08T06:21:57Z",
            "closedAt": "2023-11-09T09:48:03Z",
            "url": "https://github.com/supabase/gotrue/issues/1300",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5rXIF-",
                    "body": "Hey @willieee802,\r\n\r\nThanks for reporting the issue - could we trouble you to open a ticket via: https://supabase.com/dashboard/support/new ?\r\n\r\nThanks!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-08T07:19:16Z",
                    "url": "https://github.com/supabase/gotrue/issues/1300#issuecomment-1801224574"
                },
                {
                    "id": "IC_kwDOEKipmc5rXJ3D",
                    "body": "> Hey @willieee802,\r\n> \r\n> Thanks for reporting the issue - could we trouble you to open a ticket via: https://supabase.com/dashboard/support/new ?\r\n> \r\n> Thanks!\r\n\r\nThat's alright, I have submitted the ticket.",
                    "author": {
                        "login": "willieee802"
                    },
                    "createdAt": "2023-11-08T07:26:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/1300#issuecomment-1801231811"
                },
                {
                    "id": "IC_kwDOEKipmc5rX7nj",
                    "body": "Thanks! We'll take a look and follow up there",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-08T09:42:47Z",
                    "url": "https://github.com/supabase/gotrue/issues/1300#issuecomment-1801435619"
                },
                {
                    "id": "IC_kwDOEKipmc5rfyZV",
                    "body": "Resolved on ticket",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-09T09:48:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/1300#issuecomment-1803494997"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc52dC6R",
            "number": 1306,
            "title": "Webhook secret isn't used anywhere",
            "body": "# Bug report\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nThe webhook (`GOTRUE_WEBHOOK_URL`) is called, but the secret (`GOTRUE_WEBHOOK_SECRET`) isn't sent in the headers or the body of the request. Inspecting this repository's source code indicates that the value isn't use anywhere except in that example .env file.\r\n\r\n## Expected behavior\r\n\r\nThis value should either be used or removed from that .env file.",
            "author": {
                "login": "donalffons"
            },
            "state": "CLOSED",
            "createdAt": "2023-11-10T10:12:12Z",
            "closedAt": "2023-11-13T21:42:22Z",
            "url": "https://github.com/supabase/gotrue/issues/1306",
            "comments": [
                {
                    "id": "IC_kwDOEKipmc5rpT0U",
                    "body": "Hey! As a whole the webhook configuration is currently defunct. We're working on replacing it  so do check back soon.\r\n\r\nOut of curiosity, what modifications were you hoping to make to the flow via Webhooks?\r\n\r\nLet us know!",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-10T15:56:14Z",
                    "url": "https://github.com/supabase/gotrue/issues/1306#issuecomment-1805991188"
                },
                {
                    "id": "IC_kwDOEKipmc5rqI8K",
                    "body": "I've added the webhook config today and so far it looks like it's doing what I expect it to...\r\n\r\nWe're using an external auth provider - Keycloak in our case. Our Keycloak server has a bunch of roles defined for each user, which are all part of the `provider_token` available in the front-end. But since the information stored in that token isn't available in gotrue / via RLS by default (as mentioned [here](https://github.com/supabase/gotrue/issues/83)), I am using that webhook to copy the relevant roles and other bits of information into the user's `app_metadata` using the return value of the webhook.\r\n\r\nFor that use case, it would be an improvement if the `provider_token` was given to the webhook as a parameter (so I don't have to fetch the relevant information again from Keycloak). It would also be great if the webhook could be called on access token refresh's (maybe that's what `validate` is for?).\r\n\r\nThank you very much for your great work on Supabase, by the way. It's been great, so far.",
                    "author": {
                        "login": "donalffons"
                    },
                    "createdAt": "2023-11-10T18:23:33Z",
                    "url": "https://github.com/supabase/gotrue/issues/1306#issuecomment-1806208778"
                },
                {
                    "id": "IC_kwDOEKipmc5rt1p5",
                    "body": "Another use case for the webhook would be this:\r\n- I only want to allow users to sign up, which meet a certain criteria (e.g. some information from the auth provider, or based on the domain in their e-mail address.",
                    "author": {
                        "login": "donalffons"
                    },
                    "createdAt": "2023-11-12T16:38:25Z",
                    "url": "https://github.com/supabase/gotrue/issues/1306#issuecomment-1807178361"
                },
                {
                    "id": "IC_kwDOEKipmc5rupzg",
                    "body": "Oh I mean it's defunct in that we're not using it on the hosted Supabase platform - great to hear that it's working as expected though.\r\n\r\n> I am using that webhook to copy the relevant roles and other bits of information into the user's app_metadata using the return value of the webhook.\r\n\r\nOh okay that makes sense. I imagine this would happen during an OAuth sign up?\r\n\r\n> if the webhook could be called on access token refresh's (maybe that's what validate is for?).\r\nWe're working on this, but it will likely take a bit of time\r\n\r\n>Thank you very much for your great work on Supabase, by the way. It's been great, so far.\r\nThanks! The experience is very much a result of the feedback from community members like yourself so thanks for taking the time to share and leave feedback.\r\n\r\n>I only want to allow users to sign up, which meet a certain criteria (e.g. some information from the auth provider, or based on the domain in their e-mail address.\r\n\r\nGotcha - this is will probably land the soonest- will take this into account.\r\n\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-13T02:41:43Z",
                    "url": "https://github.com/supabase/gotrue/issues/1306#issuecomment-1807391968"
                },
                {
                    "id": "IC_kwDOEKipmc5rvlrW",
                    "body": "Oh but also to return to the original question I the secret is actually used here - https://github.com/supabase/gotrue/blob/master/internal/api/hooks.go#L165\r\n\r\n",
                    "author": {
                        "login": "J0"
                    },
                    "createdAt": "2023-11-13T08:06:03Z",
                    "url": "https://github.com/supabase/gotrue/issues/1306#issuecomment-1807637206"
                },
                {
                    "id": "IC_kwDOEKipmc5r1c-m",
                    "body": "> I imagine this would happen during an OAuth sign up?\r\n\r\nYes.\r\n\r\n> Oh but also to return to the original question I the secret is actually used here - https://github.com/supabase/gotrue/blob/master/internal/api/hooks.go#L165\r\n\r\nThank you for pointing that out!\r\nBased on that, I figured out that the webhook receives a `x-webhook-signature` header with the request. That value is a JWT signed using the `GOTRUE_WEBHOOK_SECRET` env variable. Works great, now.\r\n\r\nThanks a ton for your help and the work on this project!",
                    "author": {
                        "login": "donalffons"
                    },
                    "createdAt": "2023-11-13T21:42:22Z",
                    "url": "https://github.com/supabase/gotrue/issues/1306#issuecomment-1809174438"
                }
            ]
        },
        {
            "id": "I_kwDOEKipmc52tzle",
            "number": 1308,
            "title": "Revoke Sign in with Apple tokens",
            "body": "# Bug report\r\n\r\n- [x] I confirm this is a bug with Supabase, not with my own application. \r\n- [x] I confirm I have searched the [Docs](https://docs.supabase.com), GitHub [Discussions](https://github.com/supabase/supabase/discussions), and [Discord](https://discord.supabase.com). \r\n\r\n## Describe the bug\r\n\r\nApple insists on an in-app option to delete a user account. Sign in with Apple requires that the tokens are revoked when the account is deleted via the REST callback described here:\r\n\r\nhttps://developer.apple.com/documentation/sign_in_with_apple/revoke_tokens\r\n\r\n## To Reproduce\r\n\r\nAny app that supports deleting an account and Sign in with Apple should include this functionality. \r\n\r\n## Expected behavior\r\n\r\nI think the easiest way to implement this is via a trigger called when a auth.users row is deleted. But that's just an idea. Alternatively, it could be a GoTrue REST API call & an additional method on the client.\r\n\r\n## System information\r\n\r\n- OS: macOS, any web app that supports Apple identity\r\n",
            "author": {
                "login": "wiverson"
            },
            "state": "OPEN",
            "createdAt": "2023-11-14T00:34:21Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1308",
            "comments": []
        },
        {
            "id": "I_kwDOEKipmc531kzA",
            "number": 1318,
            "title": "Add \u201creuse attempts\u201d to better help avoid user being kicked off on mobile app",
            "body": "# Bug report the bug\r\n\r\nWe have a flutter mobile app where sometimes user is kicked off from client coz refresh token was already used. We have opened a support ticket and discussing issue with you guys there. Just thought to also open this ticket to expose an idea that maybe could be implemented to better help avoid this issue clientside. \r\n\r\nCC: @hf , @dshukertjr \r\n\r\n## To Reproduce\r\n\r\nUnfortunately our code is closed but we use latest version of supabase-flutter plugin to auth users via otp, with 1m jwt expiry period and 10s reuse interval. No custom code gets in the middle of the auth process.\r\n\r\n\r\n## Expected behavior\r\n\r\nUser must be never kicked off on a mobile app.\r\n\r\n\r\n## Additional context\r\n\r\nWe are not sure about that, but maybe this is the flow that could cause the issue:\r\n1) user quits mobile app and doesn't open it for hrs. This means that on next access, token must be refreshed\r\n2) at app launch, something goes wrong due to  poor connectivity and the api call fails. On mobile this occurs frequently.\r\n3) user quits app, or maybe internet gets off totally, and the 10s refresh token \u201creuse interval\u201d passes by before user gets a new auth token\r\n4) user opens app again after some time when internet connection is back and might found himself kicked off, coz refresh token was reused and reuse interval has passed by.\r\n\r\n\r\n## Idea\r\nWhat about adding \u201creuse attempts\u201d ?\r\n\r\nIt could be set via dashboard along with \u201creuse interval\u201d. For example, with \u201creuse attempts : 3\u201d client will have 3 attempts to still get a new access token by using refresh token after reuse interval has passed by. To make the api call more secure, user could pass also the last used access token along with the old refresh token. That would be difficult to hack, yet easy to manage clientside.\r\n",
            "author": {
                "login": "delfme"
            },
            "state": "OPEN",
            "createdAt": "2023-11-25T08:42:48Z",
            "closedAt": null,
            "url": "https://github.com/supabase/gotrue/issues/1318",
            "comments": []
        }
    ]
}